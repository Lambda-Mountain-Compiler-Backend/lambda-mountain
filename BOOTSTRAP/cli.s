.global _start
.text
_start:
	mov %rsp,%rbp
	mov $malloc_SB_block_SB_head_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_page_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_large_SB_size_CL_U64, %r15
	movq $1024, 0(%r15)
	mov $point_SB_of_SB_interest_CL_U64, %r15
	movq $0, 0(%r15)
	mov $rc_SB_magic_SB_number_CL_U64, %r15
	movq $423809104, 0(%r15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_text_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_init_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_data_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $assemble_SB_final_CL_String, %r15
	movq $uuid_0000000000075fd2, 0(%r15)
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_target_CL_String, %r15
	movq $uuid_0000000000076048, 0(%r15)
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	movq $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	movq $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $global_SB_ctx_CL_FContextFContextCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	movq $99999, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	pushq $0
	pushq $0
	pushq $1
	movq $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $uuid_SB_counter_CL_U64, %r15
	movq $0, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	mov %rbp,%rsp
	popq %r8
	movq %rsp, %r9
	push %rbp
	mov %rsp, %rbp
	pushq %r8
	pushq %r9
	call main
	mov %rbp, %rsp
	pop %rbp
	mov $60, %rax
	mov $0, %rdi
	syscall
_AD__CL_ArrowSConsSS:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075e71
	jmp uuid_0000000000075e73
uuid_0000000000075e71:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075e6e
	movq -48(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000075e70
uuid_0000000000075e6e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000075e70:
	mov -72(%RBP),%RSP
	add $-72, %RSP
uuid_0000000000075e73:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64U64:
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
non_SB_zero_CL_ArrowU64S:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e79
	push %RBP
	jmp uuid_0000000000075e76
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000075e75
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000075e78
uuid_0000000000075e76:
uuid_0000000000075e78:
	mov -104(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_0000000000075e7b
uuid_0000000000075e79:
	movq $0, -40(%rbp)
uuid_0000000000075e7b:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64String:
	pushq $0
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075e7c
	jmp uuid_0000000000075e7e
uuid_0000000000075e7c:
	movq $1, -24(%rbp)
uuid_0000000000075e7e:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsSS:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e85
	jmp uuid_0000000000075e87
uuid_0000000000075e85:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e82
	jmp uuid_0000000000075e84
uuid_0000000000075e82:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e7f
	jmp uuid_0000000000075e81
uuid_0000000000075e7f:
	movb $1, -192(%rbp)
uuid_0000000000075e81:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000075e84:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000075e87:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075ee3
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e9a
	jmp uuid_0000000000075e9c
uuid_0000000000075e9a:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e8b
	jmp uuid_0000000000075e8d
uuid_0000000000075e8b:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075e88
	jmp uuid_0000000000075e8a
uuid_0000000000075e88:
	movb $1, -384(%rbp)
uuid_0000000000075e8a:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_0000000000075e8d:
	mov -392(%RBP),%RSP
	add $-408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075e97
	jmp uuid_0000000000075e99
uuid_0000000000075e97:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075e91
	jmp uuid_0000000000075e93
uuid_0000000000075e91:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075e8e
	jmp uuid_0000000000075e90
uuid_0000000000075e8e:
	movb $1, -448(%rbp)
uuid_0000000000075e90:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000075e93:
	mov -456(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075e94
	jmp uuid_0000000000075e96
uuid_0000000000075e94:
	movb $1, -336(%rbp)
uuid_0000000000075e96:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000075e99:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000075e9c:
	mov -344(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075ee0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075eb5
	jmp uuid_0000000000075eb7
uuid_0000000000075eb5:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ea3
	jmp uuid_0000000000075ea5
uuid_0000000000075ea3:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075ea0
	jmp uuid_0000000000075ea2
uuid_0000000000075ea0:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075e9d
	jmp uuid_0000000000075e9f
uuid_0000000000075e9d:
	movb $1, -592(%rbp)
uuid_0000000000075e9f:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000075ea2:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000075ea5:
	mov -600(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075eb2
	jmp uuid_0000000000075eb4
uuid_0000000000075eb2:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075eac
	jmp uuid_0000000000075eae
uuid_0000000000075eac:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075ea9
	jmp uuid_0000000000075eab
uuid_0000000000075ea9:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075ea6
	jmp uuid_0000000000075ea8
uuid_0000000000075ea6:
	movb $1, -704(%rbp)
uuid_0000000000075ea8:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000075eab:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000075eae:
	mov -712(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075eaf
	jmp uuid_0000000000075eb1
uuid_0000000000075eaf:
	movb $1, -544(%rbp)
uuid_0000000000075eb1:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000075eb4:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000075eb7:
	mov -552(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075edd
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ed0
	jmp uuid_0000000000075ed2
uuid_0000000000075ed0:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ec1
	jmp uuid_0000000000075ec3
uuid_0000000000075ec1:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075ebe
	jmp uuid_0000000000075ec0
uuid_0000000000075ebe:
	movb $1, -896(%rbp)
uuid_0000000000075ec0:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_0000000000075ec3:
	mov -904(%RBP),%RSP
	add $-920, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075ecd
	jmp uuid_0000000000075ecf
uuid_0000000000075ecd:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ec7
	jmp uuid_0000000000075ec9
uuid_0000000000075ec7:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075ec4
	jmp uuid_0000000000075ec6
uuid_0000000000075ec4:
	movb $1, -960(%rbp)
uuid_0000000000075ec6:
	mov -976(%RBP),%RSP
	add $-984, %RSP
uuid_0000000000075ec9:
	mov -968(%RBP),%RSP
	add $-984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075eca
	jmp uuid_0000000000075ecc
uuid_0000000000075eca:
	movb $1, -848(%rbp)
uuid_0000000000075ecc:
	mov -928(%RBP),%RSP
	add $-984, %RSP
uuid_0000000000075ecf:
	mov -864(%RBP),%RSP
	add $-984, %RSP
uuid_0000000000075ed2:
	mov -856(%RBP),%RSP
	add $-984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075eda
	push %RBP
	jmp uuid_0000000000075ed7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000075ed6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000075ed9
uuid_0000000000075ed7:
uuid_0000000000075ed9:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_0000000000075edc
uuid_0000000000075eda:
	push %RBP
	movq -984(%RBP), %RAX
	movq -920(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ed3
	jmp uuid_0000000000075ed5
uuid_0000000000075ed3:
	movq $1, -64(%rbp)
uuid_0000000000075ed5:
	mov -992(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000075edc:
	mov -784(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_0000000000075edf
uuid_0000000000075edd:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075ebb
	jmp uuid_0000000000075ebd
uuid_0000000000075ebb:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075eb8
	jmp uuid_0000000000075eba
uuid_0000000000075eb8:
	movq $1, -64(%rbp)
uuid_0000000000075eba:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000075ebd:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000075edf:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_0000000000075ee2
uuid_0000000000075ee0:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000075ee2:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_0000000000075ee5
uuid_0000000000075ee3:
	movq $1, -64(%rbp)
uuid_0000000000075ee5:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsSS:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
print_CL_ArrowNilS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f0b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075eea
	jmp uuid_0000000000075eec
uuid_0000000000075eea:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075ee7
	jmp uuid_0000000000075ee9
uuid_0000000000075ee7:
	movb $1, -128(%rbp)
uuid_0000000000075ee9:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000075eec:
	mov -136(%RBP),%RSP
	add $-152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f08
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ef3
	jmp uuid_0000000000075ef5
uuid_0000000000075ef3:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075ef0
	jmp uuid_0000000000075ef2
uuid_0000000000075ef0:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075eed
	jmp uuid_0000000000075eef
uuid_0000000000075eed:
	movb $1, -192(%rbp)
uuid_0000000000075eef:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000075ef2:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000075ef5:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f05
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075efc
	jmp uuid_0000000000075efe
uuid_0000000000075efc:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075ef9
	jmp uuid_0000000000075efb
uuid_0000000000075ef9:
	movb $1, -304(%rbp)
uuid_0000000000075efb:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000075efe:
	mov -312(%RBP),%RSP
	add $-328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f02
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000075f01
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000075f04
uuid_0000000000075f02:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075eff
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f00
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f04:
	mov -272(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_0000000000075f07
uuid_0000000000075f05:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f07:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000075f0a
uuid_0000000000075f08:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f0a:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000075f0d
uuid_0000000000075f0b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ee6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f0d:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fail_CL_ArrowNilString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fail_CL_ArrowNilConsStringString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f0e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
exit_CL_ArrowNilU64:
	mov $60, %RAX
	mov -8(%rbp), %RDI
	syscall
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_0000000000075f0f:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_0000000000075f10
	inc %RDX
	inc %R15
	jmp uuid_0000000000075f0f
uuid_0000000000075f10:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
eprint_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_0000000000075f11:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_0000000000075f12
	inc %RDX
	inc %R15
	jmp uuid_0000000000075f11
uuid_0000000000075f12:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $2
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
uuid_0000000000075f13:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_0000000000075f13
uuid_0000000000075f14:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_0000000000075f14
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilASCII:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $0, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
print_CL_ArrowNilI64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
	cmp $0,%R15
	jge uuid_0000000000075f15
	neg %R15
	movb $45, -24(%rbp)
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $-24, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f15:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_0000000000075f15
uuid_0000000000075f16:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_0000000000075f16
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU32:
	mov $0, %R15
	mov -8(%rbp), %R15D
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU16:
	mov $0, %R15
	mov -8(%rbp), %R15W
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU8:
	mov $0, %R15
	mov -8(%rbp), %R15B
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI32:
	mov $0, %R15
	mov -8(%rbp), %R15D
	movsx %R15D,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI16:
	mov $0, %R15
	mov -8(%rbp), %R15W
	movsx %R15W,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI8:
	mov $0, %R15
	mov -8(%rbp), %R15B
	movsx %R15B,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsStringString:
	pushq $0
	pushq $0
	pushq $0
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp $0,%R8
	je uuid_0000000000075f1c
	cmp $0,%R9
	je uuid_0000000000075f1c
uuid_0000000000075f1a:
	mov %R8, %r14
	movb 0(%r14), %r15b
	movb %r15b, -32(%rbp)
	mov %R9, %r14
	movb 0(%r14), %r15b
	movb %r15b, -40(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	je uuid_0000000000075f1c
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	jne uuid_0000000000075f1b
	inc %R8
	inc %R9
	jmp uuid_0000000000075f1a
uuid_0000000000075f1b:
	mov $1, %RAX
	jmp uuid_0000000000075f1d
uuid_0000000000075f1c:
	mov $0, %RAX
	jmp uuid_0000000000075f1d
uuid_0000000000075f1d:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsStringString:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64:
	mov -8(%rbp), %RAX
	mov -16(%rbp), %RDI
	mov -24(%rbp), %RSI
	mov -32(%rbp), %RDX
	syscall
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
read_SB_file_CL_ArrowStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f20
	jmp uuid_0000000000075f22
uuid_0000000000075f20:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1e
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f22:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1025
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $1024
uuid_0000000000075f28:
	movq -56(%RBP), %RAX
	movq $1024, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f29
	jmp uuid_0000000000075f2a
uuid_0000000000075f29:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	movq -40(%RBP), %RAX
	movq -48(%RBP), %R14
	addq %R14, %RAX
	push %RAX
	pushq $1024
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f25
	jmp uuid_0000000000075f27
uuid_0000000000075f25:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f23
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f24
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000075f27:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1025, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	add $8, %RSP
	jmp uuid_0000000000075f28
uuid_0000000000075f2a:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
head_SB_string_CL_ArrowU8String:
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f2b
	mov -8(%rbp), %r15
	mov 0(%r15), %AL
	jmp uuid_0000000000075f2d
uuid_0000000000075f2b:
	mov $0, %AL
uuid_0000000000075f2d:
	mov -24(%RBP),%RSP
	add $-24, %RSP
	mov	%AL,%AL
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
tail_SB_string_CL_ArrowStringString:
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f31
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075f2e
	mov $0, %RAX
	jmp uuid_0000000000075f30
uuid_0000000000075f2e:
	mov -8(%rbp), %RAX
	inc %RAX
uuid_0000000000075f30:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	jmp uuid_0000000000075f33
uuid_0000000000075f31:
	mov $0, %RAX
uuid_0000000000075f33:
	mov -24(%RBP),%RSP
	add $-24, %RSP
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
clone_SB_rope_CL_ArrowStringS:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $1024
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f4d
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f3a
	jmp uuid_0000000000075f3c
uuid_0000000000075f3a:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075f37
	jmp uuid_0000000000075f39
uuid_0000000000075f37:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000075f34
	jmp uuid_0000000000075f36
uuid_0000000000075f34:
	movb $1, -144(%rbp)
uuid_0000000000075f36:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_0000000000075f39:
	mov -160(%RBP),%RSP
	add $-216, %RSP
uuid_0000000000075f3c:
	mov -152(%RBP),%RSP
	add $-216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f4a
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f40
	jmp uuid_0000000000075f42
uuid_0000000000075f40:
	push %RBP
	mov -240(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000075f3d
	jmp uuid_0000000000075f3f
uuid_0000000000075f3d:
	movb $1, -256(%rbp)
uuid_0000000000075f3f:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000075f42:
	mov -264(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f47
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000075f46
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000075f49
uuid_0000000000075f47:
	pushq $0
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	mov %R15B, %AL
	push %RAX
uuid_0000000000075f43:
#call function != : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EX__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f44
	jmp uuid_0000000000075f45
uuid_0000000000075f44:
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -296(%RBP), %R14B
	mov -40(%RBP), %R13
	mov -8(%RBP), %R15
	add %R13, %R15
	movb %R14B, 0(%R15)
	movq -288(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -288(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	movb %R15B, -296(%rbp)
	jmp uuid_0000000000075f43
uuid_0000000000075f45:
uuid_0000000000075f49:
	mov -224(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000075f4c
uuid_0000000000075f4a:
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000075f4c:
	mov -112(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_0000000000075f4f
uuid_0000000000075f4d:
uuid_0000000000075f4f:
	mov -80(%RBP),%RSP
	add $-104, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
clone_SB_rope_CL_ArrowStringU8:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %r14
	mov -8(%rbp),%r15b
	mov %r15b, 0(%r14)
	mov -24(%rbp), %r15
	movb $0, 1(%r15)
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
length_CL_ArrowU64String:
	pushq $0
uuid_0000000000075f50:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075f51
	jmp uuid_0000000000075f52
uuid_0000000000075f51:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_0000000000075f50
uuid_0000000000075f52:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
write_SB_file_CL_ArrowNilConsStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $577
	pushq $420
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq -32(%rbp)
	pushq -16(%rbp)
#call function length : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call length_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
to_SB_string_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
uuid_0000000000075f53:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f54
	jmp uuid_0000000000075f55
uuid_0000000000075f54:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $48, %R14
	addq %R14, %RAX
	push %RAX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -56(%rbp), %R8
	movb %R8B, -48(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	add $8, %rsp
	jmp uuid_0000000000075f53
uuid_0000000000075f55:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f57
	pushq $0
	pushq $uuid_0000000000075f56
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_0000000000075f59
uuid_0000000000075f57:
uuid_0000000000075f59:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringI64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f5b
	jmp uuid_0000000000075f5d
uuid_0000000000075f5b:
	pushq $0
	pushq $uuid_0000000000075f5a
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_0000000000075f5d:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	pushq $0
uuid_0000000000075f5e:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f5f
	jmp uuid_0000000000075f60
uuid_0000000000075f5f:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $48
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -88(%rbp), %R8
	movb %R8B, -80(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	add $8, %rsp
	jmp uuid_0000000000075f5e
uuid_0000000000075f60:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f61
	pushq $0
	pushq $uuid_0000000000075f56
	pushq $2
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_0000000000075f63
uuid_0000000000075f61:
uuid_0000000000075f63:
	mov -88(%RBP),%RSP
	add $-88, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_i64_CL_ArrowI64String:
	pushq $0
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f64
	jmp uuid_0000000000075f66
uuid_0000000000075f64:
	movb $1, -24(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_0000000000075f66:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f67
	jmp uuid_0000000000075f69
uuid_0000000000075f67:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000075f69:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_u64_CL_ArrowU64String:
	pushq $0
uuid_0000000000075f8c:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075f8d
	jmp uuid_0000000000075f8e
uuid_0000000000075f8d:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f89
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f86
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $50
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f83
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $51
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f80
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $52
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f7d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $53
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f7a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $54
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f77
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $55
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f74
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $56
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f71
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $57
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075f6e
	push %RBP
	jmp uuid_0000000000075f6b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000075f6a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000075f6d
uuid_0000000000075f6b:
uuid_0000000000075f6d:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_0000000000075f70
uuid_0000000000075f6e:
	movq -24(%RBP), %RAX
	movq $9, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f70:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_0000000000075f73
uuid_0000000000075f71:
	movq -24(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f73:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000075f76
uuid_0000000000075f74:
	movq -24(%RBP), %RAX
	movq $7, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f76:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000075f79
uuid_0000000000075f77:
	movq -24(%RBP), %RAX
	movq $6, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f79:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000075f7c
uuid_0000000000075f7a:
	movq -24(%RBP), %RAX
	movq $5, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f7c:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000075f7f
uuid_0000000000075f7d:
	movq -24(%RBP), %RAX
	movq $4, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f7f:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000075f82
uuid_0000000000075f80:
	movq -24(%RBP), %RAX
	movq $3, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f82:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_0000000000075f85
uuid_0000000000075f83:
	movq -24(%RBP), %RAX
	movq $2, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f85:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000075f88
uuid_0000000000075f86:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000075f88:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_0000000000075f8b
uuid_0000000000075f89:
uuid_0000000000075f8b:
	mov -40(%RBP),%RSP
	add $-48, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_0000000000075f8c
uuid_0000000000075f8e:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_hex_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $16
uuid_0000000000075fcf:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fd0
	jmp uuid_0000000000075fd1
uuid_0000000000075fd0:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fcc
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fc9
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fc6
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fc3
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fc0
	push %RBP
	pushq -56(%rbp)
	movq -152(%RBP), %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fbd
	push %RBP
	pushq -56(%rbp)
	movq -168(%RBP), %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fba
	push %RBP
	pushq -56(%rbp)
	movq -184(%RBP), %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fb7
	push %RBP
	pushq -56(%rbp)
	movq -200(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fb4
	push %RBP
	pushq -56(%rbp)
	movq -216(%RBP), %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fb1
	push %RBP
	pushq -56(%rbp)
	movq -232(%RBP), %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fae
	push %RBP
	pushq -56(%rbp)
	movq -248(%RBP), %RAX
	movq $11, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fab
	push %RBP
	pushq -56(%rbp)
	movq -264(%RBP), %RAX
	movq $12, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fa8
	push %RBP
	pushq -56(%rbp)
	movq -280(%RBP), %RAX
	movq $13, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fa5
	push %RBP
	pushq -56(%rbp)
	movq -296(%RBP), %RAX
	movq $14, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075fa2
	push %RBP
	pushq -56(%rbp)
	movq -312(%RBP), %RAX
	movq $15, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075f9f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000075f9e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000075fa1
uuid_0000000000075f9f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f9d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fa1:
	mov -304(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000075fa4
uuid_0000000000075fa2:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f9c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fa4:
	mov -288(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000075fa7
uuid_0000000000075fa5:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f9b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fa7:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000075faa
uuid_0000000000075fa8:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f9a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075faa:
	mov -256(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000075fad
uuid_0000000000075fab:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f99
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fad:
	mov -240(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000075fb0
uuid_0000000000075fae:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f98
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fb0:
	mov -224(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_0000000000075fb3
uuid_0000000000075fb1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f97
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fb3:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_0000000000075fb6
uuid_0000000000075fb4:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f96
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fb6:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_0000000000075fb9
uuid_0000000000075fb7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f95
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fb9:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_0000000000075fbc
uuid_0000000000075fba:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f94
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fbc:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000075fbf
uuid_0000000000075fbd:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f93
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fbf:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000075fc2
uuid_0000000000075fc0:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f92
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fc2:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_0000000000075fc5
uuid_0000000000075fc3:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f91
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fc5:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_0000000000075fc8
uuid_0000000000075fc6:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f90
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fc8:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_0000000000075fcb
uuid_0000000000075fc9:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f8f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fcb:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_0000000000075fce
uuid_0000000000075fcc:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f56
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000075fce:
	mov -64(%RBP),%RSP
	add $-72, %RSP
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_0000000000075fcf
uuid_0000000000075fd1:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
has_SB_prefix_CL_ArrowU64ConsStringString:
	pushq $1
uuid_0000000000075fd9:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075fda
	jmp uuid_0000000000075fdb
uuid_0000000000075fda:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075fd6
	movq $0, -32(%rbp)
	movq $uuid_0000000000075fd2, -16(%rbp)
	jmp uuid_0000000000075fd8
uuid_0000000000075fd6:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075fd3
	movq $0, -32(%rbp)
	movq $uuid_0000000000075fd2, -16(%rbp)
	jmp uuid_0000000000075fd5
uuid_0000000000075fd3:
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -16(%rbp)
uuid_0000000000075fd5:
	mov -64(%RBP),%RSP
	add $-64, %RSP
uuid_0000000000075fd8:
	mov -40(%RBP),%RSP
	add $-64, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000075fd9
uuid_0000000000075fdb:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_prefix_CL_ArrowStringConsStringString:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075fdf
	jmp uuid_0000000000075fe1
uuid_0000000000075fdf:
uuid_0000000000075fdc:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075fdd
	jmp uuid_0000000000075fde
uuid_0000000000075fdd:
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -16(%rbp)
	jmp uuid_0000000000075fdc
uuid_0000000000075fde:
uuid_0000000000075fe1:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
replace_CL_ArrowStringConsStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_0000000000075fe5:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075fe6
	jmp uuid_0000000000075fe7
uuid_0000000000075fe6:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075fe2
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_0000000000075fe4
uuid_0000000000075fe2:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function remove-prefix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call remove_SB_prefix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_0000000000075fe4:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_0000000000075fe5
uuid_0000000000075fe7:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_suffix_CL_ArrowU64ConsStringString:
	pushq $0
uuid_0000000000075feb:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075fec
	jmp uuid_0000000000075fed
uuid_0000000000075fec:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075fe8
	jmp uuid_0000000000075fea
uuid_0000000000075fe8:
	movq $1, -32(%rbp)
uuid_0000000000075fea:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_0000000000075feb
uuid_0000000000075fed:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_suffix_CL_ArrowStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_0000000000075ff1:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075ff2
	jmp uuid_0000000000075ff3
uuid_0000000000075ff2:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000075fee
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_0000000000075ff0
uuid_0000000000075fee:
	movq $uuid_0000000000075f56, -8(%rbp)
uuid_0000000000075ff0:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_0000000000075ff1
uuid_0000000000075ff3:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
deep_SB_hash_CL_ArrowU64String:
	pushq $0
	pushq $0
uuid_0000000000075ff4:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000075ff5
	jmp uuid_0000000000075ff6
uuid_0000000000075ff5:
	mov $0, %R14
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov -40(%rbp), %R14B
	movq %R14, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -32(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	jmp uuid_0000000000075ff4
uuid_0000000000075ff6:
	mov -32(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_ML__CL_ArrowStringConsU64String:
	pushq $0
	pushq $0
	pushq $3
uuid_0000000000075ff7:
	movq -16(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000075ff8
	jmp uuid_0000000000075ff9
uuid_0000000000075ff8:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	movq -16(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -16(%rbp)
	jmp uuid_0000000000075ff7
uuid_0000000000075ff9:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jb uuid_0000000000075ffa
	mov $0, %RAX
uuid_0000000000075ffa:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jl uuid_0000000000075ffb
	mov $0, %RAX
uuid_0000000000075ffb:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jbe uuid_0000000000075ffc
	mov $0, %RAX
uuid_0000000000075ffc:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jle uuid_0000000000075ffd
	mov $0, %RAX
uuid_0000000000075ffd:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	ja uuid_0000000000075ffe
	mov $0, %RAX
uuid_0000000000075ffe:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jg uuid_0000000000075fff
	mov $0, %RAX
uuid_0000000000075fff:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jae uuid_0000000000076000
	mov $0, %RAX
uuid_0000000000076000:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jge uuid_0000000000076001
	mov $0, %RAX
uuid_0000000000076001:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_0000000000076002
	mov $0, %RAX
uuid_0000000000076002:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_0000000000076003
	mov $0, %RAX
uuid_0000000000076003:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_0000000000076004
	mov $0, %RAX
uuid_0000000000076004:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AM__AM__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	je uuid_0000000000076005
	mov -16(%rbp), %R8
	cmp $0,%R8
	je uuid_0000000000076005
	mov $1, %RAX
uuid_0000000000076005:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_BR__BR__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	jne uuid_0000000000076007
	mov -16(%rbp), %R8
	cmp $0,%R8
	jne uuid_0000000000076007
	jmp uuid_0000000000076006
uuid_0000000000076007:
	mov $1, %RAX
uuid_0000000000076006:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_0000000000076008
	mov $0, %RAX
uuid_0000000000076008:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowU64ConsU64U64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowI64ConsI64I64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_SB__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	subq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_HT__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	xor %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	mul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	imul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007600a
	jmp uuid_0000000000076009
uuid_0000000000076009:
	mov $1, %RAX
	jmp uuid_000000000007600b
uuid_000000000007600a:
	mov $0, %RAX
	jmp uuid_000000000007600b
uuid_000000000007600b:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007600c
	jmp uuid_000000000007600d
uuid_000000000007600c:
	mov $1, %RAX
	jmp uuid_000000000007600e
uuid_000000000007600d:
	mov $0, %RAX
	jmp uuid_000000000007600e
uuid_000000000007600e:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU16U16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_000000000007600f
	jmp uuid_0000000000076010
uuid_000000000007600f:
	mov $1, %RAX
	jmp uuid_0000000000076011
uuid_0000000000076010:
	mov $0, %RAX
	jmp uuid_0000000000076011
uuid_0000000000076011:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU32U32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_0000000000076012
	jmp uuid_0000000000076013
uuid_0000000000076012:
	mov $1, %RAX
	jmp uuid_0000000000076014
uuid_0000000000076013:
	mov $0, %RAX
	jmp uuid_0000000000076014
uuid_0000000000076014:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
not_CL_ArrowU64U64:
	pushq $0
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076015
	jmp uuid_0000000000076017
uuid_0000000000076015:
	movq $1, -24(%rbp)
uuid_0000000000076017:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
not_CL_ArrowU64U8:
	pushq $0
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076018
	jmp uuid_000000000007601a
uuid_0000000000076018:
	movq $1, -24(%rbp)
uuid_000000000007601a:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI8I8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007601b
	jmp uuid_000000000007601c
uuid_000000000007601b:
	mov $1, %RAX
	jmp uuid_000000000007601d
uuid_000000000007601c:
	mov $0, %RAX
	jmp uuid_000000000007601d
uuid_000000000007601d:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI16I16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_000000000007601e
	jmp uuid_000000000007601f
uuid_000000000007601e:
	mov $1, %RAX
	jmp uuid_0000000000076020
uuid_000000000007601f:
	mov $0, %RAX
	jmp uuid_0000000000076020
uuid_0000000000076020:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI32I32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_0000000000076021
	jmp uuid_0000000000076022
uuid_0000000000076021:
	mov $1, %RAX
	jmp uuid_0000000000076023
uuid_0000000000076022:
	mov $0, %RAX
	jmp uuid_0000000000076023
uuid_0000000000076023:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $0, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $8, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $16, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock:
	movq -8(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 0(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 8(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 16(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
malloc_SB_new_SB_page_CL_ArrowNilNil:
	mov $12, %RAX
	mov $0, %RDI
	syscall
	mov	%RAX, %R8
	movq %R8, %r15
	movq $malloc_SB_block_SB_head_CL_U64, %r14
	movq %r15, 0(%r14)
	movq %R8, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	mov $12, %RAX
	mov	%R8, %RDI
	syscall
	movq %R8, %r15
	movq $malloc_SB_page_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function <= : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _LT__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007602a
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq -56(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
	pushq $0
uuid_0000000000076027:
	movq -72(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076028
	jmp uuid_0000000000076029
uuid_0000000000076028:
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %R15B, %R14B
	mov -72(%RBP), %R13
	mov -80(%RBP), %R15
	add %R13, %R15
	mov %R14B, 0(%R15)
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	add $8, %rsp
	add $8, %rsp
	jmp uuid_0000000000076027
uuid_0000000000076029:
#call function free : Arrow<Array<?,?>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call free_CL_ArrowNilArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -64(%rbp), %r15
	movq %r15, -32(%rbp)
	mov -64(%rbp), %r15
	mov %r15, -32(%rbp)
	jmp uuid_000000000007602c
uuid_000000000007602a:
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076024
	jmp uuid_0000000000076026
uuid_0000000000076024:
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -40(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
uuid_0000000000076026:
	mov -56(%RBP),%RSP
	add $-56, %RSP
uuid_000000000007602c:
	mov -48(%RBP),%RSP
	add $-56, %RSP
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock:
	pushq $0
	push %RBP
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007602d
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $24, %RAX
	addq %R14, %RAX
	movq %RAX, %R14
	movq -8(%RBP), %RAX
	addq %R14, %RAX
	pushq %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
	jmp uuid_000000000007602f
uuid_000000000007602d:
	movq $1073741824, -24(%rbp)
uuid_000000000007602f:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
free_CL_ArrowNilArray_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function .block-prev : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -32(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076030
	jmp uuid_0000000000076032
uuid_0000000000076030:
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076032:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076033
	jmp uuid_0000000000076035
uuid_0000000000076033:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076035:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_U64:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_ConsU64U64:
	push %RBP
	movq $malloc_SB_block_SB_head_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076036
	jmp uuid_0000000000076038
uuid_0000000000076036:
#call function malloc-new-page : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call malloc_SB_new_SB_page_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076038:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	pushq 0(%r15)
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076039
	jmp uuid_000000000007603b
uuid_0000000000076039:
	mov $malloc_SB_block_SB_head_CL_U64, %r14
	movq 0(%r14), %r15
	movq %r15, -40(%rbp)
	mov 0(%r14), %r15
	mov %r15, -40(%rbp)
uuid_000000000007603b:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	pushq $0
uuid_000000000007603f:
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076040
	jmp uuid_0000000000076041
uuid_0000000000076040:
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov $malloc_SB_first_SB_free_CL_U64, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	mov -40(%rbp), %r15
	mov %r15, 0(%r14)
	push %RBP
	movq -16(%RBP), %RAX
	movq $malloc_SB_large_SB_size_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007603c
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	jmp uuid_000000000007603e
uuid_000000000007603c:
uuid_000000000007603e:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_000000000007603f
uuid_0000000000076041:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq $8, %RAX
	movq -64(%RBP), %R14
	subq %R14, %RAX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -72(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	movq -80(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	push %RAX
	movq -88(%RBP), %RAX
	movq -8(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -96(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076042
	jmp uuid_0000000000076044
uuid_0000000000076042:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076044:
	mov -104(%RBP),%RSP
	add $-104, %RSP
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	movq -80(%RBP), %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076045
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076047
uuid_0000000000076045:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076047:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
non_SB_zero_CL_ArrowU64Type:
	mov $3, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64AST:
	mov $10, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentKV:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64Context:
	mov $2, %RAX
	pushq %RAX
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
non_SB_zero_CL_ArrowU64TContext:
	mov $2, %RAX
	pushq %RAX
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
non_SB_zero_CL_ArrowU64FContext:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64STypeList:
	mov $1, %RAX
	pushq %RAX
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64StringTypeList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64StringList:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64StringU64List:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringStringList:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringSList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64MacroList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64SfxList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
mangle_SB_identifier_CL_ArrowSString:
	pushq $0
	pushq $0
	pushq $3
uuid_00000000000760ad:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000760ae
	jmp uuid_00000000000760af
uuid_00000000000760ae:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $33
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760aa
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $36
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760a7
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $37
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760a4
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760a1
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $42
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007609e
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $43
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007609b
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076098
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $46
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076095
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $47
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076092
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007608f
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007608c
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076089
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $61
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076086
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $62
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076083
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $63
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076080
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $64
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007607d
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007607a
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076077
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $94
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076074
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $95
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076071
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $96
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007606e
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $124
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007606b
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $126
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076068
	push %RBP
	pushq -48(%rbp)
	jmp uuid_0000000000076065
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076064
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076067
uuid_0000000000076065:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076067:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007606a
uuid_0000000000076068:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076063
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007606a:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007606d
uuid_000000000007606b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076062
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007606d:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_0000000000076070
uuid_000000000007606e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076061
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076070:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000076073
uuid_0000000000076071:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076060
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076073:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_0000000000076076
uuid_0000000000076074:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007605f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076076:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_0000000000076079
uuid_0000000000076077:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007605e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076079:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007607c
uuid_000000000007607a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007605d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007607c:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007607f
uuid_000000000007607d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007605c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007607f:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000076082
uuid_0000000000076080:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007605b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076082:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_0000000000076085
uuid_0000000000076083:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007605a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076085:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_0000000000076088
uuid_0000000000076086:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076059
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076088:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007608b
uuid_0000000000076089:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076058
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007608b:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007608e
uuid_000000000007608c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076057
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007608e:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000076091
uuid_000000000007608f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076056
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076091:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_0000000000076094
uuid_0000000000076092:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076055
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076094:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_0000000000076097
uuid_0000000000076095:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076054
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076097:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007609a
uuid_0000000000076098:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076053
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007609a:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007609d
uuid_000000000007609b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076052
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007609d:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_00000000000760a0
uuid_000000000007609e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076051
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760a0:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_00000000000760a3
uuid_00000000000760a1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076050
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760a3:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_00000000000760a6
uuid_00000000000760a4:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007604f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760a6:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_00000000000760a9
uuid_00000000000760a7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007604e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760a9:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_00000000000760ac
uuid_00000000000760aa:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007604d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760ac:
	mov -56(%RBP),%RSP
	add $-64, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_00000000000760ad
uuid_00000000000760af:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mangle_SB_identifier_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000760e3
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000760b4
	jmp uuid_00000000000760b6
uuid_00000000000760b4:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000760b1
	jmp uuid_00000000000760b3
uuid_00000000000760b1:
	movb $1, -152(%rbp)
uuid_00000000000760b3:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000760b6:
	mov -160(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760e0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000760bd
	jmp uuid_00000000000760bf
uuid_00000000000760bd:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000760ba
	jmp uuid_00000000000760bc
uuid_00000000000760ba:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000760b7
	jmp uuid_00000000000760b9
uuid_00000000000760b7:
	movb $1, -216(%rbp)
uuid_00000000000760b9:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000760bc:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000760bf:
	mov -224(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760dd
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000760d6
	jmp uuid_00000000000760d8
uuid_00000000000760d6:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000760d3
	jmp uuid_00000000000760d5
uuid_00000000000760d3:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000760d0
	jmp uuid_00000000000760d2
uuid_00000000000760d0:
	movb $1, -328(%rbp)
uuid_00000000000760d2:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_00000000000760d5:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_00000000000760d8:
	mov -336(%RBP),%RSP
	add $-400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000760d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000760dc
uuid_00000000000760da:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000760dc:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_00000000000760df
uuid_00000000000760dd:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000760cd:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760ce
	jmp uuid_00000000000760cf
uuid_00000000000760ce:
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000760c6
	jmp uuid_00000000000760c8
uuid_00000000000760c6:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000760c3
	jmp uuid_00000000000760c5
uuid_00000000000760c3:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	jmp uuid_00000000000760c0
	jmp uuid_00000000000760c2
uuid_00000000000760c0:
	movb $1, -384(%rbp)
uuid_00000000000760c2:
	mov -448(%RBP),%RSP
	add $-472, %RSP
uuid_00000000000760c5:
	mov -400(%RBP),%RSP
	add $-472, %RSP
uuid_00000000000760c8:
	mov -392(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760ca
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000760c9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000760cc
uuid_00000000000760ca:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	movq -440(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -240(%rbp)
uuid_00000000000760cc:
	mov -336(%RBP),%RSP
	add $-472, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000760cd
uuid_00000000000760cf:
uuid_00000000000760df:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_00000000000760e2
uuid_00000000000760e0:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000760e2:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_00000000000760e5
uuid_00000000000760e3:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000760b0
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000760e5:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mangle_SB_identifier_CL_ArrowStringConsTypeString:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076056
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
escape_SB_string_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007610b:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007610c
	jmp uuid_000000000007610d
uuid_000000000007610c:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $92
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076108
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007610a
uuid_0000000000076108:
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq $58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076105
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076102
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $92
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760ff
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760fc
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq $96
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760f9
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $110
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760f6
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $111
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760f3
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $116
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760f0
	push %RBP
	pushq -56(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $115
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000760ed
	push %RBP
	pushq -56(%rbp)
	jmp uuid_00000000000760ea
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000760e9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000760ec
uuid_00000000000760ea:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000760e7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U8,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000760e8
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000760ec:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_00000000000760ef
uuid_00000000000760ed:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760ef:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_00000000000760f2
uuid_00000000000760f0:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $9
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760f2:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_00000000000760f5
uuid_00000000000760f3:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $35
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760f5:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_00000000000760f8
uuid_00000000000760f6:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $10
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760f8:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_00000000000760fb
uuid_00000000000760f9:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $39
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760fb:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_00000000000760fe
uuid_00000000000760fc:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $41
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000760fe:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_0000000000076101
uuid_00000000000760ff:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000760e6
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076101:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_0000000000076104
uuid_0000000000076102:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076104:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_0000000000076107
uuid_0000000000076105:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $59
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076107:
	mov -64(%RBP),%RSP
	add $-72, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007610a:
	mov -48(%RBP),%RSP
	add $-72, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007610b
uuid_000000000007610d:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_literal_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007614a:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007614b
	jmp uuid_000000000007614c
uuid_000000000007614b:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $34
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076147
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $92
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076144
	push %RBP
	pushq -48(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076141
	push %RBP
	pushq -48(%rbp)
	jmp uuid_000000000007613e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007613d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076140
uuid_000000000007613e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076140:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000076143
uuid_0000000000076141:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007613c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076143:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_0000000000076146
uuid_0000000000076144:
	pushq $uuid_0000000000075fd2
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076135
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076132
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $92
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007612f
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007612c
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $96
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076129
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $108
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076126
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $110
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076123
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $111
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076120
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $115
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007611d
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $116
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007611a
	push %RBP
	jmp uuid_0000000000076117
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076116
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076119
uuid_0000000000076117:
uuid_0000000000076119:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007611c
uuid_000000000007611a:
	movq $uuid_0000000000076115, -88(%rbp)
uuid_000000000007611c:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007611f
uuid_000000000007611d:
	movq $uuid_0000000000075ef7, -88(%rbp)
uuid_000000000007611f:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000076122
uuid_0000000000076120:
	movq $uuid_0000000000076114, -88(%rbp)
uuid_0000000000076122:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000076125
uuid_0000000000076123:
	movq $uuid_0000000000076113, -88(%rbp)
uuid_0000000000076125:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_0000000000076128
uuid_0000000000076126:
	movq $uuid_0000000000076112, -88(%rbp)
uuid_0000000000076128:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007612b
uuid_0000000000076129:
	movq $uuid_0000000000076111, -88(%rbp)
uuid_000000000007612b:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007612e
uuid_000000000007612c:
	movq $uuid_0000000000075ef8, -88(%rbp)
uuid_000000000007612e:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000076131
uuid_000000000007612f:
	movq $uuid_0000000000076110, -88(%rbp)
uuid_0000000000076131:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000076134
uuid_0000000000076132:
	movq $uuid_0000000000075ef6, -88(%rbp)
uuid_0000000000076134:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000076137
uuid_0000000000076135:
	movq $uuid_000000000007610f, -88(%rbp)
uuid_0000000000076137:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000076139
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076138
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007613b
uuid_0000000000076139:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -88(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007613b:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_0000000000076146:
	mov -72(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_0000000000076149
uuid_0000000000076147:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007610e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000076149:
	mov -56(%RBP),%RSP
	add $-64, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007614a
uuid_000000000007614c:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_string_CL_ArrowSS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076150
	jmp uuid_0000000000076152
uuid_0000000000076150:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007614d
	jmp uuid_000000000007614f
uuid_000000000007614d:
	movb $1, -96(%rbp)
uuid_000000000007614f:
	mov -112(%RBP),%RSP
	add $-120, %RSP
uuid_0000000000076152:
	mov -104(%RBP),%RSP
	add $-120, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076163
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076159
	jmp uuid_000000000007615b
uuid_0000000000076159:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076156
	jmp uuid_0000000000076158
uuid_0000000000076156:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076153
	jmp uuid_0000000000076155
uuid_0000000000076153:
	movb $1, -160(%rbp)
uuid_0000000000076155:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000076158:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007615b:
	mov -168(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076160
	push %RBP
	jmp uuid_000000000007615d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007615c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007615f
uuid_000000000007615d:
uuid_000000000007615f:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000076162
uuid_0000000000076160:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076162:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_0000000000076165
uuid_0000000000076163:
	pushq $0
#call function escape-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076165:
	mov -64(%RBP),%RSP
	add $-120, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
exit_SB_error_CL_ArrowNilConsASTString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076185
	jmp uuid_0000000000076187
uuid_0000000000076185:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076172
	jmp uuid_0000000000076174
uuid_0000000000076172:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076169
	jmp uuid_000000000007616b
uuid_0000000000076169:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_0000000000076166
	jmp uuid_0000000000076168
uuid_0000000000076166:
	movb $1, -440(%rbp)
uuid_0000000000076168:
	mov -456(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007616b:
	mov -448(%RBP),%RSP
	add $-480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007616f
	jmp uuid_0000000000076171
uuid_000000000007616f:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007616c
	jmp uuid_000000000007616e
uuid_000000000007616c:
	movb $1, -344(%rbp)
uuid_000000000007616e:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000076171:
	mov -360(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000076174:
	mov -352(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076182
	jmp uuid_0000000000076184
uuid_0000000000076182:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007617c
	jmp uuid_000000000007617e
uuid_000000000007617c:
	push %RBP
	jmp uuid_0000000000076179
	jmp uuid_000000000007617b
uuid_0000000000076179:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076176
	jmp uuid_0000000000076178
uuid_0000000000076176:
	movb $1, -648(%rbp)
uuid_0000000000076178:
	mov -672(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007617b:
	mov -664(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007617e:
	mov -656(%RBP),%RSP
	add $-680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007617f
	jmp uuid_0000000000076181
uuid_000000000007617f:
	movb $1, -248(%rbp)
uuid_0000000000076181:
	mov -568(%RBP),%RSP
	add $-680, %RSP
uuid_0000000000076184:
	mov -264(%RBP),%RSP
	add $-680, %RSP
uuid_0000000000076187:
	mov -256(%RBP),%RSP
	add $-680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007619d
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076191
	jmp uuid_0000000000076193
uuid_0000000000076191:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007618e
	jmp uuid_0000000000076190
uuid_000000000007618e:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007618b
	jmp uuid_000000000007618d
uuid_000000000007618b:
	movb $1, -768(%rbp)
uuid_000000000007618d:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000076190:
	mov -784(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000076193:
	mov -776(%RBP),%RSP
	add $-936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007619a
	push %RBP
	jmp uuid_0000000000076197
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076196
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076199
uuid_0000000000076197:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076199:
	mov -944(%RBP),%RSP
	add $-944, %RSP
	jmp uuid_000000000007619c
uuid_000000000007619a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076194
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076189
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076189
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076195
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007619c:
	mov -688(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007619f
uuid_000000000007619d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076188
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076189
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007618a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007619f:
	mov -168(%RBP),%RSP
	add $-680, %RSP
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_variable_CL_ArrowU64String:
	pushq $0
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $33
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007623b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $36
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076238
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $37
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076235
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076232
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $42
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007622f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $43
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007622c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076229
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $46
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076226
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $47
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076223
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076220
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007621d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007621a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $61
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076217
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $62
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076214
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $63
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076211
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $64
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007620e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007620b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076208
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $94
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076205
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $95
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076202
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $97
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761ff
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $98
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761fc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $99
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761f9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $100
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761f6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq $101
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761f3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq $102
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761f0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $103
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761ed
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq $104
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761ea
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $105
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761e7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $106
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761e4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $107
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761e1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $108
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761de
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $109
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761db
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq $110
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761d8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $111
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761d5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $112
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761d2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $113
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761cf
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $114
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761cc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $115
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761c9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $116
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761c6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq $117
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761c3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $118
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761c0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $119
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761bd
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq $120
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761ba
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $121
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761b7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $122
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761b4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq $124
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761b1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $126
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761ae
	push %RBP
	jmp uuid_00000000000761ab
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000761aa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000761ad
uuid_00000000000761ab:
uuid_00000000000761ad:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_00000000000761b0
uuid_00000000000761ae:
	movb $1, -24(%rbp)
uuid_00000000000761b0:
	mov -792(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_00000000000761b3
uuid_00000000000761b1:
	movb $1, -24(%rbp)
uuid_00000000000761b3:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_00000000000761b6
uuid_00000000000761b4:
	movb $1, -24(%rbp)
uuid_00000000000761b6:
	mov -760(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_00000000000761b9
uuid_00000000000761b7:
	movb $1, -24(%rbp)
uuid_00000000000761b9:
	mov -744(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_00000000000761bc
uuid_00000000000761ba:
	movb $1, -24(%rbp)
uuid_00000000000761bc:
	mov -728(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_00000000000761bf
uuid_00000000000761bd:
	movb $1, -24(%rbp)
uuid_00000000000761bf:
	mov -712(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_00000000000761c2
uuid_00000000000761c0:
	movb $1, -24(%rbp)
uuid_00000000000761c2:
	mov -696(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_00000000000761c5
uuid_00000000000761c3:
	movb $1, -24(%rbp)
uuid_00000000000761c5:
	mov -680(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_00000000000761c8
uuid_00000000000761c6:
	movb $1, -24(%rbp)
uuid_00000000000761c8:
	mov -664(%RBP),%RSP
	add $-672, %RSP
	jmp uuid_00000000000761cb
uuid_00000000000761c9:
	movb $1, -24(%rbp)
uuid_00000000000761cb:
	mov -648(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_00000000000761ce
uuid_00000000000761cc:
	movb $1, -24(%rbp)
uuid_00000000000761ce:
	mov -632(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_00000000000761d1
uuid_00000000000761cf:
	movb $1, -24(%rbp)
uuid_00000000000761d1:
	mov -616(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_00000000000761d4
uuid_00000000000761d2:
	movb $1, -24(%rbp)
uuid_00000000000761d4:
	mov -600(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_00000000000761d7
uuid_00000000000761d5:
	movb $1, -24(%rbp)
uuid_00000000000761d7:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_00000000000761da
uuid_00000000000761d8:
	movb $1, -24(%rbp)
uuid_00000000000761da:
	mov -568(%RBP),%RSP
	add $-576, %RSP
	jmp uuid_00000000000761dd
uuid_00000000000761db:
	movb $1, -24(%rbp)
uuid_00000000000761dd:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_00000000000761e0
uuid_00000000000761de:
	movb $1, -24(%rbp)
uuid_00000000000761e0:
	mov -536(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_00000000000761e3
uuid_00000000000761e1:
	movb $1, -24(%rbp)
uuid_00000000000761e3:
	mov -520(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_00000000000761e6
uuid_00000000000761e4:
	movb $1, -24(%rbp)
uuid_00000000000761e6:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_00000000000761e9
uuid_00000000000761e7:
	movb $1, -24(%rbp)
uuid_00000000000761e9:
	mov -488(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_00000000000761ec
uuid_00000000000761ea:
	movb $1, -24(%rbp)
uuid_00000000000761ec:
	mov -472(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_00000000000761ef
uuid_00000000000761ed:
	movb $1, -24(%rbp)
uuid_00000000000761ef:
	mov -456(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_00000000000761f2
uuid_00000000000761f0:
	movb $1, -24(%rbp)
uuid_00000000000761f2:
	mov -440(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_00000000000761f5
uuid_00000000000761f3:
	movb $1, -24(%rbp)
uuid_00000000000761f5:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_00000000000761f8
uuid_00000000000761f6:
	movb $1, -24(%rbp)
uuid_00000000000761f8:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_00000000000761fb
uuid_00000000000761f9:
	movb $1, -24(%rbp)
uuid_00000000000761fb:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_00000000000761fe
uuid_00000000000761fc:
	movb $1, -24(%rbp)
uuid_00000000000761fe:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000076201
uuid_00000000000761ff:
	movb $1, -24(%rbp)
uuid_0000000000076201:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_0000000000076204
uuid_0000000000076202:
	movb $1, -24(%rbp)
uuid_0000000000076204:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_0000000000076207
uuid_0000000000076205:
	movb $1, -24(%rbp)
uuid_0000000000076207:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007620a
uuid_0000000000076208:
	movb $1, -24(%rbp)
uuid_000000000007620a:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007620d
uuid_000000000007620b:
	movb $1, -24(%rbp)
uuid_000000000007620d:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000076210
uuid_000000000007620e:
	movb $1, -24(%rbp)
uuid_0000000000076210:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_0000000000076213
uuid_0000000000076211:
	movb $1, -24(%rbp)
uuid_0000000000076213:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_0000000000076216
uuid_0000000000076214:
	movb $1, -24(%rbp)
uuid_0000000000076216:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000076219
uuid_0000000000076217:
	movb $1, -24(%rbp)
uuid_0000000000076219:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007621c
uuid_000000000007621a:
	movb $1, -24(%rbp)
uuid_000000000007621c:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007621f
uuid_000000000007621d:
	movb $1, -24(%rbp)
uuid_000000000007621f:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_0000000000076222
uuid_0000000000076220:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761a4
	jmp uuid_00000000000761a6
uuid_00000000000761a4:
	movb $1, -24(%rbp)
uuid_00000000000761a6:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761a7
	jmp uuid_00000000000761a9
uuid_00000000000761a7:
	movb $1, -24(%rbp)
uuid_00000000000761a9:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_0000000000076222:
	mov -184(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_0000000000076225
uuid_0000000000076223:
	movb $1, -24(%rbp)
uuid_0000000000076225:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000076228
uuid_0000000000076226:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_00000000000761a0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000761a1
	movb $1, -24(%rbp)
	jmp uuid_00000000000761a3
uuid_00000000000761a1:
uuid_00000000000761a3:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000076228:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007622b
uuid_0000000000076229:
	movb $1, -24(%rbp)
uuid_000000000007622b:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007622e
uuid_000000000007622c:
	movb $1, -24(%rbp)
uuid_000000000007622e:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000076231
uuid_000000000007622f:
	movb $1, -24(%rbp)
uuid_0000000000076231:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000076234
uuid_0000000000076232:
	movb $1, -24(%rbp)
uuid_0000000000076234:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_0000000000076237
uuid_0000000000076235:
	movb $1, -24(%rbp)
uuid_0000000000076237:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007623a
uuid_0000000000076238:
	movb $1, -24(%rbp)
uuid_000000000007623a:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007623d
uuid_000000000007623b:
	movb $1, -24(%rbp)
uuid_000000000007623d:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007623e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007623f
	jmp uuid_0000000000076241
uuid_000000000007623f:
	movb $0, -24(%rbp)
uuid_0000000000076241:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringIsUsed:
	pushq $uuid_0000000000075fd2
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076254
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076251
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007624e
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007624b
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076248
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076247
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007624a
uuid_0000000000076248:
	movq $uuid_0000000000076246, -24(%rbp)
uuid_000000000007624a:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007624d
uuid_000000000007624b:
	movq $uuid_0000000000076245, -24(%rbp)
uuid_000000000007624d:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_0000000000076250
uuid_000000000007624e:
	movq $uuid_0000000000076244, -24(%rbp)
uuid_0000000000076250:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000076253
uuid_0000000000076251:
	movq $uuid_0000000000076243, -24(%rbp)
uuid_0000000000076253:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_0000000000076256
uuid_0000000000076254:
	movq $uuid_0000000000076242, -24(%rbp)
uuid_0000000000076256:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringType:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
to_SB_string_CL_ArrowSListType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076273
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007625f
	jmp uuid_0000000000076261
uuid_000000000007625f:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007625c
	jmp uuid_000000000007625e
uuid_000000000007625c:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_0000000000076259
	jmp uuid_000000000007625b
uuid_0000000000076259:
	movb $1, -216(%rbp)
uuid_000000000007625b:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007625e:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000076261:
	mov -224(%RBP),%RSP
	add $-304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076270
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076268
	jmp uuid_000000000007626a
uuid_0000000000076268:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076265
	jmp uuid_0000000000076267
uuid_0000000000076265:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_0000000000076262
	jmp uuid_0000000000076264
uuid_0000000000076262:
	movb $1, -360(%rbp)
uuid_0000000000076264:
	mov -424(%RBP),%RSP
	add $-448, %RSP
uuid_0000000000076267:
	mov -376(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007626a:
	mov -368(%RBP),%RSP
	add $-448, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007626d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007626c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007626f
uuid_000000000007626d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007626b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007626f:
	mov -312(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_0000000000076272
uuid_0000000000076270:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000076272:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000076275
uuid_0000000000076273:
uuid_0000000000076275:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
to_SB_string_SB_impl_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762bd
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076279
	jmp uuid_000000000007627b
uuid_0000000000076279:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076276
	jmp uuid_0000000000076278
uuid_0000000000076276:
	movb $1, -152(%rbp)
uuid_0000000000076278:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007627b:
	mov -160(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762ba
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076282
	jmp uuid_0000000000076284
uuid_0000000000076282:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007627f
	jmp uuid_0000000000076281
uuid_000000000007627f:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007627c
	jmp uuid_000000000007627e
uuid_000000000007627c:
	movb $1, -216(%rbp)
uuid_000000000007627e:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000076281:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000076284:
	mov -224(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762b7
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007628c
	jmp uuid_000000000007628e
uuid_000000000007628c:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076289
	jmp uuid_000000000007628b
uuid_0000000000076289:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076286
	jmp uuid_0000000000076288
uuid_0000000000076286:
	movb $1, -328(%rbp)
uuid_0000000000076288:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007628b:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007628e:
	mov -336(%RBP),%RSP
	add $-400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762b4
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007629f
	jmp uuid_00000000000762a1
uuid_000000000007629f:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076295
	jmp uuid_0000000000076297
uuid_0000000000076295:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076292
	jmp uuid_0000000000076294
uuid_0000000000076292:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	jmp uuid_000000000007628f
	jmp uuid_0000000000076291
uuid_000000000007628f:
	movb $1, -504(%rbp)
uuid_0000000000076291:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000076294:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000076297:
	mov -512(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007629c
	jmp uuid_000000000007629e
uuid_000000000007629c:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076299
	jmp uuid_000000000007629b
uuid_0000000000076299:
	movb $1, -440(%rbp)
uuid_000000000007629b:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007629e:
	mov -456(%RBP),%RSP
	add $-608, %RSP
uuid_00000000000762a1:
	mov -448(%RBP),%RSP
	add $-608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762b1
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762a8
	jmp uuid_00000000000762aa
uuid_00000000000762a8:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000762a5
	jmp uuid_00000000000762a7
uuid_00000000000762a5:
	push %RBP
	mov -624(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000762a2
	jmp uuid_00000000000762a4
uuid_00000000000762a2:
	movb $1, -648(%rbp)
uuid_00000000000762a4:
	mov -712(%RBP),%RSP
	add $-720, %RSP
uuid_00000000000762a7:
	mov -664(%RBP),%RSP
	add $-720, %RSP
uuid_00000000000762aa:
	mov -656(%RBP),%RSP
	add $-720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762ae
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000762ad
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000762b0
uuid_00000000000762ae:
	pushq $0
	pushq -720(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000762ab
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000762ac
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000762b0:
	mov -616(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_00000000000762b3
uuid_00000000000762b1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076298
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000762b3:
	mov -408(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_00000000000762b6
uuid_00000000000762b4:
	pushq $0
	pushq -400(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000762b6:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_00000000000762b9
uuid_00000000000762b7:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076285
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000762b9:
	mov -184(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_00000000000762bc
uuid_00000000000762ba:
	pushq $0
	pushq -176(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000762bc:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_00000000000762bf
uuid_00000000000762bd:
	pushq $0
	pushq $uuid_00000000000760b0
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000762bf:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762c6
	jmp uuid_00000000000762c8
uuid_00000000000762c6:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762c3
	jmp uuid_00000000000762c5
uuid_00000000000762c3:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762c0
	jmp uuid_00000000000762c2
uuid_00000000000762c0:
	movb $1, -192(%rbp)
uuid_00000000000762c2:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_00000000000762c5:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_00000000000762c8:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007632d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762db
	jmp uuid_00000000000762dd
uuid_00000000000762db:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762cc
	jmp uuid_00000000000762ce
uuid_00000000000762cc:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000762c9
	jmp uuid_00000000000762cb
uuid_00000000000762c9:
	movb $1, -384(%rbp)
uuid_00000000000762cb:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_00000000000762ce:
	mov -392(%RBP),%RSP
	add $-408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762d8
	jmp uuid_00000000000762da
uuid_00000000000762d8:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762d2
	jmp uuid_00000000000762d4
uuid_00000000000762d2:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000762cf
	jmp uuid_00000000000762d1
uuid_00000000000762cf:
	movb $1, -448(%rbp)
uuid_00000000000762d1:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_00000000000762d4:
	mov -456(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762d5
	jmp uuid_00000000000762d7
uuid_00000000000762d5:
	movb $1, -336(%rbp)
uuid_00000000000762d7:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_00000000000762da:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_00000000000762dd:
	mov -344(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007632a
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762f6
	jmp uuid_00000000000762f8
uuid_00000000000762f6:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762e4
	jmp uuid_00000000000762e6
uuid_00000000000762e4:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000762e1
	jmp uuid_00000000000762e3
uuid_00000000000762e1:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000762de
	jmp uuid_00000000000762e0
uuid_00000000000762de:
	movb $1, -592(%rbp)
uuid_00000000000762e0:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_00000000000762e3:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_00000000000762e6:
	mov -600(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762f3
	jmp uuid_00000000000762f5
uuid_00000000000762f3:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000762ed
	jmp uuid_00000000000762ef
uuid_00000000000762ed:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000762ea
	jmp uuid_00000000000762ec
uuid_00000000000762ea:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000762e7
	jmp uuid_00000000000762e9
uuid_00000000000762e7:
	movb $1, -704(%rbp)
uuid_00000000000762e9:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000762ec:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000762ef:
	mov -712(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762f0
	jmp uuid_00000000000762f2
uuid_00000000000762f0:
	movb $1, -544(%rbp)
uuid_00000000000762f2:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000762f5:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000762f8:
	mov -552(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076327
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076317
	jmp uuid_0000000000076319
uuid_0000000000076317:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076305
	jmp uuid_0000000000076307
uuid_0000000000076305:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076302
	jmp uuid_0000000000076304
uuid_0000000000076302:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000762ff
	jmp uuid_0000000000076301
uuid_00000000000762ff:
	movb $1, -896(%rbp)
uuid_0000000000076301:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000076304:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000076307:
	mov -904(%RBP),%RSP
	add $-968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076314
	jmp uuid_0000000000076316
uuid_0000000000076314:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007630e
	jmp uuid_0000000000076310
uuid_000000000007630e:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007630b
	jmp uuid_000000000007630d
uuid_000000000007630b:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076308
	jmp uuid_000000000007630a
uuid_0000000000076308:
	movb $1, -1008(%rbp)
uuid_000000000007630a:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007630d:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076310:
	mov -1016(%RBP),%RSP
	add $-1080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076311
	jmp uuid_0000000000076313
uuid_0000000000076311:
	movb $1, -848(%rbp)
uuid_0000000000076313:
	mov -976(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076316:
	mov -864(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076319:
	mov -856(%RBP),%RSP
	add $-1080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076324
	push %RBP
	jmp uuid_0000000000076321
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076320
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076323
uuid_0000000000076321:
uuid_0000000000076323:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_0000000000076326
uuid_0000000000076324:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007631d
	jmp uuid_000000000007631f
uuid_000000000007631d:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007631a
	jmp uuid_000000000007631c
uuid_000000000007631a:
	movq $1, -64(%rbp)
uuid_000000000007631c:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007631f:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
uuid_0000000000076326:
	mov -784(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_0000000000076329
uuid_0000000000076327:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762fc
	jmp uuid_00000000000762fe
uuid_00000000000762fc:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000762f9
	jmp uuid_00000000000762fb
uuid_00000000000762f9:
	movq $1, -64(%rbp)
uuid_00000000000762fb:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_00000000000762fe:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000076329:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007632c
uuid_000000000007632a:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007632c:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007632f
uuid_000000000007632d:
	movq $1, -64(%rbp)
uuid_000000000007632f:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
typeof_CL_ArrowTypeAST:
#call function .lookup : Arrow<Cons<Cons<BTreeIs<AST,Type>,AST>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
ascript_CL_ArrowNilConsTypeAST:
#call function .bind : Arrow<Cons<Cons<Array<BTreeIs<AST,Type>,?>,AST>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007662c
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076629
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076343
	jmp uuid_0000000000076345
uuid_0000000000076343:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076340
	jmp uuid_0000000000076342
uuid_0000000000076340:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007633d
	jmp uuid_000000000007633f
uuid_000000000007633d:
	movb $1, -560(%rbp)
uuid_000000000007633f:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000076342:
	mov -576(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000076345:
	mov -568(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076626
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007634c
	jmp uuid_000000000007634e
uuid_000000000007634c:
	push %RBP
	jmp uuid_0000000000076349
	jmp uuid_000000000007634b
uuid_0000000000076349:
	push %RBP
	jmp uuid_0000000000076346
	jmp uuid_0000000000076348
uuid_0000000000076346:
	movb $1, -816(%rbp)
uuid_0000000000076348:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007634b:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007634e:
	mov -824(%RBP),%RSP
	add $-840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076623
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076355
	jmp uuid_0000000000076357
uuid_0000000000076355:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076352
	jmp uuid_0000000000076354
uuid_0000000000076352:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_000000000007634f
	jmp uuid_0000000000076351
uuid_000000000007634f:
	movb $1, -928(%rbp)
uuid_0000000000076351:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076354:
	mov -944(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076357:
	mov -936(%RBP),%RSP
	add $-1080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076620
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076389
	jmp uuid_000000000007638b
uuid_0000000000076389:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076376
	jmp uuid_0000000000076378
uuid_0000000000076376:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076364
	jmp uuid_0000000000076366
uuid_0000000000076364:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	jmp uuid_0000000000076361
	jmp uuid_0000000000076363
uuid_0000000000076361:
	movb $1, -1360(%rbp)
uuid_0000000000076363:
	mov -1376(%RBP),%RSP
	add $-1400, %RSP
uuid_0000000000076366:
	mov -1368(%RBP),%RSP
	add $-1400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076373
	jmp uuid_0000000000076375
uuid_0000000000076373:
	push %RBP
	mov -1240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007636d
	jmp uuid_000000000007636f
uuid_000000000007636d:
	push %RBP
	jmp uuid_000000000007636a
	jmp uuid_000000000007636c
uuid_000000000007636a:
	push %RBP
	jmp uuid_0000000000076367
	jmp uuid_0000000000076369
uuid_0000000000076367:
	movb $1, -1488(%rbp)
uuid_0000000000076369:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007636c:
	mov -1504(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007636f:
	mov -1496(%RBP),%RSP
	add $-1512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076370
	jmp uuid_0000000000076372
uuid_0000000000076370:
	movb $1, -1264(%rbp)
uuid_0000000000076372:
	mov -1408(%RBP),%RSP
	add $-1512, %RSP
uuid_0000000000076375:
	mov -1280(%RBP),%RSP
	add $-1512, %RSP
uuid_0000000000076378:
	mov -1272(%RBP),%RSP
	add $-1512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076386
	jmp uuid_0000000000076388
uuid_0000000000076386:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076380
	jmp uuid_0000000000076382
uuid_0000000000076380:
	push %RBP
	jmp uuid_000000000007637d
	jmp uuid_000000000007637f
uuid_000000000007637d:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007637a
	jmp uuid_000000000007637c
uuid_000000000007637a:
	movb $1, -1600(%rbp)
uuid_000000000007637c:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007637f:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000076382:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076383
	jmp uuid_0000000000076385
uuid_0000000000076383:
	movb $1, -1168(%rbp)
uuid_0000000000076385:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000076388:
	mov -1184(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007638b:
	mov -1176(%RBP),%RSP
	add $-1632, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007661d
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763c6
	jmp uuid_00000000000763c8
uuid_00000000000763c6:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763b4
	jmp uuid_00000000000763b6
uuid_00000000000763b4:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763ab
	jmp uuid_00000000000763ad
uuid_00000000000763ab:
	push %RBP
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	jmp uuid_00000000000763a8
	jmp uuid_00000000000763aa
uuid_00000000000763a8:
	movb $1, -1912(%rbp)
uuid_00000000000763aa:
	mov -1928(%RBP),%RSP
	add $-1952, %RSP
uuid_00000000000763ad:
	mov -1920(%RBP),%RSP
	add $-1952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763b1
	jmp uuid_00000000000763b3
uuid_00000000000763b1:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000763ae
	jmp uuid_00000000000763b0
uuid_00000000000763ae:
	movb $1, -1816(%rbp)
uuid_00000000000763b0:
	mov -1960(%RBP),%RSP
	add $-2032, %RSP
uuid_00000000000763b3:
	mov -1832(%RBP),%RSP
	add $-2032, %RSP
uuid_00000000000763b6:
	mov -1824(%RBP),%RSP
	add $-2032, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1816(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763c3
	jmp uuid_00000000000763c5
uuid_00000000000763c3:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2112(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763bd
	jmp uuid_00000000000763bf
uuid_00000000000763bd:
	push %RBP
	jmp uuid_00000000000763ba
	jmp uuid_00000000000763bc
uuid_00000000000763ba:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763b7
	jmp uuid_00000000000763b9
uuid_00000000000763b7:
	movb $1, -2120(%rbp)
uuid_00000000000763b9:
	mov -2144(%RBP),%RSP
	add $-2152, %RSP
uuid_00000000000763bc:
	mov -2136(%RBP),%RSP
	add $-2152, %RSP
uuid_00000000000763bf:
	mov -2128(%RBP),%RSP
	add $-2152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763c0
	jmp uuid_00000000000763c2
uuid_00000000000763c0:
	movb $1, -1720(%rbp)
uuid_00000000000763c2:
	mov -2040(%RBP),%RSP
	add $-2152, %RSP
uuid_00000000000763c5:
	mov -1736(%RBP),%RSP
	add $-2152, %RSP
uuid_00000000000763c8:
	mov -1728(%RBP),%RSP
	add $-2152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007661a
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763f5
	jmp uuid_00000000000763f7
uuid_00000000000763f5:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763e2
	jmp uuid_00000000000763e4
uuid_00000000000763e2:
	push %RBP
	jmp uuid_00000000000763df
	jmp uuid_00000000000763e1
uuid_00000000000763df:
	push %RBP
	mov -2264(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000763dc
	jmp uuid_00000000000763de
uuid_00000000000763dc:
	movb $1, -2336(%rbp)
uuid_00000000000763de:
	mov -2360(%RBP),%RSP
	add $-2368, %RSP
uuid_00000000000763e1:
	mov -2352(%RBP),%RSP
	add $-2368, %RSP
uuid_00000000000763e4:
	mov -2344(%RBP),%RSP
	add $-2368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763f2
	jmp uuid_00000000000763f4
uuid_00000000000763f2:
	push %RBP
	mov -2216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763ec
	jmp uuid_00000000000763ee
uuid_00000000000763ec:
	push %RBP
	jmp uuid_00000000000763e9
	jmp uuid_00000000000763eb
uuid_00000000000763e9:
	push %RBP
	mov -2384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2488(%rbp)
	pushq $uuid_00000000000763e5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763e6
	jmp uuid_00000000000763e8
uuid_00000000000763e6:
	movb $1, -2456(%rbp)
uuid_00000000000763e8:
	mov -2480(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000763eb:
	mov -2472(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000763ee:
	mov -2464(%RBP),%RSP
	add $-2488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763ef
	jmp uuid_00000000000763f1
uuid_00000000000763ef:
	movb $1, -2240(%rbp)
uuid_00000000000763f1:
	mov -2376(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000763f4:
	mov -2256(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000763f7:
	mov -2248(%RBP),%RSP
	add $-2488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076617
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076412
	jmp uuid_0000000000076414
uuid_0000000000076412:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763ff
	jmp uuid_0000000000076401
uuid_00000000000763ff:
	push %RBP
	jmp uuid_00000000000763fc
	jmp uuid_00000000000763fe
uuid_00000000000763fc:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000763f9
	jmp uuid_00000000000763fb
uuid_00000000000763f9:
	movb $1, -2672(%rbp)
uuid_00000000000763fb:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_00000000000763fe:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_0000000000076401:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007640f
	jmp uuid_0000000000076411
uuid_000000000007640f:
	push %RBP
	mov -2552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076409
	jmp uuid_000000000007640b
uuid_0000000000076409:
	push %RBP
	jmp uuid_0000000000076406
	jmp uuid_0000000000076408
uuid_0000000000076406:
	push %RBP
	mov -2720(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2824(%rbp)
	pushq $uuid_0000000000076402
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076403
	jmp uuid_0000000000076405
uuid_0000000000076403:
	movb $1, -2792(%rbp)
uuid_0000000000076405:
	mov -2816(%RBP),%RSP
	add $-2824, %RSP
uuid_0000000000076408:
	mov -2808(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007640b:
	mov -2800(%RBP),%RSP
	add $-2824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007640c
	jmp uuid_000000000007640e
uuid_000000000007640c:
	movb $1, -2576(%rbp)
uuid_000000000007640e:
	mov -2712(%RBP),%RSP
	add $-2824, %RSP
uuid_0000000000076411:
	mov -2592(%RBP),%RSP
	add $-2824, %RSP
uuid_0000000000076414:
	mov -2584(%RBP),%RSP
	add $-2824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076614
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2904(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076437
	jmp uuid_0000000000076439
uuid_0000000000076437:
	push %RBP
	mov -2896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076434
	jmp uuid_0000000000076436
uuid_0000000000076434:
	push %RBP
	mov -2888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007642e
	jmp uuid_0000000000076430
uuid_000000000007642e:
	push %RBP
	mov -3072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007642b
	jmp uuid_000000000007642d
uuid_000000000007642b:
	push %RBP
	mov -3064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076425
	jmp uuid_0000000000076427
uuid_0000000000076425:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076422
	jmp uuid_0000000000076424
uuid_0000000000076422:
	push %RBP
	mov -3240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007641c
	jmp uuid_000000000007641e
uuid_000000000007641c:
	push %RBP
	jmp uuid_0000000000076419
	jmp uuid_000000000007641b
uuid_0000000000076419:
	push %RBP
	mov -3368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3472(%rbp)
	pushq $uuid_0000000000076415
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076416
	jmp uuid_0000000000076418
uuid_0000000000076416:
	movb $1, -3440(%rbp)
uuid_0000000000076418:
	mov -3464(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007641b:
	mov -3456(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007641e:
	mov -3448(%RBP),%RSP
	add $-3472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007641f
	jmp uuid_0000000000076421
uuid_000000000007641f:
	movb $1, -3264(%rbp)
uuid_0000000000076421:
	mov -3360(%RBP),%RSP
	add $-3472, %RSP
uuid_0000000000076424:
	mov -3280(%RBP),%RSP
	add $-3472, %RSP
uuid_0000000000076427:
	mov -3272(%RBP),%RSP
	add $-3472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076428
	jmp uuid_000000000007642a
uuid_0000000000076428:
	movb $1, -3088(%rbp)
uuid_000000000007642a:
	mov -3184(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007642d:
	mov -3104(%RBP),%RSP
	add $-3472, %RSP
uuid_0000000000076430:
	mov -3096(%RBP),%RSP
	add $-3472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3088(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076431
	jmp uuid_0000000000076433
uuid_0000000000076431:
	movb $1, -2912(%rbp)
uuid_0000000000076433:
	mov -3008(%RBP),%RSP
	add $-3472, %RSP
uuid_0000000000076436:
	mov -2928(%RBP),%RSP
	add $-3472, %RSP
uuid_0000000000076439:
	mov -2920(%RBP),%RSP
	add $-3472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076611
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -3552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007645b
	jmp uuid_000000000007645d
uuid_000000000007645b:
	push %RBP
	mov -3544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076449
	jmp uuid_000000000007644b
uuid_0000000000076449:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3744(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076440
	jmp uuid_0000000000076442
uuid_0000000000076440:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_000000000007643d
	jmp uuid_000000000007643f
uuid_000000000007643d:
	movb $1, -3752(%rbp)
uuid_000000000007643f:
	mov -3768(%RBP),%RSP
	add $-3792, %RSP
uuid_0000000000076442:
	mov -3760(%RBP),%RSP
	add $-3792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3752(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076446
	jmp uuid_0000000000076448
uuid_0000000000076446:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076443
	jmp uuid_0000000000076445
uuid_0000000000076443:
	movb $1, -3656(%rbp)
uuid_0000000000076445:
	mov -3800(%RBP),%RSP
	add $-3872, %RSP
uuid_0000000000076448:
	mov -3672(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007644b:
	mov -3664(%RBP),%RSP
	add $-3872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076458
	jmp uuid_000000000007645a
uuid_0000000000076458:
	push %RBP
	mov -3536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076452
	jmp uuid_0000000000076454
uuid_0000000000076452:
	push %RBP
	jmp uuid_000000000007644f
	jmp uuid_0000000000076451
uuid_000000000007644f:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3992(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007644c
	jmp uuid_000000000007644e
uuid_000000000007644c:
	movb $1, -3960(%rbp)
uuid_000000000007644e:
	mov -3984(%RBP),%RSP
	add $-3992, %RSP
uuid_0000000000076451:
	mov -3976(%RBP),%RSP
	add $-3992, %RSP
uuid_0000000000076454:
	mov -3968(%RBP),%RSP
	add $-3992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076455
	jmp uuid_0000000000076457
uuid_0000000000076455:
	movb $1, -3560(%rbp)
uuid_0000000000076457:
	mov -3880(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007645a:
	mov -3576(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007645d:
	mov -3568(%RBP),%RSP
	add $-3992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007660e
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764a1
	jmp uuid_00000000000764a3
uuid_00000000000764a1:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007648e
	jmp uuid_0000000000076490
uuid_000000000007648e:
	push %RBP
	jmp uuid_000000000007648b
	jmp uuid_000000000007648d
uuid_000000000007648b:
	movb $1, -4176(%rbp)
uuid_000000000007648d:
	mov -4192(%RBP),%RSP
	add $-4192, %RSP
uuid_0000000000076490:
	mov -4184(%RBP),%RSP
	add $-4192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007649e
	jmp uuid_00000000000764a0
uuid_000000000007649e:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076498
	jmp uuid_000000000007649a
uuid_0000000000076498:
	push %RBP
	jmp uuid_0000000000076495
	jmp uuid_0000000000076497
uuid_0000000000076495:
	push %RBP
	mov -4208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq $uuid_0000000000076491
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076492
	jmp uuid_0000000000076494
uuid_0000000000076492:
	movb $1, -4280(%rbp)
uuid_0000000000076494:
	mov -4304(%RBP),%RSP
	add $-4312, %RSP
uuid_0000000000076497:
	mov -4296(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007649a:
	mov -4288(%RBP),%RSP
	add $-4312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007649b
	jmp uuid_000000000007649d
uuid_000000000007649b:
	movb $1, -4080(%rbp)
uuid_000000000007649d:
	mov -4200(%RBP),%RSP
	add $-4312, %RSP
uuid_00000000000764a0:
	mov -4096(%RBP),%RSP
	add $-4312, %RSP
uuid_00000000000764a3:
	mov -4088(%RBP),%RSP
	add $-4312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4080(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007660b
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764c2
	jmp uuid_00000000000764c4
uuid_00000000000764c2:
	push %RBP
	mov -4384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000764bf
	jmp uuid_00000000000764c1
uuid_00000000000764bf:
	push %RBP
	mov -4376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764b9
	jmp uuid_00000000000764bb
uuid_00000000000764b9:
	push %RBP
	jmp uuid_00000000000764b6
	jmp uuid_00000000000764b8
uuid_00000000000764b6:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	pushq $uuid_00000000000764b2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764b3
	jmp uuid_00000000000764b5
uuid_00000000000764b3:
	movb $1, -4576(%rbp)
uuid_00000000000764b5:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_00000000000764b8:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_00000000000764bb:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764bc
	jmp uuid_00000000000764be
uuid_00000000000764bc:
	movb $1, -4400(%rbp)
uuid_00000000000764be:
	mov -4496(%RBP),%RSP
	add $-4608, %RSP
uuid_00000000000764c1:
	mov -4416(%RBP),%RSP
	add $-4608, %RSP
uuid_00000000000764c4:
	mov -4408(%RBP),%RSP
	add $-4608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076608
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764d5
	jmp uuid_00000000000764d7
uuid_00000000000764d5:
	push %RBP
	mov -4680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000764d2
	jmp uuid_00000000000764d4
uuid_00000000000764d2:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764cc
	jmp uuid_00000000000764ce
uuid_00000000000764cc:
	push %RBP
	jmp uuid_00000000000764c9
	jmp uuid_00000000000764cb
uuid_00000000000764c9:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq $uuid_00000000000764c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764c6
	jmp uuid_00000000000764c8
uuid_00000000000764c6:
	movb $1, -4872(%rbp)
uuid_00000000000764c8:
	mov -4896(%RBP),%RSP
	add $-4904, %RSP
uuid_00000000000764cb:
	mov -4888(%RBP),%RSP
	add $-4904, %RSP
uuid_00000000000764ce:
	mov -4880(%RBP),%RSP
	add $-4904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764cf
	jmp uuid_00000000000764d1
uuid_00000000000764cf:
	movb $1, -4696(%rbp)
uuid_00000000000764d1:
	mov -4792(%RBP),%RSP
	add $-4904, %RSP
uuid_00000000000764d4:
	mov -4712(%RBP),%RSP
	add $-4904, %RSP
uuid_00000000000764d7:
	mov -4704(%RBP),%RSP
	add $-4904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076605
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076536
	jmp uuid_0000000000076538
uuid_0000000000076536:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076533
	jmp uuid_0000000000076535
uuid_0000000000076533:
	push %RBP
	mov -4968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007652d
	jmp uuid_000000000007652f
uuid_000000000007652d:
	push %RBP
	pushq -5136(%RBP)
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	jmp uuid_000000000007652a
	jmp uuid_000000000007652c
uuid_000000000007652a:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076527
	jmp uuid_0000000000076529
uuid_0000000000076527:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076521
	jmp uuid_0000000000076523
uuid_0000000000076521:
	push %RBP
	jmp uuid_000000000007651e
	jmp uuid_0000000000076520
uuid_000000000007651e:
	push %RBP
	mov -5304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007651b
	jmp uuid_000000000007651d
uuid_000000000007651b:
	movb $1, -5376(%rbp)
uuid_000000000007651d:
	mov -5400(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000076520:
	mov -5392(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000076523:
	mov -5384(%RBP),%RSP
	add $-5408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076524
	jmp uuid_0000000000076526
uuid_0000000000076524:
	movb $1, -5168(%rbp)
uuid_0000000000076526:
	mov -5296(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000076529:
	mov -5216(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007652c:
	mov -5184(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007652f:
	mov -5176(%RBP),%RSP
	add $-5408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076530
	jmp uuid_0000000000076532
uuid_0000000000076530:
	movb $1, -4992(%rbp)
uuid_0000000000076532:
	mov -5088(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000076535:
	mov -5008(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000076538:
	mov -5000(%RBP),%RSP
	add $-5408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4992(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076602
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076564
	jmp uuid_0000000000076566
uuid_0000000000076564:
	push %RBP
	mov -5480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076561
	jmp uuid_0000000000076563
uuid_0000000000076561:
	push %RBP
	mov -5472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007655e
	jmp uuid_0000000000076560
uuid_000000000007655e:
	movb $1, -5496(%rbp)
uuid_0000000000076560:
	mov -5592(%RBP),%RSP
	add $-5664, %RSP
uuid_0000000000076563:
	mov -5512(%RBP),%RSP
	add $-5664, %RSP
uuid_0000000000076566:
	mov -5504(%RBP),%RSP
	add $-5664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765ff
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007659a
	jmp uuid_000000000007659c
uuid_000000000007659a:
	push %RBP
	pushq -5720(%RBP)
	pushq -5728(%RBP)
	pushq -5736(%RBP)
	jmp uuid_0000000000076597
	jmp uuid_0000000000076599
uuid_0000000000076597:
	push %RBP
	mov -5712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076594
	jmp uuid_0000000000076596
uuid_0000000000076594:
	push %RBP
	mov -5704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076591
	jmp uuid_0000000000076593
uuid_0000000000076591:
	movb $1, -5752(%rbp)
uuid_0000000000076593:
	mov -5880(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000076596:
	mov -5800(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000076599:
	mov -5768(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007659c:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5752(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765fc
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765d0
	jmp uuid_00000000000765d2
uuid_00000000000765d0:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	jmp uuid_00000000000765cd
	jmp uuid_00000000000765cf
uuid_00000000000765cd:
	push %RBP
	mov -5968(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000765ca
	jmp uuid_00000000000765cc
uuid_00000000000765ca:
	movb $1, -6040(%rbp)
uuid_00000000000765cc:
	mov -6120(%RBP),%RSP
	add $-6128, %RSP
uuid_00000000000765cf:
	mov -6056(%RBP),%RSP
	add $-6128, %RSP
uuid_00000000000765d2:
	mov -6048(%RBP),%RSP
	add $-6128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765f9
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765d9
	jmp uuid_00000000000765db
uuid_00000000000765d9:
	push %RBP
	jmp uuid_00000000000765d6
	jmp uuid_00000000000765d8
uuid_00000000000765d6:
	push %RBP
	mov -6144(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000765d3
	jmp uuid_00000000000765d5
uuid_00000000000765d3:
	movb $1, -6216(%rbp)
uuid_00000000000765d5:
	mov -6240(%RBP),%RSP
	add $-6248, %RSP
uuid_00000000000765d8:
	mov -6232(%RBP),%RSP
	add $-6248, %RSP
uuid_00000000000765db:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765f6
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765eb
	jmp uuid_00000000000765ed
uuid_00000000000765eb:
	push %RBP
	jmp uuid_00000000000765e8
	jmp uuid_00000000000765ea
uuid_00000000000765e8:
	movb $1, -6336(%rbp)
uuid_00000000000765ea:
	mov -6352(%RBP),%RSP
	add $-6352, %RSP
uuid_00000000000765ed:
	mov -6344(%RBP),%RSP
	add $-6352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765f3
	push %RBP
	jmp uuid_00000000000765f0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000765ef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000765f2
uuid_00000000000765f0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765ee
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000765f2:
	mov -6360(%RBP),%RSP
	add $-6360, %RSP
	jmp uuid_00000000000765f5
uuid_00000000000765f3:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000765f5:
	mov -6256(%RBP),%RSP
	add $-6352, %RSP
	jmp uuid_00000000000765f8
uuid_00000000000765f6:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765e5
#call function typeof-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765e2
	jmp uuid_00000000000765e4
uuid_00000000000765e2:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765dc
	jmp uuid_00000000000765de
uuid_00000000000765dc:
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6280(%RBP)
	popq -6272(%RBP)
	popq -6264(%RBP)
uuid_00000000000765de:
	mov -6296(%RBP),%RSP
	add $-6296, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765df
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076586
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000076586
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6312(%rbp)
	pushq -6320(%rbp)
	pushq -6328(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_00000000000765e1
uuid_00000000000765df:
uuid_00000000000765e1:
	mov -6304(%RBP),%RSP
	add $-6304, %RSP
uuid_00000000000765e4:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
	jmp uuid_00000000000765e7
uuid_00000000000765e5:
uuid_00000000000765e7:
	mov -6256(%RBP),%RSP
	add $-6256, %RSP
uuid_00000000000765f8:
	mov -6136(%RBP),%RSP
	add $-6256, %RSP
	jmp uuid_00000000000765fb
uuid_00000000000765f9:
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000765fb:
	mov -5960(%RBP),%RSP
	add $-6152, %RSP
	jmp uuid_00000000000765fe
uuid_00000000000765fc:
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765c2
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_00000000000765c4
uuid_00000000000765c2:
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	push %RBP
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	pushq -6008(%rbp)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq $0
	push %RBP
	mov -6112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765bb
	jmp uuid_00000000000765bd
uuid_00000000000765bb:
	push %RBP
	mov -6104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765a9
	jmp uuid_00000000000765ab
uuid_00000000000765a9:
	push %RBP
	mov -6200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6304(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765a0
	jmp uuid_00000000000765a2
uuid_00000000000765a0:
	push %RBP
	pushq -6280(%RBP)
	pushq -6288(%RBP)
	pushq -6296(%RBP)
	jmp uuid_000000000007659d
	jmp uuid_000000000007659f
uuid_000000000007659d:
	movb $1, -6312(%rbp)
uuid_000000000007659f:
	mov -6328(%RBP),%RSP
	add $-6352, %RSP
uuid_00000000000765a2:
	mov -6320(%RBP),%RSP
	add $-6352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765a6
	jmp uuid_00000000000765a8
uuid_00000000000765a6:
	push %RBP
	mov -6192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000765a3
	jmp uuid_00000000000765a5
uuid_00000000000765a3:
	movb $1, -6216(%rbp)
uuid_00000000000765a5:
	mov -6360(%RBP),%RSP
	add $-6432, %RSP
uuid_00000000000765a8:
	mov -6232(%RBP),%RSP
	add $-6432, %RSP
uuid_00000000000765ab:
	mov -6224(%RBP),%RSP
	add $-6432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765b8
	jmp uuid_00000000000765ba
uuid_00000000000765b8:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000765b2
	jmp uuid_00000000000765b4
uuid_00000000000765b2:
	push %RBP
	jmp uuid_00000000000765af
	jmp uuid_00000000000765b1
uuid_00000000000765af:
	push %RBP
	mov -6448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6552(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765ac
	jmp uuid_00000000000765ae
uuid_00000000000765ac:
	movb $1, -6520(%rbp)
uuid_00000000000765ae:
	mov -6544(%RBP),%RSP
	add $-6552, %RSP
uuid_00000000000765b1:
	mov -6536(%RBP),%RSP
	add $-6552, %RSP
uuid_00000000000765b4:
	mov -6528(%RBP),%RSP
	add $-6552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765b5
	jmp uuid_00000000000765b7
uuid_00000000000765b5:
	movb $1, -6120(%rbp)
uuid_00000000000765b7:
	mov -6440(%RBP),%RSP
	add $-6552, %RSP
uuid_00000000000765ba:
	mov -6136(%RBP),%RSP
	add $-6552, %RSP
uuid_00000000000765bd:
	mov -6128(%RBP),%RSP
	add $-6552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765bf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000765be
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000765c1
uuid_00000000000765bf:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6368(%rbp)
	pushq -6376(%rbp)
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq -6336(%rbp)
	pushq -6344(%rbp)
	pushq -6352(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000765c1:
	mov -6040(%RBP),%RSP
	add $-6552, %RSP
uuid_00000000000765c4:
	mov -5960(%RBP),%RSP
	add $-6552, %RSP
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
	pushq -6560(%rbp)
	pushq -6568(%rbp)
	pushq -6576(%rbp)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000765c7
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c6
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_00000000000765c6
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_00000000000765c9
uuid_00000000000765c7:
uuid_00000000000765c9:
	mov -6608(%RBP),%RSP
	add $-6608, %RSP
uuid_00000000000765fe:
	mov -5672(%RBP),%RSP
	add $-6608, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000076601
uuid_00000000000765ff:
	pushq $3
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076567
	jmp uuid_0000000000076569
uuid_0000000000076567:
	pushq $0
	popq -5672(%RBP)
uuid_0000000000076569:
	mov -5680(%RBP),%RSP
	add $-5680, %RSP
	pushq $4
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007656a
	jmp uuid_000000000007656c
uuid_000000000007656a:
	pushq $3
	popq -5688(%RBP)
uuid_000000000007656c:
	mov -5696(%RBP),%RSP
	add $-5696, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5672(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007656d
	jmp uuid_000000000007656f
uuid_000000000007656d:
	pushq $0
	popq -5688(%RBP)
uuid_000000000007656f:
	mov -5704(%RBP),%RSP
	add $-5704, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function apply-or-cons-and-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076570
	jmp uuid_0000000000076572
uuid_0000000000076570:
#call function implicit-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call implicit_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5728(%RBP)
	popq -5720(%RBP)
	popq -5712(%RBP)
uuid_0000000000076572:
	mov -5736(%RBP),%RSP
	add $-5736, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_0000000000076573
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076576
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000076578
uuid_0000000000076576:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076574
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000076574
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076573
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_0000000000076575
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000076578:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007658e
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000076590
uuid_000000000007658e:
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	push %RBP
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	push %RBP
	mov -5952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007657f
	jmp uuid_0000000000076581
uuid_000000000007657f:
	push %RBP
	jmp uuid_000000000007657c
	jmp uuid_000000000007657e
uuid_000000000007657c:
	push %RBP
	mov -5888(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076579
	jmp uuid_000000000007657b
uuid_0000000000076579:
	movb $1, -5960(%rbp)
uuid_000000000007657b:
	mov -5984(%RBP),%RSP
	add $-5992, %RSP
uuid_000000000007657e:
	mov -5976(%RBP),%RSP
	add $-5992, %RSP
uuid_0000000000076581:
	mov -5968(%RBP),%RSP
	add $-5992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007658b
	push %RBP
	jmp uuid_0000000000076588
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076587
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007658a
uuid_0000000000076588:
uuid_000000000007658a:
	mov -6000(%RBP),%RSP
	add $-6000, %RSP
	mov %RSP, %R14
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007658d
uuid_000000000007658b:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076582
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076583
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5992(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076584
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6008(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076585
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076586
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000076586
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007658d:
	mov -5880(%RBP),%RSP
	add $-6056, %RSP
uuid_0000000000076590:
	mov -5800(%RBP),%RSP
	add $-6056, %RSP
uuid_0000000000076601:
	mov -5416(%RBP),%RSP
	add $-6056, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000076604
uuid_0000000000076602:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5408(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007653d
	jmp uuid_000000000007653f
uuid_000000000007653d:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007653a
	jmp uuid_000000000007653c
uuid_000000000007653a:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076539
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007653c:
	mov -5448(%RBP),%RSP
	add $-5448, %RSP
uuid_000000000007653f:
	mov -5440(%RBP),%RSP
	add $-5448, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076541
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076540
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076543
uuid_0000000000076541:
uuid_0000000000076543:
	mov -5480(%RBP),%RSP
	add $-5480, %RSP
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5472(%RBP)
	popq -5464(%RBP)
	popq -5456(%RBP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076556
	jmp uuid_0000000000076558
uuid_0000000000076556:
	push %RBP
	jmp uuid_0000000000076553
	jmp uuid_0000000000076555
uuid_0000000000076553:
	push %RBP
	mov -5616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007654d
	jmp uuid_000000000007654f
uuid_000000000007654d:
	push %RBP
	jmp uuid_000000000007654a
	jmp uuid_000000000007654c
uuid_000000000007654a:
	push %RBP
	jmp uuid_0000000000076547
	jmp uuid_0000000000076549
uuid_0000000000076547:
	push %RBP
	mov -5696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076544
	jmp uuid_0000000000076546
uuid_0000000000076544:
	movb $1, -5744(%rbp)
uuid_0000000000076546:
	mov -5776(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000076549:
	mov -5768(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007654c:
	mov -5760(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007654f:
	mov -5752(%RBP),%RSP
	add $-5848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076550
	jmp uuid_0000000000076552
uuid_0000000000076550:
	movb $1, -5640(%rbp)
uuid_0000000000076552:
	mov -5664(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000076555:
	mov -5656(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000076558:
	mov -5648(%RBP),%RSP
	add $-5848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007655a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076559
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007655c
uuid_000000000007655a:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007655c:
	mov -5560(%RBP),%RSP
	add $-5848, %RSP
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -5408(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007655d
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007655d
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000076604:
	mov -4912(%RBP),%RSP
	add $-5872, %RSP
	jmp uuid_0000000000076607
uuid_0000000000076605:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764f1
	jmp uuid_00000000000764f3
uuid_00000000000764f1:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764e8
	jmp uuid_00000000000764ea
uuid_00000000000764e8:
	push %RBP
	mov -5040(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764df
	jmp uuid_00000000000764e1
uuid_00000000000764df:
	push %RBP
	mov -5104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5176(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764dc
	jmp uuid_00000000000764de
uuid_00000000000764dc:
	push %RBP
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764d9
	jmp uuid_00000000000764db
uuid_00000000000764d9:
	movb $1, -5120(%rbp)
uuid_00000000000764db:
	mov -5184(%RBP),%RSP
	add $-5208, %RSP
uuid_00000000000764de:
	mov -5136(%RBP),%RSP
	add $-5208, %RSP
uuid_00000000000764e1:
	mov -5128(%RBP),%RSP
	add $-5208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764e5
	jmp uuid_00000000000764e7
uuid_00000000000764e5:
	push %RBP
	jmp uuid_00000000000764e2
	jmp uuid_00000000000764e4
uuid_00000000000764e2:
	movb $1, -5056(%rbp)
uuid_00000000000764e4:
	mov -5216(%RBP),%RSP
	add $-5216, %RSP
uuid_00000000000764e7:
	mov -5072(%RBP),%RSP
	add $-5216, %RSP
uuid_00000000000764ea:
	mov -5064(%RBP),%RSP
	add $-5216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764ee
	jmp uuid_00000000000764f0
uuid_00000000000764ee:
	push %RBP
	mov -4968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5232(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764eb
	jmp uuid_00000000000764ed
uuid_00000000000764eb:
	movb $1, -4992(%rbp)
uuid_00000000000764ed:
	mov -5224(%RBP),%RSP
	add $-5232, %RSP
uuid_00000000000764f0:
	mov -5008(%RBP),%RSP
	add $-5232, %RSP
uuid_00000000000764f3:
	mov -5000(%RBP),%RSP
	add $-5232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4992(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076518
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -5264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007650c
	jmp uuid_000000000007650e
uuid_000000000007650c:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076503
	jmp uuid_0000000000076505
uuid_0000000000076503:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764fa
	jmp uuid_00000000000764fc
uuid_00000000000764fa:
	push %RBP
	mov -5384(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764f7
	jmp uuid_00000000000764f9
uuid_00000000000764f7:
	push %RBP
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	jmp uuid_00000000000764f4
	jmp uuid_00000000000764f6
uuid_00000000000764f4:
	movb $1, -5400(%rbp)
uuid_00000000000764f6:
	mov -5464(%RBP),%RSP
	add $-5488, %RSP
uuid_00000000000764f9:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_00000000000764fc:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076500
	jmp uuid_0000000000076502
uuid_0000000000076500:
	push %RBP
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764fd
	jmp uuid_00000000000764ff
uuid_00000000000764fd:
	movb $1, -5336(%rbp)
uuid_00000000000764ff:
	mov -5496(%RBP),%RSP
	add $-5520, %RSP
uuid_0000000000076502:
	mov -5352(%RBP),%RSP
	add $-5520, %RSP
uuid_0000000000076505:
	mov -5344(%RBP),%RSP
	add $-5520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076509
	jmp uuid_000000000007650b
uuid_0000000000076509:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5536(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076506
	jmp uuid_0000000000076508
uuid_0000000000076506:
	movb $1, -5272(%rbp)
uuid_0000000000076508:
	mov -5528(%RBP),%RSP
	add $-5536, %RSP
uuid_000000000007650b:
	mov -5288(%RBP),%RSP
	add $-5536, %RSP
uuid_000000000007650e:
	mov -5280(%RBP),%RSP
	add $-5536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076515
	push %RBP
	jmp uuid_0000000000076512
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076511
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076514
uuid_0000000000076512:
uuid_0000000000076514:
	mov -5544(%RBP),%RSP
	add $-5544, %RSP
	jmp uuid_0000000000076517
uuid_0000000000076515:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007650f
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007650f
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -4928(%RBP)
	popq -4920(%RBP)
	popq -4912(%RBP)
uuid_0000000000076517:
	mov -5240(%RBP),%RSP
	add $-5536, %RSP
	jmp uuid_000000000007651a
uuid_0000000000076518:
uuid_000000000007651a:
	mov -4960(%RBP),%RSP
	add $-5232, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076607:
	mov -4616(%RBP),%RSP
	add $-5232, %RSP
	jmp uuid_000000000007660a
uuid_0000000000076608:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq $1
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007660a:
	mov -4320(%RBP),%RSP
	add $-4608, %RSP
	jmp uuid_000000000007660d
uuid_000000000007660b:
#call function as-constant : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000764a4
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call as_SB_constant_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq $0
	push %RBP
	mov -4488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000764ab
	jmp uuid_00000000000764ad
uuid_00000000000764ab:
	push %RBP
	jmp uuid_00000000000764a8
	jmp uuid_00000000000764aa
uuid_00000000000764a8:
	push %RBP
	mov -4472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000764a5
	jmp uuid_00000000000764a7
uuid_00000000000764a5:
	movb $1, -4496(%rbp)
uuid_00000000000764a7:
	mov -4520(%RBP),%RSP
	add $-4592, %RSP
uuid_00000000000764aa:
	mov -4512(%RBP),%RSP
	add $-4592, %RSP
uuid_00000000000764ad:
	mov -4504(%RBP),%RSP
	add $-4592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000764af
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000764ae
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000764b1
uuid_00000000000764af:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000764b1:
	mov -4416(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007660d:
	mov -4000(%RBP),%RSP
	add $-4592, %RSP
	jmp uuid_0000000000076610
uuid_000000000007660e:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	push %RBP
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076464
	jmp uuid_0000000000076466
uuid_0000000000076464:
	push %RBP
	jmp uuid_0000000000076461
	jmp uuid_0000000000076463
uuid_0000000000076461:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007645e
	jmp uuid_0000000000076460
uuid_000000000007645e:
	movb $1, -4176(%rbp)
uuid_0000000000076460:
	mov -4200(%RBP),%RSP
	add $-4208, %RSP
uuid_0000000000076463:
	mov -4192(%RBP),%RSP
	add $-4208, %RSP
uuid_0000000000076466:
	mov -4184(%RBP),%RSP
	add $-4208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007647b
	push %RBP
	jmp uuid_0000000000076478
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076477
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007647a
uuid_0000000000076478:
uuid_000000000007647a:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	jmp uuid_000000000007647d
uuid_000000000007647b:
	push %RBP
#call function is-reg8 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076468
	jmp uuid_000000000007646a
uuid_0000000000076468:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076467
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007646a:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	push %RBP
#call function is-reg16 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007646c
	jmp uuid_000000000007646e
uuid_000000000007646c:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007646b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007646e:
	mov -4224(%RBP),%RSP
	add $-4224, %RSP
	push %RBP
#call function is-reg32 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076470
	jmp uuid_0000000000076472
uuid_0000000000076470:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007646f
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_0000000000076472:
	mov -4232(%RBP),%RSP
	add $-4232, %RSP
	push %RBP
#call function is-reg64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076474
	jmp uuid_0000000000076476
uuid_0000000000076474:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076473
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_0000000000076476:
	mov -4240(%RBP),%RSP
	add $-4240, %RSP
uuid_000000000007647d:
	mov -4096(%RBP),%RSP
	add $-4240, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076488
	jmp uuid_000000000007648a
uuid_0000000000076488:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007647e
	jmp uuid_0000000000076480
uuid_000000000007647e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_0000000000076480:
	mov -4280(%RBP),%RSP
	add $-4280, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq $uuid_0000000000076481
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076485
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076482
	jmp uuid_0000000000076484
uuid_0000000000076482:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_0000000000076484:
	mov -4320(%RBP),%RSP
	add $-4320, %RSP
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
	jmp uuid_0000000000076487
uuid_0000000000076485:
uuid_0000000000076487:
	mov -4288(%RBP),%RSP
	add $-4288, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007648a:
	mov -4248(%RBP),%RSP
	add $-4288, %RSP
uuid_0000000000076610:
	mov -3480(%RBP),%RSP
	add $-4288, %RSP
	jmp uuid_0000000000076613
uuid_0000000000076611:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007643a
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	mov %RSP, %R14
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007643c
uuid_000000000007643a:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	pushq -3592(%rbp)
	pushq -3600(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_000000000007643c:
	mov -3480(%RBP),%RSP
	add $-3720, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076613:
	mov -2832(%RBP),%RSP
	add $-3720, %RSP
	jmp uuid_0000000000076616
uuid_0000000000076614:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076616:
	mov -2496(%RBP),%RSP
	add $-2824, %RSP
	jmp uuid_0000000000076619
uuid_0000000000076617:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2368(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000763f8
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076619:
	mov -2160(%RBP),%RSP
	add $-2488, %RSP
	jmp uuid_000000000007661c
uuid_000000000007661a:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq $0
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763d9
	jmp uuid_00000000000763db
uuid_00000000000763d9:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763c9
	jmp uuid_00000000000763cb
uuid_00000000000763c9:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	movq -2240(%rbp), %r15
	movq %r15, -1952(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -1944(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -1936(%rbp)
uuid_00000000000763cb:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq $0
	push %RBP
	mov -2392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000763d2
	jmp uuid_00000000000763d4
uuid_00000000000763d2:
	push %RBP
	mov -2384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000763cf
	jmp uuid_00000000000763d1
uuid_00000000000763cf:
	push %RBP
	mov -2376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000763cc
	jmp uuid_00000000000763ce
uuid_00000000000763cc:
	movb $1, -2400(%rbp)
uuid_00000000000763ce:
	mov -2496(%RBP),%RSP
	add $-2568, %RSP
uuid_00000000000763d1:
	mov -2416(%RBP),%RSP
	add $-2568, %RSP
uuid_00000000000763d4:
	mov -2408(%RBP),%RSP
	add $-2568, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763d6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000763d5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000763d8
uuid_00000000000763d6:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000763d8:
	mov -2320(%RBP),%RSP
	add $-2568, %RSP
uuid_00000000000763db:
	mov -2184(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007661c:
	mov -1640(%RBP),%RSP
	add $-2568, %RSP
	jmp uuid_000000000007661f
uuid_000000000007661d:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007639b
	jmp uuid_000000000007639d
uuid_000000000007639b:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076392
	jmp uuid_0000000000076394
uuid_0000000000076392:
	push %RBP
	jmp uuid_000000000007638f
	jmp uuid_0000000000076391
uuid_000000000007638f:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007638c
	jmp uuid_000000000007638e
uuid_000000000007638c:
	movb $1, -1888(%rbp)
uuid_000000000007638e:
	mov -1912(%RBP),%RSP
	add $-1984, %RSP
uuid_0000000000076391:
	mov -1904(%RBP),%RSP
	add $-1984, %RSP
uuid_0000000000076394:
	mov -1896(%RBP),%RSP
	add $-1984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076398
	jmp uuid_000000000007639a
uuid_0000000000076398:
	push %RBP
	jmp uuid_0000000000076395
	jmp uuid_0000000000076397
uuid_0000000000076395:
	movb $1, -1792(%rbp)
uuid_0000000000076397:
	mov -1992(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007639a:
	mov -1808(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007639d:
	mov -1800(%RBP),%RSP
	add $-1992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763a5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000763a4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000763a7
uuid_00000000000763a5:
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007639e
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_00000000000763a0
uuid_000000000007639e:
uuid_00000000000763a0:
	mov -2000(%RBP),%RSP
	add $-2000, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000763a1
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000763a3
uuid_00000000000763a1:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
uuid_00000000000763a3:
	mov -2032(%RBP),%RSP
	add $-2032, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000763a7:
	mov -1712(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007661f:
	mov -1088(%RBP),%RSP
	add $-2032, %RSP
	jmp uuid_0000000000076622
uuid_0000000000076620:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007635e
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007635b
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076358
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076359
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000076359
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007635d
uuid_000000000007635b:
uuid_000000000007635d:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_0000000000076360
uuid_000000000007635e:
uuid_0000000000076360:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000076622:
	mov -848(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_0000000000076625
uuid_0000000000076623:
uuid_0000000000076625:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000076628
uuid_0000000000076626:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_0000000000076628:
	mov -480(%RBP),%RSP
	add $-848, %RSP
	jmp uuid_000000000007662b
uuid_0000000000076629:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007662b:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007662e
uuid_000000000007662c:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007662e:
	mov -320(%RBP),%RSP
	add $-392, %RSP
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007662f
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000076631
uuid_000000000007662f:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076586
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000076586
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000076631:
	mov -400(%RBP),%RSP
	add $-424, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $240, %rsp
	ret
add_SB_alias_CL_ArrowNilConsTypeConsStringString:
#call function cons : Arrow<Cons<Tuple<Tuple<String,String>,Type>,List<Tuple<Tuple<String,String>,Type>>>,List<Tuple<Tuple<String,String>,Type>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $48, %rsp
	ret
find_SB_alias_CL_ArrowStringConsTypeString:
	pushq -8(%rbp)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000076691:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076692
	jmp uuid_0000000000076693
uuid_0000000000076692:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076656
	jmp uuid_0000000000076658
uuid_0000000000076656:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076653
	jmp uuid_0000000000076655
uuid_0000000000076653:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_0000000000076650
	jmp uuid_0000000000076652
uuid_0000000000076650:
	movb $1, -280(%rbp)
uuid_0000000000076652:
	mov -376(%RBP),%RSP
	add $-432, %RSP
uuid_0000000000076655:
	mov -296(%RBP),%RSP
	add $-432, %RSP
uuid_0000000000076658:
	mov -288(%RBP),%RSP
	add $-432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007668e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007668d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076690
uuid_000000000007668e:
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	push %RBP
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076683
	jmp uuid_0000000000076685
uuid_0000000000076683:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076671
	jmp uuid_0000000000076673
uuid_0000000000076671:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076668
	jmp uuid_000000000007666a
uuid_0000000000076668:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007665f
	jmp uuid_0000000000076661
uuid_000000000007665f:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007665c
	jmp uuid_000000000007665e
uuid_000000000007665c:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_0000000000076659
	jmp uuid_000000000007665b
uuid_0000000000076659:
	movb $1, -736(%rbp)
uuid_000000000007665b:
	mov -800(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007665e:
	mov -752(%RBP),%RSP
	add $-824, %RSP
uuid_0000000000076661:
	mov -744(%RBP),%RSP
	add $-824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076665
	jmp uuid_0000000000076667
uuid_0000000000076665:
	push %RBP
	jmp uuid_0000000000076662
	jmp uuid_0000000000076664
uuid_0000000000076662:
	movb $1, -672(%rbp)
uuid_0000000000076664:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000076667:
	mov -688(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007666a:
	mov -680(%RBP),%RSP
	add $-832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007666e
	jmp uuid_0000000000076670
uuid_000000000007666e:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007666b
	jmp uuid_000000000007666d
uuid_000000000007666b:
	movb $1, -608(%rbp)
uuid_000000000007666d:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_0000000000076670:
	mov -624(%RBP),%RSP
	add $-848, %RSP
uuid_0000000000076673:
	mov -616(%RBP),%RSP
	add $-848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076680
	jmp uuid_0000000000076682
uuid_0000000000076680:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007667a
	jmp uuid_000000000007667c
uuid_000000000007667a:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076677
	jmp uuid_0000000000076679
uuid_0000000000076677:
	push %RBP
	mov -864(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076674
	jmp uuid_0000000000076676
uuid_0000000000076674:
	movb $1, -888(%rbp)
uuid_0000000000076676:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000076679:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007667c:
	mov -896(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007667d
	jmp uuid_000000000007667f
uuid_000000000007667d:
	movb $1, -560(%rbp)
uuid_000000000007667f:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000076682:
	mov -576(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000076685:
	mov -568(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007668a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076689
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007668c
uuid_000000000007668a:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076686
	jmp uuid_0000000000076688
uuid_0000000000076686:
	movq -912(%rbp), %r15
	movq %r15, -48(%rbp)
	mov -912(%rbp), %r15
	mov %r15, -48(%rbp)
uuid_0000000000076688:
	mov -936(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007668c:
	mov -496(%RBP),%RSP
	add $-936, %RSP
	movq -368(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_0000000000076690:
	mov -200(%RBP),%RSP
	add $-936, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000076691
uuid_0000000000076693:
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
find_SB_alias_SB_type_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $3
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_00000000000766c9:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000766ca
	jmp uuid_00000000000766cb
uuid_00000000000766ca:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000766a6
	jmp uuid_00000000000766a8
uuid_00000000000766a6:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000766a3
	jmp uuid_00000000000766a5
uuid_00000000000766a3:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	jmp uuid_00000000000766a0
	jmp uuid_00000000000766a2
uuid_00000000000766a0:
	movb $1, -272(%rbp)
uuid_00000000000766a2:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_00000000000766a5:
	mov -288(%RBP),%RSP
	add $-424, %RSP
uuid_00000000000766a8:
	mov -280(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000766c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000766c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000766c8
uuid_00000000000766c6:
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000766b8
	jmp uuid_00000000000766ba
uuid_00000000000766b8:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_00000000000766b5
	jmp uuid_00000000000766b7
uuid_00000000000766b5:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000766af
	jmp uuid_00000000000766b1
uuid_00000000000766af:
	push %RBP
	mov -616(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000766ac
	jmp uuid_00000000000766ae
uuid_00000000000766ac:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000766a9
	jmp uuid_00000000000766ab
uuid_00000000000766a9:
	movb $1, -632(%rbp)
uuid_00000000000766ab:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_00000000000766ae:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_00000000000766b1:
	mov -640(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000766b2
	jmp uuid_00000000000766b4
uuid_00000000000766b2:
	movb $1, -552(%rbp)
uuid_00000000000766b4:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_00000000000766b7:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_00000000000766ba:
	mov -560(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000766c2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000766c1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000766c4
uuid_00000000000766c2:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000766be
	jmp uuid_00000000000766c0
uuid_00000000000766be:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000766bb
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	jmp uuid_00000000000766bd
uuid_00000000000766bb:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000766bd:
	mov -688(%RBP),%RSP
	add $-688, %RSP
uuid_00000000000766c0:
	mov -680(%RBP),%RSP
	add $-688, %RSP
uuid_00000000000766c4:
	mov -488(%RBP),%RSP
	add $-688, %RSP
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_00000000000766c8:
	mov -192(%RBP),%RSP
	add $-688, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000766c9
uuid_00000000000766cb:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_class_SB_exists_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>,Tuple<Tuple<String,U64>,U64>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_as_SB_special_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_special_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
index_SB_lone_SB_tag_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_lone_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64Type:
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $uuid_0000000000076718
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function global-is-seen : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call global_SB_is_SB_seen_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007671b
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007671d
uuid_000000000007671b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076719
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007671d:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
global_SB_is_SB_seen_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
has_SB_only_SB_child_CL_ArrowNilConsStringString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,String>,?>,String>,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
get_SB_only_SB_child_CL_ArrowStringString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,String>,String>,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $uuid_0000000000075fd2
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_of_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
size_SB_of_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076758
	jmp uuid_000000000007675a
uuid_0000000000076758:
	push %RBP
	jmp uuid_0000000000076755
	jmp uuid_0000000000076757
uuid_0000000000076755:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076752
	jmp uuid_0000000000076754
uuid_0000000000076752:
	movb $1, -104(%rbp)
uuid_0000000000076754:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000076757:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007675a:
	mov -112(%RBP),%RSP
	add $-136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076760
	push %RBP
	jmp uuid_000000000007675d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007675c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007675f
uuid_000000000007675d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007675b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007675f:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000076762
uuid_0000000000076760:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000076762:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
class_SB_of_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767a2
	jmp uuid_00000000000767a4
uuid_00000000000767a2:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076798
	jmp uuid_000000000007679a
uuid_0000000000076798:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076795
	jmp uuid_0000000000076797
uuid_0000000000076795:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007678f
	jmp uuid_0000000000076791
uuid_000000000007678f:
	push %RBP
	jmp uuid_000000000007678c
	jmp uuid_000000000007678e
uuid_000000000007678c:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076789
	jmp uuid_000000000007678b
uuid_0000000000076789:
	movb $1, -304(%rbp)
uuid_000000000007678b:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007678e:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000076791:
	mov -312(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076792
	jmp uuid_0000000000076794
uuid_0000000000076792:
	movb $1, -208(%rbp)
uuid_0000000000076794:
	mov -272(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000076797:
	mov -224(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007679a:
	mov -216(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007679f
	jmp uuid_00000000000767a1
uuid_000000000007679f:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $uuid_000000000007679b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007679c
	jmp uuid_000000000007679e
uuid_000000000007679c:
	movb $1, -144(%rbp)
uuid_000000000007679e:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_00000000000767a1:
	mov -160(%RBP),%RSP
	add $-352, %RSP
uuid_00000000000767a4:
	mov -152(%RBP),%RSP
	add $-352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767c3
	push %RBP
	jmp uuid_00000000000767c0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000767bf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000767c2
uuid_00000000000767c0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000767be
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000767c2:
	mov -360(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_00000000000767c5
uuid_00000000000767c3:
#call function fields-of-tag : Arrow<String,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767ab
	jmp uuid_00000000000767ad
uuid_00000000000767ab:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767a8
	jmp uuid_00000000000767aa
uuid_00000000000767a8:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767a5
	jmp uuid_00000000000767a7
uuid_00000000000767a5:
	movb $1, -480(%rbp)
uuid_00000000000767a7:
	mov -528(%RBP),%RSP
	add $-552, %RSP
uuid_00000000000767aa:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_00000000000767ad:
	mov -488(%RBP),%RSP
	add $-552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767bb
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767b4
	jmp uuid_00000000000767b6
uuid_00000000000767b4:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_00000000000767b1
	jmp uuid_00000000000767b3
uuid_00000000000767b1:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_00000000000767ae
	jmp uuid_00000000000767b0
uuid_00000000000767ae:
	movb $1, -624(%rbp)
uuid_00000000000767b0:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_00000000000767b3:
	mov -640(%RBP),%RSP
	add $-696, %RSP
uuid_00000000000767b6:
	mov -632(%RBP),%RSP
	add $-696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767b8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000767b7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000767ba
uuid_00000000000767b8:
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_00000000000767ba:
	mov -560(%RBP),%RSP
	add $-696, %RSP
	jmp uuid_00000000000767bd
uuid_00000000000767bb:
uuid_00000000000767bd:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_00000000000767c5:
	mov -112(%RBP),%RSP
	add $-552, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $uuid_00000000000767c6
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000764a4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076584
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f96
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
set_SB_type_SB_fields_CL_ArrowNilConsTypeType:
	pushq $uuid_0000000000075fd2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767db
	jmp uuid_00000000000767dd
uuid_00000000000767db:
	push %RBP
	jmp uuid_00000000000767d8
	jmp uuid_00000000000767da
uuid_00000000000767d8:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000767d5
	jmp uuid_00000000000767d7
uuid_00000000000767d5:
	movb $1, -128(%rbp)
uuid_00000000000767d7:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_00000000000767da:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_00000000000767dd:
	mov -136(%RBP),%RSP
	add $-160, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767e3
	push %RBP
	jmp uuid_00000000000767e0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000767df
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000767e2
uuid_00000000000767e0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000767de
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000767e2:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_00000000000767e5
uuid_00000000000767e3:
	movq -160(%rbp), %r15
	movq %r15, -64(%rbp)
	mov -160(%rbp), %r15
	mov %r15, -64(%rbp)
uuid_00000000000767e5:
	mov -96(%RBP),%RSP
	add $-160, %RSP
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -64(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
get_SB_vararg_SB_inner_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767ec
	jmp uuid_00000000000767ee
uuid_00000000000767ec:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000767e9
	jmp uuid_00000000000767eb
uuid_00000000000767e9:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000767e6
	jmp uuid_00000000000767e8
uuid_00000000000767e6:
	movb $1, -120(%rbp)
uuid_00000000000767e8:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_00000000000767eb:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_00000000000767ee:
	mov -128(%RBP),%RSP
	add $-192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007680e
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076804
	jmp uuid_0000000000076806
uuid_0000000000076804:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000767fb
	jmp uuid_00000000000767fd
uuid_00000000000767fb:
	push %RBP
	jmp uuid_00000000000767f8
	jmp uuid_00000000000767fa
uuid_00000000000767f8:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	jmp uuid_00000000000767f5
	jmp uuid_00000000000767f7
uuid_00000000000767f5:
	movb $1, -296(%rbp)
uuid_00000000000767f7:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_00000000000767fa:
	mov -312(%RBP),%RSP
	add $-344, %RSP
uuid_00000000000767fd:
	mov -304(%RBP),%RSP
	add $-344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076801
	jmp uuid_0000000000076803
uuid_0000000000076801:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767fe
	jmp uuid_0000000000076800
uuid_00000000000767fe:
	movb $1, -232(%rbp)
uuid_0000000000076800:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000076803:
	mov -248(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000076806:
	mov -240(%RBP),%RSP
	add $-360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007680b
	push %RBP
	jmp uuid_0000000000076808
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076807
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007680a
uuid_0000000000076808:
uuid_000000000007680a:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007680d
uuid_000000000007680b:
	movq -344(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007680d:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_0000000000076810
uuid_000000000007680e:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767ef
	jmp uuid_00000000000767f1
uuid_00000000000767ef:
	movq -192(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_00000000000767f1:
	mov -200(%RBP),%RSP
	add $-200, %RSP
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000767f2
	jmp uuid_00000000000767f4
uuid_00000000000767f2:
	movq -160(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_00000000000767f4:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_0000000000076810:
	mov -88(%RBP),%RSP
	add $-208, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,U8>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU8ConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
is_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076817
	jmp uuid_0000000000076819
uuid_0000000000076817:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076814
	jmp uuid_0000000000076816
uuid_0000000000076814:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076811
	jmp uuid_0000000000076813
uuid_0000000000076811:
	movb $1, -104(%rbp)
uuid_0000000000076813:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000076816:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000076819:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076842
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076820
	jmp uuid_0000000000076822
uuid_0000000000076820:
	push %RBP
	jmp uuid_000000000007681d
	jmp uuid_000000000007681f
uuid_000000000007681d:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000076582
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007681a
	jmp uuid_000000000007681c
uuid_000000000007681a:
	movb $1, -216(%rbp)
uuid_000000000007681c:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007681f:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000076822:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007683f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076829
	jmp uuid_000000000007682b
uuid_0000000000076829:
	push %RBP
	jmp uuid_0000000000076826
	jmp uuid_0000000000076828
uuid_0000000000076826:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076823
	jmp uuid_0000000000076825
uuid_0000000000076823:
	movb $1, -288(%rbp)
uuid_0000000000076825:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000076828:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007682b:
	mov -296(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007683c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076832
	jmp uuid_0000000000076834
uuid_0000000000076832:
	push %RBP
	jmp uuid_000000000007682f
	jmp uuid_0000000000076831
uuid_000000000007682f:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007682c
	jmp uuid_000000000007682e
uuid_000000000007682c:
	movb $1, -360(%rbp)
uuid_000000000007682e:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000076831:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000076834:
	mov -368(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076839
	push %RBP
	jmp uuid_0000000000076836
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076835
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076838
uuid_0000000000076836:
uuid_0000000000076838:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007683b
uuid_0000000000076839:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007683b:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007683e
uuid_000000000007683c:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007683e:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_0000000000076841
uuid_000000000007683f:
	movq $1, -40(%rbp)
uuid_0000000000076841:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000076844
uuid_0000000000076842:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000076844:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_simple_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007684b
	jmp uuid_000000000007684d
uuid_000000000007684b:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076848
	jmp uuid_000000000007684a
uuid_0000000000076848:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076845
	jmp uuid_0000000000076847
uuid_0000000000076845:
	movb $1, -104(%rbp)
uuid_0000000000076847:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007684a:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007684d:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007685e
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076854
	jmp uuid_0000000000076856
uuid_0000000000076854:
	push %RBP
	jmp uuid_0000000000076851
	jmp uuid_0000000000076853
uuid_0000000000076851:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000076582
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007684e
	jmp uuid_0000000000076850
uuid_000000000007684e:
	movb $1, -216(%rbp)
uuid_0000000000076850:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000076853:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000076856:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007685b
	push %RBP
	jmp uuid_0000000000076858
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076857
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007685a
uuid_0000000000076858:
uuid_000000000007685a:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007685d
uuid_000000000007685b:
	movq $1, -40(%rbp)
uuid_000000000007685d:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000076860
uuid_000000000007685e:
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000076860:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_tag_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076867
	jmp uuid_0000000000076869
uuid_0000000000076867:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076864
	jmp uuid_0000000000076866
uuid_0000000000076864:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076861
	jmp uuid_0000000000076863
uuid_0000000000076861:
	movb $1, -104(%rbp)
uuid_0000000000076863:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000076866:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000076869:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007687a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076870
	jmp uuid_0000000000076872
uuid_0000000000076870:
	push %RBP
	jmp uuid_000000000007686d
	jmp uuid_000000000007686f
uuid_000000000007686d:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007679b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007686a
	jmp uuid_000000000007686c
uuid_000000000007686a:
	movb $1, -216(%rbp)
uuid_000000000007686c:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007686f:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000076872:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076877
	push %RBP
	jmp uuid_0000000000076874
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076873
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076876
uuid_0000000000076874:
uuid_0000000000076876:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000076879
uuid_0000000000076877:
	movq $1, -40(%rbp)
uuid_0000000000076879:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007687c
uuid_000000000007687a:
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007687c:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_open_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076913
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076880
	jmp uuid_0000000000076882
uuid_0000000000076880:
	push %RBP
	jmp uuid_000000000007687d
	jmp uuid_000000000007687f
uuid_000000000007687d:
	movb $1, -136(%rbp)
uuid_000000000007687f:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000076882:
	mov -144(%RBP),%RSP
	add $-152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076910
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076889
	jmp uuid_000000000007688b
uuid_0000000000076889:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076886
	jmp uuid_0000000000076888
uuid_0000000000076886:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076883
	jmp uuid_0000000000076885
uuid_0000000000076883:
	movb $1, -192(%rbp)
uuid_0000000000076885:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000076888:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007688b:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007690d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768aa
	jmp uuid_00000000000768ac
uuid_00000000000768aa:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768a1
	jmp uuid_00000000000768a3
uuid_00000000000768a1:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076898
	jmp uuid_000000000007689a
uuid_0000000000076898:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076895
	jmp uuid_0000000000076897
uuid_0000000000076895:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076892
	jmp uuid_0000000000076894
uuid_0000000000076892:
	movb $1, -432(%rbp)
uuid_0000000000076894:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_0000000000076897:
	mov -448(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007689a:
	mov -440(%RBP),%RSP
	add $-520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007689e
	jmp uuid_00000000000768a0
uuid_000000000007689e:
	push %RBP
	jmp uuid_000000000007689b
	jmp uuid_000000000007689d
uuid_000000000007689b:
	movb $1, -368(%rbp)
uuid_000000000007689d:
	mov -528(%RBP),%RSP
	add $-528, %RSP
uuid_00000000000768a0:
	mov -384(%RBP),%RSP
	add $-528, %RSP
uuid_00000000000768a3:
	mov -376(%RBP),%RSP
	add $-528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768a7
	jmp uuid_00000000000768a9
uuid_00000000000768a7:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768a4
	jmp uuid_00000000000768a6
uuid_00000000000768a4:
	movb $1, -304(%rbp)
uuid_00000000000768a6:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_00000000000768a9:
	mov -320(%RBP),%RSP
	add $-544, %RSP
uuid_00000000000768ac:
	mov -312(%RBP),%RSP
	add $-544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007690a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768c5
	jmp uuid_00000000000768c7
uuid_00000000000768c5:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768bc
	jmp uuid_00000000000768be
uuid_00000000000768bc:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768b3
	jmp uuid_00000000000768b5
uuid_00000000000768b3:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768b0
	jmp uuid_00000000000768b2
uuid_00000000000768b0:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_00000000000768ad
	jmp uuid_00000000000768af
uuid_00000000000768ad:
	movb $1, -712(%rbp)
uuid_00000000000768af:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_00000000000768b2:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_00000000000768b5:
	mov -720(%RBP),%RSP
	add $-800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768b9
	jmp uuid_00000000000768bb
uuid_00000000000768b9:
	push %RBP
	jmp uuid_00000000000768b6
	jmp uuid_00000000000768b8
uuid_00000000000768b6:
	movb $1, -648(%rbp)
uuid_00000000000768b8:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_00000000000768bb:
	mov -664(%RBP),%RSP
	add $-808, %RSP
uuid_00000000000768be:
	mov -656(%RBP),%RSP
	add $-808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768c2
	jmp uuid_00000000000768c4
uuid_00000000000768c2:
	push %RBP
	mov -560(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768bf
	jmp uuid_00000000000768c1
uuid_00000000000768bf:
	movb $1, -584(%rbp)
uuid_00000000000768c1:
	mov -816(%RBP),%RSP
	add $-824, %RSP
uuid_00000000000768c4:
	mov -600(%RBP),%RSP
	add $-824, %RSP
uuid_00000000000768c7:
	mov -592(%RBP),%RSP
	add $-824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076907
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768e1
	jmp uuid_00000000000768e3
uuid_00000000000768e1:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768d7
	jmp uuid_00000000000768d9
uuid_00000000000768d7:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768ce
	jmp uuid_00000000000768d0
uuid_00000000000768ce:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768cb
	jmp uuid_00000000000768cd
uuid_00000000000768cb:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_00000000000768c8
	jmp uuid_00000000000768ca
uuid_00000000000768c8:
	movb $1, -992(%rbp)
uuid_00000000000768ca:
	mov -1056(%RBP),%RSP
	add $-1080, %RSP
uuid_00000000000768cd:
	mov -1008(%RBP),%RSP
	add $-1080, %RSP
uuid_00000000000768d0:
	mov -1000(%RBP),%RSP
	add $-1080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768d4
	jmp uuid_00000000000768d6
uuid_00000000000768d4:
	push %RBP
	jmp uuid_00000000000768d1
	jmp uuid_00000000000768d3
uuid_00000000000768d1:
	movb $1, -928(%rbp)
uuid_00000000000768d3:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_00000000000768d6:
	mov -944(%RBP),%RSP
	add $-1088, %RSP
uuid_00000000000768d9:
	mov -936(%RBP),%RSP
	add $-1088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768de
	jmp uuid_00000000000768e0
uuid_00000000000768de:
	push %RBP
	mov -840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_00000000000768da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768db
	jmp uuid_00000000000768dd
uuid_00000000000768db:
	movb $1, -864(%rbp)
uuid_00000000000768dd:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_00000000000768e0:
	mov -880(%RBP),%RSP
	add $-1104, %RSP
uuid_00000000000768e3:
	mov -872(%RBP),%RSP
	add $-1104, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076904
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768ea
	jmp uuid_00000000000768ec
uuid_00000000000768ea:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000768e7
	jmp uuid_00000000000768e9
uuid_00000000000768e7:
	push %RBP
	jmp uuid_00000000000768e4
	jmp uuid_00000000000768e6
uuid_00000000000768e4:
	movb $1, -1144(%rbp)
uuid_00000000000768e6:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
uuid_00000000000768e9:
	mov -1160(%RBP),%RSP
	add $-1208, %RSP
uuid_00000000000768ec:
	mov -1152(%RBP),%RSP
	add $-1208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076901
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076900
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076903
uuid_0000000000076901:
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
uuid_00000000000768fd:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768fe
	jmp uuid_00000000000768ff
uuid_00000000000768fe:
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	push %RBP
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000768f3
	jmp uuid_00000000000768f5
uuid_00000000000768f3:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000768f0
	jmp uuid_00000000000768f2
uuid_00000000000768f0:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_00000000000768ed
	jmp uuid_00000000000768ef
uuid_00000000000768ed:
	movb $1, -1344(%rbp)
uuid_00000000000768ef:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_00000000000768f2:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_00000000000768f5:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768fa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000768f9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000768fc
uuid_00000000000768fa:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000768f6
	jmp uuid_00000000000768f8
uuid_00000000000768f6:
	movq $1, -40(%rbp)
uuid_00000000000768f8:
	mov -1440(%RBP),%RSP
	add $-1440, %RSP
	movq -1400(%rbp), %r15
	movq %r15, -1248(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -1240(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -1232(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -1224(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -1216(%rbp)
uuid_00000000000768fc:
	mov -1296(%RBP),%RSP
	add $-1440, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000768fd
uuid_00000000000768ff:
uuid_0000000000076903:
	mov -1112(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_0000000000076906
uuid_0000000000076904:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000076906:
	mov -832(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_0000000000076909
uuid_0000000000076907:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000076909:
	mov -552(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007690c
uuid_000000000007690a:
uuid_000000000007690c:
	mov -272(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_000000000007690f
uuid_000000000007690d:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007688c
	jmp uuid_000000000007688e
uuid_000000000007688c:
	movq $1, -40(%rbp)
uuid_000000000007688e:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007688f
	jmp uuid_0000000000076891
uuid_000000000007688f:
	movq $1, -40(%rbp)
uuid_0000000000076891:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007690f:
	mov -160(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000076912
uuid_0000000000076910:
	movq $1, -40(%rbp)
uuid_0000000000076912:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000076915
uuid_0000000000076913:
	movq $1, -40(%rbp)
uuid_0000000000076915:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_vararg_CL_ArrowU64Type:
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameterized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076925
	jmp uuid_0000000000076927
uuid_0000000000076925:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007691c
	jmp uuid_000000000007691e
uuid_000000000007691c:
	push %RBP
	jmp uuid_0000000000076919
	jmp uuid_000000000007691b
uuid_0000000000076919:
	push %RBP
	jmp uuid_0000000000076916
	jmp uuid_0000000000076918
uuid_0000000000076916:
	movb $1, -168(%rbp)
uuid_0000000000076918:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007691b:
	mov -184(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007691e:
	mov -176(%RBP),%RSP
	add $-192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076922
	jmp uuid_0000000000076924
uuid_0000000000076922:
	push %RBP
	jmp uuid_000000000007691f
	jmp uuid_0000000000076921
uuid_000000000007691f:
	movb $1, -104(%rbp)
uuid_0000000000076921:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_0000000000076924:
	mov -120(%RBP),%RSP
	add $-200, %RSP
uuid_0000000000076927:
	mov -112(%RBP),%RSP
	add $-200, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007693e
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007692e
	jmp uuid_0000000000076930
uuid_000000000007692e:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007692b
	jmp uuid_000000000007692d
uuid_000000000007692b:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076928
	jmp uuid_000000000007692a
uuid_0000000000076928:
	movb $1, -240(%rbp)
uuid_000000000007692a:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007692d:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000076930:
	mov -248(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007693b
	push %RBP
	jmp uuid_0000000000076938
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076937
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007693a
uuid_0000000000076938:
uuid_000000000007693a:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007693d
uuid_000000000007693b:
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076931
	jmp uuid_0000000000076933
uuid_0000000000076931:
	movq $1, -40(%rbp)
uuid_0000000000076933:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076934
	jmp uuid_0000000000076936
uuid_0000000000076934:
	movq $1, -40(%rbp)
uuid_0000000000076936:
	mov -328(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007693d:
	mov -208(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_0000000000076940
uuid_000000000007693e:
	movq $1, -40(%rbp)
uuid_0000000000076940:
	mov -72(%RBP),%RSP
	add $-200, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_sized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076975
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076947
	jmp uuid_0000000000076949
uuid_0000000000076947:
	push %RBP
	jmp uuid_0000000000076944
	jmp uuid_0000000000076946
uuid_0000000000076944:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076941
	jmp uuid_0000000000076943
uuid_0000000000076941:
	movb $1, -136(%rbp)
uuid_0000000000076943:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000076946:
	mov -152(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000076949:
	mov -144(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076972
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076950
	jmp uuid_0000000000076952
uuid_0000000000076950:
	push %RBP
	jmp uuid_000000000007694d
	jmp uuid_000000000007694f
uuid_000000000007694d:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007694a
	jmp uuid_000000000007694c
uuid_000000000007694a:
	movb $1, -208(%rbp)
uuid_000000000007694c:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007694f:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000076952:
	mov -216(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007696f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076959
	jmp uuid_000000000007695b
uuid_0000000000076959:
	push %RBP
	jmp uuid_0000000000076956
	jmp uuid_0000000000076958
uuid_0000000000076956:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000076584
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076953
	jmp uuid_0000000000076955
uuid_0000000000076953:
	movb $1, -280(%rbp)
uuid_0000000000076955:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000076958:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007695b:
	mov -288(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007696c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076962
	jmp uuid_0000000000076964
uuid_0000000000076962:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007695f
	jmp uuid_0000000000076961
uuid_000000000007695f:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007695c
	jmp uuid_000000000007695e
uuid_000000000007695c:
	movb $1, -352(%rbp)
uuid_000000000007695e:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000076961:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000076964:
	mov -360(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076969
	push %RBP
	jmp uuid_0000000000076966
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076965
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076968
uuid_0000000000076966:
uuid_0000000000076968:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007696b
uuid_0000000000076969:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007696b:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007696e
uuid_000000000007696c:
	movq $1, -40(%rbp)
uuid_000000000007696e:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000076971
uuid_000000000007696f:
	movq $1, -40(%rbp)
uuid_0000000000076971:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000076974
uuid_0000000000076972:
	movq $1, -40(%rbp)
uuid_0000000000076974:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000076977
uuid_0000000000076975:
	movq $1, -40(%rbp)
uuid_0000000000076977:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_representation_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007697e
	jmp uuid_0000000000076980
uuid_000000000007697e:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007697b
	jmp uuid_000000000007697d
uuid_000000000007697b:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076978
	jmp uuid_000000000007697a
uuid_0000000000076978:
	movb $1, -104(%rbp)
uuid_000000000007697a:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007697d:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000076980:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769ce
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076988
	jmp uuid_000000000007698a
uuid_0000000000076988:
	push %RBP
	jmp uuid_0000000000076985
	jmp uuid_0000000000076987
uuid_0000000000076985:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076982
	jmp uuid_0000000000076984
uuid_0000000000076982:
	movb $1, -216(%rbp)
uuid_0000000000076984:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000076987:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007698a:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769cb
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076991
	jmp uuid_0000000000076993
uuid_0000000000076991:
	push %RBP
	jmp uuid_000000000007698e
	jmp uuid_0000000000076990
uuid_000000000007698e:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_0000000000076467
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007698b
	jmp uuid_000000000007698d
uuid_000000000007698b:
	movb $1, -288(%rbp)
uuid_000000000007698d:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000076990:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000076993:
	mov -296(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769c8
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007699a
	jmp uuid_000000000007699c
uuid_000000000007699a:
	push %RBP
	jmp uuid_0000000000076997
	jmp uuid_0000000000076999
uuid_0000000000076997:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007646b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076994
	jmp uuid_0000000000076996
uuid_0000000000076994:
	movb $1, -360(%rbp)
uuid_0000000000076996:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000076999:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007699c:
	mov -368(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769c5
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769a3
	jmp uuid_00000000000769a5
uuid_00000000000769a3:
	push %RBP
	jmp uuid_00000000000769a0
	jmp uuid_00000000000769a2
uuid_00000000000769a0:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $uuid_000000000007646f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007699d
	jmp uuid_000000000007699f
uuid_000000000007699d:
	movb $1, -432(%rbp)
uuid_000000000007699f:
	mov -456(%RBP),%RSP
	add $-464, %RSP
uuid_00000000000769a2:
	mov -448(%RBP),%RSP
	add $-464, %RSP
uuid_00000000000769a5:
	mov -440(%RBP),%RSP
	add $-464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769c2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769ac
	jmp uuid_00000000000769ae
uuid_00000000000769ac:
	push %RBP
	jmp uuid_00000000000769a9
	jmp uuid_00000000000769ab
uuid_00000000000769a9:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_0000000000076473
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769a6
	jmp uuid_00000000000769a8
uuid_00000000000769a6:
	movb $1, -504(%rbp)
uuid_00000000000769a8:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_00000000000769ab:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_00000000000769ae:
	mov -512(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769bf
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769b5
	jmp uuid_00000000000769b7
uuid_00000000000769b5:
	push %RBP
	jmp uuid_00000000000769b2
	jmp uuid_00000000000769b4
uuid_00000000000769b2:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769af
	jmp uuid_00000000000769b1
uuid_00000000000769af:
	movb $1, -576(%rbp)
uuid_00000000000769b1:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_00000000000769b4:
	mov -592(%RBP),%RSP
	add $-608, %RSP
uuid_00000000000769b7:
	mov -584(%RBP),%RSP
	add $-608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769bc
	push %RBP
	jmp uuid_00000000000769b9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000769b8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000769bb
uuid_00000000000769b9:
uuid_00000000000769bb:
	mov -616(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_00000000000769be
uuid_00000000000769bc:
	movq $1, -40(%rbp)
uuid_00000000000769be:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_00000000000769c1
uuid_00000000000769bf:
	movq $1, -40(%rbp)
uuid_00000000000769c1:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_00000000000769c4
uuid_00000000000769c2:
	movq $1, -40(%rbp)
uuid_00000000000769c4:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_00000000000769c7
uuid_00000000000769c5:
	movq $1, -40(%rbp)
uuid_00000000000769c7:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_00000000000769ca
uuid_00000000000769c8:
	movq $1, -40(%rbp)
uuid_00000000000769ca:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_00000000000769cd
uuid_00000000000769cb:
	movq $1, -40(%rbp)
uuid_00000000000769cd:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_00000000000769d0
uuid_00000000000769ce:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000769d0:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
guess_SB_representation_CL_ArrowTypeType:
	push %RBP
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769e4
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769e1
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769de
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769db
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769d8
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769d5
	push %RBP
	jmp uuid_00000000000769d2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000769d1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000769d4
uuid_00000000000769d2:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769d4:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_00000000000769d7
uuid_00000000000769d5:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076473
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769d7:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_00000000000769da
uuid_00000000000769d8:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007646f
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769da:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_00000000000769dd
uuid_00000000000769db:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007646b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769dd:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_00000000000769e0
uuid_00000000000769de:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076467
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769e0:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_00000000000769e3
uuid_00000000000769e1:
uuid_00000000000769e3:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	jmp uuid_00000000000769e6
uuid_00000000000769e4:
uuid_00000000000769e6:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_local_SB_variable_CL_ArrowTypeType:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769e8
	jmp uuid_00000000000769ea
uuid_00000000000769e8:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769ea:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_constant_CL_ArrowTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000769eb
	jmp uuid_00000000000769ed
uuid_00000000000769eb:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000769ed:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a10
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769f1
	jmp uuid_00000000000769f3
uuid_00000000000769f1:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000769ee
	jmp uuid_00000000000769f0
uuid_00000000000769ee:
	movb $1, -136(%rbp)
uuid_00000000000769f0:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_00000000000769f3:
	mov -144(%RBP),%RSP
	add $-160, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a0d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000769fa
	jmp uuid_00000000000769fc
uuid_00000000000769fa:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000769f7
	jmp uuid_00000000000769f9
uuid_00000000000769f7:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000769f4
	jmp uuid_00000000000769f6
uuid_00000000000769f4:
	movb $1, -200(%rbp)
uuid_00000000000769f6:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000769f9:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000769fc:
	mov -208(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a0a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a03
	jmp uuid_0000000000076a05
uuid_0000000000076a03:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a00
	jmp uuid_0000000000076a02
uuid_0000000000076a00:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000769fd
	jmp uuid_00000000000769ff
uuid_00000000000769fd:
	movb $1, -312(%rbp)
uuid_00000000000769ff:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000076a02:
	mov -328(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000076a05:
	mov -320(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a07
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076a06
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076a09
uuid_0000000000076a07:
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000076a09:
	mov -280(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000076a0c
uuid_0000000000076a0a:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000076a0c:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_0000000000076a0f
uuid_0000000000076a0d:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000076a0f:
	mov -104(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000076a12
uuid_0000000000076a10:
uuid_0000000000076a12:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a22
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a1b
	jmp uuid_0000000000076a1d
uuid_0000000000076a1b:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a18
	jmp uuid_0000000000076a1a
uuid_0000000000076a18:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_0000000000076a15
	jmp uuid_0000000000076a17
uuid_0000000000076a15:
	movb $1, -200(%rbp)
uuid_0000000000076a17:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000076a1a:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000076a1d:
	mov -208(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a1f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076a1e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076a21
uuid_0000000000076a1f:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_0000000000076a21:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_0000000000076a24
uuid_0000000000076a22:
uuid_0000000000076a24:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
ascript_SB_normal_CL_ArrowNilConsTypeAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a30
	jmp uuid_0000000000076a32
uuid_0000000000076a30:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a2d
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	jmp uuid_0000000000076a2f
uuid_0000000000076a2d:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a2a
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a27
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076a25
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076a26
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076a29
uuid_0000000000076a27:
uuid_0000000000076a29:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_0000000000076a2c
uuid_0000000000076a2a:
uuid_0000000000076a2c:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000076a2f:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000076a32:
	mov -112(%RBP),%RSP
	add $-152, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
typeof_CL_ArrowTypeFragmentList:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a39
	jmp uuid_0000000000076a3b
uuid_0000000000076a39:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_0000000000076a36
	jmp uuid_0000000000076a38
uuid_0000000000076a36:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a33
	jmp uuid_0000000000076a35
uuid_0000000000076a33:
	movb $1, -552(%rbp)
uuid_0000000000076a35:
	mov -728(%RBP),%RSP
	add $-896, %RSP
uuid_0000000000076a38:
	mov -568(%RBP),%RSP
	add $-896, %RSP
uuid_0000000000076a3b:
	mov -560(%RBP),%RSP
	add $-896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a43
	push %RBP
	jmp uuid_0000000000076a40
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076a3f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076a42
uuid_0000000000076a40:
uuid_0000000000076a42:
	mov -904(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_0000000000076a45
uuid_0000000000076a43:
#call function typeof : Arrow<FragmentList,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a3c
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	jmp uuid_0000000000076a3e
uuid_0000000000076a3c:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000076a3e:
	mov -904(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076a45:
	mov -376(%RBP),%RSP
	add $-904, %RSP
	subq $24, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
to_SB_s_CL_ArrowSAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a4c
	jmp uuid_0000000000076a4e
uuid_0000000000076a4c:
	push %RBP
	jmp uuid_0000000000076a49
	jmp uuid_0000000000076a4b
uuid_0000000000076a49:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076a46
	jmp uuid_0000000000076a48
uuid_0000000000076a46:
	movb $1, -264(%rbp)
uuid_0000000000076a48:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000076a4b:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000076a4e:
	mov -272(%RBP),%RSP
	add $-296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ac6
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a56
	jmp uuid_0000000000076a58
uuid_0000000000076a56:
	push %RBP
	jmp uuid_0000000000076a53
	jmp uuid_0000000000076a55
uuid_0000000000076a53:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076a50
	jmp uuid_0000000000076a52
uuid_0000000000076a50:
	movb $1, -384(%rbp)
uuid_0000000000076a52:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000076a55:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000076a58:
	mov -392(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ac3
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a78
	jmp uuid_0000000000076a7a
uuid_0000000000076a78:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a66
	jmp uuid_0000000000076a68
uuid_0000000000076a66:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a5d
	jmp uuid_0000000000076a5f
uuid_0000000000076a5d:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_0000000000076a5a
	jmp uuid_0000000000076a5c
uuid_0000000000076a5a:
	movb $1, -696(%rbp)
uuid_0000000000076a5c:
	mov -712(%RBP),%RSP
	add $-736, %RSP
uuid_0000000000076a5f:
	mov -704(%RBP),%RSP
	add $-736, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a63
	jmp uuid_0000000000076a65
uuid_0000000000076a63:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a60
	jmp uuid_0000000000076a62
uuid_0000000000076a60:
	movb $1, -600(%rbp)
uuid_0000000000076a62:
	mov -744(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000076a65:
	mov -616(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000076a68:
	mov -608(%RBP),%RSP
	add $-816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a75
	jmp uuid_0000000000076a77
uuid_0000000000076a75:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a6f
	jmp uuid_0000000000076a71
uuid_0000000000076a6f:
	push %RBP
	jmp uuid_0000000000076a6c
	jmp uuid_0000000000076a6e
uuid_0000000000076a6c:
	push %RBP
	mov -832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -936(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a69
	jmp uuid_0000000000076a6b
uuid_0000000000076a69:
	movb $1, -904(%rbp)
uuid_0000000000076a6b:
	mov -928(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000076a6e:
	mov -920(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000076a71:
	mov -912(%RBP),%RSP
	add $-936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a72
	jmp uuid_0000000000076a74
uuid_0000000000076a72:
	movb $1, -504(%rbp)
uuid_0000000000076a74:
	mov -824(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000076a77:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000076a7a:
	mov -512(%RBP),%RSP
	add $-936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ac0
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a99
	jmp uuid_0000000000076a9b
uuid_0000000000076a99:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a87
	jmp uuid_0000000000076a89
uuid_0000000000076a87:
	push %RBP
	mov -1104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a7e
	jmp uuid_0000000000076a80
uuid_0000000000076a7e:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_0000000000076a7b
	jmp uuid_0000000000076a7d
uuid_0000000000076a7b:
	movb $1, -1216(%rbp)
uuid_0000000000076a7d:
	mov -1232(%RBP),%RSP
	add $-1256, %RSP
uuid_0000000000076a80:
	mov -1224(%RBP),%RSP
	add $-1256, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a84
	jmp uuid_0000000000076a86
uuid_0000000000076a84:
	push %RBP
	mov -1096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a81
	jmp uuid_0000000000076a83
uuid_0000000000076a81:
	movb $1, -1120(%rbp)
uuid_0000000000076a83:
	mov -1264(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000076a86:
	mov -1136(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000076a89:
	mov -1128(%RBP),%RSP
	add $-1336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a96
	jmp uuid_0000000000076a98
uuid_0000000000076a96:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076a90
	jmp uuid_0000000000076a92
uuid_0000000000076a90:
	push %RBP
	jmp uuid_0000000000076a8d
	jmp uuid_0000000000076a8f
uuid_0000000000076a8d:
	push %RBP
	mov -1352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a8a
	jmp uuid_0000000000076a8c
uuid_0000000000076a8a:
	movb $1, -1424(%rbp)
uuid_0000000000076a8c:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000076a8f:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000076a92:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076a93
	jmp uuid_0000000000076a95
uuid_0000000000076a93:
	movb $1, -1024(%rbp)
uuid_0000000000076a95:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000076a98:
	mov -1040(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000076a9b:
	mov -1032(%RBP),%RSP
	add $-1456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076abd
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076aa2
	jmp uuid_0000000000076aa4
uuid_0000000000076aa2:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a9f
	jmp uuid_0000000000076aa1
uuid_0000000000076a9f:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076a9c
	jmp uuid_0000000000076a9e
uuid_0000000000076a9c:
	movb $1, -1544(%rbp)
uuid_0000000000076a9e:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000076aa1:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000076aa4:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076aba
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076aaf
	jmp uuid_0000000000076ab1
uuid_0000000000076aaf:
	push %RBP
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	jmp uuid_0000000000076aac
	jmp uuid_0000000000076aae
uuid_0000000000076aac:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076aa9
	jmp uuid_0000000000076aab
uuid_0000000000076aa9:
	push %RBP
	mov -1752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076aa6
	jmp uuid_0000000000076aa8
uuid_0000000000076aa6:
	movb $1, -1800(%rbp)
uuid_0000000000076aa8:
	mov -1928(%RBP),%RSP
	add $-2000, %RSP
uuid_0000000000076aab:
	mov -1848(%RBP),%RSP
	add $-2000, %RSP
uuid_0000000000076aae:
	mov -1816(%RBP),%RSP
	add $-2000, %RSP
uuid_0000000000076ab1:
	mov -1808(%RBP),%RSP
	add $-2000, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ab7
	push %RBP
	jmp uuid_0000000000076ab4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076ab3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076ab6
uuid_0000000000076ab4:
uuid_0000000000076ab6:
	mov -2008(%RBP),%RSP
	add $-2008, %RSP
	jmp uuid_0000000000076ab9
uuid_0000000000076ab7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076ab2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000076ab9:
	mov -1720(%RBP),%RSP
	add $-2000, %RSP
	jmp uuid_0000000000076abc
uuid_0000000000076aba:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076aa5
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000076abc:
	mov -1464(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_0000000000076abf
uuid_0000000000076abd:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000076abf:
	mov -944(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_0000000000076ac2
uuid_0000000000076ac0:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000076ac2:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_0000000000076ac5
uuid_0000000000076ac3:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076a59
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -416(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000076ac5:
	mov -304(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_0000000000076ac8
uuid_0000000000076ac6:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076a4f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -296(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000076ac8:
	mov -184(%RBP),%RSP
	add $-296, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
domain_CL_ArrowTypeType:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
range_CL_ArrowTypeType:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
t1_CL_ArrowTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
t2_CL_ArrowTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
t3_CL_ArrowTypeConsTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
p_CL_ArrowTypeConsU64Type:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076adb
	jmp uuid_0000000000076add
uuid_0000000000076adb:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076ad8
	jmp uuid_0000000000076ada
uuid_0000000000076ad8:
	push %RBP
	jmp uuid_0000000000076ad5
	jmp uuid_0000000000076ad7
uuid_0000000000076ad5:
	movb $1, -104(%rbp)
uuid_0000000000076ad7:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000076ada:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000076add:
	mov -112(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ae2
	push %RBP
	jmp uuid_0000000000076adf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076ade
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076ae1
uuid_0000000000076adf:
uuid_0000000000076ae1:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000076ae4
uuid_0000000000076ae2:
#call function .nth : Arrow<Cons<Cons<List<Type>,U64>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_nth_CL_ArrowTypeConsTypeConsU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076ae4:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
p1_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
p2_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
and_CL_ArrowTContextConsTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076aeb
	jmp uuid_0000000000076aed
uuid_0000000000076aeb:
	push %RBP
	jmp uuid_0000000000076ae8
	jmp uuid_0000000000076aea
uuid_0000000000076ae8:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ae5
	jmp uuid_0000000000076ae7
uuid_0000000000076ae5:
	movb $1, -760(%rbp)
uuid_0000000000076ae7:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076aea:
	mov -776(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076aed:
	mov -768(%RBP),%RSP
	add $-904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076afe
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076af4
	jmp uuid_0000000000076af6
uuid_0000000000076af4:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076af1
	jmp uuid_0000000000076af3
uuid_0000000000076af1:
	push %RBP
	jmp uuid_0000000000076aee
	jmp uuid_0000000000076af0
uuid_0000000000076aee:
	movb $1, -1168(%rbp)
uuid_0000000000076af0:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000076af3:
	mov -1184(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000076af6:
	mov -1176(%RBP),%RSP
	add $-1312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076afb
	push %RBP
	jmp uuid_0000000000076af8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076af7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076afa
uuid_0000000000076af8:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076afa:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_0000000000076afd
uuid_0000000000076afb:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076afd:
	mov -912(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_0000000000076b00
uuid_0000000000076afe:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076b00:
	mov -504(%RBP),%RSP
	add $-904, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
and_CL_ArrowTypeConsTypeType:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
union_CL_ArrowTContextConsTContextTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b17
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b14
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b0d
	jmp uuid_0000000000076b0f
uuid_0000000000076b0d:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_0000000000076b0a
	jmp uuid_0000000000076b0c
uuid_0000000000076b0a:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_0000000000076b07
	jmp uuid_0000000000076b09
uuid_0000000000076b07:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076b04
	jmp uuid_0000000000076b06
uuid_0000000000076b04:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076b01
	jmp uuid_0000000000076b03
uuid_0000000000076b01:
	movb $1, -760(%rbp)
uuid_0000000000076b03:
	mov -904(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000076b06:
	mov -888(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000076b09:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000076b0c:
	mov -776(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000076b0f:
	mov -768(%RBP),%RSP
	add $-1024, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b11
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076b10
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076b13
uuid_0000000000076b11:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -896(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000076b13:
	mov -632(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_0000000000076b16
uuid_0000000000076b14:
uuid_0000000000076b16:
	mov -504(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_0000000000076b19
uuid_0000000000076b17:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000076b19:
	mov -376(%RBP),%RSP
	add $-496, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
union_CL_ArrowContextConsContextContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b1a
	jmp uuid_0000000000076b1c
uuid_0000000000076b1a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_0000000000076b1c:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b30
	jmp uuid_0000000000076b32
uuid_0000000000076b30:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b26
	jmp uuid_0000000000076b28
uuid_0000000000076b26:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_0000000000076b23
	jmp uuid_0000000000076b25
uuid_0000000000076b23:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076b20
	jmp uuid_0000000000076b22
uuid_0000000000076b20:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076b1d
	jmp uuid_0000000000076b1f
uuid_0000000000076b1d:
	movb $1, -520(%rbp)
uuid_0000000000076b1f:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000076b22:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000076b25:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000076b28:
	mov -528(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b2d
	push %RBP
	jmp uuid_0000000000076b2a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076b29
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076b2c
uuid_0000000000076b2a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_0000000000076b2c:
	mov -736(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_0000000000076b2f
uuid_0000000000076b2d:
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -624(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq $0
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_0000000000076b2f:
	mov -416(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000076b32:
	mov -312(%RBP),%RSP
	add $-728, %RSP
	subq $96, %rsp
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
union_CL_ArrowFContextConsTContextFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
uuid_0000000000076b4a:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b4b
	jmp uuid_0000000000076b4c
uuid_0000000000076b4b:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b47
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b3f
	jmp uuid_0000000000076b41
uuid_0000000000076b3f:
	push %RBP
	jmp uuid_0000000000076b3c
	jmp uuid_0000000000076b3e
uuid_0000000000076b3c:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_0000000000076b39
	jmp uuid_0000000000076b3b
uuid_0000000000076b39:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076b36
	jmp uuid_0000000000076b38
uuid_0000000000076b36:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076b33
	jmp uuid_0000000000076b35
uuid_0000000000076b33:
	movb $1, -912(%rbp)
uuid_0000000000076b35:
	mov -984(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000076b38:
	mov -968(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000076b3b:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000076b3e:
	mov -928(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000076b41:
	mov -920(%RBP),%RSP
	add $-1104, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b44
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076b43
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076b46
uuid_0000000000076b44:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $uuid_0000000000076b42
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -976(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $0
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1104(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -208(%rbp)
uuid_0000000000076b46:
	mov -784(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_0000000000076b49
uuid_0000000000076b47:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_0000000000076b49:
	mov -656(%RBP),%RSP
	add $-776, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000076b4a
uuid_0000000000076b4c:
	subq $200, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
tag_SB_of_CL_ArrowStringType:
	pushq $uuid_0000000000075fd2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b53
	jmp uuid_0000000000076b55
uuid_0000000000076b53:
	push %RBP
	jmp uuid_0000000000076b50
	jmp uuid_0000000000076b52
uuid_0000000000076b50:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076b4d
	jmp uuid_0000000000076b4f
uuid_0000000000076b4d:
	movb $1, -104(%rbp)
uuid_0000000000076b4f:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000076b52:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000076b55:
	mov -112(%RBP),%RSP
	add $-136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b5a
	push %RBP
	jmp uuid_0000000000076b57
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076b56
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076b59
uuid_0000000000076b57:
uuid_0000000000076b59:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000076b5c
uuid_0000000000076b5a:
	movq -136(%rbp), %r15
	movq %r15, -40(%rbp)
	mov -136(%rbp), %r15
	mov %r15, -40(%rbp)
uuid_0000000000076b5c:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b68
	jmp uuid_0000000000076b6a
uuid_0000000000076b68:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b65
	jmp uuid_0000000000076b67
uuid_0000000000076b65:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b62
	jmp uuid_0000000000076b64
uuid_0000000000076b62:
	movb $1, -288(%rbp)
uuid_0000000000076b64:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000076b67:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000076b6a:
	mov -296(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b93
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b83
	jmp uuid_0000000000076b85
uuid_0000000000076b83:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b71
	jmp uuid_0000000000076b73
uuid_0000000000076b71:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076b6e
	jmp uuid_0000000000076b70
uuid_0000000000076b6e:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_0000000000076b6b
	jmp uuid_0000000000076b6d
uuid_0000000000076b6b:
	movb $1, -560(%rbp)
uuid_0000000000076b6d:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_0000000000076b70:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_0000000000076b73:
	mov -568(%RBP),%RSP
	add $-648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b80
	jmp uuid_0000000000076b82
uuid_0000000000076b80:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b7a
	jmp uuid_0000000000076b7c
uuid_0000000000076b7a:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076b77
	jmp uuid_0000000000076b79
uuid_0000000000076b77:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_0000000000076b74
	jmp uuid_0000000000076b76
uuid_0000000000076b74:
	movb $1, -704(%rbp)
uuid_0000000000076b76:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000076b79:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000076b7c:
	mov -712(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b7d
	jmp uuid_0000000000076b7f
uuid_0000000000076b7d:
	movb $1, -496(%rbp)
uuid_0000000000076b7f:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000076b82:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000076b85:
	mov -504(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b90
	push %RBP
	jmp uuid_0000000000076b8d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076b8c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076b8f
uuid_0000000000076b8d:
uuid_0000000000076b8f:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_0000000000076b92
uuid_0000000000076b90:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b89
	jmp uuid_0000000000076b8b
uuid_0000000000076b89:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076b86
	jmp uuid_0000000000076b88
uuid_0000000000076b86:
	movq $1, -96(%rbp)
uuid_0000000000076b88:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000076b8b:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000076b92:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_0000000000076b95
uuid_0000000000076b93:
	movq $1, -96(%rbp)
uuid_0000000000076b95:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b9c
	jmp uuid_0000000000076b9e
uuid_0000000000076b9c:
	push %RBP
	jmp uuid_0000000000076b99
	jmp uuid_0000000000076b9b
uuid_0000000000076b99:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076b96
	jmp uuid_0000000000076b98
uuid_0000000000076b96:
	movb $1, -192(%rbp)
uuid_0000000000076b98:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000076b9b:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000076b9e:
	mov -200(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d76
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bb8
	jmp uuid_0000000000076bba
uuid_0000000000076bb8:
	push %RBP
	jmp uuid_0000000000076bb5
	jmp uuid_0000000000076bb7
uuid_0000000000076bb5:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076baf
	jmp uuid_0000000000076bb1
uuid_0000000000076baf:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ba5
	jmp uuid_0000000000076ba7
uuid_0000000000076ba5:
	push %RBP
	jmp uuid_0000000000076ba2
	jmp uuid_0000000000076ba4
uuid_0000000000076ba2:
	push %RBP
	jmp uuid_0000000000076b9f
	jmp uuid_0000000000076ba1
uuid_0000000000076b9f:
	movb $1, -432(%rbp)
uuid_0000000000076ba1:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_0000000000076ba4:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_0000000000076ba7:
	mov -440(%RBP),%RSP
	add $-456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bac
	jmp uuid_0000000000076bae
uuid_0000000000076bac:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $uuid_0000000000076ba8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ba9
	jmp uuid_0000000000076bab
uuid_0000000000076ba9:
	movb $1, -368(%rbp)
uuid_0000000000076bab:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000076bae:
	mov -384(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000076bb1:
	mov -376(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bb2
	jmp uuid_0000000000076bb4
uuid_0000000000076bb2:
	movb $1, -312(%rbp)
uuid_0000000000076bb4:
	mov -336(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000076bb7:
	mov -328(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000076bba:
	mov -320(%RBP),%RSP
	add $-472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d73
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bc7
	jmp uuid_0000000000076bc9
uuid_0000000000076bc7:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_0000000000076bc4
	jmp uuid_0000000000076bc6
uuid_0000000000076bc4:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bbe
	jmp uuid_0000000000076bc0
uuid_0000000000076bbe:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076bbb
	jmp uuid_0000000000076bbd
uuid_0000000000076bbb:
	movb $1, -624(%rbp)
uuid_0000000000076bbd:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_0000000000076bc0:
	mov -632(%RBP),%RSP
	add $-648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bc1
	jmp uuid_0000000000076bc3
uuid_0000000000076bc1:
	movb $1, -544(%rbp)
uuid_0000000000076bc3:
	mov -592(%RBP),%RSP
	add $-648, %RSP
uuid_0000000000076bc6:
	mov -560(%RBP),%RSP
	add $-648, %RSP
uuid_0000000000076bc9:
	mov -552(%RBP),%RSP
	add $-648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d70
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bd9
	jmp uuid_0000000000076bdb
uuid_0000000000076bd9:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	jmp uuid_0000000000076bd6
	jmp uuid_0000000000076bd8
uuid_0000000000076bd6:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bd0
	jmp uuid_0000000000076bd2
uuid_0000000000076bd0:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076bcd
	jmp uuid_0000000000076bcf
uuid_0000000000076bcd:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076bca
	jmp uuid_0000000000076bcc
uuid_0000000000076bca:
	movb $1, -800(%rbp)
uuid_0000000000076bcc:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000076bcf:
	mov -816(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000076bd2:
	mov -808(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bd3
	jmp uuid_0000000000076bd5
uuid_0000000000076bd3:
	movb $1, -720(%rbp)
uuid_0000000000076bd5:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000076bd8:
	mov -736(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000076bdb:
	mov -728(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d6d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bf1
	jmp uuid_0000000000076bf3
uuid_0000000000076bf1:
	push %RBP
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076be8
	jmp uuid_0000000000076bea
uuid_0000000000076be8:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076be5
	jmp uuid_0000000000076be7
uuid_0000000000076be5:
	push %RBP
	mov -968(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076be2
	jmp uuid_0000000000076be4
uuid_0000000000076be2:
	movb $1, -992(%rbp)
uuid_0000000000076be4:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000076be7:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000076bea:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bee
	jmp uuid_0000000000076bf0
uuid_0000000000076bee:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_0000000000076beb
	jmp uuid_0000000000076bed
uuid_0000000000076beb:
	movb $1, -944(%rbp)
uuid_0000000000076bed:
	mov -1072(%RBP),%RSP
	add $-1096, %RSP
uuid_0000000000076bf0:
	mov -960(%RBP),%RSP
	add $-1096, %RSP
uuid_0000000000076bf3:
	mov -952(%RBP),%RSP
	add $-1096, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d6a
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c48
	jmp uuid_0000000000076c4a
uuid_0000000000076c48:
	push %RBP
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c12
	jmp uuid_0000000000076c14
uuid_0000000000076c12:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c09
	jmp uuid_0000000000076c0b
uuid_0000000000076c09:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c00
	jmp uuid_0000000000076c02
uuid_0000000000076c00:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076bfd
	jmp uuid_0000000000076bff
uuid_0000000000076bfd:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_0000000000076bfa
	jmp uuid_0000000000076bfc
uuid_0000000000076bfa:
	movb $1, -1344(%rbp)
uuid_0000000000076bfc:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_0000000000076bff:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_0000000000076c02:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c06
	jmp uuid_0000000000076c08
uuid_0000000000076c06:
	push %RBP
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_0000000000076c03
	jmp uuid_0000000000076c05
uuid_0000000000076c03:
	movb $1, -1280(%rbp)
uuid_0000000000076c05:
	mov -1440(%RBP),%RSP
	add $-1464, %RSP
uuid_0000000000076c08:
	mov -1296(%RBP),%RSP
	add $-1464, %RSP
uuid_0000000000076c0b:
	mov -1288(%RBP),%RSP
	add $-1464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c0f
	jmp uuid_0000000000076c11
uuid_0000000000076c0f:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c0c
	jmp uuid_0000000000076c0e
uuid_0000000000076c0c:
	movb $1, -1216(%rbp)
uuid_0000000000076c0e:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000076c11:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000076c14:
	mov -1224(%RBP),%RSP
	add $-1480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c45
	jmp uuid_0000000000076c47
uuid_0000000000076c45:
	push %RBP
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq $0
	push %RBP
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c3f
	jmp uuid_0000000000076c41
uuid_0000000000076c3f:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c36
	jmp uuid_0000000000076c38
uuid_0000000000076c36:
	push %RBP
	mov -1568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c1b
	jmp uuid_0000000000076c1d
uuid_0000000000076c1b:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c18
	jmp uuid_0000000000076c1a
uuid_0000000000076c18:
	push %RBP
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	jmp uuid_0000000000076c15
	jmp uuid_0000000000076c17
uuid_0000000000076c15:
	movb $1, -1648(%rbp)
uuid_0000000000076c17:
	mov -1712(%RBP),%RSP
	add $-1736, %RSP
uuid_0000000000076c1a:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_0000000000076c1d:
	mov -1656(%RBP),%RSP
	add $-1736, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c33
	jmp uuid_0000000000076c35
uuid_0000000000076c33:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c2d
	jmp uuid_0000000000076c2f
uuid_0000000000076c2d:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c24
	jmp uuid_0000000000076c26
uuid_0000000000076c24:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c21
	jmp uuid_0000000000076c23
uuid_0000000000076c21:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_0000000000076c1e
	jmp uuid_0000000000076c20
uuid_0000000000076c1e:
	movb $1, -1840(%rbp)
uuid_0000000000076c20:
	mov -1904(%RBP),%RSP
	add $-1928, %RSP
uuid_0000000000076c23:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_0000000000076c26:
	mov -1848(%RBP),%RSP
	add $-1928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c2a
	jmp uuid_0000000000076c2c
uuid_0000000000076c2a:
	push %RBP
	mov -1752(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c27
	jmp uuid_0000000000076c29
uuid_0000000000076c27:
	movb $1, -1776(%rbp)
uuid_0000000000076c29:
	mov -1936(%RBP),%RSP
	add $-1944, %RSP
uuid_0000000000076c2c:
	mov -1792(%RBP),%RSP
	add $-1944, %RSP
uuid_0000000000076c2f:
	mov -1784(%RBP),%RSP
	add $-1944, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c30
	jmp uuid_0000000000076c32
uuid_0000000000076c30:
	movb $1, -1584(%rbp)
uuid_0000000000076c32:
	mov -1744(%RBP),%RSP
	add $-1944, %RSP
uuid_0000000000076c35:
	mov -1600(%RBP),%RSP
	add $-1944, %RSP
uuid_0000000000076c38:
	mov -1592(%RBP),%RSP
	add $-1944, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c3c
	jmp uuid_0000000000076c3e
uuid_0000000000076c3c:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c39
	jmp uuid_0000000000076c3b
uuid_0000000000076c39:
	movb $1, -1520(%rbp)
uuid_0000000000076c3b:
	mov -1952(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076c3e:
	mov -1536(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076c41:
	mov -1528(%RBP),%RSP
	add $-1960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c42
	jmp uuid_0000000000076c44
uuid_0000000000076c42:
	movb $1, -1168(%rbp)
uuid_0000000000076c44:
	mov -1488(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076c47:
	mov -1184(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076c4a:
	mov -1176(%RBP),%RSP
	add $-1960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d67
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c81
	jmp uuid_0000000000076c83
uuid_0000000000076c81:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	jmp uuid_0000000000076c7e
	jmp uuid_0000000000076c80
uuid_0000000000076c7e:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c78
	jmp uuid_0000000000076c7a
uuid_0000000000076c78:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c6f
	jmp uuid_0000000000076c71
uuid_0000000000076c6f:
	push %RBP
	mov -2160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c54
	jmp uuid_0000000000076c56
uuid_0000000000076c54:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c51
	jmp uuid_0000000000076c53
uuid_0000000000076c51:
	push %RBP
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_0000000000076c4e
	jmp uuid_0000000000076c50
uuid_0000000000076c4e:
	movb $1, -2240(%rbp)
uuid_0000000000076c50:
	mov -2304(%RBP),%RSP
	add $-2328, %RSP
uuid_0000000000076c53:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_0000000000076c56:
	mov -2248(%RBP),%RSP
	add $-2328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c6c
	jmp uuid_0000000000076c6e
uuid_0000000000076c6c:
	push %RBP
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq $0
	push %RBP
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c66
	jmp uuid_0000000000076c68
uuid_0000000000076c66:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c5d
	jmp uuid_0000000000076c5f
uuid_0000000000076c5d:
	push %RBP
	mov -2416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c5a
	jmp uuid_0000000000076c5c
uuid_0000000000076c5a:
	push %RBP
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	jmp uuid_0000000000076c57
	jmp uuid_0000000000076c59
uuid_0000000000076c57:
	movb $1, -2432(%rbp)
uuid_0000000000076c59:
	mov -2496(%RBP),%RSP
	add $-2520, %RSP
uuid_0000000000076c5c:
	mov -2448(%RBP),%RSP
	add $-2520, %RSP
uuid_0000000000076c5f:
	mov -2440(%RBP),%RSP
	add $-2520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c63
	jmp uuid_0000000000076c65
uuid_0000000000076c63:
	push %RBP
	mov -2344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2536(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c60
	jmp uuid_0000000000076c62
uuid_0000000000076c60:
	movb $1, -2368(%rbp)
uuid_0000000000076c62:
	mov -2528(%RBP),%RSP
	add $-2536, %RSP
uuid_0000000000076c65:
	mov -2384(%RBP),%RSP
	add $-2536, %RSP
uuid_0000000000076c68:
	mov -2376(%RBP),%RSP
	add $-2536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c69
	jmp uuid_0000000000076c6b
uuid_0000000000076c69:
	movb $1, -2176(%rbp)
uuid_0000000000076c6b:
	mov -2336(%RBP),%RSP
	add $-2536, %RSP
uuid_0000000000076c6e:
	mov -2192(%RBP),%RSP
	add $-2536, %RSP
uuid_0000000000076c71:
	mov -2184(%RBP),%RSP
	add $-2536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c75
	jmp uuid_0000000000076c77
uuid_0000000000076c75:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2552(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c72
	jmp uuid_0000000000076c74
uuid_0000000000076c72:
	movb $1, -2112(%rbp)
uuid_0000000000076c74:
	mov -2544(%RBP),%RSP
	add $-2552, %RSP
uuid_0000000000076c77:
	mov -2128(%RBP),%RSP
	add $-2552, %RSP
uuid_0000000000076c7a:
	mov -2120(%RBP),%RSP
	add $-2552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c7b
	jmp uuid_0000000000076c7d
uuid_0000000000076c7b:
	movb $1, -2032(%rbp)
uuid_0000000000076c7d:
	mov -2080(%RBP),%RSP
	add $-2552, %RSP
uuid_0000000000076c80:
	mov -2048(%RBP),%RSP
	add $-2552, %RSP
uuid_0000000000076c83:
	mov -2040(%RBP),%RSP
	add $-2552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2032(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d64
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cba
	jmp uuid_0000000000076cbc
uuid_0000000000076cba:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c9f
	jmp uuid_0000000000076ca1
uuid_0000000000076c9f:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c96
	jmp uuid_0000000000076c98
uuid_0000000000076c96:
	push %RBP
	mov -2720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c8d
	jmp uuid_0000000000076c8f
uuid_0000000000076c8d:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076c8a
	jmp uuid_0000000000076c8c
uuid_0000000000076c8a:
	push %RBP
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_0000000000076c87
	jmp uuid_0000000000076c89
uuid_0000000000076c87:
	movb $1, -2800(%rbp)
uuid_0000000000076c89:
	mov -2864(%RBP),%RSP
	add $-2888, %RSP
uuid_0000000000076c8c:
	mov -2816(%RBP),%RSP
	add $-2888, %RSP
uuid_0000000000076c8f:
	mov -2808(%RBP),%RSP
	add $-2888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c93
	jmp uuid_0000000000076c95
uuid_0000000000076c93:
	push %RBP
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	jmp uuid_0000000000076c90
	jmp uuid_0000000000076c92
uuid_0000000000076c90:
	movb $1, -2736(%rbp)
uuid_0000000000076c92:
	mov -2896(%RBP),%RSP
	add $-2920, %RSP
uuid_0000000000076c95:
	mov -2752(%RBP),%RSP
	add $-2920, %RSP
uuid_0000000000076c98:
	mov -2744(%RBP),%RSP
	add $-2920, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c9c
	jmp uuid_0000000000076c9e
uuid_0000000000076c9c:
	push %RBP
	mov -2648(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c99
	jmp uuid_0000000000076c9b
uuid_0000000000076c99:
	movb $1, -2672(%rbp)
uuid_0000000000076c9b:
	mov -2928(%RBP),%RSP
	add $-2936, %RSP
uuid_0000000000076c9e:
	mov -2688(%RBP),%RSP
	add $-2936, %RSP
uuid_0000000000076ca1:
	mov -2680(%RBP),%RSP
	add $-2936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cb7
	jmp uuid_0000000000076cb9
uuid_0000000000076cb7:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2968(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cb1
	jmp uuid_0000000000076cb3
uuid_0000000000076cb1:
	push %RBP
	mov -2960(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ca8
	jmp uuid_0000000000076caa
uuid_0000000000076ca8:
	push %RBP
	mov -3024(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ca5
	jmp uuid_0000000000076ca7
uuid_0000000000076ca5:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	jmp uuid_0000000000076ca2
	jmp uuid_0000000000076ca4
uuid_0000000000076ca2:
	movb $1, -3040(%rbp)
uuid_0000000000076ca4:
	mov -3104(%RBP),%RSP
	add $-3128, %RSP
uuid_0000000000076ca7:
	mov -3056(%RBP),%RSP
	add $-3128, %RSP
uuid_0000000000076caa:
	mov -3048(%RBP),%RSP
	add $-3128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cae
	jmp uuid_0000000000076cb0
uuid_0000000000076cae:
	push %RBP
	mov -2952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3144(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cab
	jmp uuid_0000000000076cad
uuid_0000000000076cab:
	movb $1, -2976(%rbp)
uuid_0000000000076cad:
	mov -3136(%RBP),%RSP
	add $-3144, %RSP
uuid_0000000000076cb0:
	mov -2992(%RBP),%RSP
	add $-3144, %RSP
uuid_0000000000076cb3:
	mov -2984(%RBP),%RSP
	add $-3144, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cb4
	jmp uuid_0000000000076cb6
uuid_0000000000076cb4:
	movb $1, -2624(%rbp)
uuid_0000000000076cb6:
	mov -2944(%RBP),%RSP
	add $-3144, %RSP
uuid_0000000000076cb9:
	mov -2640(%RBP),%RSP
	add $-3144, %RSP
uuid_0000000000076cbc:
	mov -2632(%RBP),%RSP
	add $-3144, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d61
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ce1
	jmp uuid_0000000000076ce3
uuid_0000000000076ce1:
	push %RBP
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cc6
	jmp uuid_0000000000076cc8
uuid_0000000000076cc6:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cc3
	jmp uuid_0000000000076cc5
uuid_0000000000076cc3:
	push %RBP
	mov -3240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cc0
	jmp uuid_0000000000076cc2
uuid_0000000000076cc0:
	movb $1, -3264(%rbp)
uuid_0000000000076cc2:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_0000000000076cc5:
	mov -3280(%RBP),%RSP
	add $-3336, %RSP
uuid_0000000000076cc8:
	mov -3272(%RBP),%RSP
	add $-3336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cde
	jmp uuid_0000000000076ce0
uuid_0000000000076cde:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cd8
	jmp uuid_0000000000076cda
uuid_0000000000076cd8:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ccf
	jmp uuid_0000000000076cd1
uuid_0000000000076ccf:
	push %RBP
	mov -3424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ccc
	jmp uuid_0000000000076cce
uuid_0000000000076ccc:
	push %RBP
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	jmp uuid_0000000000076cc9
	jmp uuid_0000000000076ccb
uuid_0000000000076cc9:
	movb $1, -3440(%rbp)
uuid_0000000000076ccb:
	mov -3504(%RBP),%RSP
	add $-3528, %RSP
uuid_0000000000076cce:
	mov -3456(%RBP),%RSP
	add $-3528, %RSP
uuid_0000000000076cd1:
	mov -3448(%RBP),%RSP
	add $-3528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cd5
	jmp uuid_0000000000076cd7
uuid_0000000000076cd5:
	push %RBP
	mov -3352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cd2
	jmp uuid_0000000000076cd4
uuid_0000000000076cd2:
	movb $1, -3376(%rbp)
uuid_0000000000076cd4:
	mov -3536(%RBP),%RSP
	add $-3544, %RSP
uuid_0000000000076cd7:
	mov -3392(%RBP),%RSP
	add $-3544, %RSP
uuid_0000000000076cda:
	mov -3384(%RBP),%RSP
	add $-3544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cdb
	jmp uuid_0000000000076cdd
uuid_0000000000076cdb:
	movb $1, -3216(%rbp)
uuid_0000000000076cdd:
	mov -3344(%RBP),%RSP
	add $-3544, %RSP
uuid_0000000000076ce0:
	mov -3232(%RBP),%RSP
	add $-3544, %RSP
uuid_0000000000076ce3:
	mov -3224(%RBP),%RSP
	add $-3544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d5e
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cfc
	jmp uuid_0000000000076cfe
uuid_0000000000076cfc:
	push %RBP
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	jmp uuid_0000000000076cf9
	jmp uuid_0000000000076cfb
uuid_0000000000076cf9:
	push %RBP
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cf3
	jmp uuid_0000000000076cf5
uuid_0000000000076cf3:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076cea
	jmp uuid_0000000000076cec
uuid_0000000000076cea:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ce7
	jmp uuid_0000000000076ce9
uuid_0000000000076ce7:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_0000000000076ce4
	jmp uuid_0000000000076ce6
uuid_0000000000076ce4:
	movb $1, -3760(%rbp)
uuid_0000000000076ce6:
	mov -3824(%RBP),%RSP
	add $-3848, %RSP
uuid_0000000000076ce9:
	mov -3776(%RBP),%RSP
	add $-3848, %RSP
uuid_0000000000076cec:
	mov -3768(%RBP),%RSP
	add $-3848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cf0
	jmp uuid_0000000000076cf2
uuid_0000000000076cf0:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3864(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ced
	jmp uuid_0000000000076cef
uuid_0000000000076ced:
	movb $1, -3696(%rbp)
uuid_0000000000076cef:
	mov -3856(%RBP),%RSP
	add $-3864, %RSP
uuid_0000000000076cf2:
	mov -3712(%RBP),%RSP
	add $-3864, %RSP
uuid_0000000000076cf5:
	mov -3704(%RBP),%RSP
	add $-3864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cf6
	jmp uuid_0000000000076cf8
uuid_0000000000076cf6:
	movb $1, -3616(%rbp)
uuid_0000000000076cf8:
	mov -3664(%RBP),%RSP
	add $-3864, %RSP
uuid_0000000000076cfb:
	mov -3632(%RBP),%RSP
	add $-3864, %RSP
uuid_0000000000076cfe:
	mov -3624(%RBP),%RSP
	add $-3864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3616(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d5b
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d2a
	jmp uuid_0000000000076d2c
uuid_0000000000076d2a:
	push %RBP
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq $0
	push %RBP
	mov -3976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d05
	jmp uuid_0000000000076d07
uuid_0000000000076d05:
	push %RBP
	mov -3968(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d02
	jmp uuid_0000000000076d04
uuid_0000000000076d02:
	push %RBP
	mov -3960(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076cff
	jmp uuid_0000000000076d01
uuid_0000000000076cff:
	movb $1, -3984(%rbp)
uuid_0000000000076d01:
	mov -4048(%RBP),%RSP
	add $-4056, %RSP
uuid_0000000000076d04:
	mov -4000(%RBP),%RSP
	add $-4056, %RSP
uuid_0000000000076d07:
	mov -3992(%RBP),%RSP
	add $-4056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d27
	jmp uuid_0000000000076d29
uuid_0000000000076d27:
	push %RBP
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq $0
	push %RBP
	mov -4088(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d21
	jmp uuid_0000000000076d23
uuid_0000000000076d21:
	push %RBP
	mov -4080(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d17
	jmp uuid_0000000000076d19
uuid_0000000000076d17:
	push %RBP
	mov -4144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d14
	jmp uuid_0000000000076d16
uuid_0000000000076d14:
	push %RBP
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq $0
	push %RBP
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d0e
	jmp uuid_0000000000076d10
uuid_0000000000076d0e:
	push %RBP
	mov -4240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d0b
	jmp uuid_0000000000076d0d
uuid_0000000000076d0b:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076d08
	jmp uuid_0000000000076d0a
uuid_0000000000076d08:
	movb $1, -4256(%rbp)
uuid_0000000000076d0a:
	mov -4320(%RBP),%RSP
	add $-4328, %RSP
uuid_0000000000076d0d:
	mov -4272(%RBP),%RSP
	add $-4328, %RSP
uuid_0000000000076d10:
	mov -4264(%RBP),%RSP
	add $-4328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d11
	jmp uuid_0000000000076d13
uuid_0000000000076d11:
	movb $1, -4160(%rbp)
uuid_0000000000076d13:
	mov -4224(%RBP),%RSP
	add $-4328, %RSP
uuid_0000000000076d16:
	mov -4176(%RBP),%RSP
	add $-4328, %RSP
uuid_0000000000076d19:
	mov -4168(%RBP),%RSP
	add $-4328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d1e
	jmp uuid_0000000000076d20
uuid_0000000000076d1e:
	push %RBP
	mov -4072(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4344(%rbp)
	pushq $uuid_0000000000076d1a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d1b
	jmp uuid_0000000000076d1d
uuid_0000000000076d1b:
	movb $1, -4096(%rbp)
uuid_0000000000076d1d:
	mov -4336(%RBP),%RSP
	add $-4344, %RSP
uuid_0000000000076d20:
	mov -4112(%RBP),%RSP
	add $-4344, %RSP
uuid_0000000000076d23:
	mov -4104(%RBP),%RSP
	add $-4344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4096(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d24
	jmp uuid_0000000000076d26
uuid_0000000000076d24:
	movb $1, -3936(%rbp)
uuid_0000000000076d26:
	mov -4064(%RBP),%RSP
	add $-4344, %RSP
uuid_0000000000076d29:
	mov -3952(%RBP),%RSP
	add $-4344, %RSP
uuid_0000000000076d2c:
	mov -3944(%RBP),%RSP
	add $-4344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3936(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d58
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d48
	jmp uuid_0000000000076d4a
uuid_0000000000076d48:
	push %RBP
	pushq -4384(%RBP)
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq $0
	push %RBP
	mov -4456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d36
	jmp uuid_0000000000076d38
uuid_0000000000076d36:
	push %RBP
	mov -4448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076d33
	jmp uuid_0000000000076d35
uuid_0000000000076d33:
	push %RBP
	mov -4440(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076d30
	jmp uuid_0000000000076d32
uuid_0000000000076d30:
	movb $1, -4464(%rbp)
uuid_0000000000076d32:
	mov -4528(%RBP),%RSP
	add $-4536, %RSP
uuid_0000000000076d35:
	mov -4480(%RBP),%RSP
	add $-4536, %RSP
uuid_0000000000076d38:
	mov -4472(%RBP),%RSP
	add $-4536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d45
	jmp uuid_0000000000076d47
uuid_0000000000076d45:
	push %RBP
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d3f
	jmp uuid_0000000000076d41
uuid_0000000000076d3f:
	push %RBP
	mov -4560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076d3c
	jmp uuid_0000000000076d3e
uuid_0000000000076d3c:
	push %RBP
	mov -4552(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076d39
	jmp uuid_0000000000076d3b
uuid_0000000000076d39:
	movb $1, -4576(%rbp)
uuid_0000000000076d3b:
	mov -4640(%RBP),%RSP
	add $-4648, %RSP
uuid_0000000000076d3e:
	mov -4592(%RBP),%RSP
	add $-4648, %RSP
uuid_0000000000076d41:
	mov -4584(%RBP),%RSP
	add $-4648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d42
	jmp uuid_0000000000076d44
uuid_0000000000076d42:
	movb $1, -4416(%rbp)
uuid_0000000000076d44:
	mov -4544(%RBP),%RSP
	add $-4648, %RSP
uuid_0000000000076d47:
	mov -4432(%RBP),%RSP
	add $-4648, %RSP
uuid_0000000000076d4a:
	mov -4424(%RBP),%RSP
	add $-4648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d55
	push %RBP
	jmp uuid_0000000000076d52
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076d51
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076d54
uuid_0000000000076d52:
uuid_0000000000076d54:
	mov -4656(%RBP),%RSP
	add $-4656, %RSP
	jmp uuid_0000000000076d57
uuid_0000000000076d55:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4648(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d4e
	jmp uuid_0000000000076d50
uuid_0000000000076d4e:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d4b
	jmp uuid_0000000000076d4d
uuid_0000000000076d4b:
	movq $1, -64(%rbp)
uuid_0000000000076d4d:
	mov -4664(%RBP),%RSP
	add $-4664, %RSP
uuid_0000000000076d50:
	mov -4656(%RBP),%RSP
	add $-4664, %RSP
uuid_0000000000076d57:
	mov -4352(%RBP),%RSP
	add $-4664, %RSP
	jmp uuid_0000000000076d5a
uuid_0000000000076d58:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4056(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d2d
	jmp uuid_0000000000076d2f
uuid_0000000000076d2d:
	movq $1, -64(%rbp)
uuid_0000000000076d2f:
	mov -4352(%RBP),%RSP
	add $-4352, %RSP
uuid_0000000000076d5a:
	mov -3872(%RBP),%RSP
	add $-4352, %RSP
	jmp uuid_0000000000076d5d
uuid_0000000000076d5b:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000076d5d:
	mov -3552(%RBP),%RSP
	add $-3864, %RSP
	jmp uuid_0000000000076d60
uuid_0000000000076d5e:
	movq $1, -64(%rbp)
uuid_0000000000076d60:
	mov -3152(%RBP),%RSP
	add $-3544, %RSP
	jmp uuid_0000000000076d63
uuid_0000000000076d61:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076cbd
	jmp uuid_0000000000076cbf
uuid_0000000000076cbd:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000076cbf:
	mov -3152(%RBP),%RSP
	add $-3152, %RSP
uuid_0000000000076d63:
	mov -2560(%RBP),%RSP
	add $-3152, %RSP
	jmp uuid_0000000000076d66
uuid_0000000000076d64:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c84
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_0000000000076c86
uuid_0000000000076c84:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000076c86:
	mov -2560(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000076d66:
	mov -1968(%RBP),%RSP
	add $-2560, %RSP
	jmp uuid_0000000000076d69
uuid_0000000000076d67:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076c4b
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_0000000000076c4d
uuid_0000000000076c4b:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000076c4d:
	mov -1968(%RBP),%RSP
	add $-1968, %RSP
uuid_0000000000076d69:
	mov -1104(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_0000000000076d6c
uuid_0000000000076d6a:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bf4
	jmp uuid_0000000000076bf6
uuid_0000000000076bf4:
	movq $1, -64(%rbp)
uuid_0000000000076bf6:
	mov -1104(%RBP),%RSP
	add $-1104, %RSP
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bf7
	jmp uuid_0000000000076bf9
uuid_0000000000076bf7:
	movq $1, -64(%rbp)
uuid_0000000000076bf9:
	mov -1112(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000076d6c:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_0000000000076d6f
uuid_0000000000076d6d:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bdf
	jmp uuid_0000000000076be1
uuid_0000000000076bdf:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076bdc
	jmp uuid_0000000000076bde
uuid_0000000000076bdc:
	movq $1, -64(%rbp)
uuid_0000000000076bde:
	mov -888(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000076be1:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000076d6f:
	mov -656(%RBP),%RSP
	add $-888, %RSP
	jmp uuid_0000000000076d72
uuid_0000000000076d70:
	movq $1, -64(%rbp)
uuid_0000000000076d72:
	mov -480(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_0000000000076d75
uuid_0000000000076d73:
	movq $1, -64(%rbp)
uuid_0000000000076d75:
	mov -248(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_0000000000076d78
uuid_0000000000076d76:
	movq $1, -64(%rbp)
uuid_0000000000076d78:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d79
	jmp uuid_0000000000076d7b
uuid_0000000000076d79:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076d7b:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_inner_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d82
	jmp uuid_0000000000076d84
uuid_0000000000076d82:
	push %RBP
	jmp uuid_0000000000076d7f
	jmp uuid_0000000000076d81
uuid_0000000000076d7f:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d7c
	jmp uuid_0000000000076d7e
uuid_0000000000076d7c:
	movb $1, -304(%rbp)
uuid_0000000000076d7e:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000076d81:
	mov -320(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000076d84:
	mov -312(%RBP),%RSP
	add $-352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fbc
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d9a
	jmp uuid_0000000000076d9c
uuid_0000000000076d9a:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d8b
	jmp uuid_0000000000076d8d
uuid_0000000000076d8b:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d88
	jmp uuid_0000000000076d8a
uuid_0000000000076d88:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076d85
	jmp uuid_0000000000076d87
uuid_0000000000076d85:
	movb $1, -472(%rbp)
uuid_0000000000076d87:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000076d8a:
	mov -488(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000076d8d:
	mov -480(%RBP),%RSP
	add $-544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d97
	jmp uuid_0000000000076d99
uuid_0000000000076d97:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076d91
	jmp uuid_0000000000076d93
uuid_0000000000076d91:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076d8e
	jmp uuid_0000000000076d90
uuid_0000000000076d8e:
	movb $1, -584(%rbp)
uuid_0000000000076d90:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000076d93:
	mov -592(%RBP),%RSP
	add $-608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076d94
	jmp uuid_0000000000076d96
uuid_0000000000076d94:
	movb $1, -424(%rbp)
uuid_0000000000076d96:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000076d99:
	mov -440(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000076d9c:
	mov -432(%RBP),%RSP
	add $-608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fb9
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076db5
	jmp uuid_0000000000076db7
uuid_0000000000076db5:
	push %RBP
	jmp uuid_0000000000076db2
	jmp uuid_0000000000076db4
uuid_0000000000076db2:
	push %RBP
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076dac
	jmp uuid_0000000000076dae
uuid_0000000000076dac:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076da3
	jmp uuid_0000000000076da5
uuid_0000000000076da3:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076da0
	jmp uuid_0000000000076da2
uuid_0000000000076da0:
	push %RBP
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	jmp uuid_0000000000076d9d
	jmp uuid_0000000000076d9f
uuid_0000000000076d9d:
	movb $1, -800(%rbp)
uuid_0000000000076d9f:
	mov -864(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000076da2:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000076da5:
	mov -808(%RBP),%RSP
	add $-888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076da9
	jmp uuid_0000000000076dab
uuid_0000000000076da9:
	push %RBP
	mov -712(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $uuid_0000000000076ba8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076da6
	jmp uuid_0000000000076da8
uuid_0000000000076da6:
	movb $1, -736(%rbp)
uuid_0000000000076da8:
	mov -896(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076dab:
	mov -752(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076dae:
	mov -744(%RBP),%RSP
	add $-904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076daf
	jmp uuid_0000000000076db1
uuid_0000000000076daf:
	movb $1, -680(%rbp)
uuid_0000000000076db1:
	mov -704(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076db4:
	mov -696(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076db7:
	mov -688(%RBP),%RSP
	add $-904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fb6
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076dc4
	jmp uuid_0000000000076dc6
uuid_0000000000076dc4:
	push %RBP
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	jmp uuid_0000000000076dc1
	jmp uuid_0000000000076dc3
uuid_0000000000076dc1:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076dbb
	jmp uuid_0000000000076dbd
uuid_0000000000076dbb:
	push %RBP
	mov -1040(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076db8
	jmp uuid_0000000000076dba
uuid_0000000000076db8:
	movb $1, -1056(%rbp)
uuid_0000000000076dba:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076dbd:
	mov -1064(%RBP),%RSP
	add $-1080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076dbe
	jmp uuid_0000000000076dc0
uuid_0000000000076dbe:
	movb $1, -976(%rbp)
uuid_0000000000076dc0:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076dc3:
	mov -992(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000076dc6:
	mov -984(%RBP),%RSP
	add $-1080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fb3
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076dd6
	jmp uuid_0000000000076dd8
uuid_0000000000076dd6:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	jmp uuid_0000000000076dd3
	jmp uuid_0000000000076dd5
uuid_0000000000076dd3:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076dcd
	jmp uuid_0000000000076dcf
uuid_0000000000076dcd:
	push %RBP
	mov -1216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076dca
	jmp uuid_0000000000076dcc
uuid_0000000000076dca:
	push %RBP
	mov -1208(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076dc7
	jmp uuid_0000000000076dc9
uuid_0000000000076dc7:
	movb $1, -1232(%rbp)
uuid_0000000000076dc9:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000076dcc:
	mov -1248(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000076dcf:
	mov -1240(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076dd0
	jmp uuid_0000000000076dd2
uuid_0000000000076dd0:
	movb $1, -1152(%rbp)
uuid_0000000000076dd2:
	mov -1200(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000076dd5:
	mov -1168(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000076dd8:
	mov -1160(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fb0
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e0d
	jmp uuid_0000000000076e0f
uuid_0000000000076e0d:
	push %RBP
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e04
	jmp uuid_0000000000076e06
uuid_0000000000076e04:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076e01
	jmp uuid_0000000000076e03
uuid_0000000000076e01:
	push %RBP
	mov -1400(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076dfe
	jmp uuid_0000000000076e00
uuid_0000000000076dfe:
	movb $1, -1424(%rbp)
uuid_0000000000076e00:
	mov -1472(%RBP),%RSP
	add $-1496, %RSP
uuid_0000000000076e03:
	mov -1440(%RBP),%RSP
	add $-1496, %RSP
uuid_0000000000076e06:
	mov -1432(%RBP),%RSP
	add $-1496, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e0a
	jmp uuid_0000000000076e0c
uuid_0000000000076e0a:
	push %RBP
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	jmp uuid_0000000000076e07
	jmp uuid_0000000000076e09
uuid_0000000000076e07:
	movb $1, -1376(%rbp)
uuid_0000000000076e09:
	mov -1504(%RBP),%RSP
	add $-1528, %RSP
uuid_0000000000076e0c:
	mov -1392(%RBP),%RSP
	add $-1528, %RSP
uuid_0000000000076e0f:
	mov -1384(%RBP),%RSP
	add $-1528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fad
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e8f
	jmp uuid_0000000000076e91
uuid_0000000000076e8f:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e59
	jmp uuid_0000000000076e5b
uuid_0000000000076e59:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e50
	jmp uuid_0000000000076e52
uuid_0000000000076e50:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e47
	jmp uuid_0000000000076e49
uuid_0000000000076e47:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e44
	jmp uuid_0000000000076e46
uuid_0000000000076e44:
	push %RBP
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_0000000000076e41
	jmp uuid_0000000000076e43
uuid_0000000000076e41:
	movb $1, -1776(%rbp)
uuid_0000000000076e43:
	mov -1840(%RBP),%RSP
	add $-1864, %RSP
uuid_0000000000076e46:
	mov -1792(%RBP),%RSP
	add $-1864, %RSP
uuid_0000000000076e49:
	mov -1784(%RBP),%RSP
	add $-1864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e4d
	jmp uuid_0000000000076e4f
uuid_0000000000076e4d:
	push %RBP
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_0000000000076e4a
	jmp uuid_0000000000076e4c
uuid_0000000000076e4a:
	movb $1, -1712(%rbp)
uuid_0000000000076e4c:
	mov -1872(%RBP),%RSP
	add $-1896, %RSP
uuid_0000000000076e4f:
	mov -1728(%RBP),%RSP
	add $-1896, %RSP
uuid_0000000000076e52:
	mov -1720(%RBP),%RSP
	add $-1896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e56
	jmp uuid_0000000000076e58
uuid_0000000000076e56:
	push %RBP
	mov -1624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e53
	jmp uuid_0000000000076e55
uuid_0000000000076e53:
	movb $1, -1648(%rbp)
uuid_0000000000076e55:
	mov -1904(%RBP),%RSP
	add $-1912, %RSP
uuid_0000000000076e58:
	mov -1664(%RBP),%RSP
	add $-1912, %RSP
uuid_0000000000076e5b:
	mov -1656(%RBP),%RSP
	add $-1912, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e8c
	jmp uuid_0000000000076e8e
uuid_0000000000076e8c:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1944(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e86
	jmp uuid_0000000000076e88
uuid_0000000000076e86:
	push %RBP
	mov -1936(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e7d
	jmp uuid_0000000000076e7f
uuid_0000000000076e7d:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e62
	jmp uuid_0000000000076e64
uuid_0000000000076e62:
	push %RBP
	mov -2064(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e5f
	jmp uuid_0000000000076e61
uuid_0000000000076e5f:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	jmp uuid_0000000000076e5c
	jmp uuid_0000000000076e5e
uuid_0000000000076e5c:
	movb $1, -2080(%rbp)
uuid_0000000000076e5e:
	mov -2144(%RBP),%RSP
	add $-2168, %RSP
uuid_0000000000076e61:
	mov -2096(%RBP),%RSP
	add $-2168, %RSP
uuid_0000000000076e64:
	mov -2088(%RBP),%RSP
	add $-2168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2080(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e7a
	jmp uuid_0000000000076e7c
uuid_0000000000076e7a:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e74
	jmp uuid_0000000000076e76
uuid_0000000000076e74:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e6b
	jmp uuid_0000000000076e6d
uuid_0000000000076e6b:
	push %RBP
	mov -2256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e68
	jmp uuid_0000000000076e6a
uuid_0000000000076e68:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	jmp uuid_0000000000076e65
	jmp uuid_0000000000076e67
uuid_0000000000076e65:
	movb $1, -2272(%rbp)
uuid_0000000000076e67:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000076e6a:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000076e6d:
	mov -2280(%RBP),%RSP
	add $-2360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e71
	jmp uuid_0000000000076e73
uuid_0000000000076e71:
	push %RBP
	mov -2184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2376(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e6e
	jmp uuid_0000000000076e70
uuid_0000000000076e6e:
	movb $1, -2208(%rbp)
uuid_0000000000076e70:
	mov -2368(%RBP),%RSP
	add $-2376, %RSP
uuid_0000000000076e73:
	mov -2224(%RBP),%RSP
	add $-2376, %RSP
uuid_0000000000076e76:
	mov -2216(%RBP),%RSP
	add $-2376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e77
	jmp uuid_0000000000076e79
uuid_0000000000076e77:
	movb $1, -2016(%rbp)
uuid_0000000000076e79:
	mov -2176(%RBP),%RSP
	add $-2376, %RSP
uuid_0000000000076e7c:
	mov -2032(%RBP),%RSP
	add $-2376, %RSP
uuid_0000000000076e7f:
	mov -2024(%RBP),%RSP
	add $-2376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e83
	jmp uuid_0000000000076e85
uuid_0000000000076e83:
	push %RBP
	mov -1928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2392(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e80
	jmp uuid_0000000000076e82
uuid_0000000000076e80:
	movb $1, -1952(%rbp)
uuid_0000000000076e82:
	mov -2384(%RBP),%RSP
	add $-2392, %RSP
uuid_0000000000076e85:
	mov -1968(%RBP),%RSP
	add $-2392, %RSP
uuid_0000000000076e88:
	mov -1960(%RBP),%RSP
	add $-2392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1952(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e89
	jmp uuid_0000000000076e8b
uuid_0000000000076e89:
	movb $1, -1600(%rbp)
uuid_0000000000076e8b:
	mov -1920(%RBP),%RSP
	add $-2392, %RSP
uuid_0000000000076e8e:
	mov -1616(%RBP),%RSP
	add $-2392, %RSP
uuid_0000000000076e91:
	mov -1608(%RBP),%RSP
	add $-2392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076faa
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -2456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ec8
	jmp uuid_0000000000076eca
uuid_0000000000076ec8:
	push %RBP
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	jmp uuid_0000000000076ec5
	jmp uuid_0000000000076ec7
uuid_0000000000076ec5:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq $0
	push %RBP
	mov -2536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ebf
	jmp uuid_0000000000076ec1
uuid_0000000000076ebf:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076eb6
	jmp uuid_0000000000076eb8
uuid_0000000000076eb6:
	push %RBP
	mov -2592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e9b
	jmp uuid_0000000000076e9d
uuid_0000000000076e9b:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e98
	jmp uuid_0000000000076e9a
uuid_0000000000076e98:
	push %RBP
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	jmp uuid_0000000000076e95
	jmp uuid_0000000000076e97
uuid_0000000000076e95:
	movb $1, -2672(%rbp)
uuid_0000000000076e97:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
uuid_0000000000076e9a:
	mov -2688(%RBP),%RSP
	add $-2760, %RSP
uuid_0000000000076e9d:
	mov -2680(%RBP),%RSP
	add $-2760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076eb3
	jmp uuid_0000000000076eb5
uuid_0000000000076eb3:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ead
	jmp uuid_0000000000076eaf
uuid_0000000000076ead:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ea4
	jmp uuid_0000000000076ea6
uuid_0000000000076ea4:
	push %RBP
	mov -2848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2920(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ea1
	jmp uuid_0000000000076ea3
uuid_0000000000076ea1:
	push %RBP
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	jmp uuid_0000000000076e9e
	jmp uuid_0000000000076ea0
uuid_0000000000076e9e:
	movb $1, -2864(%rbp)
uuid_0000000000076ea0:
	mov -2928(%RBP),%RSP
	add $-2952, %RSP
uuid_0000000000076ea3:
	mov -2880(%RBP),%RSP
	add $-2952, %RSP
uuid_0000000000076ea6:
	mov -2872(%RBP),%RSP
	add $-2952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076eaa
	jmp uuid_0000000000076eac
uuid_0000000000076eaa:
	push %RBP
	mov -2776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ea7
	jmp uuid_0000000000076ea9
uuid_0000000000076ea7:
	movb $1, -2800(%rbp)
uuid_0000000000076ea9:
	mov -2960(%RBP),%RSP
	add $-2968, %RSP
uuid_0000000000076eac:
	mov -2816(%RBP),%RSP
	add $-2968, %RSP
uuid_0000000000076eaf:
	mov -2808(%RBP),%RSP
	add $-2968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076eb0
	jmp uuid_0000000000076eb2
uuid_0000000000076eb0:
	movb $1, -2608(%rbp)
uuid_0000000000076eb2:
	mov -2768(%RBP),%RSP
	add $-2968, %RSP
uuid_0000000000076eb5:
	mov -2624(%RBP),%RSP
	add $-2968, %RSP
uuid_0000000000076eb8:
	mov -2616(%RBP),%RSP
	add $-2968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ebc
	jmp uuid_0000000000076ebe
uuid_0000000000076ebc:
	push %RBP
	mov -2520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2984(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076eb9
	jmp uuid_0000000000076ebb
uuid_0000000000076eb9:
	movb $1, -2544(%rbp)
uuid_0000000000076ebb:
	mov -2976(%RBP),%RSP
	add $-2984, %RSP
uuid_0000000000076ebe:
	mov -2560(%RBP),%RSP
	add $-2984, %RSP
uuid_0000000000076ec1:
	mov -2552(%RBP),%RSP
	add $-2984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ec2
	jmp uuid_0000000000076ec4
uuid_0000000000076ec2:
	movb $1, -2464(%rbp)
uuid_0000000000076ec4:
	mov -2512(%RBP),%RSP
	add $-2984, %RSP
uuid_0000000000076ec7:
	mov -2480(%RBP),%RSP
	add $-2984, %RSP
uuid_0000000000076eca:
	mov -2472(%RBP),%RSP
	add $-2984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fa7
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f01
	jmp uuid_0000000000076f03
uuid_0000000000076f01:
	push %RBP
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ee6
	jmp uuid_0000000000076ee8
uuid_0000000000076ee6:
	push %RBP
	mov -3088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076edd
	jmp uuid_0000000000076edf
uuid_0000000000076edd:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ed4
	jmp uuid_0000000000076ed6
uuid_0000000000076ed4:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ed1
	jmp uuid_0000000000076ed3
uuid_0000000000076ed1:
	push %RBP
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	jmp uuid_0000000000076ece
	jmp uuid_0000000000076ed0
uuid_0000000000076ece:
	movb $1, -3232(%rbp)
uuid_0000000000076ed0:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_0000000000076ed3:
	mov -3248(%RBP),%RSP
	add $-3320, %RSP
uuid_0000000000076ed6:
	mov -3240(%RBP),%RSP
	add $-3320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076eda
	jmp uuid_0000000000076edc
uuid_0000000000076eda:
	push %RBP
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	jmp uuid_0000000000076ed7
	jmp uuid_0000000000076ed9
uuid_0000000000076ed7:
	movb $1, -3168(%rbp)
uuid_0000000000076ed9:
	mov -3328(%RBP),%RSP
	add $-3352, %RSP
uuid_0000000000076edc:
	mov -3184(%RBP),%RSP
	add $-3352, %RSP
uuid_0000000000076edf:
	mov -3176(%RBP),%RSP
	add $-3352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ee3
	jmp uuid_0000000000076ee5
uuid_0000000000076ee3:
	push %RBP
	mov -3080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ee0
	jmp uuid_0000000000076ee2
uuid_0000000000076ee0:
	movb $1, -3104(%rbp)
uuid_0000000000076ee2:
	mov -3360(%RBP),%RSP
	add $-3368, %RSP
uuid_0000000000076ee5:
	mov -3120(%RBP),%RSP
	add $-3368, %RSP
uuid_0000000000076ee8:
	mov -3112(%RBP),%RSP
	add $-3368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076efe
	jmp uuid_0000000000076f00
uuid_0000000000076efe:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq $0
	push %RBP
	mov -3400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ef8
	jmp uuid_0000000000076efa
uuid_0000000000076ef8:
	push %RBP
	mov -3392(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076eef
	jmp uuid_0000000000076ef1
uuid_0000000000076eef:
	push %RBP
	mov -3456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076eec
	jmp uuid_0000000000076eee
uuid_0000000000076eec:
	push %RBP
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	jmp uuid_0000000000076ee9
	jmp uuid_0000000000076eeb
uuid_0000000000076ee9:
	movb $1, -3472(%rbp)
uuid_0000000000076eeb:
	mov -3536(%RBP),%RSP
	add $-3560, %RSP
uuid_0000000000076eee:
	mov -3488(%RBP),%RSP
	add $-3560, %RSP
uuid_0000000000076ef1:
	mov -3480(%RBP),%RSP
	add $-3560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ef5
	jmp uuid_0000000000076ef7
uuid_0000000000076ef5:
	push %RBP
	mov -3384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3576(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ef2
	jmp uuid_0000000000076ef4
uuid_0000000000076ef2:
	movb $1, -3408(%rbp)
uuid_0000000000076ef4:
	mov -3568(%RBP),%RSP
	add $-3576, %RSP
uuid_0000000000076ef7:
	mov -3424(%RBP),%RSP
	add $-3576, %RSP
uuid_0000000000076efa:
	mov -3416(%RBP),%RSP
	add $-3576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076efb
	jmp uuid_0000000000076efd
uuid_0000000000076efb:
	movb $1, -3056(%rbp)
uuid_0000000000076efd:
	mov -3376(%RBP),%RSP
	add $-3576, %RSP
uuid_0000000000076f00:
	mov -3072(%RBP),%RSP
	add $-3576, %RSP
uuid_0000000000076f03:
	mov -3064(%RBP),%RSP
	add $-3576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fa4
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f28
	jmp uuid_0000000000076f2a
uuid_0000000000076f28:
	push %RBP
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f0d
	jmp uuid_0000000000076f0f
uuid_0000000000076f0d:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f0a
	jmp uuid_0000000000076f0c
uuid_0000000000076f0a:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3768(%rbp)
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f07
	jmp uuid_0000000000076f09
uuid_0000000000076f07:
	movb $1, -3696(%rbp)
uuid_0000000000076f09:
	mov -3760(%RBP),%RSP
	add $-3768, %RSP
uuid_0000000000076f0c:
	mov -3712(%RBP),%RSP
	add $-3768, %RSP
uuid_0000000000076f0f:
	mov -3704(%RBP),%RSP
	add $-3768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f25
	jmp uuid_0000000000076f27
uuid_0000000000076f25:
	push %RBP
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq $0
	push %RBP
	mov -3800(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f1f
	jmp uuid_0000000000076f21
uuid_0000000000076f1f:
	push %RBP
	mov -3792(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f16
	jmp uuid_0000000000076f18
uuid_0000000000076f16:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f13
	jmp uuid_0000000000076f15
uuid_0000000000076f13:
	push %RBP
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	jmp uuid_0000000000076f10
	jmp uuid_0000000000076f12
uuid_0000000000076f10:
	movb $1, -3872(%rbp)
uuid_0000000000076f12:
	mov -3936(%RBP),%RSP
	add $-3960, %RSP
uuid_0000000000076f15:
	mov -3888(%RBP),%RSP
	add $-3960, %RSP
uuid_0000000000076f18:
	mov -3880(%RBP),%RSP
	add $-3960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f1c
	jmp uuid_0000000000076f1e
uuid_0000000000076f1c:
	push %RBP
	mov -3784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3976(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f19
	jmp uuid_0000000000076f1b
uuid_0000000000076f19:
	movb $1, -3808(%rbp)
uuid_0000000000076f1b:
	mov -3968(%RBP),%RSP
	add $-3976, %RSP
uuid_0000000000076f1e:
	mov -3824(%RBP),%RSP
	add $-3976, %RSP
uuid_0000000000076f21:
	mov -3816(%RBP),%RSP
	add $-3976, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f22
	jmp uuid_0000000000076f24
uuid_0000000000076f22:
	movb $1, -3648(%rbp)
uuid_0000000000076f24:
	mov -3776(%RBP),%RSP
	add $-3976, %RSP
uuid_0000000000076f27:
	mov -3664(%RBP),%RSP
	add $-3976, %RSP
uuid_0000000000076f2a:
	mov -3656(%RBP),%RSP
	add $-3976, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fa1
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f43
	jmp uuid_0000000000076f45
uuid_0000000000076f43:
	push %RBP
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	jmp uuid_0000000000076f40
	jmp uuid_0000000000076f42
uuid_0000000000076f40:
	push %RBP
	pushq -3992(%RBP)
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq $0
	push %RBP
	mov -4120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f3a
	jmp uuid_0000000000076f3c
uuid_0000000000076f3a:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f31
	jmp uuid_0000000000076f33
uuid_0000000000076f31:
	push %RBP
	mov -4176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f2e
	jmp uuid_0000000000076f30
uuid_0000000000076f2e:
	push %RBP
	pushq -4152(%RBP)
	pushq -4160(%RBP)
	pushq -4168(%RBP)
	jmp uuid_0000000000076f2b
	jmp uuid_0000000000076f2d
uuid_0000000000076f2b:
	movb $1, -4192(%rbp)
uuid_0000000000076f2d:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
uuid_0000000000076f30:
	mov -4208(%RBP),%RSP
	add $-4280, %RSP
uuid_0000000000076f33:
	mov -4200(%RBP),%RSP
	add $-4280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f37
	jmp uuid_0000000000076f39
uuid_0000000000076f37:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f34
	jmp uuid_0000000000076f36
uuid_0000000000076f34:
	movb $1, -4128(%rbp)
uuid_0000000000076f36:
	mov -4288(%RBP),%RSP
	add $-4296, %RSP
uuid_0000000000076f39:
	mov -4144(%RBP),%RSP
	add $-4296, %RSP
uuid_0000000000076f3c:
	mov -4136(%RBP),%RSP
	add $-4296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f3d
	jmp uuid_0000000000076f3f
uuid_0000000000076f3d:
	movb $1, -4048(%rbp)
uuid_0000000000076f3f:
	mov -4096(%RBP),%RSP
	add $-4296, %RSP
uuid_0000000000076f42:
	mov -4064(%RBP),%RSP
	add $-4296, %RSP
uuid_0000000000076f45:
	mov -4056(%RBP),%RSP
	add $-4296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f9e
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f70
	jmp uuid_0000000000076f72
uuid_0000000000076f70:
	push %RBP
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f4c
	jmp uuid_0000000000076f4e
uuid_0000000000076f4c:
	push %RBP
	mov -4400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f49
	jmp uuid_0000000000076f4b
uuid_0000000000076f49:
	push %RBP
	mov -4392(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076f46
	jmp uuid_0000000000076f48
uuid_0000000000076f46:
	movb $1, -4416(%rbp)
uuid_0000000000076f48:
	mov -4480(%RBP),%RSP
	add $-4488, %RSP
uuid_0000000000076f4b:
	mov -4432(%RBP),%RSP
	add $-4488, %RSP
uuid_0000000000076f4e:
	mov -4424(%RBP),%RSP
	add $-4488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f6d
	jmp uuid_0000000000076f6f
uuid_0000000000076f6d:
	push %RBP
	pushq -4312(%RBP)
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq $0
	push %RBP
	mov -4520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f67
	jmp uuid_0000000000076f69
uuid_0000000000076f67:
	push %RBP
	mov -4512(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f5e
	jmp uuid_0000000000076f60
uuid_0000000000076f5e:
	push %RBP
	mov -4576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f5b
	jmp uuid_0000000000076f5d
uuid_0000000000076f5b:
	push %RBP
	pushq -4552(%RBP)
	pushq -4560(%RBP)
	pushq -4568(%RBP)
	pushq $0
	push %RBP
	mov -4680(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f55
	jmp uuid_0000000000076f57
uuid_0000000000076f55:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4744(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f52
	jmp uuid_0000000000076f54
uuid_0000000000076f52:
	push %RBP
	mov -4664(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076f4f
	jmp uuid_0000000000076f51
uuid_0000000000076f4f:
	movb $1, -4688(%rbp)
uuid_0000000000076f51:
	mov -4752(%RBP),%RSP
	add $-4760, %RSP
uuid_0000000000076f54:
	mov -4704(%RBP),%RSP
	add $-4760, %RSP
uuid_0000000000076f57:
	mov -4696(%RBP),%RSP
	add $-4760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4688(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f58
	jmp uuid_0000000000076f5a
uuid_0000000000076f58:
	movb $1, -4592(%rbp)
uuid_0000000000076f5a:
	mov -4656(%RBP),%RSP
	add $-4760, %RSP
uuid_0000000000076f5d:
	mov -4608(%RBP),%RSP
	add $-4760, %RSP
uuid_0000000000076f60:
	mov -4600(%RBP),%RSP
	add $-4760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f64
	jmp uuid_0000000000076f66
uuid_0000000000076f64:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4776(%rbp)
	pushq $uuid_0000000000076d1a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f61
	jmp uuid_0000000000076f63
uuid_0000000000076f61:
	movb $1, -4528(%rbp)
uuid_0000000000076f63:
	mov -4768(%RBP),%RSP
	add $-4776, %RSP
uuid_0000000000076f66:
	mov -4544(%RBP),%RSP
	add $-4776, %RSP
uuid_0000000000076f69:
	mov -4536(%RBP),%RSP
	add $-4776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f6a
	jmp uuid_0000000000076f6c
uuid_0000000000076f6a:
	movb $1, -4368(%rbp)
uuid_0000000000076f6c:
	mov -4496(%RBP),%RSP
	add $-4776, %RSP
uuid_0000000000076f6f:
	mov -4384(%RBP),%RSP
	add $-4776, %RSP
uuid_0000000000076f72:
	mov -4376(%RBP),%RSP
	add $-4776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f9b
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f8e
	jmp uuid_0000000000076f90
uuid_0000000000076f8e:
	push %RBP
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq $0
	push %RBP
	mov -4888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f7c
	jmp uuid_0000000000076f7e
uuid_0000000000076f7c:
	push %RBP
	mov -4880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076f79
	jmp uuid_0000000000076f7b
uuid_0000000000076f79:
	push %RBP
	mov -4872(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076f76
	jmp uuid_0000000000076f78
uuid_0000000000076f76:
	movb $1, -4896(%rbp)
uuid_0000000000076f78:
	mov -4960(%RBP),%RSP
	add $-4968, %RSP
uuid_0000000000076f7b:
	mov -4912(%RBP),%RSP
	add $-4968, %RSP
uuid_0000000000076f7e:
	mov -4904(%RBP),%RSP
	add $-4968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f8b
	jmp uuid_0000000000076f8d
uuid_0000000000076f8b:
	push %RBP
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq -4808(%RBP)
	pushq $0
	push %RBP
	mov -5000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076f85
	jmp uuid_0000000000076f87
uuid_0000000000076f85:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076f82
	jmp uuid_0000000000076f84
uuid_0000000000076f82:
	push %RBP
	mov -4984(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000076f7f
	jmp uuid_0000000000076f81
uuid_0000000000076f7f:
	movb $1, -5008(%rbp)
uuid_0000000000076f81:
	mov -5072(%RBP),%RSP
	add $-5080, %RSP
uuid_0000000000076f84:
	mov -5024(%RBP),%RSP
	add $-5080, %RSP
uuid_0000000000076f87:
	mov -5016(%RBP),%RSP
	add $-5080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5008(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f88
	jmp uuid_0000000000076f8a
uuid_0000000000076f88:
	movb $1, -4848(%rbp)
uuid_0000000000076f8a:
	mov -4976(%RBP),%RSP
	add $-5080, %RSP
uuid_0000000000076f8d:
	mov -4864(%RBP),%RSP
	add $-5080, %RSP
uuid_0000000000076f90:
	mov -4856(%RBP),%RSP
	add $-5080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4848(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f98
	push %RBP
	jmp uuid_0000000000076f95
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076f94
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076f97
uuid_0000000000076f95:
uuid_0000000000076f97:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_0000000000076f9a
uuid_0000000000076f98:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5080(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f91
	jmp uuid_0000000000076f93
uuid_0000000000076f91:
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076f93:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
uuid_0000000000076f9a:
	mov -4784(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_0000000000076f9d
uuid_0000000000076f9b:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4760(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f73
	jmp uuid_0000000000076f75
uuid_0000000000076f73:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076f75:
	mov -4784(%RBP),%RSP
	add $-4784, %RSP
uuid_0000000000076f9d:
	mov -4304(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_0000000000076fa0
uuid_0000000000076f9e:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076fa0:
	mov -3984(%RBP),%RSP
	add $-4296, %RSP
	jmp uuid_0000000000076fa3
uuid_0000000000076fa1:
uuid_0000000000076fa3:
	mov -3584(%RBP),%RSP
	add $-3976, %RSP
	jmp uuid_0000000000076fa6
uuid_0000000000076fa4:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076f04
	jmp uuid_0000000000076f06
uuid_0000000000076f04:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076f06:
	mov -3584(%RBP),%RSP
	add $-3584, %RSP
uuid_0000000000076fa6:
	mov -2992(%RBP),%RSP
	add $-3584, %RSP
	jmp uuid_0000000000076fa9
uuid_0000000000076fa7:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ecb
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_0000000000076ecd
uuid_0000000000076ecb:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076ecd:
	mov -2992(%RBP),%RSP
	add $-2992, %RSP
uuid_0000000000076fa9:
	mov -2400(%RBP),%RSP
	add $-2992, %RSP
	jmp uuid_0000000000076fac
uuid_0000000000076faa:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e92
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_0000000000076e94
uuid_0000000000076e92:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076e94:
	mov -2400(%RBP),%RSP
	add $-2400, %RSP
uuid_0000000000076fac:
	mov -1536(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_0000000000076faf
uuid_0000000000076fad:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e16
	jmp uuid_0000000000076e18
uuid_0000000000076e16:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e13
	jmp uuid_0000000000076e15
uuid_0000000000076e13:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e10
	jmp uuid_0000000000076e12
uuid_0000000000076e10:
	movb $1, -2040(%rbp)
uuid_0000000000076e12:
	mov -2184(%RBP),%RSP
	add $-2304, %RSP
uuid_0000000000076e15:
	mov -2056(%RBP),%RSP
	add $-2304, %RSP
uuid_0000000000076e18:
	mov -2048(%RBP),%RSP
	add $-2304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e3e
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e1f
	jmp uuid_0000000000076e21
uuid_0000000000076e1f:
	push %RBP
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	mov -2704(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e1c
	jmp uuid_0000000000076e1e
uuid_0000000000076e1c:
	push %RBP
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	jmp uuid_0000000000076e19
	jmp uuid_0000000000076e1b
uuid_0000000000076e19:
	movb $1, -2568(%rbp)
uuid_0000000000076e1b:
	mov -2712(%RBP),%RSP
	add $-2832, %RSP
uuid_0000000000076e1e:
	mov -2584(%RBP),%RSP
	add $-2832, %RSP
uuid_0000000000076e21:
	mov -2576(%RBP),%RSP
	add $-2832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e3b
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3088(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e28
	jmp uuid_0000000000076e2a
uuid_0000000000076e28:
	push %RBP
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	jmp uuid_0000000000076e25
	jmp uuid_0000000000076e27
uuid_0000000000076e25:
	push %RBP
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	mov -3360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e22
	jmp uuid_0000000000076e24
uuid_0000000000076e22:
	movb $1, -3096(%rbp)
uuid_0000000000076e24:
	mov -3240(%RBP),%RSP
	add $-3360, %RSP
uuid_0000000000076e27:
	mov -3112(%RBP),%RSP
	add $-3360, %RSP
uuid_0000000000076e2a:
	mov -3104(%RBP),%RSP
	add $-3360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3096(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e38
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076e31
	jmp uuid_0000000000076e33
uuid_0000000000076e31:
	push %RBP
	pushq -3496(%RBP)
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	jmp uuid_0000000000076e2e
	jmp uuid_0000000000076e30
uuid_0000000000076e2e:
	push %RBP
	pushq -3376(%RBP)
	pushq -3384(%RBP)
	pushq -3392(%RBP)
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	pushq -3424(%RBP)
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	pushq -3456(%RBP)
	pushq -3464(%RBP)
	pushq -3472(%RBP)
	pushq -3480(%RBP)
	pushq -3488(%RBP)
	jmp uuid_0000000000076e2b
	jmp uuid_0000000000076e2d
uuid_0000000000076e2b:
	movb $1, -3624(%rbp)
uuid_0000000000076e2d:
	mov -3768(%RBP),%RSP
	add $-3888, %RSP
uuid_0000000000076e30:
	mov -3640(%RBP),%RSP
	add $-3888, %RSP
uuid_0000000000076e33:
	mov -3632(%RBP),%RSP
	add $-3888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076e35
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076e34
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076e37
uuid_0000000000076e35:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076e37:
	mov -3368(%RBP),%RSP
	add $-3888, %RSP
	jmp uuid_0000000000076e3a
uuid_0000000000076e38:
	movq -3232(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -3224(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -3216(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -3208(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3200(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3192(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3184(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3176(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3168(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3160(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3152(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_0000000000076e3a:
	mov -2840(%RBP),%RSP
	add $-3360, %RSP
	jmp uuid_0000000000076e3d
uuid_0000000000076e3b:
	movq -2832(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2824(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2816(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2808(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2800(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2792(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2784(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2776(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2768(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_0000000000076e3d:
	mov -2312(%RBP),%RSP
	add $-2832, %RSP
	jmp uuid_0000000000076e40
uuid_0000000000076e3e:
uuid_0000000000076e40:
	mov -1784(%RBP),%RSP
	add $-2304, %RSP
uuid_0000000000076faf:
	mov -1312(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_0000000000076fb2
uuid_0000000000076fb0:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ddf
	jmp uuid_0000000000076de1
uuid_0000000000076ddf:
	push %RBP
	jmp uuid_0000000000076ddc
	jmp uuid_0000000000076dde
uuid_0000000000076ddc:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076dd9
	jmp uuid_0000000000076ddb
uuid_0000000000076dd9:
	movb $1, -1816(%rbp)
uuid_0000000000076ddb:
	mov -1840(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076dde:
	mov -1832(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076de1:
	mov -1824(%RBP),%RSP
	add $-1960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1816(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076dfb
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076de8
	jmp uuid_0000000000076dea
uuid_0000000000076de8:
	push %RBP
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076de5
	jmp uuid_0000000000076de7
uuid_0000000000076de5:
	push %RBP
	jmp uuid_0000000000076de2
	jmp uuid_0000000000076de4
uuid_0000000000076de2:
	movb $1, -2224(%rbp)
uuid_0000000000076de4:
	mov -2368(%RBP),%RSP
	add $-2368, %RSP
uuid_0000000000076de7:
	mov -2240(%RBP),%RSP
	add $-2368, %RSP
uuid_0000000000076dea:
	mov -2232(%RBP),%RSP
	add $-2368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076df8
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076df1
	jmp uuid_0000000000076df3
uuid_0000000000076df1:
	push %RBP
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	jmp uuid_0000000000076dee
	jmp uuid_0000000000076df0
uuid_0000000000076dee:
	push %RBP
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	jmp uuid_0000000000076deb
	jmp uuid_0000000000076ded
uuid_0000000000076deb:
	movb $1, -2632(%rbp)
uuid_0000000000076ded:
	mov -2776(%RBP),%RSP
	add $-2896, %RSP
uuid_0000000000076df0:
	mov -2648(%RBP),%RSP
	add $-2896, %RSP
uuid_0000000000076df3:
	mov -2640(%RBP),%RSP
	add $-2896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076df5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076df4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076df7
uuid_0000000000076df5:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076df7:
	mov -2376(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_0000000000076dfa
uuid_0000000000076df8:
uuid_0000000000076dfa:
	mov -1968(%RBP),%RSP
	add $-2368, %RSP
	jmp uuid_0000000000076dfd
uuid_0000000000076dfb:
uuid_0000000000076dfd:
	mov -1560(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000076fb2:
	mov -1088(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_0000000000076fb5
uuid_0000000000076fb3:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1080(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076fb5:
	mov -912(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_0000000000076fb8
uuid_0000000000076fb6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076fb8:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_0000000000076fbb
uuid_0000000000076fb9:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -608(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -544(%rbp)
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $6
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076fbb:
	mov -360(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_0000000000076fbe
uuid_0000000000076fbc:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000076fbe:
	mov -240(%RBP),%RSP
	add $-352, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076fca
	jmp uuid_0000000000076fcc
uuid_0000000000076fca:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076fc7
	jmp uuid_0000000000076fc9
uuid_0000000000076fc7:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076fc4
	jmp uuid_0000000000076fc6
uuid_0000000000076fc4:
	movb $1, -400(%rbp)
uuid_0000000000076fc6:
	mov -464(%RBP),%RSP
	add $-504, %RSP
uuid_0000000000076fc9:
	mov -416(%RBP),%RSP
	add $-504, %RSP
uuid_0000000000076fcc:
	mov -408(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076ff2
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076fe5
	jmp uuid_0000000000076fe7
uuid_0000000000076fe5:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076fd3
	jmp uuid_0000000000076fd5
uuid_0000000000076fd3:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076fd0
	jmp uuid_0000000000076fd2
uuid_0000000000076fd0:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_0000000000076fcd
	jmp uuid_0000000000076fcf
uuid_0000000000076fcd:
	movb $1, -672(%rbp)
uuid_0000000000076fcf:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_0000000000076fd2:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_0000000000076fd5:
	mov -680(%RBP),%RSP
	add $-760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fe2
	jmp uuid_0000000000076fe4
uuid_0000000000076fe2:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076fdc
	jmp uuid_0000000000076fde
uuid_0000000000076fdc:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000076fd9
	jmp uuid_0000000000076fdb
uuid_0000000000076fd9:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	jmp uuid_0000000000076fd6
	jmp uuid_0000000000076fd8
uuid_0000000000076fd6:
	movb $1, -816(%rbp)
uuid_0000000000076fd8:
	mov -880(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076fdb:
	mov -832(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076fde:
	mov -824(%RBP),%RSP
	add $-904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fdf
	jmp uuid_0000000000076fe1
uuid_0000000000076fdf:
	movb $1, -608(%rbp)
uuid_0000000000076fe1:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076fe4:
	mov -624(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000076fe7:
	mov -616(%RBP),%RSP
	add $-904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fef
	push %RBP
	jmp uuid_0000000000076fec
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000076feb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000076fee
uuid_0000000000076fec:
uuid_0000000000076fee:
	mov -912(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_0000000000076ff1
uuid_0000000000076fef:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	push %RBP
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000076fe8
	jmp uuid_0000000000076fea
uuid_0000000000076fe8:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_0000000000076fea:
	mov -912(%RBP),%RSP
	add $-912, %RSP
uuid_0000000000076ff1:
	mov -512(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_0000000000076ff4
uuid_0000000000076ff2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_0000000000076ff4:
	mov -304(%RBP),%RSP
	add $-504, %RSP
	subq $120, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
fields_SB_of_SB_type_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007701f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007700d
	jmp uuid_000000000007700f
uuid_000000000007700d:
	push %RBP
	mov -112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077004
	jmp uuid_0000000000077006
uuid_0000000000077004:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ffb
	jmp uuid_0000000000076ffd
uuid_0000000000076ffb:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000076ff8
	jmp uuid_0000000000076ffa
uuid_0000000000076ff8:
	push %RBP
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	jmp uuid_0000000000076ff5
	jmp uuid_0000000000076ff7
uuid_0000000000076ff5:
	movb $1, -256(%rbp)
uuid_0000000000076ff7:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000076ffa:
	mov -272(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000076ffd:
	mov -264(%RBP),%RSP
	add $-344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077001
	jmp uuid_0000000000077003
uuid_0000000000077001:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_0000000000076ffe
	jmp uuid_0000000000077000
uuid_0000000000076ffe:
	movb $1, -192(%rbp)
uuid_0000000000077000:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000077003:
	mov -208(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000077006:
	mov -200(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007700a
	jmp uuid_000000000007700c
uuid_000000000007700a:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077007
	jmp uuid_0000000000077009
uuid_0000000000077007:
	movb $1, -128(%rbp)
uuid_0000000000077009:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007700c:
	mov -144(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007700f:
	mov -136(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007701c
	push %RBP
	jmp uuid_0000000000077019
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077018
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007701b
uuid_0000000000077019:
	pushq $uuid_000000000007635a
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007701b:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007701e
uuid_000000000007701c:
	pushq $uuid_000000000007635a
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007701e:
	mov -96(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000077021
uuid_000000000007701f:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077021:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_type_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770fd
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077025
	jmp uuid_0000000000077027
uuid_0000000000077025:
	push %RBP
	jmp uuid_0000000000077022
	jmp uuid_0000000000077024
uuid_0000000000077022:
	movb $1, -136(%rbp)
uuid_0000000000077024:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000077027:
	mov -144(%RBP),%RSP
	add $-152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770fa
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007702e
	jmp uuid_0000000000077030
uuid_000000000007702e:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007702b
	jmp uuid_000000000007702d
uuid_000000000007702b:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077028
	jmp uuid_000000000007702a
uuid_0000000000077028:
	movb $1, -192(%rbp)
uuid_000000000007702a:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007702d:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000077030:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770f7
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077049
	jmp uuid_000000000007704b
uuid_0000000000077049:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077040
	jmp uuid_0000000000077042
uuid_0000000000077040:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007703d
	jmp uuid_000000000007703f
uuid_000000000007703d:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077037
	jmp uuid_0000000000077039
uuid_0000000000077037:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077034
	jmp uuid_0000000000077036
uuid_0000000000077034:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077031
	jmp uuid_0000000000077033
uuid_0000000000077031:
	movb $1, -464(%rbp)
uuid_0000000000077033:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000077036:
	mov -480(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000077039:
	mov -472(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007703a
	jmp uuid_000000000007703c
uuid_000000000007703a:
	movb $1, -368(%rbp)
uuid_000000000007703c:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007703f:
	mov -384(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000077042:
	mov -376(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077046
	jmp uuid_0000000000077048
uuid_0000000000077046:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $uuid_0000000000076584
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077043
	jmp uuid_0000000000077045
uuid_0000000000077043:
	movb $1, -304(%rbp)
uuid_0000000000077045:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_0000000000077048:
	mov -320(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007704b:
	mov -312(%RBP),%RSP
	add $-552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770f4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077064
	jmp uuid_0000000000077066
uuid_0000000000077064:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007705b
	jmp uuid_000000000007705d
uuid_000000000007705b:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077052
	jmp uuid_0000000000077054
uuid_0000000000077052:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007704f
	jmp uuid_0000000000077051
uuid_000000000007704f:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007704c
	jmp uuid_000000000007704e
uuid_000000000007704c:
	movb $1, -720(%rbp)
uuid_000000000007704e:
	mov -784(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077051:
	mov -736(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077054:
	mov -728(%RBP),%RSP
	add $-808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077058
	jmp uuid_000000000007705a
uuid_0000000000077058:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077055
	jmp uuid_0000000000077057
uuid_0000000000077055:
	movb $1, -656(%rbp)
uuid_0000000000077057:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007705a:
	mov -672(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007705d:
	mov -664(%RBP),%RSP
	add $-840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077061
	jmp uuid_0000000000077063
uuid_0000000000077061:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007705e
	jmp uuid_0000000000077060
uuid_000000000007705e:
	movb $1, -592(%rbp)
uuid_0000000000077060:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_0000000000077063:
	mov -608(%RBP),%RSP
	add $-856, %RSP
uuid_0000000000077066:
	mov -600(%RBP),%RSP
	add $-856, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770f1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007707f
	jmp uuid_0000000000077081
uuid_000000000007707f:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077076
	jmp uuid_0000000000077078
uuid_0000000000077076:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007706d
	jmp uuid_000000000007706f
uuid_000000000007706d:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1080(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007706a
	jmp uuid_000000000007706c
uuid_000000000007706a:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_0000000000077067
	jmp uuid_0000000000077069
uuid_0000000000077067:
	movb $1, -1024(%rbp)
uuid_0000000000077069:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007706c:
	mov -1040(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007706f:
	mov -1032(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077073
	jmp uuid_0000000000077075
uuid_0000000000077073:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_0000000000077070
	jmp uuid_0000000000077072
uuid_0000000000077070:
	movb $1, -960(%rbp)
uuid_0000000000077072:
	mov -1120(%RBP),%RSP
	add $-1144, %RSP
uuid_0000000000077075:
	mov -976(%RBP),%RSP
	add $-1144, %RSP
uuid_0000000000077078:
	mov -968(%RBP),%RSP
	add $-1144, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007707c
	jmp uuid_000000000007707e
uuid_000000000007707c:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077079
	jmp uuid_000000000007707b
uuid_0000000000077079:
	movb $1, -896(%rbp)
uuid_000000000007707b:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007707e:
	mov -912(%RBP),%RSP
	add $-1160, %RSP
uuid_0000000000077081:
	mov -904(%RBP),%RSP
	add $-1160, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770ee
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770a3
	jmp uuid_00000000000770a5
uuid_00000000000770a3:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007709a
	jmp uuid_000000000007709c
uuid_000000000007709a:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077088
	jmp uuid_000000000007708a
uuid_0000000000077088:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077085
	jmp uuid_0000000000077087
uuid_0000000000077085:
	push %RBP
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	jmp uuid_0000000000077082
	jmp uuid_0000000000077084
uuid_0000000000077082:
	movb $1, -1328(%rbp)
uuid_0000000000077084:
	mov -1392(%RBP),%RSP
	add $-1416, %RSP
uuid_0000000000077087:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007708a:
	mov -1336(%RBP),%RSP
	add $-1416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077097
	jmp uuid_0000000000077099
uuid_0000000000077097:
	push %RBP
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077091
	jmp uuid_0000000000077093
uuid_0000000000077091:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007708e
	jmp uuid_0000000000077090
uuid_000000000007708e:
	push %RBP
	mov -1432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007708b
	jmp uuid_000000000007708d
uuid_000000000007708b:
	movb $1, -1456(%rbp)
uuid_000000000007708d:
	mov -1520(%RBP),%RSP
	add $-1528, %RSP
uuid_0000000000077090:
	mov -1472(%RBP),%RSP
	add $-1528, %RSP
uuid_0000000000077093:
	mov -1464(%RBP),%RSP
	add $-1528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077094
	jmp uuid_0000000000077096
uuid_0000000000077094:
	movb $1, -1264(%rbp)
uuid_0000000000077096:
	mov -1424(%RBP),%RSP
	add $-1528, %RSP
uuid_0000000000077099:
	mov -1280(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007709c:
	mov -1272(%RBP),%RSP
	add $-1528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770a0
	jmp uuid_00000000000770a2
uuid_00000000000770a0:
	push %RBP
	mov -1176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_00000000000768da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007709d
	jmp uuid_000000000007709f
uuid_000000000007709d:
	movb $1, -1200(%rbp)
uuid_000000000007709f:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_00000000000770a2:
	mov -1216(%RBP),%RSP
	add $-1544, %RSP
uuid_00000000000770a5:
	mov -1208(%RBP),%RSP
	add $-1544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770eb
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770ac
	jmp uuid_00000000000770ae
uuid_00000000000770ac:
	push %RBP
	jmp uuid_00000000000770a9
	jmp uuid_00000000000770ab
uuid_00000000000770a9:
	push %RBP
	mov -1560(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000770a6
	jmp uuid_00000000000770a8
uuid_00000000000770a6:
	movb $1, -1584(%rbp)
uuid_00000000000770a8:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_00000000000770ab:
	mov -1600(%RBP),%RSP
	add $-1616, %RSP
uuid_00000000000770ae:
	mov -1592(%RBP),%RSP
	add $-1616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770e8
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770da
	jmp uuid_00000000000770dc
uuid_00000000000770da:
	push %RBP
	mov -1640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000770d7
	jmp uuid_00000000000770d9
uuid_00000000000770d7:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000770d4
	jmp uuid_00000000000770d6
uuid_00000000000770d4:
	movb $1, -1656(%rbp)
uuid_00000000000770d6:
	mov -1704(%RBP),%RSP
	add $-1728, %RSP
uuid_00000000000770d9:
	mov -1672(%RBP),%RSP
	add $-1728, %RSP
uuid_00000000000770dc:
	mov -1664(%RBP),%RSP
	add $-1728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770e5
	push %RBP
	jmp uuid_00000000000770e2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000770e1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000770e4
uuid_00000000000770e2:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000770e0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000770e4:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_00000000000770e7
uuid_00000000000770e5:
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770dd
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_00000000000770df
uuid_00000000000770dd:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000770df:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
uuid_00000000000770e7:
	mov -1624(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_00000000000770ea
uuid_00000000000770e8:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -1616(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770c1
	jmp uuid_00000000000770c3
uuid_00000000000770c1:
	push %RBP
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770be
	jmp uuid_00000000000770c0
uuid_00000000000770be:
	push %RBP
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770bb
	jmp uuid_00000000000770bd
uuid_00000000000770bb:
	movb $1, -1744(%rbp)
uuid_00000000000770bd:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000770c0:
	mov -1760(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000770c3:
	mov -1752(%RBP),%RSP
	add $-1816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770d1
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000770ca
	jmp uuid_00000000000770cc
uuid_00000000000770ca:
	push %RBP
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	jmp uuid_00000000000770c7
	jmp uuid_00000000000770c9
uuid_00000000000770c7:
	push %RBP
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_00000000000770c4
	jmp uuid_00000000000770c6
uuid_00000000000770c4:
	movb $1, -1888(%rbp)
uuid_00000000000770c6:
	mov -1936(%RBP),%RSP
	add $-1960, %RSP
uuid_00000000000770c9:
	mov -1904(%RBP),%RSP
	add $-1960, %RSP
uuid_00000000000770cc:
	mov -1896(%RBP),%RSP
	add $-1960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000770ce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000770cd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000770d0
uuid_00000000000770ce:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $8, %RAX
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000770d0:
	mov -1824(%RBP),%RSP
	add $-2104, %RSP
	jmp uuid_00000000000770d3
uuid_00000000000770d1:
uuid_00000000000770d3:
	mov -1680(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000770ea:
	mov -1552(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_00000000000770ed
uuid_00000000000770eb:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000770ed:
	mov -1168(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_00000000000770f0
uuid_00000000000770ee:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000770f0:
	mov -864(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_00000000000770f3
uuid_00000000000770f1:
	movq $8, -40(%rbp)
uuid_00000000000770f3:
	mov -560(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_00000000000770f6
uuid_00000000000770f4:
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000770f6:
	mov -272(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_00000000000770f9
uuid_00000000000770f7:
#call function size-of-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call size_SB_of_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000770f9:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_00000000000770fc
uuid_00000000000770fa:
uuid_00000000000770fc:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_00000000000770ff
uuid_00000000000770fd:
uuid_00000000000770ff:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_aligned_CL_ArrowU64Type:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077100
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq -40(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_0000000000077102
uuid_0000000000077100:
uuid_0000000000077102:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType:
	pushq $0
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077119
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007710c
	jmp uuid_000000000007710e
uuid_000000000007710c:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077109
	jmp uuid_000000000007710b
uuid_0000000000077109:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_0000000000077106
	jmp uuid_0000000000077108
uuid_0000000000077106:
	movb $1, -248(%rbp)
uuid_0000000000077108:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007710b:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007710e:
	mov -256(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077116
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077115
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077118
uuid_0000000000077116:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077112
	jmp uuid_0000000000077114
uuid_0000000000077112:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007710f
	jmp uuid_0000000000077111
uuid_000000000007710f:
	movq $1, -104(%rbp)
uuid_0000000000077111:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000077114:
	mov -344(%RBP),%RSP
	add $-352, %RSP
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
uuid_0000000000077118:
	mov -200(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007711b
uuid_0000000000077119:
uuid_000000000007711b:
	mov -152(%RBP),%RSP
	add $-192, %RSP
	mov -104(%rbp), %RAX
	mov %rbp, %rsp
	sub $96, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077122
	jmp uuid_0000000000077124
uuid_0000000000077122:
	push %RBP
	jmp uuid_000000000007711f
	jmp uuid_0000000000077121
uuid_000000000007711f:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007711c
	jmp uuid_000000000007711e
uuid_000000000007711c:
	movb $1, -128(%rbp)
uuid_000000000007711e:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000077121:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000077124:
	mov -136(%RBP),%RSP
	add $-160, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007717d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007713d
	jmp uuid_000000000007713f
uuid_000000000007713d:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077134
	jmp uuid_0000000000077136
uuid_0000000000077134:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007712b
	jmp uuid_000000000007712d
uuid_000000000007712b:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077128
	jmp uuid_000000000007712a
uuid_0000000000077128:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	jmp uuid_0000000000077125
	jmp uuid_0000000000077127
uuid_0000000000077125:
	movb $1, -328(%rbp)
uuid_0000000000077127:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007712a:
	mov -344(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007712d:
	mov -336(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077131
	jmp uuid_0000000000077133
uuid_0000000000077131:
	push %RBP
	jmp uuid_000000000007712e
	jmp uuid_0000000000077130
uuid_000000000007712e:
	movb $1, -264(%rbp)
uuid_0000000000077130:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000077133:
	mov -280(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000077136:
	mov -272(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007713a
	jmp uuid_000000000007713c
uuid_000000000007713a:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_00000000000768da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077137
	jmp uuid_0000000000077139
uuid_0000000000077137:
	movb $1, -200(%rbp)
uuid_0000000000077139:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007713c:
	mov -216(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007713f:
	mov -208(%RBP),%RSP
	add $-440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007717a
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077158
	jmp uuid_000000000007715a
uuid_0000000000077158:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007714f
	jmp uuid_0000000000077151
uuid_000000000007714f:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077146
	jmp uuid_0000000000077148
uuid_0000000000077146:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077143
	jmp uuid_0000000000077145
uuid_0000000000077143:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_0000000000077140
	jmp uuid_0000000000077142
uuid_0000000000077140:
	movb $1, -608(%rbp)
uuid_0000000000077142:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_0000000000077145:
	mov -624(%RBP),%RSP
	add $-696, %RSP
uuid_0000000000077148:
	mov -616(%RBP),%RSP
	add $-696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007714c
	jmp uuid_000000000007714e
uuid_000000000007714c:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	jmp uuid_0000000000077149
	jmp uuid_000000000007714b
uuid_0000000000077149:
	movb $1, -544(%rbp)
uuid_000000000007714b:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007714e:
	mov -560(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000077151:
	mov -552(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077155
	jmp uuid_0000000000077157
uuid_0000000000077155:
	push %RBP
	mov -456(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077152
	jmp uuid_0000000000077154
uuid_0000000000077152:
	movb $1, -480(%rbp)
uuid_0000000000077154:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_0000000000077157:
	mov -496(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007715a:
	mov -488(%RBP),%RSP
	add $-744, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077177
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077161
	jmp uuid_0000000000077163
uuid_0000000000077161:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007715e
	jmp uuid_0000000000077160
uuid_000000000007715e:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007715b
	jmp uuid_000000000007715d
uuid_000000000007715b:
	movb $1, -784(%rbp)
uuid_000000000007715d:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_0000000000077160:
	mov -800(%RBP),%RSP
	add $-856, %RSP
uuid_0000000000077163:
	mov -792(%RBP),%RSP
	add $-856, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077174
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007716a
	jmp uuid_000000000007716c
uuid_000000000007716a:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077167
	jmp uuid_0000000000077169
uuid_0000000000077167:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077164
	jmp uuid_0000000000077166
uuid_0000000000077164:
	movb $1, -896(%rbp)
uuid_0000000000077166:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000077169:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007716c:
	mov -904(%RBP),%RSP
	add $-968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077171
	push %RBP
	jmp uuid_000000000007716e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007716d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077170
uuid_000000000007716e:
uuid_0000000000077170:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_0000000000077173
uuid_0000000000077171:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000077173:
	mov -864(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_0000000000077176
uuid_0000000000077174:
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000077176:
	mov -752(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_0000000000077179
uuid_0000000000077177:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_0000000000077179:
	mov -448(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007717c
uuid_000000000007717a:
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007717c:
	mov -168(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007717f
uuid_000000000007717d:
uuid_000000000007717f:
	mov -96(%RBP),%RSP
	add $-160, %RSP
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077180
	jmp uuid_0000000000077182
uuid_0000000000077180:
	movq $1, -64(%rbp)
uuid_0000000000077182:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
has_SB_forward_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077192
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007718b
	jmp uuid_000000000007718d
uuid_000000000007718b:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077188
	jmp uuid_000000000007718a
uuid_0000000000077188:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_0000000000077185
	jmp uuid_0000000000077187
uuid_0000000000077185:
	movb $1, -200(%rbp)
uuid_0000000000077187:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007718a:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007718d:
	mov -208(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007718f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007718e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077191
uuid_000000000007718f:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
uuid_0000000000077191:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_0000000000077194
uuid_0000000000077192:
uuid_0000000000077194:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
has_SB_forward_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007719b
	jmp uuid_000000000007719d
uuid_000000000007719b:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077198
	jmp uuid_000000000007719a
uuid_0000000000077198:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077195
	jmp uuid_0000000000077197
uuid_0000000000077195:
	movb $1, -104(%rbp)
uuid_0000000000077197:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007719a:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007719d:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771ef
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771a4
	jmp uuid_00000000000771a6
uuid_00000000000771a4:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000771a1
	jmp uuid_00000000000771a3
uuid_00000000000771a1:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007719e
	jmp uuid_00000000000771a0
uuid_000000000007719e:
	movb $1, -216(%rbp)
uuid_00000000000771a0:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000771a3:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000771a6:
	mov -224(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771ec
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771bf
	jmp uuid_00000000000771c1
uuid_00000000000771bf:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771b6
	jmp uuid_00000000000771b8
uuid_00000000000771b6:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771ad
	jmp uuid_00000000000771af
uuid_00000000000771ad:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771aa
	jmp uuid_00000000000771ac
uuid_00000000000771aa:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_00000000000771a7
	jmp uuid_00000000000771a9
uuid_00000000000771a7:
	movb $1, -456(%rbp)
uuid_00000000000771a9:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_00000000000771ac:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_00000000000771af:
	mov -464(%RBP),%RSP
	add $-544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771b3
	jmp uuid_00000000000771b5
uuid_00000000000771b3:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	jmp uuid_00000000000771b0
	jmp uuid_00000000000771b2
uuid_00000000000771b0:
	movb $1, -392(%rbp)
uuid_00000000000771b2:
	mov -552(%RBP),%RSP
	add $-576, %RSP
uuid_00000000000771b5:
	mov -408(%RBP),%RSP
	add $-576, %RSP
uuid_00000000000771b8:
	mov -400(%RBP),%RSP
	add $-576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771bc
	jmp uuid_00000000000771be
uuid_00000000000771bc:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_00000000000768da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771b9
	jmp uuid_00000000000771bb
uuid_00000000000771b9:
	movb $1, -328(%rbp)
uuid_00000000000771bb:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000771be:
	mov -344(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000771c1:
	mov -336(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771e9
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771c8
	jmp uuid_00000000000771ca
uuid_00000000000771c8:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000771c5
	jmp uuid_00000000000771c7
uuid_00000000000771c5:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000771c2
	jmp uuid_00000000000771c4
uuid_00000000000771c2:
	movb $1, -632(%rbp)
uuid_00000000000771c4:
	mov -696(%RBP),%RSP
	add $-704, %RSP
uuid_00000000000771c7:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_00000000000771ca:
	mov -640(%RBP),%RSP
	add $-704, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771e6
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000771dc
	jmp uuid_00000000000771de
uuid_00000000000771dc:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000771d9
	jmp uuid_00000000000771db
uuid_00000000000771d9:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000771d6
	jmp uuid_00000000000771d8
uuid_00000000000771d6:
	movb $1, -744(%rbp)
uuid_00000000000771d8:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_00000000000771db:
	mov -760(%RBP),%RSP
	add $-816, %RSP
uuid_00000000000771de:
	mov -752(%RBP),%RSP
	add $-816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771e3
	push %RBP
	jmp uuid_00000000000771e0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000771df
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000771e2
uuid_00000000000771e0:
uuid_00000000000771e2:
	mov -824(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_00000000000771e5
uuid_00000000000771e3:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000771e5:
	mov -712(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_00000000000771e8
uuid_00000000000771e6:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -704(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000771d3
	jmp uuid_00000000000771d5
uuid_00000000000771d3:
	movq $1, -40(%rbp)
uuid_00000000000771d5:
	mov -712(%RBP),%RSP
	add $-712, %RSP
uuid_00000000000771e8:
	mov -600(%RBP),%RSP
	add $-712, %RSP
	jmp uuid_00000000000771eb
uuid_00000000000771e9:
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000771eb:
	mov -296(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_00000000000771ee
uuid_00000000000771ec:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_00000000000771ee:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_00000000000771f1
uuid_00000000000771ef:
uuid_00000000000771f1:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg8_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_00000000000771f2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077233
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_00000000000771f3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077230
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_00000000000771f4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007722d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_00000000000771f5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007722a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_00000000000771f6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077227
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_00000000000771f7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077224
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_00000000000771f8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077221
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_00000000000771f9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007721e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_00000000000771fa
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007721b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_00000000000771fb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077218
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_00000000000771fc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077215
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_00000000000771fd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077212
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_00000000000771fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007720f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_00000000000771ff
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007720c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_0000000000077200
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077209
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_0000000000077201
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077206
	push %RBP
	jmp uuid_0000000000077203
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077202
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077205
uuid_0000000000077203:
uuid_0000000000077205:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000077208
uuid_0000000000077206:
	movq $1, -24(%rbp)
uuid_0000000000077208:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007720b
uuid_0000000000077209:
	movq $1, -24(%rbp)
uuid_000000000007720b:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007720e
uuid_000000000007720c:
	movq $1, -24(%rbp)
uuid_000000000007720e:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000077211
uuid_000000000007720f:
	movq $1, -24(%rbp)
uuid_0000000000077211:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000077214
uuid_0000000000077212:
	movq $1, -24(%rbp)
uuid_0000000000077214:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000077217
uuid_0000000000077215:
	movq $1, -24(%rbp)
uuid_0000000000077217:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007721a
uuid_0000000000077218:
	movq $1, -24(%rbp)
uuid_000000000007721a:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007721d
uuid_000000000007721b:
	movq $1, -24(%rbp)
uuid_000000000007721d:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000077220
uuid_000000000007721e:
	movq $1, -24(%rbp)
uuid_0000000000077220:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000077223
uuid_0000000000077221:
	movq $1, -24(%rbp)
uuid_0000000000077223:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000077226
uuid_0000000000077224:
	movq $1, -24(%rbp)
uuid_0000000000077226:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000077229
uuid_0000000000077227:
	movq $1, -24(%rbp)
uuid_0000000000077229:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007722c
uuid_000000000007722a:
	movq $1, -24(%rbp)
uuid_000000000007722c:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007722f
uuid_000000000007722d:
	movq $1, -24(%rbp)
uuid_000000000007722f:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000077232
uuid_0000000000077230:
	movq $1, -24(%rbp)
uuid_0000000000077232:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_0000000000077235
uuid_0000000000077233:
	movq $1, -24(%rbp)
uuid_0000000000077235:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg8_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007723c
	jmp uuid_000000000007723e
uuid_000000000007723c:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077239
	jmp uuid_000000000007723b
uuid_0000000000077239:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077236
	jmp uuid_0000000000077238
uuid_0000000000077236:
	movb $1, -104(%rbp)
uuid_0000000000077238:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007723b:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007723e:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007724f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077245
	jmp uuid_0000000000077247
uuid_0000000000077245:
	push %RBP
	jmp uuid_0000000000077242
	jmp uuid_0000000000077244
uuid_0000000000077242:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000076467
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007723f
	jmp uuid_0000000000077241
uuid_000000000007723f:
	movb $1, -216(%rbp)
uuid_0000000000077241:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000077244:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000077247:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007724c
	push %RBP
	jmp uuid_0000000000077249
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077248
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007724b
uuid_0000000000077249:
uuid_000000000007724b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007724e
uuid_000000000007724c:
	movq $1, -40(%rbp)
uuid_000000000007724e:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000077251
uuid_000000000007724f:
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000077251:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg16_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_0000000000077252
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077293
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_0000000000077253
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077290
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_0000000000077254
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007728d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_0000000000077255
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007728a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_0000000000077256
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077287
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_0000000000077257
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077284
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_0000000000077258
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077281
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_0000000000077259
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007727e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007725a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007727b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007725b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077278
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007725c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077275
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007725d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077272
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007725e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007726f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007725f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007726c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_0000000000077260
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077269
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_0000000000077261
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077266
	push %RBP
	jmp uuid_0000000000077263
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077262
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077265
uuid_0000000000077263:
uuid_0000000000077265:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000077268
uuid_0000000000077266:
	movq $1, -24(%rbp)
uuid_0000000000077268:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007726b
uuid_0000000000077269:
	movq $1, -24(%rbp)
uuid_000000000007726b:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007726e
uuid_000000000007726c:
	movq $1, -24(%rbp)
uuid_000000000007726e:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000077271
uuid_000000000007726f:
	movq $1, -24(%rbp)
uuid_0000000000077271:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000077274
uuid_0000000000077272:
	movq $1, -24(%rbp)
uuid_0000000000077274:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000077277
uuid_0000000000077275:
	movq $1, -24(%rbp)
uuid_0000000000077277:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007727a
uuid_0000000000077278:
	movq $1, -24(%rbp)
uuid_000000000007727a:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007727d
uuid_000000000007727b:
	movq $1, -24(%rbp)
uuid_000000000007727d:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000077280
uuid_000000000007727e:
	movq $1, -24(%rbp)
uuid_0000000000077280:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000077283
uuid_0000000000077281:
	movq $1, -24(%rbp)
uuid_0000000000077283:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000077286
uuid_0000000000077284:
	movq $1, -24(%rbp)
uuid_0000000000077286:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000077289
uuid_0000000000077287:
	movq $1, -24(%rbp)
uuid_0000000000077289:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007728c
uuid_000000000007728a:
	movq $1, -24(%rbp)
uuid_000000000007728c:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007728f
uuid_000000000007728d:
	movq $1, -24(%rbp)
uuid_000000000007728f:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000077292
uuid_0000000000077290:
	movq $1, -24(%rbp)
uuid_0000000000077292:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_0000000000077295
uuid_0000000000077293:
	movq $1, -24(%rbp)
uuid_0000000000077295:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg16_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007729c
	jmp uuid_000000000007729e
uuid_000000000007729c:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077299
	jmp uuid_000000000007729b
uuid_0000000000077299:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077296
	jmp uuid_0000000000077298
uuid_0000000000077296:
	movb $1, -104(%rbp)
uuid_0000000000077298:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007729b:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007729e:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772af
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000772a5
	jmp uuid_00000000000772a7
uuid_00000000000772a5:
	push %RBP
	jmp uuid_00000000000772a2
	jmp uuid_00000000000772a4
uuid_00000000000772a2:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007646b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007729f
	jmp uuid_00000000000772a1
uuid_000000000007729f:
	movb $1, -216(%rbp)
uuid_00000000000772a1:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000772a4:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000772a7:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772ac
	push %RBP
	jmp uuid_00000000000772a9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000772a8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000772ab
uuid_00000000000772a9:
uuid_00000000000772ab:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000772ae
uuid_00000000000772ac:
	movq $1, -40(%rbp)
uuid_00000000000772ae:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_00000000000772b1
uuid_00000000000772af:
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000772b1:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg32_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_00000000000772b2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772f3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_00000000000772b3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772f0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_00000000000772b4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772ed
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_00000000000772b5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772ea
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_00000000000772b6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772e7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_00000000000772b7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772e4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_00000000000772b8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772e1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_00000000000772b9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772de
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_00000000000772ba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772db
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_00000000000772bb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772d8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_00000000000772bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772d5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_00000000000772bd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772d2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_00000000000772be
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772cf
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_00000000000772bf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772cc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_00000000000772c0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772c9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_00000000000772c1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772c6
	push %RBP
	jmp uuid_00000000000772c3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000772c2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000772c5
uuid_00000000000772c3:
uuid_00000000000772c5:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_00000000000772c8
uuid_00000000000772c6:
	movq $1, -24(%rbp)
uuid_00000000000772c8:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_00000000000772cb
uuid_00000000000772c9:
	movq $1, -24(%rbp)
uuid_00000000000772cb:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_00000000000772ce
uuid_00000000000772cc:
	movq $1, -24(%rbp)
uuid_00000000000772ce:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000772d1
uuid_00000000000772cf:
	movq $1, -24(%rbp)
uuid_00000000000772d1:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_00000000000772d4
uuid_00000000000772d2:
	movq $1, -24(%rbp)
uuid_00000000000772d4:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_00000000000772d7
uuid_00000000000772d5:
	movq $1, -24(%rbp)
uuid_00000000000772d7:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_00000000000772da
uuid_00000000000772d8:
	movq $1, -24(%rbp)
uuid_00000000000772da:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_00000000000772dd
uuid_00000000000772db:
	movq $1, -24(%rbp)
uuid_00000000000772dd:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_00000000000772e0
uuid_00000000000772de:
	movq $1, -24(%rbp)
uuid_00000000000772e0:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_00000000000772e3
uuid_00000000000772e1:
	movq $1, -24(%rbp)
uuid_00000000000772e3:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_00000000000772e6
uuid_00000000000772e4:
	movq $1, -24(%rbp)
uuid_00000000000772e6:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_00000000000772e9
uuid_00000000000772e7:
	movq $1, -24(%rbp)
uuid_00000000000772e9:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_00000000000772ec
uuid_00000000000772ea:
	movq $1, -24(%rbp)
uuid_00000000000772ec:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_00000000000772ef
uuid_00000000000772ed:
	movq $1, -24(%rbp)
uuid_00000000000772ef:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_00000000000772f2
uuid_00000000000772f0:
	movq $1, -24(%rbp)
uuid_00000000000772f2:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_00000000000772f5
uuid_00000000000772f3:
	movq $1, -24(%rbp)
uuid_00000000000772f5:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg32_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000772fc
	jmp uuid_00000000000772fe
uuid_00000000000772fc:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000772f9
	jmp uuid_00000000000772fb
uuid_00000000000772f9:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000772f6
	jmp uuid_00000000000772f8
uuid_00000000000772f6:
	movb $1, -104(%rbp)
uuid_00000000000772f8:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000772fb:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000772fe:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007730f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077305
	jmp uuid_0000000000077307
uuid_0000000000077305:
	push %RBP
	jmp uuid_0000000000077302
	jmp uuid_0000000000077304
uuid_0000000000077302:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007646f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000772ff
	jmp uuid_0000000000077301
uuid_00000000000772ff:
	movb $1, -216(%rbp)
uuid_0000000000077301:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000077304:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000077307:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007730c
	push %RBP
	jmp uuid_0000000000077309
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077308
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007730b
uuid_0000000000077309:
uuid_000000000007730b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007730e
uuid_000000000007730c:
	movq $1, -40(%rbp)
uuid_000000000007730e:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000077311
uuid_000000000007730f:
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000077311:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg64_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_0000000000077312
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077353
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_0000000000077313
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077350
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_0000000000077314
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007734d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_0000000000077315
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007734a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_0000000000077316
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077347
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_0000000000077317
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077344
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_0000000000077318
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077341
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_0000000000077319
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007733e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007731a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007733b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007731b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077338
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007731c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077335
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007731d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077332
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007731e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007732f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007731f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007732c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_0000000000077320
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077329
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_0000000000077321
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077326
	push %RBP
	jmp uuid_0000000000077323
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077322
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077325
uuid_0000000000077323:
uuid_0000000000077325:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000077328
uuid_0000000000077326:
	movq $1, -24(%rbp)
uuid_0000000000077328:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007732b
uuid_0000000000077329:
	movq $1, -24(%rbp)
uuid_000000000007732b:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007732e
uuid_000000000007732c:
	movq $1, -24(%rbp)
uuid_000000000007732e:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000077331
uuid_000000000007732f:
	movq $1, -24(%rbp)
uuid_0000000000077331:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000077334
uuid_0000000000077332:
	movq $1, -24(%rbp)
uuid_0000000000077334:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000077337
uuid_0000000000077335:
	movq $1, -24(%rbp)
uuid_0000000000077337:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007733a
uuid_0000000000077338:
	movq $1, -24(%rbp)
uuid_000000000007733a:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007733d
uuid_000000000007733b:
	movq $1, -24(%rbp)
uuid_000000000007733d:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000077340
uuid_000000000007733e:
	movq $1, -24(%rbp)
uuid_0000000000077340:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000077343
uuid_0000000000077341:
	movq $1, -24(%rbp)
uuid_0000000000077343:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000077346
uuid_0000000000077344:
	movq $1, -24(%rbp)
uuid_0000000000077346:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000077349
uuid_0000000000077347:
	movq $1, -24(%rbp)
uuid_0000000000077349:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007734c
uuid_000000000007734a:
	movq $1, -24(%rbp)
uuid_000000000007734c:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007734f
uuid_000000000007734d:
	movq $1, -24(%rbp)
uuid_000000000007734f:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000077352
uuid_0000000000077350:
	movq $1, -24(%rbp)
uuid_0000000000077352:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_0000000000077355
uuid_0000000000077353:
	movq $1, -24(%rbp)
uuid_0000000000077355:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg64_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007735c
	jmp uuid_000000000007735e
uuid_000000000007735c:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077359
	jmp uuid_000000000007735b
uuid_0000000000077359:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077356
	jmp uuid_0000000000077358
uuid_0000000000077356:
	movb $1, -104(%rbp)
uuid_0000000000077358:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007735b:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007735e:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007736f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077365
	jmp uuid_0000000000077367
uuid_0000000000077365:
	push %RBP
	jmp uuid_0000000000077362
	jmp uuid_0000000000077364
uuid_0000000000077362:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000076473
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007735f
	jmp uuid_0000000000077361
uuid_000000000007735f:
	movb $1, -216(%rbp)
uuid_0000000000077361:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000077364:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000077367:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007736c
	push %RBP
	jmp uuid_0000000000077369
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077368
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007736b
uuid_0000000000077369:
uuid_000000000007736b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007736e
uuid_000000000007736c:
	movq $1, -40(%rbp)
uuid_000000000007736e:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000077371
uuid_000000000007736f:
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000077371:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_tag_CL_ArrowTypeType:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077385
	jmp uuid_0000000000077387
uuid_0000000000077385:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077378
	jmp uuid_000000000007737a
uuid_0000000000077378:
	push %RBP
	jmp uuid_0000000000077375
	jmp uuid_0000000000077377
uuid_0000000000077375:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077372
	jmp uuid_0000000000077374
uuid_0000000000077372:
	movb $1, -128(%rbp)
uuid_0000000000077374:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000077377:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007737a:
	mov -136(%RBP),%RSP
	add $-160, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077382
	push %RBP
	jmp uuid_000000000007737f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007737e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077381
uuid_000000000007737f:
uuid_0000000000077381:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000077384
uuid_0000000000077382:
#call function get-only-child : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_only_SB_child_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007737b
	jmp uuid_000000000007737d
uuid_000000000007737b:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007679b
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007737d:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000077384:
	mov -96(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000077387:
	mov -64(%RBP),%RSP
	add $-176, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowTypeType:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077388
	jmp uuid_000000000007738a
uuid_0000000000077388:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076584
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007738a:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773a3
	jmp uuid_00000000000773a5
uuid_00000000000773a3:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007739a
	jmp uuid_000000000007739c
uuid_000000000007739a:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077391
	jmp uuid_0000000000077393
uuid_0000000000077391:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007738e
	jmp uuid_0000000000077390
uuid_000000000007738e:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007738b
	jmp uuid_000000000007738d
uuid_000000000007738b:
	movb $1, -240(%rbp)
uuid_000000000007738d:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000077390:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000077393:
	mov -248(%RBP),%RSP
	add $-328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077397
	jmp uuid_0000000000077399
uuid_0000000000077397:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_0000000000077394
	jmp uuid_0000000000077396
uuid_0000000000077394:
	movb $1, -176(%rbp)
uuid_0000000000077396:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000077399:
	mov -192(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007739c:
	mov -184(%RBP),%RSP
	add $-360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773a0
	jmp uuid_00000000000773a2
uuid_00000000000773a0:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007739d
	jmp uuid_000000000007739f
uuid_000000000007739d:
	movb $1, -112(%rbp)
uuid_000000000007739f:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_00000000000773a2:
	mov -128(%RBP),%RSP
	add $-376, %RSP
uuid_00000000000773a5:
	mov -120(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773aa
	push %RBP
	jmp uuid_00000000000773a7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000773a6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000773a9
uuid_00000000000773a7:
uuid_00000000000773a9:
	mov -384(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_00000000000773ac
uuid_00000000000773aa:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000773ac:
	mov -80(%RBP),%RSP
	add $-376, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773bc
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773b5
	jmp uuid_00000000000773b7
uuid_00000000000773b5:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000773b2
	jmp uuid_00000000000773b4
uuid_00000000000773b2:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_00000000000773af
	jmp uuid_00000000000773b1
uuid_00000000000773af:
	movb $1, -192(%rbp)
uuid_00000000000773b1:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000773b4:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000773b7:
	mov -200(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773b9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000773b8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000773bb
uuid_00000000000773b9:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000773bb:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_00000000000773be
uuid_00000000000773bc:
uuid_00000000000773be:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_size_SB_recurse_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773c5
	jmp uuid_00000000000773c7
uuid_00000000000773c5:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000773c2
	jmp uuid_00000000000773c4
uuid_00000000000773c2:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000773bf
	jmp uuid_00000000000773c1
uuid_00000000000773bf:
	movb $1, -96(%rbp)
uuid_00000000000773c1:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000773c4:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000773c7:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077414
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773ce
	jmp uuid_00000000000773d0
uuid_00000000000773ce:
	push %RBP
	jmp uuid_00000000000773cb
	jmp uuid_00000000000773cd
uuid_00000000000773cb:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007679b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773c8
	jmp uuid_00000000000773ca
uuid_00000000000773c8:
	movb $1, -208(%rbp)
uuid_00000000000773ca:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_00000000000773cd:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_00000000000773d0:
	mov -216(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077411
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773d7
	jmp uuid_00000000000773d9
uuid_00000000000773d7:
	push %RBP
	jmp uuid_00000000000773d4
	jmp uuid_00000000000773d6
uuid_00000000000773d4:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000076584
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773d1
	jmp uuid_00000000000773d3
uuid_00000000000773d1:
	movb $1, -280(%rbp)
uuid_00000000000773d3:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000773d6:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000773d9:
	mov -288(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007740e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773e0
	jmp uuid_00000000000773e2
uuid_00000000000773e0:
	push %RBP
	jmp uuid_00000000000773dd
	jmp uuid_00000000000773df
uuid_00000000000773dd:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_0000000000076583
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773da
	jmp uuid_00000000000773dc
uuid_00000000000773da:
	movb $1, -352(%rbp)
uuid_00000000000773dc:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_00000000000773df:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_00000000000773e2:
	mov -360(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007740b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773e9
	jmp uuid_00000000000773eb
uuid_00000000000773e9:
	push %RBP
	jmp uuid_00000000000773e6
	jmp uuid_00000000000773e8
uuid_00000000000773e6:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_00000000000767c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773e3
	jmp uuid_00000000000773e5
uuid_00000000000773e3:
	movb $1, -424(%rbp)
uuid_00000000000773e5:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_00000000000773e8:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_00000000000773eb:
	mov -432(%RBP),%RSP
	add $-456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077408
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773f2
	jmp uuid_00000000000773f4
uuid_00000000000773f2:
	push %RBP
	jmp uuid_00000000000773ef
	jmp uuid_00000000000773f1
uuid_00000000000773ef:
	push %RBP
	mov -472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_0000000000076585
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000773ec
	jmp uuid_00000000000773ee
uuid_00000000000773ec:
	movb $1, -496(%rbp)
uuid_00000000000773ee:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_00000000000773f1:
	mov -512(%RBP),%RSP
	add $-528, %RSP
uuid_00000000000773f4:
	mov -504(%RBP),%RSP
	add $-528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077405
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000773fb
	jmp uuid_00000000000773fd
uuid_00000000000773fb:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000773f8
	jmp uuid_00000000000773fa
uuid_00000000000773f8:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000773f5
	jmp uuid_00000000000773f7
uuid_00000000000773f5:
	movb $1, -568(%rbp)
uuid_00000000000773f7:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_00000000000773fa:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_00000000000773fd:
	mov -576(%RBP),%RSP
	add $-640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077402
	push %RBP
	jmp uuid_00000000000773ff
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000773fe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077401
uuid_00000000000773ff:
uuid_0000000000077401:
	mov -648(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_0000000000077404
uuid_0000000000077402:
	pushq -640(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077404:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_0000000000077407
uuid_0000000000077405:
uuid_0000000000077407:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007740a
uuid_0000000000077408:
uuid_000000000007740a:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007740d
uuid_000000000007740b:
uuid_000000000007740d:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000077410
uuid_000000000007740e:
uuid_0000000000077410:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000077413
uuid_0000000000077411:
uuid_0000000000077413:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000077416
uuid_0000000000077414:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077416:
	mov -64(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_fields_CL_ArrowTypeType:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_00000000000767c6
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007741d
	jmp uuid_000000000007741f
uuid_000000000007741d:
	push %RBP
	jmp uuid_000000000007741a
	jmp uuid_000000000007741c
uuid_000000000007741a:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_00000000000767c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077417
	jmp uuid_0000000000077419
uuid_0000000000077417:
	movb $1, -96(%rbp)
uuid_0000000000077419:
	mov -120(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007741c:
	mov -112(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007741f:
	mov -104(%RBP),%RSP
	add $-128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077427
	push %RBP
	jmp uuid_0000000000077424
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077423
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077426
uuid_0000000000077424:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077420
	jmp uuid_0000000000077422
uuid_0000000000077420:
#call function fields-of-tag : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077422:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_0000000000077426:
	mov -136(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_0000000000077429
uuid_0000000000077427:
uuid_0000000000077429:
	mov -64(%RBP),%RSP
	add $-128, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077430
	jmp uuid_0000000000077432
uuid_0000000000077430:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007742d
	jmp uuid_000000000007742f
uuid_000000000007742d:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007742a
	jmp uuid_000000000007742c
uuid_000000000007742a:
	movb $1, -96(%rbp)
uuid_000000000007742c:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007742f:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000077432:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007748c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007745e
	jmp uuid_0000000000077460
uuid_000000000007745e:
	push %RBP
	jmp uuid_000000000007745b
	jmp uuid_000000000007745d
uuid_000000000007745b:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000076582
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077458
	jmp uuid_000000000007745a
uuid_0000000000077458:
	movb $1, -208(%rbp)
uuid_000000000007745a:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007745d:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000077460:
	mov -216(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077489
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077467
	jmp uuid_0000000000077469
uuid_0000000000077467:
	push %RBP
	jmp uuid_0000000000077464
	jmp uuid_0000000000077466
uuid_0000000000077464:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007679b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077461
	jmp uuid_0000000000077463
uuid_0000000000077461:
	movb $1, -280(%rbp)
uuid_0000000000077463:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077466:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077469:
	mov -288(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077486
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077470
	jmp uuid_0000000000077472
uuid_0000000000077470:
	push %RBP
	jmp uuid_000000000007746d
	jmp uuid_000000000007746f
uuid_000000000007746d:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_00000000000767c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007746a
	jmp uuid_000000000007746c
uuid_000000000007746a:
	movb $1, -352(%rbp)
uuid_000000000007746c:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007746f:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000077472:
	mov -360(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077483
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077479
	jmp uuid_000000000007747b
uuid_0000000000077479:
	push %RBP
	jmp uuid_0000000000077476
	jmp uuid_0000000000077478
uuid_0000000000077476:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_0000000000076585
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077473
	jmp uuid_0000000000077475
uuid_0000000000077473:
	movb $1, -424(%rbp)
uuid_0000000000077475:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_0000000000077478:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007747b:
	mov -432(%RBP),%RSP
	add $-456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077480
	push %RBP
	jmp uuid_000000000007747d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007747c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007747f
uuid_000000000007747d:
uuid_000000000007747f:
	mov -464(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_0000000000077482
uuid_0000000000077480:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077482:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_0000000000077485
uuid_0000000000077483:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077485:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000077488
uuid_0000000000077486:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077488:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007748b
uuid_0000000000077489:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007748b:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007748e
uuid_000000000007748c:
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077439
	jmp uuid_000000000007743b
uuid_0000000000077439:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_0000000000077436
	jmp uuid_0000000000077438
uuid_0000000000077436:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077433
	jmp uuid_0000000000077435
uuid_0000000000077433:
	movb $1, -344(%rbp)
uuid_0000000000077435:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000077438:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007743b:
	mov -352(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077455
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077442
	jmp uuid_0000000000077444
uuid_0000000000077442:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007743f
	jmp uuid_0000000000077441
uuid_000000000007743f:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007743c
	jmp uuid_000000000007743e
uuid_000000000007743c:
	movb $1, -488(%rbp)
uuid_000000000007743e:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000077441:
	mov -504(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000077444:
	mov -496(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077452
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007744b
	jmp uuid_000000000007744d
uuid_000000000007744b:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_0000000000077448
	jmp uuid_000000000007744a
uuid_0000000000077448:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_0000000000077445
	jmp uuid_0000000000077447
uuid_0000000000077445:
	movb $1, -632(%rbp)
uuid_0000000000077447:
	mov -680(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007744a:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007744d:
	mov -640(%RBP),%RSP
	add $-704, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007744f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007744e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077451
uuid_000000000007744f:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077451:
	mov -568(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_0000000000077454
uuid_0000000000077452:
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077454:
	mov -424(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_0000000000077457
uuid_0000000000077455:
	movq -384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077457:
	mov -280(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007748e:
	mov -64(%RBP),%RSP
	add $-416, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077497
	jmp uuid_0000000000077499
uuid_0000000000077497:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077494
	jmp uuid_0000000000077496
uuid_0000000000077494:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_0000000000077491
	jmp uuid_0000000000077493
uuid_0000000000077491:
	movb $1, -144(%rbp)
uuid_0000000000077493:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077496:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077499:
	mov -152(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007749e
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007749b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007749a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007749d
uuid_000000000007749b:
uuid_000000000007749d:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_00000000000774a0
uuid_000000000007749e:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000774a0:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_constructor_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774a7
	jmp uuid_00000000000774a9
uuid_00000000000774a7:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000774a4
	jmp uuid_00000000000774a6
uuid_00000000000774a4:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000774a1
	jmp uuid_00000000000774a3
uuid_00000000000774a1:
	movb $1, -96(%rbp)
uuid_00000000000774a3:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000774a6:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000774a9:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774cc
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774b6
	jmp uuid_00000000000774b8
uuid_00000000000774b6:
	push %RBP
	jmp uuid_00000000000774b3
	jmp uuid_00000000000774b5
uuid_00000000000774b3:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000076582
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774b0
	jmp uuid_00000000000774b2
uuid_00000000000774b0:
	movb $1, -208(%rbp)
uuid_00000000000774b2:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_00000000000774b5:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_00000000000774b8:
	mov -216(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774c9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774bf
	jmp uuid_00000000000774c1
uuid_00000000000774bf:
	push %RBP
	jmp uuid_00000000000774bc
	jmp uuid_00000000000774be
uuid_00000000000774bc:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000076583
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774b9
	jmp uuid_00000000000774bb
uuid_00000000000774b9:
	movb $1, -280(%rbp)
uuid_00000000000774bb:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000774be:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000774c1:
	mov -288(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774c6
	push %RBP
	jmp uuid_00000000000774c3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000774c2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000774c5
uuid_00000000000774c3:
uuid_00000000000774c5:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_00000000000774c8
uuid_00000000000774c6:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000774c8:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_00000000000774cb
uuid_00000000000774c9:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000774cb:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_00000000000774ce
uuid_00000000000774cc:
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774ad
	movq -136(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -128(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -120(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_00000000000774af
uuid_00000000000774ad:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774aa
	movq -168(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -160(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_00000000000774ac
uuid_00000000000774aa:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000774ac:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_00000000000774af:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_00000000000774ce:
	mov -64(%RBP),%RSP
	add $-184, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774d7
	jmp uuid_00000000000774d9
uuid_00000000000774d7:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000774d4
	jmp uuid_00000000000774d6
uuid_00000000000774d4:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_00000000000774d1
	jmp uuid_00000000000774d3
uuid_00000000000774d1:
	movb $1, -144(%rbp)
uuid_00000000000774d3:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000774d6:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000774d9:
	mov -152(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774de
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774db
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000774da
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000774dd
uuid_00000000000774db:
uuid_00000000000774dd:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_00000000000774e0
uuid_00000000000774de:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000774e0:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774e7
	jmp uuid_00000000000774e9
uuid_00000000000774e7:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000774e4
	jmp uuid_00000000000774e6
uuid_00000000000774e4:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000774e1
	jmp uuid_00000000000774e3
uuid_00000000000774e1:
	movb $1, -96(%rbp)
uuid_00000000000774e3:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000774e6:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000774e9:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077579
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774f9
	jmp uuid_00000000000774fb
uuid_00000000000774f9:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000774f6
	jmp uuid_00000000000774f8
uuid_00000000000774f6:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774f3
	jmp uuid_00000000000774f5
uuid_00000000000774f3:
	movb $1, -208(%rbp)
uuid_00000000000774f5:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000774f8:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000774fb:
	mov -216(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077576
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077503
	jmp uuid_0000000000077505
uuid_0000000000077503:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077500
	jmp uuid_0000000000077502
uuid_0000000000077500:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_00000000000774fc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774fd
	jmp uuid_00000000000774ff
uuid_00000000000774fd:
	movb $1, -320(%rbp)
uuid_00000000000774ff:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000077502:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000077505:
	mov -328(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077573
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007750c
	jmp uuid_000000000007750e
uuid_000000000007750c:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077509
	jmp uuid_000000000007750b
uuid_0000000000077509:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077506
	jmp uuid_0000000000077508
uuid_0000000000077506:
	movb $1, -432(%rbp)
uuid_0000000000077508:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007750b:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007750e:
	mov -440(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077570
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077515
	jmp uuid_0000000000077517
uuid_0000000000077515:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077512
	jmp uuid_0000000000077514
uuid_0000000000077512:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007750f
	jmp uuid_0000000000077511
uuid_000000000007750f:
	movb $1, -544(%rbp)
uuid_0000000000077511:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000077514:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000077517:
	mov -552(%RBP),%RSP
	add $-616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007756d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007751e
	jmp uuid_0000000000077520
uuid_000000000007751e:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007751b
	jmp uuid_000000000007751d
uuid_000000000007751b:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $uuid_0000000000076358
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077518
	jmp uuid_000000000007751a
uuid_0000000000077518:
	movb $1, -656(%rbp)
uuid_000000000007751a:
	mov -720(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007751d:
	mov -672(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000077520:
	mov -664(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007756a
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077527
	jmp uuid_0000000000077529
uuid_0000000000077527:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077524
	jmp uuid_0000000000077526
uuid_0000000000077524:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq $uuid_0000000000076467
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077521
	jmp uuid_0000000000077523
uuid_0000000000077521:
	movb $1, -768(%rbp)
uuid_0000000000077523:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000077526:
	mov -784(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000077529:
	mov -776(%RBP),%RSP
	add $-840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077567
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077530
	jmp uuid_0000000000077532
uuid_0000000000077530:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007752d
	jmp uuid_000000000007752f
uuid_000000000007752d:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_000000000007646b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007752a
	jmp uuid_000000000007752c
uuid_000000000007752a:
	movb $1, -880(%rbp)
uuid_000000000007752c:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007752f:
	mov -896(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077532:
	mov -888(%RBP),%RSP
	add $-952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077564
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077539
	jmp uuid_000000000007753b
uuid_0000000000077539:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077536
	jmp uuid_0000000000077538
uuid_0000000000077536:
	push %RBP
	mov -968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_000000000007646f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077533
	jmp uuid_0000000000077535
uuid_0000000000077533:
	movb $1, -992(%rbp)
uuid_0000000000077535:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000077538:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007753b:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077561
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077542
	jmp uuid_0000000000077544
uuid_0000000000077542:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007753f
	jmp uuid_0000000000077541
uuid_000000000007753f:
	push %RBP
	mov -1080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_0000000000076473
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007753c
	jmp uuid_000000000007753e
uuid_000000000007753c:
	movb $1, -1104(%rbp)
uuid_000000000007753e:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_0000000000077541:
	mov -1120(%RBP),%RSP
	add $-1176, %RSP
uuid_0000000000077544:
	mov -1112(%RBP),%RSP
	add $-1176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007755e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007754b
	jmp uuid_000000000007754d
uuid_000000000007754b:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077548
	jmp uuid_000000000007754a
uuid_0000000000077548:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077545
	jmp uuid_0000000000077547
uuid_0000000000077545:
	movb $1, -1216(%rbp)
uuid_0000000000077547:
	mov -1280(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007754a:
	mov -1232(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007754d:
	mov -1224(%RBP),%RSP
	add $-1288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007755b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077558
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077551
	jmp uuid_0000000000077553
uuid_0000000000077551:
	push %RBP
	jmp uuid_000000000007754e
	jmp uuid_0000000000077550
uuid_000000000007754e:
	movb $1, -1360(%rbp)
uuid_0000000000077550:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
uuid_0000000000077553:
	mov -1368(%RBP),%RSP
	add $-1376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077555
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077554
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077557
uuid_0000000000077555:
uuid_0000000000077557:
	mov -1328(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007755a
uuid_0000000000077558:
uuid_000000000007755a:
	mov -1296(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_000000000007755d
uuid_000000000007755b:
	pushq -1288(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007755d:
	mov -1184(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_0000000000077560
uuid_000000000007755e:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077560:
	mov -1072(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_0000000000077563
uuid_0000000000077561:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077563:
	mov -960(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_0000000000077566
uuid_0000000000077564:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077566:
	mov -848(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_0000000000077569
uuid_0000000000077567:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077569:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007756c
uuid_000000000007756a:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007756c:
	mov -624(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007756f
uuid_000000000007756d:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007756f:
	mov -512(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_0000000000077572
uuid_0000000000077570:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077572:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_0000000000077575
uuid_0000000000077573:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077575:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000077578
uuid_0000000000077576:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077578:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007757b
uuid_0000000000077579:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774f0
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774ed
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_00000000000774ef
uuid_00000000000774ed:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_00000000000774ef:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_00000000000774f2
uuid_00000000000774f0:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000774ea
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_00000000000774ec
uuid_00000000000774ea:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000774ec:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000774f2:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007757b:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077584
	jmp uuid_0000000000077586
uuid_0000000000077584:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077581
	jmp uuid_0000000000077583
uuid_0000000000077581:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007757e
	jmp uuid_0000000000077580
uuid_000000000007757e:
	movb $1, -144(%rbp)
uuid_0000000000077580:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077583:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077586:
	mov -152(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007758b
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077588
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077587
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007758a
uuid_0000000000077588:
uuid_000000000007758a:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007758d
uuid_000000000007758b:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007758d:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077594
	jmp uuid_0000000000077596
uuid_0000000000077594:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077591
	jmp uuid_0000000000077593
uuid_0000000000077591:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007758e
	jmp uuid_0000000000077590
uuid_000000000007758e:
	movb $1, -96(%rbp)
uuid_0000000000077590:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000077593:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000077596:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775b9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775a6
	jmp uuid_00000000000775a8
uuid_00000000000775a6:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000775a3
	jmp uuid_00000000000775a5
uuid_00000000000775a3:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000775a0
	jmp uuid_00000000000775a2
uuid_00000000000775a0:
	movb $1, -208(%rbp)
uuid_00000000000775a2:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000775a5:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000775a8:
	mov -216(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775b6
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775b3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775ac
	jmp uuid_00000000000775ae
uuid_00000000000775ac:
	push %RBP
	jmp uuid_00000000000775a9
	jmp uuid_00000000000775ab
uuid_00000000000775a9:
	movb $1, -352(%rbp)
uuid_00000000000775ab:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_00000000000775ae:
	mov -360(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775b0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000775af
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000775b2
uuid_00000000000775b0:
uuid_00000000000775b2:
	mov -320(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_00000000000775b5
uuid_00000000000775b3:
uuid_00000000000775b5:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_00000000000775b8
uuid_00000000000775b6:
	pushq -280(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000775b8:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_00000000000775bb
uuid_00000000000775b9:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007759d
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007759a
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007759c
uuid_000000000007759a:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007759c:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007759f
uuid_000000000007759d:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077597
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077599
uuid_0000000000077597:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077599:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007759f:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000775bb:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775c2
	jmp uuid_00000000000775c4
uuid_00000000000775c2:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000775bf
	jmp uuid_00000000000775c1
uuid_00000000000775bf:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000775bc
	jmp uuid_00000000000775be
uuid_00000000000775bc:
	movb $1, -96(%rbp)
uuid_00000000000775be:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000775c1:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000775c4:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775ff
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775d4
	jmp uuid_00000000000775d6
uuid_00000000000775d4:
	push %RBP
	jmp uuid_00000000000775d1
	jmp uuid_00000000000775d3
uuid_00000000000775d1:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000076585
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775ce
	jmp uuid_00000000000775d0
uuid_00000000000775ce:
	movb $1, -208(%rbp)
uuid_00000000000775d0:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_00000000000775d3:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_00000000000775d6:
	mov -216(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775fc
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775dd
	jmp uuid_00000000000775df
uuid_00000000000775dd:
	push %RBP
	jmp uuid_00000000000775da
	jmp uuid_00000000000775dc
uuid_00000000000775da:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000076584
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775d7
	jmp uuid_00000000000775d9
uuid_00000000000775d7:
	movb $1, -280(%rbp)
uuid_00000000000775d9:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000775dc:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000775df:
	mov -288(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775f9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775e6
	jmp uuid_00000000000775e8
uuid_00000000000775e6:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000775e3
	jmp uuid_00000000000775e5
uuid_00000000000775e3:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000775e0
	jmp uuid_00000000000775e2
uuid_00000000000775e0:
	movb $1, -352(%rbp)
uuid_00000000000775e2:
	mov -416(%RBP),%RSP
	add $-424, %RSP
uuid_00000000000775e5:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_00000000000775e8:
	mov -360(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775f6
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775f3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000775ec
	jmp uuid_00000000000775ee
uuid_00000000000775ec:
	push %RBP
	jmp uuid_00000000000775e9
	jmp uuid_00000000000775eb
uuid_00000000000775e9:
	movb $1, -496(%rbp)
uuid_00000000000775eb:
	mov -512(%RBP),%RSP
	add $-512, %RSP
uuid_00000000000775ee:
	mov -504(%RBP),%RSP
	add $-512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775f0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000775ef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000775f2
uuid_00000000000775f0:
uuid_00000000000775f2:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_00000000000775f5
uuid_00000000000775f3:
uuid_00000000000775f5:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_00000000000775f8
uuid_00000000000775f6:
	pushq -424(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000775f8:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_00000000000775fb
uuid_00000000000775f9:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000775fb:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_00000000000775fe
uuid_00000000000775fc:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000775fe:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000077601
uuid_00000000000775ff:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775cb
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775c8
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_00000000000775ca
uuid_00000000000775c8:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_00000000000775ca:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_00000000000775cd
uuid_00000000000775cb:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000775c5
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_00000000000775c7
uuid_00000000000775c5:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000775c7:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000775cd:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077601:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007760a
	jmp uuid_000000000007760c
uuid_000000000007760a:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077607
	jmp uuid_0000000000077609
uuid_0000000000077607:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_0000000000077604
	jmp uuid_0000000000077606
uuid_0000000000077604:
	movb $1, -144(%rbp)
uuid_0000000000077606:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077609:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007760c:
	mov -152(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077611
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007760e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007760d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077610
uuid_000000000007760e:
uuid_0000000000077610:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000077613
uuid_0000000000077611:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077613:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007761a
	jmp uuid_000000000007761c
uuid_000000000007761a:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077617
	jmp uuid_0000000000077619
uuid_0000000000077617:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077614
	jmp uuid_0000000000077616
uuid_0000000000077614:
	movb $1, -96(%rbp)
uuid_0000000000077616:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000077619:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007761c:
	mov -104(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077657
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007762c
	jmp uuid_000000000007762e
uuid_000000000007762c:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077629
	jmp uuid_000000000007762b
uuid_0000000000077629:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_0000000000076584
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077626
	jmp uuid_0000000000077628
uuid_0000000000077626:
	movb $1, -208(%rbp)
uuid_0000000000077628:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007762b:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007762e:
	mov -216(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077654
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077635
	jmp uuid_0000000000077637
uuid_0000000000077635:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077632
	jmp uuid_0000000000077634
uuid_0000000000077632:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_0000000000076585
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007762f
	jmp uuid_0000000000077631
uuid_000000000007762f:
	movb $1, -320(%rbp)
uuid_0000000000077631:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000077634:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000077637:
	mov -328(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077651
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007763e
	jmp uuid_0000000000077640
uuid_000000000007763e:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007763b
	jmp uuid_000000000007763d
uuid_000000000007763b:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077638
	jmp uuid_000000000007763a
uuid_0000000000077638:
	movb $1, -432(%rbp)
uuid_000000000007763a:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007763d:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_0000000000077640:
	mov -440(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007764e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007764b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077644
	jmp uuid_0000000000077646
uuid_0000000000077644:
	push %RBP
	jmp uuid_0000000000077641
	jmp uuid_0000000000077643
uuid_0000000000077641:
	movb $1, -576(%rbp)
uuid_0000000000077643:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000077646:
	mov -584(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077648
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077647
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007764a
uuid_0000000000077648:
uuid_000000000007764a:
	mov -544(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007764d
uuid_000000000007764b:
uuid_000000000007764d:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_0000000000077650
uuid_000000000007764e:
	pushq -504(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077650:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_0000000000077653
uuid_0000000000077651:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077653:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000077656
uuid_0000000000077654:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077656:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000077659
uuid_0000000000077657:
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077623
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077620
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_0000000000077622
uuid_0000000000077620:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077622:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_0000000000077625
uuid_0000000000077623:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007761d
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007761f
uuid_000000000007761d:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007761f:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077625:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000077659:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_tag_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077660
	jmp uuid_0000000000077662
uuid_0000000000077660:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007765d
	jmp uuid_000000000007765f
uuid_000000000007765d:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007765a
	jmp uuid_000000000007765c
uuid_000000000007765a:
	movb $1, -120(%rbp)
uuid_000000000007765c:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007765f:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000077662:
	mov -128(%RBP),%RSP
	add $-192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077679
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007766f
	jmp uuid_0000000000077671
uuid_000000000007766f:
	push %RBP
	jmp uuid_000000000007766c
	jmp uuid_000000000007766e
uuid_000000000007766c:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_000000000007679b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077669
	jmp uuid_000000000007766b
uuid_0000000000077669:
	movb $1, -232(%rbp)
uuid_000000000007766b:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007766e:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000077671:
	mov -240(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077676
	push %RBP
	jmp uuid_0000000000077673
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077672
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077675
uuid_0000000000077673:
uuid_0000000000077675:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_0000000000077678
uuid_0000000000077676:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000077678:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007767b
uuid_0000000000077679:
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077666
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077663
	jmp uuid_0000000000077665
uuid_0000000000077663:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000077665:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000077668
uuid_0000000000077666:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000077668:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007767b:
	mov -88(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_class_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077682
	jmp uuid_0000000000077684
uuid_0000000000077682:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007767f
	jmp uuid_0000000000077681
uuid_000000000007767f:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007767c
	jmp uuid_000000000007767e
uuid_000000000007767c:
	movb $1, -120(%rbp)
uuid_000000000007767e:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000077681:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000077684:
	mov -128(%RBP),%RSP
	add $-192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776a1
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077691
	jmp uuid_0000000000077693
uuid_0000000000077691:
	push %RBP
	jmp uuid_000000000007768e
	jmp uuid_0000000000077690
uuid_000000000007768e:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007768b
	jmp uuid_000000000007768d
uuid_000000000007768b:
	movb $1, -232(%rbp)
uuid_000000000007768d:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000077690:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000077693:
	mov -240(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007769e
	push %RBP
	jmp uuid_000000000007769b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007769a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007769d
uuid_000000000007769b:
uuid_000000000007769d:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_00000000000776a0
uuid_000000000007769e:
	push %RBP
#call function is-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077697
	jmp uuid_0000000000077699
uuid_0000000000077697:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077694
	jmp uuid_0000000000077696
uuid_0000000000077694:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000077696:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000077699:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_00000000000776a0:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_00000000000776a3
uuid_00000000000776a1:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077685
	jmp uuid_0000000000077687
uuid_0000000000077685:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000077687:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077688
	jmp uuid_000000000007768a
uuid_0000000000077688:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007768a:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_00000000000776a3:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776ac
	jmp uuid_00000000000776ae
uuid_00000000000776ac:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000776a9
	jmp uuid_00000000000776ab
uuid_00000000000776a9:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_00000000000776a6
	jmp uuid_00000000000776a8
uuid_00000000000776a6:
	movb $1, -184(%rbp)
uuid_00000000000776a8:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000776ab:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000776ae:
	mov -192(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776b3
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776b0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000776af
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000776b2
uuid_00000000000776b0:
uuid_00000000000776b2:
	mov -280(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_00000000000776b5
uuid_00000000000776b3:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_00000000000776b5:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776bc
	jmp uuid_00000000000776be
uuid_00000000000776bc:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000776b9
	jmp uuid_00000000000776bb
uuid_00000000000776b9:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000776b6
	jmp uuid_00000000000776b8
uuid_00000000000776b6:
	movb $1, -120(%rbp)
uuid_00000000000776b8:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_00000000000776bb:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_00000000000776be:
	mov -128(%RBP),%RSP
	add $-192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007774d
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776ce
	jmp uuid_00000000000776d0
uuid_00000000000776ce:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776cb
	jmp uuid_00000000000776cd
uuid_00000000000776cb:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776c8
	jmp uuid_00000000000776ca
uuid_00000000000776c8:
	movb $1, -232(%rbp)
uuid_00000000000776ca:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_00000000000776cd:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_00000000000776d0:
	mov -240(%RBP),%RSP
	add $-304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007774a
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776d7
	jmp uuid_00000000000776d9
uuid_00000000000776d7:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776d4
	jmp uuid_00000000000776d6
uuid_00000000000776d4:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $uuid_00000000000774fc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776d1
	jmp uuid_00000000000776d3
uuid_00000000000776d1:
	movb $1, -344(%rbp)
uuid_00000000000776d3:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_00000000000776d6:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_00000000000776d9:
	mov -352(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077747
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776e0
	jmp uuid_00000000000776e2
uuid_00000000000776e0:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776dd
	jmp uuid_00000000000776df
uuid_00000000000776dd:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776da
	jmp uuid_00000000000776dc
uuid_00000000000776da:
	movb $1, -456(%rbp)
uuid_00000000000776dc:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_00000000000776df:
	mov -472(%RBP),%RSP
	add $-528, %RSP
uuid_00000000000776e2:
	mov -464(%RBP),%RSP
	add $-528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077744
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776e9
	jmp uuid_00000000000776eb
uuid_00000000000776e9:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776e6
	jmp uuid_00000000000776e8
uuid_00000000000776e6:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776e3
	jmp uuid_00000000000776e5
uuid_00000000000776e3:
	movb $1, -568(%rbp)
uuid_00000000000776e5:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_00000000000776e8:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_00000000000776eb:
	mov -576(%RBP),%RSP
	add $-640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077741
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776f2
	jmp uuid_00000000000776f4
uuid_00000000000776f2:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776ef
	jmp uuid_00000000000776f1
uuid_00000000000776ef:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $uuid_0000000000076358
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776ec
	jmp uuid_00000000000776ee
uuid_00000000000776ec:
	movb $1, -680(%rbp)
uuid_00000000000776ee:
	mov -744(%RBP),%RSP
	add $-752, %RSP
uuid_00000000000776f1:
	mov -696(%RBP),%RSP
	add $-752, %RSP
uuid_00000000000776f4:
	mov -688(%RBP),%RSP
	add $-752, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007773e
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776fb
	jmp uuid_00000000000776fd
uuid_00000000000776fb:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000776f8
	jmp uuid_00000000000776fa
uuid_00000000000776f8:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $uuid_0000000000076467
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776f5
	jmp uuid_00000000000776f7
uuid_00000000000776f5:
	movb $1, -792(%rbp)
uuid_00000000000776f7:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_00000000000776fa:
	mov -808(%RBP),%RSP
	add $-864, %RSP
uuid_00000000000776fd:
	mov -800(%RBP),%RSP
	add $-864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007773b
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077704
	jmp uuid_0000000000077706
uuid_0000000000077704:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077701
	jmp uuid_0000000000077703
uuid_0000000000077701:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007646b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776fe
	jmp uuid_0000000000077700
uuid_00000000000776fe:
	movb $1, -904(%rbp)
uuid_0000000000077700:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000077703:
	mov -920(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000077706:
	mov -912(%RBP),%RSP
	add $-976, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077738
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007770d
	jmp uuid_000000000007770f
uuid_000000000007770d:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007770a
	jmp uuid_000000000007770c
uuid_000000000007770a:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_000000000007646f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077707
	jmp uuid_0000000000077709
uuid_0000000000077707:
	movb $1, -1016(%rbp)
uuid_0000000000077709:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007770c:
	mov -1032(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007770f:
	mov -1024(%RBP),%RSP
	add $-1088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077735
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077716
	jmp uuid_0000000000077718
uuid_0000000000077716:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077713
	jmp uuid_0000000000077715
uuid_0000000000077713:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $uuid_0000000000076473
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077710
	jmp uuid_0000000000077712
uuid_0000000000077710:
	movb $1, -1128(%rbp)
uuid_0000000000077712:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077715:
	mov -1144(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077718:
	mov -1136(%RBP),%RSP
	add $-1200, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077732
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007771f
	jmp uuid_0000000000077721
uuid_000000000007771f:
	push %RBP
	mov -1224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007771c
	jmp uuid_000000000007771e
uuid_000000000007771c:
	push %RBP
	mov -1216(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077719
	jmp uuid_000000000007771b
uuid_0000000000077719:
	movb $1, -1240(%rbp)
uuid_000000000007771b:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007771e:
	mov -1256(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000077721:
	mov -1248(%RBP),%RSP
	add $-1312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007772f
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -1344(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007772c
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077725
	jmp uuid_0000000000077727
uuid_0000000000077725:
	push %RBP
	jmp uuid_0000000000077722
	jmp uuid_0000000000077724
uuid_0000000000077722:
	movb $1, -1384(%rbp)
uuid_0000000000077724:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
uuid_0000000000077727:
	mov -1392(%RBP),%RSP
	add $-1400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077729
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077728
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007772b
uuid_0000000000077729:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007772b:
	mov -1352(%RBP),%RSP
	add $-1400, %RSP
	jmp uuid_000000000007772e
uuid_000000000007772c:
uuid_000000000007772e:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_0000000000077731
uuid_000000000007772f:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000077731:
	mov -1208(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_0000000000077734
uuid_0000000000077732:
uuid_0000000000077734:
	mov -1096(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_0000000000077737
uuid_0000000000077735:
uuid_0000000000077737:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007773a
uuid_0000000000077738:
uuid_000000000007773a:
	mov -872(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007773d
uuid_000000000007773b:
uuid_000000000007773d:
	mov -760(%RBP),%RSP
	add $-864, %RSP
	jmp uuid_0000000000077740
uuid_000000000007773e:
uuid_0000000000077740:
	mov -648(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_0000000000077743
uuid_0000000000077741:
uuid_0000000000077743:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_0000000000077746
uuid_0000000000077744:
uuid_0000000000077746:
	mov -424(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_0000000000077749
uuid_0000000000077747:
uuid_0000000000077749:
	mov -312(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007774c
uuid_000000000007774a:
uuid_000000000007774c:
	mov -200(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007774f
uuid_000000000007774d:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776c5
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776c2
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_00000000000776c4
uuid_00000000000776c2:
	movq -240(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_00000000000776c4:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000776c7
uuid_00000000000776c5:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000776bf
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
	jmp uuid_00000000000776c1
uuid_00000000000776bf:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000776c1:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_00000000000776c7:
	mov -248(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007774f:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077766
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077763
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007775c
	jmp uuid_000000000007775e
uuid_000000000007775c:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_0000000000077759
	jmp uuid_000000000007775b
uuid_0000000000077759:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_0000000000077756
	jmp uuid_0000000000077758
uuid_0000000000077756:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077753
	jmp uuid_0000000000077755
uuid_0000000000077753:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077750
	jmp uuid_0000000000077752
uuid_0000000000077750:
	movb $1, -640(%rbp)
uuid_0000000000077752:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000077755:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000077758:
	mov -736(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007775b:
	mov -656(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007775e:
	mov -648(%RBP),%RSP
	add $-904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077760
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007775f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077762
uuid_0000000000077760:
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -776(%rbp)
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077762:
	mov -512(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_0000000000077765
uuid_0000000000077763:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077765:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_0000000000077768
uuid_0000000000077766:
uuid_0000000000077768:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
denormalize_CL_ArrowTypeType:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
enrich_CL_ArrowTypeConsTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077769
	jmp uuid_000000000007776b
uuid_0000000000077769:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007776b:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
type_SB_of_SB_s_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077772
	jmp uuid_0000000000077774
uuid_0000000000077772:
	push %RBP
	jmp uuid_000000000007776f
	jmp uuid_0000000000077771
uuid_000000000007776f:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007776c
	jmp uuid_000000000007776e
uuid_000000000007776c:
	movb $1, -264(%rbp)
uuid_000000000007776e:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000077771:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000077774:
	mov -272(%RBP),%RSP
	add $-296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777a4
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007777b
	jmp uuid_000000000007777d
uuid_000000000007777b:
	push %RBP
	jmp uuid_0000000000077778
	jmp uuid_000000000007777a
uuid_0000000000077778:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077775
	jmp uuid_0000000000077777
uuid_0000000000077775:
	movb $1, -384(%rbp)
uuid_0000000000077777:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007777a:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007777d:
	mov -392(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777a1
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077796
	jmp uuid_0000000000077798
uuid_0000000000077796:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077793
	jmp uuid_0000000000077795
uuid_0000000000077793:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007778d
	jmp uuid_000000000007778f
uuid_000000000007778d:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077784
	jmp uuid_0000000000077786
uuid_0000000000077784:
	push %RBP
	jmp uuid_0000000000077781
	jmp uuid_0000000000077783
uuid_0000000000077781:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007626b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007777e
	jmp uuid_0000000000077780
uuid_000000000007777e:
	movb $1, -776(%rbp)
uuid_0000000000077780:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077783:
	mov -792(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077786:
	mov -784(%RBP),%RSP
	add $-808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007778a
	jmp uuid_000000000007778c
uuid_000000000007778a:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077787
	jmp uuid_0000000000077789
uuid_0000000000077787:
	movb $1, -680(%rbp)
uuid_0000000000077789:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007778c:
	mov -696(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007778f:
	mov -688(%RBP),%RSP
	add $-888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077790
	jmp uuid_0000000000077792
uuid_0000000000077790:
	movb $1, -504(%rbp)
uuid_0000000000077792:
	mov -600(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000077795:
	mov -520(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000077798:
	mov -512(%RBP),%RSP
	add $-888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007779e
	push %RBP
	jmp uuid_000000000007779b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007779a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007779d
uuid_000000000007779b:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077799
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007779d:
	mov -896(%RBP),%RSP
	add $-896, %RSP
	jmp uuid_00000000000777a0
uuid_000000000007779e:
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000777a0:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_00000000000777a3
uuid_00000000000777a1:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_00000000000777a3:
	mov -304(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_00000000000777a6
uuid_00000000000777a4:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_00000000000777a6:
	mov -184(%RBP),%RSP
	add $-320, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777ad
	jmp uuid_00000000000777af
uuid_00000000000777ad:
	push %RBP
	jmp uuid_00000000000777aa
	jmp uuid_00000000000777ac
uuid_00000000000777aa:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000777a7
	jmp uuid_00000000000777a9
uuid_00000000000777a7:
	movb $1, -304(%rbp)
uuid_00000000000777a9:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_00000000000777ac:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_00000000000777af:
	mov -312(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077811
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777d0
	jmp uuid_00000000000777d2
uuid_00000000000777d0:
	push %RBP
	jmp uuid_00000000000777cd
	jmp uuid_00000000000777cf
uuid_00000000000777cd:
	push %RBP
	mov -352(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000777ca
	jmp uuid_00000000000777cc
uuid_00000000000777ca:
	movb $1, -424(%rbp)
uuid_00000000000777cc:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_00000000000777cf:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_00000000000777d2:
	mov -432(%RBP),%RSP
	add $-456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007780e
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077804
	jmp uuid_0000000000077806
uuid_0000000000077804:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077801
	jmp uuid_0000000000077803
uuid_0000000000077801:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777fb
	jmp uuid_00000000000777fd
uuid_00000000000777fb:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777f2
	jmp uuid_00000000000777f4
uuid_00000000000777f2:
	push %RBP
	jmp uuid_00000000000777ef
	jmp uuid_00000000000777f1
uuid_00000000000777ef:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_000000000007626b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777ec
	jmp uuid_00000000000777ee
uuid_00000000000777ec:
	movb $1, -816(%rbp)
uuid_00000000000777ee:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_00000000000777f1:
	mov -832(%RBP),%RSP
	add $-848, %RSP
uuid_00000000000777f4:
	mov -824(%RBP),%RSP
	add $-848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777f8
	jmp uuid_00000000000777fa
uuid_00000000000777f8:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000777f5
	jmp uuid_00000000000777f7
uuid_00000000000777f5:
	movb $1, -720(%rbp)
uuid_00000000000777f7:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_00000000000777fa:
	mov -736(%RBP),%RSP
	add $-928, %RSP
uuid_00000000000777fd:
	mov -728(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777fe
	jmp uuid_0000000000077800
uuid_00000000000777fe:
	movb $1, -544(%rbp)
uuid_0000000000077800:
	mov -640(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000077803:
	mov -560(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000077806:
	mov -552(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007780b
	push %RBP
	jmp uuid_0000000000077808
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077807
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007780a
uuid_0000000000077808:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077799
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007780a:
	mov -936(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007780d
uuid_000000000007780b:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	movq -112(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007780d:
	mov -464(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_0000000000077810
uuid_000000000007780e:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777d9
	jmp uuid_00000000000777db
uuid_00000000000777d9:
	push %RBP
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_00000000000777d6
	jmp uuid_00000000000777d8
uuid_00000000000777d6:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $uuid_0000000000075fd2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777d3
	jmp uuid_00000000000777d5
uuid_00000000000777d3:
	movb $1, -576(%rbp)
uuid_00000000000777d5:
	mov -624(%RBP),%RSP
	add $-632, %RSP
uuid_00000000000777d8:
	mov -592(%RBP),%RSP
	add $-632, %RSP
uuid_00000000000777db:
	mov -584(%RBP),%RSP
	add $-632, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777e9
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777e2
	jmp uuid_00000000000777e4
uuid_00000000000777e2:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_00000000000777df
	jmp uuid_00000000000777e1
uuid_00000000000777df:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000777dc
	jmp uuid_00000000000777de
uuid_00000000000777dc:
	movb $1, -688(%rbp)
uuid_00000000000777de:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_00000000000777e1:
	mov -704(%RBP),%RSP
	add $-744, %RSP
uuid_00000000000777e4:
	mov -696(%RBP),%RSP
	add $-744, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777e6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000777e5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000777e8
uuid_00000000000777e6:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000761a0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -744(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000761a0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -728(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_00000000000777e8:
	mov -640(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_00000000000777eb
uuid_00000000000777e9:
	movq -616(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_00000000000777eb:
	mov -528(%RBP),%RSP
	add $-632, %RSP
	movq -480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_0000000000077810:
	mov -344(%RBP),%RSP
	add $-632, %RSP
	jmp uuid_0000000000077813
uuid_0000000000077811:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777b6
	jmp uuid_00000000000777b8
uuid_00000000000777b6:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_00000000000777b3
	jmp uuid_00000000000777b5
uuid_00000000000777b3:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_0000000000075fd2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777b0
	jmp uuid_00000000000777b2
uuid_00000000000777b0:
	movb $1, -456(%rbp)
uuid_00000000000777b2:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_00000000000777b5:
	mov -472(%RBP),%RSP
	add $-512, %RSP
uuid_00000000000777b8:
	mov -464(%RBP),%RSP
	add $-512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777c7
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000777bf
	jmp uuid_00000000000777c1
uuid_00000000000777bf:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_00000000000777bc
	jmp uuid_00000000000777be
uuid_00000000000777bc:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000777b9
	jmp uuid_00000000000777bb
uuid_00000000000777b9:
	movb $1, -568(%rbp)
uuid_00000000000777bb:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_00000000000777be:
	mov -584(%RBP),%RSP
	add $-624, %RSP
uuid_00000000000777c1:
	mov -576(%RBP),%RSP
	add $-624, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000777c4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000777c3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000777c6
uuid_00000000000777c4:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000761a0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -624(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000761a0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000777c2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -608(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_00000000000777c6:
	mov -520(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_00000000000777c9
uuid_00000000000777c7:
	movq -496(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_00000000000777c9:
	mov -408(%RBP),%RSP
	add $-512, %RSP
	movq -360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_0000000000077813:
	mov -224(%RBP),%RSP
	add $-512, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $120, %rsp
	ret
typeof_SB_lhs_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077832
	jmp uuid_0000000000077834
uuid_0000000000077832:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077820
	jmp uuid_0000000000077822
uuid_0000000000077820:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077817
	jmp uuid_0000000000077819
uuid_0000000000077817:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_0000000000077814
	jmp uuid_0000000000077816
uuid_0000000000077814:
	movb $1, -456(%rbp)
uuid_0000000000077816:
	mov -472(%RBP),%RSP
	add $-496, %RSP
uuid_0000000000077819:
	mov -464(%RBP),%RSP
	add $-496, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007781d
	jmp uuid_000000000007781f
uuid_000000000007781d:
	push %RBP
	jmp uuid_000000000007781a
	jmp uuid_000000000007781c
uuid_000000000007781a:
	movb $1, -360(%rbp)
uuid_000000000007781c:
	mov -504(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007781f:
	mov -376(%RBP),%RSP
	add $-504, %RSP
uuid_0000000000077822:
	mov -368(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007782f
	jmp uuid_0000000000077831
uuid_000000000007782f:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077829
	jmp uuid_000000000007782b
uuid_0000000000077829:
	push %RBP
	jmp uuid_0000000000077826
	jmp uuid_0000000000077828
uuid_0000000000077826:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077823
	jmp uuid_0000000000077825
uuid_0000000000077823:
	movb $1, -592(%rbp)
uuid_0000000000077825:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_0000000000077828:
	mov -608(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007782b:
	mov -600(%RBP),%RSP
	add $-624, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007782c
	jmp uuid_000000000007782e
uuid_000000000007782c:
	movb $1, -264(%rbp)
uuid_000000000007782e:
	mov -512(%RBP),%RSP
	add $-624, %RSP
uuid_0000000000077831:
	mov -280(%RBP),%RSP
	add $-624, %RSP
uuid_0000000000077834:
	mov -272(%RBP),%RSP
	add $-624, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007786a
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007785c
	jmp uuid_000000000007785e
uuid_000000000007785c:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077853
	jmp uuid_0000000000077855
uuid_0000000000077853:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077841
	jmp uuid_0000000000077843
uuid_0000000000077841:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077838
	jmp uuid_000000000007783a
uuid_0000000000077838:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_0000000000077835
	jmp uuid_0000000000077837
uuid_0000000000077835:
	movb $1, -1000(%rbp)
uuid_0000000000077837:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007783a:
	mov -1008(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007783e
	jmp uuid_0000000000077840
uuid_000000000007783e:
	push %RBP
	jmp uuid_000000000007783b
	jmp uuid_000000000007783d
uuid_000000000007783b:
	movb $1, -904(%rbp)
uuid_000000000007783d:
	mov -1048(%RBP),%RSP
	add $-1048, %RSP
uuid_0000000000077840:
	mov -920(%RBP),%RSP
	add $-1048, %RSP
uuid_0000000000077843:
	mov -912(%RBP),%RSP
	add $-1048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077850
	jmp uuid_0000000000077852
uuid_0000000000077850:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007784a
	jmp uuid_000000000007784c
uuid_000000000007784a:
	push %RBP
	jmp uuid_0000000000077847
	jmp uuid_0000000000077849
uuid_0000000000077847:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077844
	jmp uuid_0000000000077846
uuid_0000000000077844:
	movb $1, -1136(%rbp)
uuid_0000000000077846:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_0000000000077849:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007784c:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007784d
	jmp uuid_000000000007784f
uuid_000000000007784d:
	movb $1, -808(%rbp)
uuid_000000000007784f:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_0000000000077852:
	mov -824(%RBP),%RSP
	add $-1168, %RSP
uuid_0000000000077855:
	mov -816(%RBP),%RSP
	add $-1168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077859
	jmp uuid_000000000007785b
uuid_0000000000077859:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077856
	jmp uuid_0000000000077858
uuid_0000000000077856:
	movb $1, -712(%rbp)
uuid_0000000000077858:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007785b:
	mov -728(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007785e:
	mov -720(%RBP),%RSP
	add $-1248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077867
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -1328(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077864
	push %RBP
	jmp uuid_0000000000077861
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077860
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077863
uuid_0000000000077861:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007785f
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077863:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
	jmp uuid_0000000000077866
uuid_0000000000077864:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000077866:
	mov -1256(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_0000000000077869
uuid_0000000000077867:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000077869:
	mov -632(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007786c
uuid_000000000007786a:
	movq -496(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007786c:
	mov -184(%RBP),%RSP
	add $-624, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
typeof_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
cons_SB_head_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007788d
	jmp uuid_000000000007788f
uuid_000000000007788d:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077884
	jmp uuid_0000000000077886
uuid_0000000000077884:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007787b
	jmp uuid_000000000007787d
uuid_000000000007787b:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077878
	jmp uuid_000000000007787a
uuid_0000000000077878:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_0000000000077875
	jmp uuid_0000000000077877
uuid_0000000000077875:
	movb $1, -248(%rbp)
uuid_0000000000077877:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007787a:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007787d:
	mov -256(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077881
	jmp uuid_0000000000077883
uuid_0000000000077881:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007787e
	jmp uuid_0000000000077880
uuid_000000000007787e:
	movb $1, -184(%rbp)
uuid_0000000000077880:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077883:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077886:
	mov -192(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007788a
	jmp uuid_000000000007788c
uuid_000000000007788a:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077887
	jmp uuid_0000000000077889
uuid_0000000000077887:
	movb $1, -120(%rbp)
uuid_0000000000077889:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007788c:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007788f:
	mov -128(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077894
	push %RBP
	jmp uuid_0000000000077891
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077890
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077893
uuid_0000000000077891:
uuid_0000000000077893:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000077896
uuid_0000000000077894:
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000077896:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_tail_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778af
	jmp uuid_00000000000778b1
uuid_00000000000778af:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778a6
	jmp uuid_00000000000778a8
uuid_00000000000778a6:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007789d
	jmp uuid_000000000007789f
uuid_000000000007789d:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007789a
	jmp uuid_000000000007789c
uuid_000000000007789a:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_0000000000077897
	jmp uuid_0000000000077899
uuid_0000000000077897:
	movb $1, -248(%rbp)
uuid_0000000000077899:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007789c:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007789f:
	mov -256(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778a3
	jmp uuid_00000000000778a5
uuid_00000000000778a3:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_00000000000778a0
	jmp uuid_00000000000778a2
uuid_00000000000778a0:
	movb $1, -184(%rbp)
uuid_00000000000778a2:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_00000000000778a5:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_00000000000778a8:
	mov -192(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778ac
	jmp uuid_00000000000778ae
uuid_00000000000778ac:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778a9
	jmp uuid_00000000000778ab
uuid_00000000000778a9:
	movb $1, -120(%rbp)
uuid_00000000000778ab:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_00000000000778ae:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_00000000000778b1:
	mov -128(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778b6
	push %RBP
	jmp uuid_00000000000778b3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000778b2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000778b5
uuid_00000000000778b3:
uuid_00000000000778b5:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_00000000000778b8
uuid_00000000000778b6:
	movq -368(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_00000000000778b8:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsStringType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778bf
	jmp uuid_00000000000778c1
uuid_00000000000778bf:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000778bc
	jmp uuid_00000000000778be
uuid_00000000000778bc:
	push %RBP
	jmp uuid_00000000000778b9
	jmp uuid_00000000000778bb
uuid_00000000000778b9:
	movb $1, -112(%rbp)
uuid_00000000000778bb:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000778be:
	mov -128(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000778c1:
	mov -120(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778c6
	push %RBP
	jmp uuid_00000000000778c3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000778c2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000778c5
uuid_00000000000778c3:
uuid_00000000000778c5:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_00000000000778c8
uuid_00000000000778c6:
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -32(%rbp)
	pushq $1
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
uuid_00000000000778c8:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778d9
	jmp uuid_00000000000778db
uuid_00000000000778d9:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000778d6
	jmp uuid_00000000000778d8
uuid_00000000000778d6:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778d0
	jmp uuid_00000000000778d2
uuid_00000000000778d0:
	push %RBP
	mov -248(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000778cd
	jmp uuid_00000000000778cf
uuid_00000000000778cd:
	movb $1, -264(%rbp)
uuid_00000000000778cf:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000778d2:
	mov -272(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778d3
	jmp uuid_00000000000778d5
uuid_00000000000778d3:
	movb $1, -168(%rbp)
uuid_00000000000778d5:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000778d8:
	mov -184(%RBP),%RSP
	add $-288, %RSP
uuid_00000000000778db:
	mov -176(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778e3
	push %RBP
	jmp uuid_00000000000778e0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000778df
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000778e2
uuid_00000000000778e0:
uuid_00000000000778e2:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_00000000000778e5
uuid_00000000000778e3:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778dc
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -48(%rbp)
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -72(%rbp)
	jmp uuid_00000000000778de
uuid_00000000000778dc:
	movq -56(%rbp), %r15
	movq %r15, -72(%rbp)
	mov -56(%rbp), %r15
	mov %r15, -72(%rbp)
uuid_00000000000778de:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_00000000000778e5:
	mov -120(%RBP),%RSP
	add $-296, %RSP
	mov -72(%rbp), %RAX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
apply_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_CL_ArrowTypeConsASTConsU8ConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,U8>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU8ConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
apply_CL_ArrowTypeConsU8ConsASTConsU8ConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
#call function apply-plural : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778e6
	jmp uuid_00000000000778e8
uuid_00000000000778e6:
#call function reduce-plural : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call reduce_SB_plural_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000778e8:
	mov -224(%RBP),%RSP
	add $-224, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778ec
	jmp uuid_00000000000778ee
uuid_00000000000778ec:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000778e9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000778ea
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000778eb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000778ee:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077902
	jmp uuid_0000000000077904
uuid_0000000000077902:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000778ef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000778f0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_00000000000778ff:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077900
	jmp uuid_0000000000077901
uuid_0000000000077900:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000778f1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000778f8
	jmp uuid_00000000000778fa
uuid_00000000000778f8:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000778f5
	jmp uuid_00000000000778f7
uuid_00000000000778f5:
	push %RBP
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	jmp uuid_00000000000778f2
	jmp uuid_00000000000778f4
uuid_00000000000778f2:
	movb $1, -376(%rbp)
uuid_00000000000778f4:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_00000000000778f7:
	mov -392(%RBP),%RSP
	add $-464, %RSP
uuid_00000000000778fa:
	mov -384(%RBP),%RSP
	add $-464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000778fc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000778fb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000778fe
uuid_00000000000778fc:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -432(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -248(%rbp)
uuid_00000000000778fe:
	mov -328(%RBP),%RSP
	add $-464, %RSP
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000778ff
uuid_0000000000077901:
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077904:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007793e:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007793f
	jmp uuid_0000000000077940
uuid_000000000007793f:
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007790b
	jmp uuid_000000000007790d
uuid_000000000007790b:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077908
	jmp uuid_000000000007790a
uuid_0000000000077908:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_0000000000077905
	jmp uuid_0000000000077907
uuid_0000000000077905:
	movb $1, -416(%rbp)
uuid_0000000000077907:
	mov -480(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007790a:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007790d:
	mov -424(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007793b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007793a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007793d
uuid_000000000007793b:
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	push %RBP
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077926
	jmp uuid_0000000000077928
uuid_0000000000077926:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007791d
	jmp uuid_000000000007791f
uuid_000000000007791d:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077914
	jmp uuid_0000000000077916
uuid_0000000000077914:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077911
	jmp uuid_0000000000077913
uuid_0000000000077911:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007790e
	jmp uuid_0000000000077910
uuid_000000000007790e:
	movb $1, -696(%rbp)
uuid_0000000000077910:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000077913:
	mov -712(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000077916:
	mov -704(%RBP),%RSP
	add $-784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007791a
	jmp uuid_000000000007791c
uuid_000000000007791a:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_0000000000077917
	jmp uuid_0000000000077919
uuid_0000000000077917:
	movb $1, -632(%rbp)
uuid_0000000000077919:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007791c:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007791f:
	mov -640(%RBP),%RSP
	add $-816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077923
	jmp uuid_0000000000077925
uuid_0000000000077923:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077920
	jmp uuid_0000000000077922
uuid_0000000000077920:
	movb $1, -568(%rbp)
uuid_0000000000077922:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000077925:
	mov -584(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000077928:
	mov -576(%RBP),%RSP
	add $-832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077937
	push %RBP
	jmp uuid_0000000000077934
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077933
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077936
uuid_0000000000077934:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077932
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077936:
	mov -840(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_0000000000077939
uuid_0000000000077937:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007792f
	jmp uuid_0000000000077931
uuid_000000000007792f:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007792c
	jmp uuid_000000000007792e
uuid_000000000007792c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077929
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007792a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007792b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007792e:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function try-specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077931:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000077939:
	mov -536(%RBP),%RSP
	add $-992, %RSP
	movq -472(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -288(%rbp)
uuid_000000000007793d:
	mov -368(%RBP),%RSP
	add $-992, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $120, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007793e
uuid_0000000000077940:
	subq $24, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
apply_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779be
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779bb
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077947
	jmp uuid_0000000000077949
uuid_0000000000077947:
	push %RBP
	jmp uuid_0000000000077944
	jmp uuid_0000000000077946
uuid_0000000000077944:
	push %RBP
	jmp uuid_0000000000077941
	jmp uuid_0000000000077943
uuid_0000000000077941:
	movb $1, -568(%rbp)
uuid_0000000000077943:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000077946:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000077949:
	mov -576(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779b8
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007794d
	jmp uuid_000000000007794f
uuid_000000000007794d:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007794a
	jmp uuid_000000000007794c
uuid_000000000007794a:
	movb $1, -680(%rbp)
uuid_000000000007794c:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007794f:
	mov -688(%RBP),%RSP
	add $-720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779b5
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077956
	jmp uuid_0000000000077958
uuid_0000000000077956:
	push %RBP
	jmp uuid_0000000000077953
	jmp uuid_0000000000077955
uuid_0000000000077953:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077950
	jmp uuid_0000000000077952
uuid_0000000000077950:
	movb $1, -808(%rbp)
uuid_0000000000077952:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000077955:
	mov -824(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000077958:
	mov -816(%RBP),%RSP
	add $-840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779b2
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077978
	jmp uuid_000000000007797a
uuid_0000000000077978:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077975
	jmp uuid_0000000000077977
uuid_0000000000077975:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077972
	jmp uuid_0000000000077974
uuid_0000000000077972:
	movb $1, -928(%rbp)
uuid_0000000000077974:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_0000000000077977:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007797a:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779af
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077984
	jmp uuid_0000000000077986
uuid_0000000000077984:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_0000000000077981
	jmp uuid_0000000000077983
uuid_0000000000077981:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007797e
	jmp uuid_0000000000077980
uuid_000000000007797e:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007797b
	jmp uuid_000000000007797d
uuid_000000000007797b:
	movb $1, -1184(%rbp)
uuid_000000000007797d:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_0000000000077980:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_0000000000077983:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_0000000000077986:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779ac
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007798d
	jmp uuid_000000000007798f
uuid_000000000007798d:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007798a
	jmp uuid_000000000007798c
uuid_000000000007798a:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077987
	jmp uuid_0000000000077989
uuid_0000000000077987:
	movb $1, -1472(%rbp)
uuid_0000000000077989:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007798c:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007798f:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779a9
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077996
	jmp uuid_0000000000077998
uuid_0000000000077996:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077993
	jmp uuid_0000000000077995
uuid_0000000000077993:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077990
	jmp uuid_0000000000077992
uuid_0000000000077990:
	movb $1, -1728(%rbp)
uuid_0000000000077992:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_0000000000077995:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_0000000000077998:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779a6
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007799f
	jmp uuid_00000000000779a1
uuid_000000000007799f:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007799c
	jmp uuid_000000000007799e
uuid_000000000007799c:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_0000000000077999
	jmp uuid_000000000007799b
uuid_0000000000077999:
	movb $1, -1984(%rbp)
uuid_000000000007799b:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007799e:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_00000000000779a1:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779a3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000779a2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000779a5
uuid_00000000000779a3:
#call function substitute : Arrow<Cons<Context,Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTokenConsTokenContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000779a5:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_00000000000779a8
uuid_00000000000779a6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000779a8:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_00000000000779ab
uuid_00000000000779a9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000779ab:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_00000000000779ae
uuid_00000000000779ac:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000779ae:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_00000000000779b1
uuid_00000000000779af:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000779b1:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_00000000000779b4
uuid_00000000000779b2:
uuid_000000000007796f:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077970
	jmp uuid_0000000000077971
uuid_0000000000077970:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077962
	jmp uuid_0000000000077964
uuid_0000000000077962:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007795f
	jmp uuid_0000000000077961
uuid_000000000007795f:
	push %RBP
	mov -960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007795c
	jmp uuid_000000000007795e
uuid_000000000007795c:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077959
	jmp uuid_000000000007795b
uuid_0000000000077959:
	movb $1, -1048(%rbp)
uuid_000000000007795b:
	mov -1160(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007795e:
	mov -1144(%RBP),%RSP
	add $-1256, %RSP
uuid_0000000000077961:
	mov -1064(%RBP),%RSP
	add $-1256, %RSP
uuid_0000000000077964:
	mov -1056(%RBP),%RSP
	add $-1256, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007796c
	push %RBP
	jmp uuid_0000000000077969
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077968
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007796b
uuid_0000000000077969:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007796b:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
	jmp uuid_000000000007796e
uuid_000000000007796c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077965
	movq -1256(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077967
uuid_0000000000077965:
	movq -1136(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -184(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077967:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007796e:
	mov -944(%RBP),%RSP
	add $-1264, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007796f
uuid_0000000000077971:
uuid_00000000000779b4:
	mov -728(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_00000000000779b7
uuid_00000000000779b5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	pushq $4
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000779b7:
	mov -600(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_00000000000779ba
uuid_00000000000779b8:
uuid_00000000000779ba:
	mov -488(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_00000000000779bd
uuid_00000000000779bb:
uuid_00000000000779bd:
	mov -408(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_00000000000779c0
uuid_00000000000779be:
uuid_00000000000779c0:
	mov -328(%RBP),%RSP
	add $-400, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
apply_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_SB_plural_CL_ArrowListTypeConsASTConsU8ConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779c9
	jmp uuid_00000000000779cb
uuid_00000000000779c9:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000779c6
	jmp uuid_00000000000779c8
uuid_00000000000779c6:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000779c3
	jmp uuid_00000000000779c5
uuid_00000000000779c3:
	movb $1, -248(%rbp)
uuid_00000000000779c5:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_00000000000779c8:
	mov -264(%RBP),%RSP
	add $-320, %RSP
uuid_00000000000779cb:
	mov -256(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779f1
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779e4
	jmp uuid_00000000000779e6
uuid_00000000000779e4:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779db
	jmp uuid_00000000000779dd
uuid_00000000000779db:
	push %RBP
	mov -408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779d2
	jmp uuid_00000000000779d4
uuid_00000000000779d2:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779cf
	jmp uuid_00000000000779d1
uuid_00000000000779cf:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_00000000000779cc
	jmp uuid_00000000000779ce
uuid_00000000000779cc:
	movb $1, -488(%rbp)
uuid_00000000000779ce:
	mov -552(%RBP),%RSP
	add $-576, %RSP
uuid_00000000000779d1:
	mov -504(%RBP),%RSP
	add $-576, %RSP
uuid_00000000000779d4:
	mov -496(%RBP),%RSP
	add $-576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779d8
	jmp uuid_00000000000779da
uuid_00000000000779d8:
	push %RBP
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	jmp uuid_00000000000779d5
	jmp uuid_00000000000779d7
uuid_00000000000779d5:
	movb $1, -424(%rbp)
uuid_00000000000779d7:
	mov -584(%RBP),%RSP
	add $-608, %RSP
uuid_00000000000779da:
	mov -440(%RBP),%RSP
	add $-608, %RSP
uuid_00000000000779dd:
	mov -432(%RBP),%RSP
	add $-608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779e1
	jmp uuid_00000000000779e3
uuid_00000000000779e1:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779de
	jmp uuid_00000000000779e0
uuid_00000000000779de:
	movb $1, -360(%rbp)
uuid_00000000000779e0:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_00000000000779e3:
	mov -376(%RBP),%RSP
	add $-624, %RSP
uuid_00000000000779e6:
	mov -368(%RBP),%RSP
	add $-624, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779ee
	push %RBP
	jmp uuid_00000000000779eb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000779ea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000779ed
uuid_00000000000779eb:
uuid_00000000000779ed:
	mov -632(%RBP),%RSP
	add $-632, %RSP
	jmp uuid_00000000000779f0
uuid_00000000000779ee:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000779e7
	jmp uuid_00000000000779e9
uuid_00000000000779e7:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
uuid_00000000000779e9:
	mov -632(%RBP),%RSP
	add $-632, %RSP
uuid_00000000000779f0:
	mov -328(%RBP),%RSP
	add $-632, %RSP
	jmp uuid_00000000000779f3
uuid_00000000000779f1:
#call function + : Arrow<Cons<List<Type>,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply-plural : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
#call function apply-plural : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowListTypeConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
uuid_00000000000779f3:
	mov -216(%RBP),%RSP
	add $-320, %RSP
	subq $40, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
reduce_SB_plural_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
uuid_0000000000077a08:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a09
	jmp uuid_0000000000077a0a
uuid_0000000000077a09:
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000779fe
	jmp uuid_0000000000077a00
uuid_00000000000779fe:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000779fb
	jmp uuid_00000000000779fd
uuid_00000000000779fb:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_00000000000779f8
	jmp uuid_00000000000779fa
uuid_00000000000779f8:
	movb $1, -224(%rbp)
uuid_00000000000779fa:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_00000000000779fd:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077a00:
	mov -232(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a05
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077a04
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077a07
uuid_0000000000077a05:
	push %RBP
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a01
	jmp uuid_0000000000077a03
uuid_0000000000077a01:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000077a03:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	movq -280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -96(%rbp)
uuid_0000000000077a07:
	mov -176(%RBP),%RSP
	add $-320, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077a08
uuid_0000000000077a0a:
	push %RBP
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a0b
	jmp uuid_0000000000077a0d
uuid_0000000000077a0b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077a0d:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000077a34:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a35
	jmp uuid_0000000000077a36
uuid_0000000000077a35:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a14
	jmp uuid_0000000000077a16
uuid_0000000000077a14:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077a11
	jmp uuid_0000000000077a13
uuid_0000000000077a11:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_0000000000077a0e
	jmp uuid_0000000000077a10
uuid_0000000000077a0e:
	movb $1, -232(%rbp)
uuid_0000000000077a10:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000077a13:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000077a16:
	mov -240(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a31
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077a30
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077a33
uuid_0000000000077a31:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_0000000000077a2a:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a2b
	jmp uuid_0000000000077a2c
uuid_0000000000077a2b:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a1d
	jmp uuid_0000000000077a1f
uuid_0000000000077a1d:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077a1a
	jmp uuid_0000000000077a1c
uuid_0000000000077a1a:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_0000000000077a17
	jmp uuid_0000000000077a19
uuid_0000000000077a17:
	movb $1, -456(%rbp)
uuid_0000000000077a19:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000077a1c:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000077a1f:
	mov -464(%RBP),%RSP
	add $-544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a27
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077a26
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077a29
uuid_0000000000077a27:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a23
	jmp uuid_0000000000077a25
uuid_0000000000077a23:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a20
	jmp uuid_0000000000077a22
uuid_0000000000077a20:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000077a22:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000077a25:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_0000000000077a29:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077a2a
uuid_0000000000077a2c:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a2d
	jmp uuid_0000000000077a2f
uuid_0000000000077a2d:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000077a2f:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077a33:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077a34
uuid_0000000000077a36:
	movq -88(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -72(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000077a5d:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a5e
	jmp uuid_0000000000077a5f
uuid_0000000000077a5e:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a3d
	jmp uuid_0000000000077a3f
uuid_0000000000077a3d:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077a3a
	jmp uuid_0000000000077a3c
uuid_0000000000077a3a:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_0000000000077a37
	jmp uuid_0000000000077a39
uuid_0000000000077a37:
	movb $1, -232(%rbp)
uuid_0000000000077a39:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000077a3c:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000077a3f:
	mov -240(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a5a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077a59
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077a5c
uuid_0000000000077a5a:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_0000000000077a53:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a54
	jmp uuid_0000000000077a55
uuid_0000000000077a54:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a46
	jmp uuid_0000000000077a48
uuid_0000000000077a46:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077a43
	jmp uuid_0000000000077a45
uuid_0000000000077a43:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_0000000000077a40
	jmp uuid_0000000000077a42
uuid_0000000000077a40:
	movb $1, -456(%rbp)
uuid_0000000000077a42:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000077a45:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000077a48:
	mov -464(%RBP),%RSP
	add $-544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a50
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077a4f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077a52
uuid_0000000000077a50:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a4c
	jmp uuid_0000000000077a4e
uuid_0000000000077a4c:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a49
	jmp uuid_0000000000077a4b
uuid_0000000000077a49:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000077a4b:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000077a4e:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_0000000000077a52:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077a53
uuid_0000000000077a55:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a56
	jmp uuid_0000000000077a58
uuid_0000000000077a56:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000077a58:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077a5c:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077a5d
uuid_0000000000077a5f:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a63
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a60
	jmp uuid_0000000000077a62
uuid_0000000000077a60:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_0000000000077a62:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000077a65
uuid_0000000000077a63:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U8>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU8ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_0000000000077a65:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000077aa9:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077aaa
	jmp uuid_0000000000077aab
uuid_0000000000077aaa:
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077aa6
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a72
	jmp uuid_0000000000077a74
uuid_0000000000077a72:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_0000000000077a6f
	jmp uuid_0000000000077a71
uuid_0000000000077a6f:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	jmp uuid_0000000000077a6c
	jmp uuid_0000000000077a6e
uuid_0000000000077a6c:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077a69
	jmp uuid_0000000000077a6b
uuid_0000000000077a69:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077a66
	jmp uuid_0000000000077a68
uuid_0000000000077a66:
	movb $1, -688(%rbp)
uuid_0000000000077a68:
	mov -832(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077a6b:
	mov -816(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077a6e:
	mov -784(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077a71:
	mov -704(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077a74:
	mov -696(%RBP),%RSP
	add $-952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077aa3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077aa2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077aa5
uuid_0000000000077aa3:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a9f
	jmp uuid_0000000000077aa1
uuid_0000000000077a9f:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_0000000000077a75
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a76
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	jmp uuid_0000000000077a78
uuid_0000000000077a76:
uuid_0000000000077a78:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a9c
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a99
	jmp uuid_0000000000077a9b
uuid_0000000000077a99:
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	push %RBP
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a8b
	jmp uuid_0000000000077a8d
uuid_0000000000077a8b:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077a82
	jmp uuid_0000000000077a84
uuid_0000000000077a82:
	push %RBP
	jmp uuid_0000000000077a7f
	jmp uuid_0000000000077a81
uuid_0000000000077a7f:
	push %RBP
	jmp uuid_0000000000077a7c
	jmp uuid_0000000000077a7e
uuid_0000000000077a7c:
	push %RBP
	jmp uuid_0000000000077a79
	jmp uuid_0000000000077a7b
uuid_0000000000077a79:
	movb $1, -1264(%rbp)
uuid_0000000000077a7b:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
uuid_0000000000077a7e:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_0000000000077a81:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_0000000000077a84:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a88
	jmp uuid_0000000000077a8a
uuid_0000000000077a88:
	push %RBP
	jmp uuid_0000000000077a85
	jmp uuid_0000000000077a87
uuid_0000000000077a85:
	movb $1, -1168(%rbp)
uuid_0000000000077a87:
	mov -1304(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000077a8a:
	mov -1184(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000077a8d:
	mov -1176(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077a96
	push %RBP
	jmp uuid_0000000000077a93
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077a92
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077a95
uuid_0000000000077a93:
uuid_0000000000077a95:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_0000000000077a98
uuid_0000000000077a96:
#call function cons : Arrow<Cons<StackToSpecialize,List<StackToSpecialize>>,List<StackToSpecialize>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_0000000000077a98:
	mov -1088(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000077a9b:
	mov -1008(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_0000000000077a9e
uuid_0000000000077a9c:
uuid_0000000000077a9e:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
uuid_0000000000077aa1:
	mov -960(%RBP),%RSP
	add $-1000, %RSP
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -192(%rbp)
uuid_0000000000077aa5:
	mov -560(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_0000000000077aa8
uuid_0000000000077aa6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_0000000000077aa8:
	mov -432(%RBP),%RSP
	add $-552, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000077aa9
uuid_0000000000077aab:
	mov %rbp, %rsp
	sub $184, %rsp
	ret
unify_SB_hint_CL_ArrowTypeConsTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ac4
	jmp uuid_0000000000077ac6
uuid_0000000000077ac4:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ab2
	jmp uuid_0000000000077ab4
uuid_0000000000077ab2:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077aaf
	jmp uuid_0000000000077ab1
uuid_0000000000077aaf:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077aac
	jmp uuid_0000000000077aae
uuid_0000000000077aac:
	movb $1, -232(%rbp)
uuid_0000000000077aae:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000077ab1:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000077ab4:
	mov -240(%RBP),%RSP
	add $-304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ac1
	jmp uuid_0000000000077ac3
uuid_0000000000077ac1:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077abb
	jmp uuid_0000000000077abd
uuid_0000000000077abb:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077ab8
	jmp uuid_0000000000077aba
uuid_0000000000077ab8:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077ab5
	jmp uuid_0000000000077ab7
uuid_0000000000077ab5:
	movb $1, -344(%rbp)
uuid_0000000000077ab7:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000077aba:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000077abd:
	mov -352(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077abe
	jmp uuid_0000000000077ac0
uuid_0000000000077abe:
	movb $1, -184(%rbp)
uuid_0000000000077ac0:
	mov -312(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000077ac3:
	mov -200(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000077ac6:
	mov -192(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ae3
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ad9
	jmp uuid_0000000000077adb
uuid_0000000000077ad9:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ad0
	jmp uuid_0000000000077ad2
uuid_0000000000077ad0:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077acd
	jmp uuid_0000000000077acf
uuid_0000000000077acd:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077aca
	jmp uuid_0000000000077acc
uuid_0000000000077aca:
	movb $1, -536(%rbp)
uuid_0000000000077acc:
	mov -584(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000077acf:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000077ad2:
	mov -544(%RBP),%RSP
	add $-608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ad6
	jmp uuid_0000000000077ad8
uuid_0000000000077ad6:
	push %RBP
	jmp uuid_0000000000077ad3
	jmp uuid_0000000000077ad5
uuid_0000000000077ad3:
	movb $1, -488(%rbp)
uuid_0000000000077ad5:
	mov -616(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000077ad8:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000077adb:
	mov -496(%RBP),%RSP
	add $-616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ae0
	push %RBP
	jmp uuid_0000000000077add
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077adc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077adf
uuid_0000000000077add:
uuid_0000000000077adf:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_0000000000077ae2
uuid_0000000000077ae0:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_0000000000077ae2:
	mov -424(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_0000000000077ae5
uuid_0000000000077ae3:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ac7
	pushq -304(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_0000000000077ac9
uuid_0000000000077ac7:
	movq -24(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_0000000000077ac9:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000077ae5:
	mov -120(%RBP),%RSP
	add $-424, %RSP
	subq $24, %rsp
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_hint_CL_ArrowListTypeConsListTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077af8
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077aee
	jmp uuid_0000000000077af0
uuid_0000000000077aee:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077aeb
	jmp uuid_0000000000077aed
uuid_0000000000077aeb:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_0000000000077ae8
	jmp uuid_0000000000077aea
uuid_0000000000077ae8:
	movb $1, -216(%rbp)
uuid_0000000000077aea:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000077aed:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000077af0:
	mov -224(%RBP),%RSP
	add $-304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077af5
	push %RBP
	jmp uuid_0000000000077af2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077af1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077af4
uuid_0000000000077af2:
uuid_0000000000077af4:
	mov -312(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000077af7
uuid_0000000000077af5:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_0000000000077af7:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000077afa
uuid_0000000000077af8:
uuid_0000000000077afa:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType:
#call function mark-class-exists : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_class_SB_exists_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b14
	jmp uuid_0000000000077b16
uuid_0000000000077b14:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077b11
	jmp uuid_0000000000077b13
uuid_0000000000077b11:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b0b
	jmp uuid_0000000000077b0d
uuid_0000000000077b0b:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b02
	jmp uuid_0000000000077b04
uuid_0000000000077b02:
	push %RBP
	jmp uuid_0000000000077aff
	jmp uuid_0000000000077b01
uuid_0000000000077aff:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_0000000000077afb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077afc
	jmp uuid_0000000000077afe
uuid_0000000000077afc:
	movb $1, -552(%rbp)
uuid_0000000000077afe:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000077b01:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000077b04:
	mov -560(%RBP),%RSP
	add $-584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b08
	jmp uuid_0000000000077b0a
uuid_0000000000077b08:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077b05
	jmp uuid_0000000000077b07
uuid_0000000000077b05:
	movb $1, -456(%rbp)
uuid_0000000000077b07:
	mov -592(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000077b0a:
	mov -472(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000077b0d:
	mov -464(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b0e
	jmp uuid_0000000000077b10
uuid_0000000000077b0e:
	movb $1, -280(%rbp)
uuid_0000000000077b10:
	mov -376(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000077b13:
	mov -296(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000077b16:
	mov -288(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b53
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	jmp uuid_0000000000077b50
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077b4f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077b52
uuid_0000000000077b50:
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
	push %RBP
	movq -104(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b4c
	jmp uuid_0000000000077b4e
uuid_0000000000077b4c:
	pushq $uuid_0000000000075fd2
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b1d
	jmp uuid_0000000000077b1f
uuid_0000000000077b1d:
	push %RBP
	jmp uuid_0000000000077b1a
	jmp uuid_0000000000077b1c
uuid_0000000000077b1a:
	push %RBP
	mov -848(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077b17
	jmp uuid_0000000000077b19
uuid_0000000000077b17:
	movb $1, -920(%rbp)
uuid_0000000000077b19:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077b1c:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000077b1f:
	mov -928(%RBP),%RSP
	add $-952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b39
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b2f
	jmp uuid_0000000000077b31
uuid_0000000000077b2f:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077b2c
	jmp uuid_0000000000077b2e
uuid_0000000000077b2c:
	push %RBP
	mov -1016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b26
	jmp uuid_0000000000077b28
uuid_0000000000077b26:
	push %RBP
	jmp uuid_0000000000077b23
	jmp uuid_0000000000077b25
uuid_0000000000077b23:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077b20
	jmp uuid_0000000000077b22
uuid_0000000000077b20:
	movb $1, -1216(%rbp)
uuid_0000000000077b22:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000077b25:
	mov -1232(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000077b28:
	mov -1224(%RBP),%RSP
	add $-1248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b29
	jmp uuid_0000000000077b2b
uuid_0000000000077b29:
	movb $1, -1040(%rbp)
uuid_0000000000077b2b:
	mov -1136(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000077b2e:
	mov -1056(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000077b31:
	mov -1048(%RBP),%RSP
	add $-1248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b36
	push %RBP
	jmp uuid_0000000000077b33
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077b32
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077b35
uuid_0000000000077b33:
uuid_0000000000077b35:
	mov -1256(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_0000000000077b38
uuid_0000000000077b36:
	movq -1248(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -1248(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_0000000000077b38:
	mov -960(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_0000000000077b3b
uuid_0000000000077b39:
	movq -952(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -952(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_0000000000077b3b:
	mov -840(%RBP),%RSP
	add $-952, %RSP
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000077b49
	jmp uuid_0000000000077b4b
uuid_0000000000077b49:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b42
	jmp uuid_0000000000077b44
uuid_0000000000077b42:
	push %RBP
	jmp uuid_0000000000077b3f
	jmp uuid_0000000000077b41
uuid_0000000000077b3f:
	push %RBP
	mov -1000(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077b3c
	jmp uuid_0000000000077b3e
uuid_0000000000077b3c:
	movb $1, -1024(%rbp)
uuid_0000000000077b3e:
	mov -1048(%RBP),%RSP
	add $-1056, %RSP
uuid_0000000000077b41:
	mov -1040(%RBP),%RSP
	add $-1056, %RSP
uuid_0000000000077b44:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b46
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077b45
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077b48
uuid_0000000000077b46:
#call function has-only-child : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call has_SB_only_SB_child_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077b48:
	mov -992(%RBP),%RSP
	add $-1056, %RSP
uuid_0000000000077b4b:
	mov -960(%RBP),%RSP
	add $-1056, %RSP
uuid_0000000000077b4e:
	mov -752(%RBP),%RSP
	add $-1056, %RSP
uuid_0000000000077b52:
	mov -672(%RBP),%RSP
	add $-1056, %RSP
	jmp uuid_0000000000077b55
uuid_0000000000077b53:
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	movq -104(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
uuid_0000000000077b55:
	mov -200(%RBP),%RSP
	add $-680, %RSP
	mov -120(%rbp), %RAX
	mov %rbp, %rsp
	sub $112, %rsp
	ret
arity_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b65
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b5e
	jmp uuid_0000000000077b60
uuid_0000000000077b5e:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077b5b
	jmp uuid_0000000000077b5d
uuid_0000000000077b5b:
	push %RBP
	jmp uuid_0000000000077b58
	jmp uuid_0000000000077b5a
uuid_0000000000077b58:
	movb $1, -200(%rbp)
uuid_0000000000077b5a:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000077b5d:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000077b60:
	mov -208(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b62
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077b61
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077b64
uuid_0000000000077b62:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_0000000000077b64:
	mov -152(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000077b67
uuid_0000000000077b65:
uuid_0000000000077b67:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
arity_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b6e
	jmp uuid_0000000000077b70
uuid_0000000000077b6e:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077b6b
	jmp uuid_0000000000077b6d
uuid_0000000000077b6b:
	push %RBP
	jmp uuid_0000000000077b68
	jmp uuid_0000000000077b6a
uuid_0000000000077b68:
	movb $1, -104(%rbp)
uuid_0000000000077b6a:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000077b6d:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000077b70:
	mov -112(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b75
	push %RBP
	jmp uuid_0000000000077b72
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077b71
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077b74
uuid_0000000000077b72:
uuid_0000000000077b74:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000077b77
uuid_0000000000077b75:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000077b77:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_arity_CL_ArrowU64Type:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b90
	jmp uuid_0000000000077b92
uuid_0000000000077b90:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b87
	jmp uuid_0000000000077b89
uuid_0000000000077b87:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b7e
	jmp uuid_0000000000077b80
uuid_0000000000077b7e:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077b7b
	jmp uuid_0000000000077b7d
uuid_0000000000077b7b:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_0000000000077b78
	jmp uuid_0000000000077b7a
uuid_0000000000077b78:
	movb $1, -232(%rbp)
uuid_0000000000077b7a:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000077b7d:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000077b80:
	mov -240(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b84
	jmp uuid_0000000000077b86
uuid_0000000000077b84:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	jmp uuid_0000000000077b81
	jmp uuid_0000000000077b83
uuid_0000000000077b81:
	movb $1, -168(%rbp)
uuid_0000000000077b83:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000077b86:
	mov -184(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000077b89:
	mov -176(%RBP),%RSP
	add $-352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b8d
	jmp uuid_0000000000077b8f
uuid_0000000000077b8d:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b8a
	jmp uuid_0000000000077b8c
uuid_0000000000077b8a:
	movb $1, -104(%rbp)
uuid_0000000000077b8c:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077b8f:
	mov -120(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077b92:
	mov -112(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b97
	push %RBP
	jmp uuid_0000000000077b94
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077b93
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077b96
uuid_0000000000077b94:
uuid_0000000000077b96:
	mov -376(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_0000000000077b99
uuid_0000000000077b97:
#call function cons-arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call cons_SB_arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000077b99:
	mov -72(%RBP),%RSP
	add $-368, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parse_SB_field_SB_of_CL_ArrowTupleTypeStringString:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $uuid_0000000000075fd2
	pushq $0
	pushq $0
	pushq $3
uuid_0000000000077b9d:
#call function != : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call _EX__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b9e
	jmp uuid_0000000000077b9f
uuid_0000000000077b9e:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077b9a
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_0000000000077b9c
uuid_0000000000077b9a:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	movq $uuid_0000000000075fd2, -8(%rbp)
uuid_0000000000077b9c:
	mov -80(%RBP),%RSP
	add $-80, %RSP
	add $8, %RSP
	jmp uuid_0000000000077b9d
uuid_0000000000077b9f:
	pushq -48(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	subq $40, %rsp
	pushq 40(%rsp)
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
implicit_SB_tail_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077bb8
	jmp uuid_0000000000077bba
uuid_0000000000077bb8:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077baf
	jmp uuid_0000000000077bb1
uuid_0000000000077baf:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ba6
	jmp uuid_0000000000077ba8
uuid_0000000000077ba6:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ba3
	jmp uuid_0000000000077ba5
uuid_0000000000077ba3:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_0000000000077ba0
	jmp uuid_0000000000077ba2
uuid_0000000000077ba0:
	movb $1, -224(%rbp)
uuid_0000000000077ba2:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077ba5:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077ba8:
	mov -232(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bac
	jmp uuid_0000000000077bae
uuid_0000000000077bac:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_0000000000077ba9
	jmp uuid_0000000000077bab
uuid_0000000000077ba9:
	movb $1, -160(%rbp)
uuid_0000000000077bab:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000077bae:
	mov -176(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000077bb1:
	mov -168(%RBP),%RSP
	add $-344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bb5
	jmp uuid_0000000000077bb7
uuid_0000000000077bb5:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bb2
	jmp uuid_0000000000077bb4
uuid_0000000000077bb2:
	movb $1, -96(%rbp)
uuid_0000000000077bb4:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000077bb7:
	mov -112(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000077bba:
	mov -104(%RBP),%RSP
	add $-360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bbf
	push %RBP
	jmp uuid_0000000000077bbc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077bbb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077bbe
uuid_0000000000077bbc:
uuid_0000000000077bbe:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_0000000000077bc1
uuid_0000000000077bbf:
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077bc1:
	mov -64(%RBP),%RSP
	add $-360, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bc3
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077bc2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077bc5
uuid_0000000000077bc3:
uuid_0000000000077bc5:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST:
#call function find-alias-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_0000000000077be8:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077be9
	jmp uuid_0000000000077bea
uuid_0000000000077be9:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077be5
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077bd2
	jmp uuid_0000000000077bd4
uuid_0000000000077bd2:
	push %RBP
	jmp uuid_0000000000077bcf
	jmp uuid_0000000000077bd1
uuid_0000000000077bcf:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_0000000000077bcc
	jmp uuid_0000000000077bce
uuid_0000000000077bcc:
	push %RBP
	mov -504(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077bc9
	jmp uuid_0000000000077bcb
uuid_0000000000077bc9:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077bc6
	jmp uuid_0000000000077bc8
uuid_0000000000077bc6:
	movb $1, -616(%rbp)
uuid_0000000000077bc8:
	mov -688(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077bcb:
	mov -672(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077bce:
	mov -640(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077bd1:
	mov -632(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000077bd4:
	mov -624(%RBP),%RSP
	add $-808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077be2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077be1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077be4
uuid_0000000000077be2:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bde
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
	jmp uuid_0000000000077be0
uuid_0000000000077bde:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bd8
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_0000000000077bda
uuid_0000000000077bd8:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bd5
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_0000000000077bd7
uuid_0000000000077bd5:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_0000000000077bd7:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000077bda:
	mov -824(%RBP),%RSP
	add $-832, %RSP
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bdb
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	jmp uuid_0000000000077bdd
uuid_0000000000077bdb:
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
uuid_0000000000077bdd:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000077be0:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000077be4:
	mov -488(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_0000000000077be7
uuid_0000000000077be5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
uuid_0000000000077be7:
	mov -360(%RBP),%RSP
	add $-480, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000077be8
uuid_0000000000077bea:
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typecheck_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_0000000000077bf8:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bf9
	jmp uuid_0000000000077bfa
uuid_0000000000077bf9:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077bf1
	jmp uuid_0000000000077bf3
uuid_0000000000077bf1:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077bee
	jmp uuid_0000000000077bf0
uuid_0000000000077bee:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077beb
	jmp uuid_0000000000077bed
uuid_0000000000077beb:
	movb $1, -312(%rbp)
uuid_0000000000077bed:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_0000000000077bf0:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_0000000000077bf3:
	mov -320(%RBP),%RSP
	add $-480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077bf5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077bf4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077bf7
uuid_0000000000077bf5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_0000000000077bf7:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077bf8
uuid_0000000000077bfa:
uuid_0000000000077c08:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c09
	jmp uuid_0000000000077c0a
uuid_0000000000077c09:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c01
	jmp uuid_0000000000077c03
uuid_0000000000077c01:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077bfe
	jmp uuid_0000000000077c00
uuid_0000000000077bfe:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077bfb
	jmp uuid_0000000000077bfd
uuid_0000000000077bfb:
	movb $1, -312(%rbp)
uuid_0000000000077bfd:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_0000000000077c00:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_0000000000077c03:
	mov -320(%RBP),%RSP
	add $-480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c05
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077c04
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077c07
uuid_0000000000077c05:
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -480(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_0000000000077c07:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077c08
uuid_0000000000077c0a:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077c2f:
#call function non-zero : Arrow<List<StackToSpecialize>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c30
	jmp uuid_0000000000077c31
uuid_0000000000077c30:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c28
	jmp uuid_0000000000077c2a
uuid_0000000000077c28:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077c25
	jmp uuid_0000000000077c27
uuid_0000000000077c25:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c1f
	jmp uuid_0000000000077c21
uuid_0000000000077c1f:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_0000000000077c1c
	jmp uuid_0000000000077c1e
uuid_0000000000077c1c:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_0000000000077c19
	jmp uuid_0000000000077c1b
uuid_0000000000077c19:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_0000000000077c16
	jmp uuid_0000000000077c18
uuid_0000000000077c16:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077c13
	jmp uuid_0000000000077c15
uuid_0000000000077c13:
	movb $1, -984(%rbp)
uuid_0000000000077c15:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077c18:
	mov -1160(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077c1b:
	mov -1032(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077c1e:
	mov -1000(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077c21:
	mov -992(%RBP),%RSP
	add $-1200, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c22
	jmp uuid_0000000000077c24
uuid_0000000000077c22:
	movb $1, -568(%rbp)
uuid_0000000000077c24:
	mov -792(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077c27:
	mov -584(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000077c2a:
	mov -576(%RBP),%RSP
	add $-1200, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c2c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077c2b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077c2e
uuid_0000000000077c2c:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r14
	movq -784(%rbp), %r15
	movq %r15, 0(%r14)
	movq -776(%rbp), %r15
	movq %r15, 8(%r14)
	movq -768(%rbp), %r15
	movq %r15, 16(%r14)
	movq -760(%rbp), %r15
	movq %r15, 24(%r14)
	movq -752(%rbp), %r15
	movq %r15, 32(%r14)
	movq -744(%rbp), %r15
	movq %r15, 40(%r14)
	movq -736(%rbp), %r15
	movq %r15, 48(%r14)
	movq -728(%rbp), %r15
	movq %r15, 56(%r14)
	movq -720(%rbp), %r15
	movq %r15, 64(%r14)
	movq -712(%rbp), %r15
	movq %r15, 72(%r14)
	movq -704(%rbp), %r15
	movq %r15, 80(%r14)
	movq -696(%rbp), %r15
	movq %r15, 88(%r14)
	movq -688(%rbp), %r15
	movq %r15, 96(%r14)
	movq -680(%rbp), %r15
	movq %r15, 104(%r14)
	movq -672(%rbp), %r15
	movq %r15, 112(%r14)
	movq -664(%rbp), %r15
	movq %r15, 120(%r14)
	movq -656(%rbp), %r15
	movq %r15, 128(%r14)
	movq -648(%rbp), %r15
	movq %r15, 136(%r14)
	movq -640(%rbp), %r15
	movq %r15, 144(%r14)
	movq -632(%rbp), %r15
	movq %r15, 152(%r14)
	movq -624(%rbp), %r15
	movq %r15, 160(%r14)
	movq -616(%rbp), %r15
	movq %r15, 168(%r14)
	movq -608(%rbp), %r15
	movq %r15, 176(%r14)
	movq -600(%rbp), %r15
	movq %r15, 184(%r14)
	movq -592(%rbp), %r15
	movq %r15, 192(%r14)
#call function specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077c2e:
	mov -360(%RBP),%RSP
	add $-1200, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $200, %rsp
	add $184, %rsp
	add $8, %rsp
	add $24, %rsp
	add $120, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077c2f
uuid_0000000000077c31:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_CL_ArrowTokenConsTokenContext:
	mov -104(%RBP), %RAX
	push %RAX
uuid_0000000000077c7b:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c7c
	jmp uuid_0000000000077c7d
uuid_0000000000077c7c:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c78
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c44
	jmp uuid_0000000000077c46
uuid_0000000000077c44:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c38
	jmp uuid_0000000000077c3a
uuid_0000000000077c38:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_0000000000077c35
	jmp uuid_0000000000077c37
uuid_0000000000077c35:
	push %RBP
	jmp uuid_0000000000077c32
	jmp uuid_0000000000077c34
uuid_0000000000077c32:
	movb $1, -576(%rbp)
uuid_0000000000077c34:
	mov -656(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000077c37:
	mov -592(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000077c3a:
	mov -584(%RBP),%RSP
	add $-656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c41
	jmp uuid_0000000000077c43
uuid_0000000000077c41:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077c3e
	jmp uuid_0000000000077c40
uuid_0000000000077c3e:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077c3b
	jmp uuid_0000000000077c3d
uuid_0000000000077c3b:
	movb $1, -480(%rbp)
uuid_0000000000077c3d:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000077c40:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000077c43:
	mov -496(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000077c46:
	mov -488(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c75
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c5c
	jmp uuid_0000000000077c5e
uuid_0000000000077c5c:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c50
	jmp uuid_0000000000077c52
uuid_0000000000077c50:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_0000000000077c4d
	jmp uuid_0000000000077c4f
uuid_0000000000077c4d:
	push %RBP
	jmp uuid_0000000000077c4a
	jmp uuid_0000000000077c4c
uuid_0000000000077c4a:
	movb $1, -984(%rbp)
uuid_0000000000077c4c:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000077c4f:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000077c52:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c59
	jmp uuid_0000000000077c5b
uuid_0000000000077c59:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077c56
	jmp uuid_0000000000077c58
uuid_0000000000077c56:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077c53
	jmp uuid_0000000000077c55
uuid_0000000000077c53:
	movb $1, -888(%rbp)
uuid_0000000000077c55:
	mov -1088(%RBP),%RSP
	add $-1184, %RSP
uuid_0000000000077c58:
	mov -1072(%RBP),%RSP
	add $-1184, %RSP
uuid_0000000000077c5b:
	mov -904(%RBP),%RSP
	add $-1184, %RSP
uuid_0000000000077c5e:
	mov -896(%RBP),%RSP
	add $-1184, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c72
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -1288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c6b
	jmp uuid_0000000000077c6d
uuid_0000000000077c6b:
	push %RBP
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	jmp uuid_0000000000077c68
	jmp uuid_0000000000077c6a
uuid_0000000000077c68:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077c65
	jmp uuid_0000000000077c67
uuid_0000000000077c65:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077c62
	jmp uuid_0000000000077c64
uuid_0000000000077c62:
	movb $1, -1296(%rbp)
uuid_0000000000077c64:
	mov -1408(%RBP),%RSP
	add $-1504, %RSP
uuid_0000000000077c67:
	mov -1392(%RBP),%RSP
	add $-1504, %RSP
uuid_0000000000077c6a:
	mov -1312(%RBP),%RSP
	add $-1504, %RSP
uuid_0000000000077c6d:
	mov -1304(%RBP),%RSP
	add $-1504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c6f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077c6e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077c71
uuid_0000000000077c6f:
	movq -1504(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077c71:
	mov -1192(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_0000000000077c74
uuid_0000000000077c72:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c5f
	movq -1184(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077c61
uuid_0000000000077c5f:
	movq -1056(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077c61:
	mov -1192(%RBP),%RSP
	add $-1192, %RSP
uuid_0000000000077c74:
	mov -784(%RBP),%RSP
	add $-1192, %RSP
	jmp uuid_0000000000077c77
uuid_0000000000077c75:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c47
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077c49
uuid_0000000000077c47:
	movq -648(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077c49:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000077c77:
	mov -376(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_0000000000077c7a
uuid_0000000000077c78:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077c7a:
	mov -272(%RBP),%RSP
	add $-368, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_0000000000077c7b
uuid_0000000000077c7d:
	subq $56, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $160, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c8d
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c86
	jmp uuid_0000000000077c88
uuid_0000000000077c86:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077c83
	jmp uuid_0000000000077c85
uuid_0000000000077c83:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_0000000000077c80
	jmp uuid_0000000000077c82
uuid_0000000000077c80:
	movb $1, -312(%rbp)
uuid_0000000000077c82:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_0000000000077c85:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_0000000000077c88:
	mov -320(%RBP),%RSP
	add $-400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077c8a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077c89
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077c8c
uuid_0000000000077c8a:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077c8c:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_0000000000077c8f
uuid_0000000000077c8d:
uuid_0000000000077c8f:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $40, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
substitute_CL_ArrowTypeConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077c93
	jmp uuid_0000000000077c95
uuid_0000000000077c93:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077c90
	jmp uuid_0000000000077c92
uuid_0000000000077c90:
	movb $1, -216(%rbp)
uuid_0000000000077c92:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000077c95:
	mov -224(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077cce
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077cb8
	jmp uuid_0000000000077cba
uuid_0000000000077cb8:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077cb5
	jmp uuid_0000000000077cb7
uuid_0000000000077cb5:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077cb2
	jmp uuid_0000000000077cb4
uuid_0000000000077cb2:
	movb $1, -280(%rbp)
uuid_0000000000077cb4:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000077cb7:
	mov -296(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000077cba:
	mov -288(%RBP),%RSP
	add $-352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ccb
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077cc1
	jmp uuid_0000000000077cc3
uuid_0000000000077cc1:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077cbe
	jmp uuid_0000000000077cc0
uuid_0000000000077cbe:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077cbb
	jmp uuid_0000000000077cbd
uuid_0000000000077cbb:
	movb $1, -392(%rbp)
uuid_0000000000077cbd:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_0000000000077cc0:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_0000000000077cc3:
	mov -400(%RBP),%RSP
	add $-464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077cc8
	push %RBP
	jmp uuid_0000000000077cc5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077cc4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077cc7
uuid_0000000000077cc5:
uuid_0000000000077cc7:
	mov -472(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_0000000000077cca
uuid_0000000000077cc8:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077cca:
	mov -360(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_0000000000077ccd
uuid_0000000000077ccb:
	pushq -352(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ccd:
	mov -248(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_0000000000077cd0
uuid_0000000000077cce:
uuid_0000000000077caf:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077cb0
	jmp uuid_0000000000077cb1
uuid_0000000000077cb0:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077cac
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ca2
	jmp uuid_0000000000077ca4
uuid_0000000000077ca2:
	push %RBP
	jmp uuid_0000000000077c9f
	jmp uuid_0000000000077ca1
uuid_0000000000077c9f:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_0000000000077c9c
	jmp uuid_0000000000077c9e
uuid_0000000000077c9c:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077c99
	jmp uuid_0000000000077c9b
uuid_0000000000077c99:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077c96
	jmp uuid_0000000000077c98
uuid_0000000000077c96:
	movb $1, -624(%rbp)
uuid_0000000000077c98:
	mov -696(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000077c9b:
	mov -680(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000077c9e:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000077ca1:
	mov -640(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000077ca4:
	mov -632(%RBP),%RSP
	add $-816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ca9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077ca8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077cab
uuid_0000000000077ca9:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ca5
	movq -816(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077ca7
uuid_0000000000077ca5:
	movq -672(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -128(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077ca7:
	mov -824(%RBP),%RSP
	add $-824, %RSP
uuid_0000000000077cab:
	mov -496(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_0000000000077cae
uuid_0000000000077cac:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077cae:
	mov -368(%RBP),%RSP
	add $-488, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000077caf
uuid_0000000000077cb1:
uuid_0000000000077cd0:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ce0
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077cd9
	jmp uuid_0000000000077cdb
uuid_0000000000077cd9:
	push %RBP
	mov -272(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077cd6
	jmp uuid_0000000000077cd8
uuid_0000000000077cd6:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	jmp uuid_0000000000077cd3
	jmp uuid_0000000000077cd5
uuid_0000000000077cd3:
	movb $1, -288(%rbp)
uuid_0000000000077cd5:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000077cd8:
	mov -304(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000077cdb:
	mov -296(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077cdd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077cdc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077cdf
uuid_0000000000077cdd:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_0000000000077cdf:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_0000000000077ce2
uuid_0000000000077ce0:
uuid_0000000000077ce2:
	mov -192(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
substitute_CL_ArrowTypeConsTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ce6
	jmp uuid_0000000000077ce8
uuid_0000000000077ce6:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077ce3
	jmp uuid_0000000000077ce5
uuid_0000000000077ce3:
	movb $1, -192(%rbp)
uuid_0000000000077ce5:
	mov -208(%RBP),%RSP
	add $-216, %RSP
uuid_0000000000077ce8:
	mov -200(%RBP),%RSP
	add $-216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d51
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d3b
	jmp uuid_0000000000077d3d
uuid_0000000000077d3b:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077d38
	jmp uuid_0000000000077d3a
uuid_0000000000077d38:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077d35
	jmp uuid_0000000000077d37
uuid_0000000000077d35:
	movb $1, -256(%rbp)
uuid_0000000000077d37:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000077d3a:
	mov -272(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000077d3d:
	mov -264(%RBP),%RSP
	add $-328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d4e
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d44
	jmp uuid_0000000000077d46
uuid_0000000000077d44:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077d41
	jmp uuid_0000000000077d43
uuid_0000000000077d41:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077d3e
	jmp uuid_0000000000077d40
uuid_0000000000077d3e:
	movb $1, -368(%rbp)
uuid_0000000000077d40:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000077d43:
	mov -384(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000077d46:
	mov -376(%RBP),%RSP
	add $-440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d4b
	push %RBP
	jmp uuid_0000000000077d48
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077d47
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077d4a
uuid_0000000000077d48:
uuid_0000000000077d4a:
	mov -448(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_0000000000077d4d
uuid_0000000000077d4b:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_0000000000077d4d:
	mov -336(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_0000000000077d50
uuid_0000000000077d4e:
	pushq -328(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_0000000000077d50:
	mov -224(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_0000000000077d53
uuid_0000000000077d51:
uuid_0000000000077d32:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d33
	jmp uuid_0000000000077d34
uuid_0000000000077d33:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d2f
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077cfb
	jmp uuid_0000000000077cfd
uuid_0000000000077cfb:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077cef
	jmp uuid_0000000000077cf1
uuid_0000000000077cef:
	push %RBP
	jmp uuid_0000000000077cec
	jmp uuid_0000000000077cee
uuid_0000000000077cec:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077ce9
	jmp uuid_0000000000077ceb
uuid_0000000000077ce9:
	movb $1, -624(%rbp)
uuid_0000000000077ceb:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000077cee:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000077cf1:
	mov -632(%RBP),%RSP
	add $-656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077cf8
	jmp uuid_0000000000077cfa
uuid_0000000000077cf8:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077cf5
	jmp uuid_0000000000077cf7
uuid_0000000000077cf5:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077cf2
	jmp uuid_0000000000077cf4
uuid_0000000000077cf2:
	movb $1, -528(%rbp)
uuid_0000000000077cf4:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000077cf7:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000077cfa:
	mov -544(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000077cfd:
	mov -536(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d2c
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d13
	jmp uuid_0000000000077d15
uuid_0000000000077d13:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d07
	jmp uuid_0000000000077d09
uuid_0000000000077d07:
	push %RBP
	jmp uuid_0000000000077d04
	jmp uuid_0000000000077d06
uuid_0000000000077d04:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077d01
	jmp uuid_0000000000077d03
uuid_0000000000077d01:
	movb $1, -984(%rbp)
uuid_0000000000077d03:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
uuid_0000000000077d06:
	mov -1000(%RBP),%RSP
	add $-1016, %RSP
uuid_0000000000077d09:
	mov -992(%RBP),%RSP
	add $-1016, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d10
	jmp uuid_0000000000077d12
uuid_0000000000077d10:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077d0d
	jmp uuid_0000000000077d0f
uuid_0000000000077d0d:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077d0a
	jmp uuid_0000000000077d0c
uuid_0000000000077d0a:
	movb $1, -888(%rbp)
uuid_0000000000077d0c:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_0000000000077d0f:
	mov -1024(%RBP),%RSP
	add $-1136, %RSP
uuid_0000000000077d12:
	mov -904(%RBP),%RSP
	add $-1136, %RSP
uuid_0000000000077d15:
	mov -896(%RBP),%RSP
	add $-1136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d29
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d22
	jmp uuid_0000000000077d24
uuid_0000000000077d22:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	jmp uuid_0000000000077d1f
	jmp uuid_0000000000077d21
uuid_0000000000077d1f:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077d1c
	jmp uuid_0000000000077d1e
uuid_0000000000077d1c:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077d19
	jmp uuid_0000000000077d1b
uuid_0000000000077d19:
	movb $1, -1248(%rbp)
uuid_0000000000077d1b:
	mov -1360(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000077d1e:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000077d21:
	mov -1264(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000077d24:
	mov -1256(%RBP),%RSP
	add $-1456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d26
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077d25
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077d28
uuid_0000000000077d26:
	movq -1456(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077d28:
	mov -1144(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_0000000000077d2b
uuid_0000000000077d29:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d16
	movq -1136(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077d18
uuid_0000000000077d16:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077d18:
	mov -1144(%RBP),%RSP
	add $-1144, %RSP
uuid_0000000000077d2b:
	mov -784(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_0000000000077d2e
uuid_0000000000077d2c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077cfe
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077d00
uuid_0000000000077cfe:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077d00:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000077d2e:
	mov -424(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_0000000000077d31
uuid_0000000000077d2f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077d31:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_0000000000077d32
uuid_0000000000077d34:
uuid_0000000000077d53:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	subq $24, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
substitute_SB_lhs_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d84
	jmp uuid_0000000000077d86
uuid_0000000000077d84:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d7b
	jmp uuid_0000000000077d7d
uuid_0000000000077d7b:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d69
	jmp uuid_0000000000077d6b
uuid_0000000000077d69:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d57
	jmp uuid_0000000000077d59
uuid_0000000000077d57:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_0000000000077d54
	jmp uuid_0000000000077d56
uuid_0000000000077d54:
	movb $1, -648(%rbp)
uuid_0000000000077d56:
	mov -664(%RBP),%RSP
	add $-688, %RSP
uuid_0000000000077d59:
	mov -656(%RBP),%RSP
	add $-688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d66
	jmp uuid_0000000000077d68
uuid_0000000000077d66:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d60
	jmp uuid_0000000000077d62
uuid_0000000000077d60:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_0000000000077d5d
	jmp uuid_0000000000077d5f
uuid_0000000000077d5d:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077d5a
	jmp uuid_0000000000077d5c
uuid_0000000000077d5a:
	movb $1, -776(%rbp)
uuid_0000000000077d5c:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_0000000000077d5f:
	mov -792(%RBP),%RSP
	add $-864, %RSP
uuid_0000000000077d62:
	mov -784(%RBP),%RSP
	add $-864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d63
	jmp uuid_0000000000077d65
uuid_0000000000077d63:
	movb $1, -552(%rbp)
uuid_0000000000077d65:
	mov -696(%RBP),%RSP
	add $-864, %RSP
uuid_0000000000077d68:
	mov -568(%RBP),%RSP
	add $-864, %RSP
uuid_0000000000077d6b:
	mov -560(%RBP),%RSP
	add $-864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d78
	jmp uuid_0000000000077d7a
uuid_0000000000077d78:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d72
	jmp uuid_0000000000077d74
uuid_0000000000077d72:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_0000000000077d6f
	jmp uuid_0000000000077d71
uuid_0000000000077d6f:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d6c
	jmp uuid_0000000000077d6e
uuid_0000000000077d6c:
	movb $1, -952(%rbp)
uuid_0000000000077d6e:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000077d71:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000077d74:
	mov -960(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d75
	jmp uuid_0000000000077d77
uuid_0000000000077d75:
	movb $1, -456(%rbp)
uuid_0000000000077d77:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000077d7a:
	mov -472(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000077d7d:
	mov -464(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d81
	jmp uuid_0000000000077d83
uuid_0000000000077d81:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077d7e
	jmp uuid_0000000000077d80
uuid_0000000000077d7e:
	movb $1, -360(%rbp)
uuid_0000000000077d80:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_0000000000077d83:
	mov -376(%RBP),%RSP
	add $-1120, %RSP
uuid_0000000000077d86:
	mov -368(%RBP),%RSP
	add $-1120, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ddd
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077dae
	jmp uuid_0000000000077db0
uuid_0000000000077dae:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d9c
	jmp uuid_0000000000077d9e
uuid_0000000000077d9c:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d8a
	jmp uuid_0000000000077d8c
uuid_0000000000077d8a:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_0000000000077d87
	jmp uuid_0000000000077d89
uuid_0000000000077d87:
	movb $1, -1400(%rbp)
uuid_0000000000077d89:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_0000000000077d8c:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d99
	jmp uuid_0000000000077d9b
uuid_0000000000077d99:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077d93
	jmp uuid_0000000000077d95
uuid_0000000000077d93:
	push %RBP
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	jmp uuid_0000000000077d90
	jmp uuid_0000000000077d92
uuid_0000000000077d90:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077d8d
	jmp uuid_0000000000077d8f
uuid_0000000000077d8d:
	movb $1, -1528(%rbp)
uuid_0000000000077d8f:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_0000000000077d92:
	mov -1544(%RBP),%RSP
	add $-1616, %RSP
uuid_0000000000077d95:
	mov -1536(%RBP),%RSP
	add $-1616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d96
	jmp uuid_0000000000077d98
uuid_0000000000077d96:
	movb $1, -1304(%rbp)
uuid_0000000000077d98:
	mov -1448(%RBP),%RSP
	add $-1616, %RSP
uuid_0000000000077d9b:
	mov -1320(%RBP),%RSP
	add $-1616, %RSP
uuid_0000000000077d9e:
	mov -1312(%RBP),%RSP
	add $-1616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077dab
	jmp uuid_0000000000077dad
uuid_0000000000077dab:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077da5
	jmp uuid_0000000000077da7
uuid_0000000000077da5:
	push %RBP
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_0000000000077da2
	jmp uuid_0000000000077da4
uuid_0000000000077da2:
	push %RBP
	mov -1632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1792(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077d9f
	jmp uuid_0000000000077da1
uuid_0000000000077d9f:
	movb $1, -1704(%rbp)
uuid_0000000000077da1:
	mov -1784(%RBP),%RSP
	add $-1792, %RSP
uuid_0000000000077da4:
	mov -1720(%RBP),%RSP
	add $-1792, %RSP
uuid_0000000000077da7:
	mov -1712(%RBP),%RSP
	add $-1792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077da8
	jmp uuid_0000000000077daa
uuid_0000000000077da8:
	movb $1, -1208(%rbp)
uuid_0000000000077daa:
	mov -1624(%RBP),%RSP
	add $-1792, %RSP
uuid_0000000000077dad:
	mov -1224(%RBP),%RSP
	add $-1792, %RSP
uuid_0000000000077db0:
	mov -1216(%RBP),%RSP
	add $-1792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077dda
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077dc0
	jmp uuid_0000000000077dc2
uuid_0000000000077dc0:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077db7
	jmp uuid_0000000000077db9
uuid_0000000000077db7:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_0000000000077db4
	jmp uuid_0000000000077db6
uuid_0000000000077db4:
	push %RBP
	mov -1904(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077db1
	jmp uuid_0000000000077db3
uuid_0000000000077db1:
	movb $1, -1976(%rbp)
uuid_0000000000077db3:
	mov -2056(%RBP),%RSP
	add $-2064, %RSP
uuid_0000000000077db6:
	mov -1992(%RBP),%RSP
	add $-2064, %RSP
uuid_0000000000077db9:
	mov -1984(%RBP),%RSP
	add $-2064, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077dbd
	jmp uuid_0000000000077dbf
uuid_0000000000077dbd:
	push %RBP
	mov -1856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077dba
	jmp uuid_0000000000077dbc
uuid_0000000000077dba:
	movb $1, -1880(%rbp)
uuid_0000000000077dbc:
	mov -2072(%RBP),%RSP
	add $-2144, %RSP
uuid_0000000000077dbf:
	mov -1896(%RBP),%RSP
	add $-2144, %RSP
uuid_0000000000077dc2:
	mov -1888(%RBP),%RSP
	add $-2144, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077dd7
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2224(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077dc9
	jmp uuid_0000000000077dcb
uuid_0000000000077dc9:
	push %RBP
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_0000000000077dc6
	jmp uuid_0000000000077dc8
uuid_0000000000077dc6:
	push %RBP
	mov -2160(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077dc3
	jmp uuid_0000000000077dc5
uuid_0000000000077dc3:
	movb $1, -2232(%rbp)
uuid_0000000000077dc5:
	mov -2312(%RBP),%RSP
	add $-2320, %RSP
uuid_0000000000077dc8:
	mov -2248(%RBP),%RSP
	add $-2320, %RSP
uuid_0000000000077dcb:
	mov -2240(%RBP),%RSP
	add $-2320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077dd4
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077dd1
	push %RBP
	jmp uuid_0000000000077dce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077dcd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077dd0
uuid_0000000000077dce:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077dcc
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077dd0:
	mov -2408(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_0000000000077dd3
uuid_0000000000077dd1:
uuid_0000000000077dd3:
	mov -2328(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_0000000000077dd6
uuid_0000000000077dd4:
	pushq -2320(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077dd6:
	mov -2152(%RBP),%RSP
	add $-2320, %RSP
	jmp uuid_0000000000077dd9
uuid_0000000000077dd7:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077dd9:
	mov -1800(%RBP),%RSP
	add $-2144, %RSP
	jmp uuid_0000000000077ddc
uuid_0000000000077dda:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1616(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ddc:
	mov -1128(%RBP),%RSP
	add $-1792, %RSP
	jmp uuid_0000000000077ddf
uuid_0000000000077ddd:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ddf:
	mov -280(%RBP),%RSP
	add $-1120, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077eda
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ed7
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e07
	jmp uuid_0000000000077e09
uuid_0000000000077e07:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077df5
	jmp uuid_0000000000077df7
uuid_0000000000077df5:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077de3
	jmp uuid_0000000000077de5
uuid_0000000000077de3:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_0000000000077de0
	jmp uuid_0000000000077de2
uuid_0000000000077de0:
	movb $1, -712(%rbp)
uuid_0000000000077de2:
	mov -728(%RBP),%RSP
	add $-752, %RSP
uuid_0000000000077de5:
	mov -720(%RBP),%RSP
	add $-752, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077df2
	jmp uuid_0000000000077df4
uuid_0000000000077df2:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077dec
	jmp uuid_0000000000077dee
uuid_0000000000077dec:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_0000000000077de9
	jmp uuid_0000000000077deb
uuid_0000000000077de9:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077de6
	jmp uuid_0000000000077de8
uuid_0000000000077de6:
	movb $1, -840(%rbp)
uuid_0000000000077de8:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000077deb:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000077dee:
	mov -848(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077def
	jmp uuid_0000000000077df1
uuid_0000000000077def:
	movb $1, -616(%rbp)
uuid_0000000000077df1:
	mov -760(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000077df4:
	mov -632(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000077df7:
	mov -624(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e04
	jmp uuid_0000000000077e06
uuid_0000000000077e04:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077dfe
	jmp uuid_0000000000077e00
uuid_0000000000077dfe:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_0000000000077dfb
	jmp uuid_0000000000077dfd
uuid_0000000000077dfb:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077df8
	jmp uuid_0000000000077dfa
uuid_0000000000077df8:
	movb $1, -1016(%rbp)
uuid_0000000000077dfa:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000077dfd:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000077e00:
	mov -1024(%RBP),%RSP
	add $-1104, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e01
	jmp uuid_0000000000077e03
uuid_0000000000077e01:
	movb $1, -520(%rbp)
uuid_0000000000077e03:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000077e06:
	mov -536(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000077e09:
	mov -528(%RBP),%RSP
	add $-1104, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ed4
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e4d
	jmp uuid_0000000000077e4f
uuid_0000000000077e4d:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e3b
	jmp uuid_0000000000077e3d
uuid_0000000000077e3b:
	push %RBP
	mov -1272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e29
	jmp uuid_0000000000077e2b
uuid_0000000000077e29:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	jmp uuid_0000000000077e26
	jmp uuid_0000000000077e28
uuid_0000000000077e26:
	movb $1, -1384(%rbp)
uuid_0000000000077e28:
	mov -1400(%RBP),%RSP
	add $-1424, %RSP
uuid_0000000000077e2b:
	mov -1392(%RBP),%RSP
	add $-1424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e38
	jmp uuid_0000000000077e3a
uuid_0000000000077e38:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e32
	jmp uuid_0000000000077e34
uuid_0000000000077e32:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_0000000000077e2f
	jmp uuid_0000000000077e31
uuid_0000000000077e2f:
	push %RBP
	mov -1440(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077e2c
	jmp uuid_0000000000077e2e
uuid_0000000000077e2c:
	movb $1, -1512(%rbp)
uuid_0000000000077e2e:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_0000000000077e31:
	mov -1528(%RBP),%RSP
	add $-1600, %RSP
uuid_0000000000077e34:
	mov -1520(%RBP),%RSP
	add $-1600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e35
	jmp uuid_0000000000077e37
uuid_0000000000077e35:
	movb $1, -1288(%rbp)
uuid_0000000000077e37:
	mov -1432(%RBP),%RSP
	add $-1600, %RSP
uuid_0000000000077e3a:
	mov -1304(%RBP),%RSP
	add $-1600, %RSP
uuid_0000000000077e3d:
	mov -1296(%RBP),%RSP
	add $-1600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e4a
	jmp uuid_0000000000077e4c
uuid_0000000000077e4a:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e44
	jmp uuid_0000000000077e46
uuid_0000000000077e44:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	jmp uuid_0000000000077e41
	jmp uuid_0000000000077e43
uuid_0000000000077e41:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e3e
	jmp uuid_0000000000077e40
uuid_0000000000077e3e:
	movb $1, -1688(%rbp)
uuid_0000000000077e40:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000077e43:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000077e46:
	mov -1696(%RBP),%RSP
	add $-1776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e47
	jmp uuid_0000000000077e49
uuid_0000000000077e47:
	movb $1, -1192(%rbp)
uuid_0000000000077e49:
	mov -1608(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000077e4c:
	mov -1208(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000077e4f:
	mov -1200(%RBP),%RSP
	add $-1776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ed1
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e72
	jmp uuid_0000000000077e74
uuid_0000000000077e72:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_0000000000077e6f
	jmp uuid_0000000000077e71
uuid_0000000000077e6f:
	push %RBP
	mov -1792(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077e6c
	jmp uuid_0000000000077e6e
uuid_0000000000077e6c:
	movb $1, -1864(%rbp)
uuid_0000000000077e6e:
	mov -1944(%RBP),%RSP
	add $-1952, %RSP
uuid_0000000000077e71:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_0000000000077e74:
	mov -1872(%RBP),%RSP
	add $-1952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ece
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e7b
	jmp uuid_0000000000077e7d
uuid_0000000000077e7b:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	jmp uuid_0000000000077e78
	jmp uuid_0000000000077e7a
uuid_0000000000077e78:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077e75
	jmp uuid_0000000000077e77
uuid_0000000000077e75:
	movb $1, -2040(%rbp)
uuid_0000000000077e77:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_0000000000077e7a:
	mov -2056(%RBP),%RSP
	add $-2128, %RSP
uuid_0000000000077e7d:
	mov -2048(%RBP),%RSP
	add $-2128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ecb
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e87
	jmp uuid_0000000000077e89
uuid_0000000000077e87:
	push %RBP
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	jmp uuid_0000000000077e84
	jmp uuid_0000000000077e86
uuid_0000000000077e84:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e81
	jmp uuid_0000000000077e83
uuid_0000000000077e81:
	push %RBP
	mov -2168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e7e
	jmp uuid_0000000000077e80
uuid_0000000000077e7e:
	movb $1, -2216(%rbp)
uuid_0000000000077e80:
	mov -2344(%RBP),%RSP
	add $-2416, %RSP
uuid_0000000000077e83:
	mov -2264(%RBP),%RSP
	add $-2416, %RSP
uuid_0000000000077e86:
	mov -2232(%RBP),%RSP
	add $-2416, %RSP
uuid_0000000000077e89:
	mov -2224(%RBP),%RSP
	add $-2416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ec8
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2496(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e8d
	jmp uuid_0000000000077e8f
uuid_0000000000077e8d:
	push %RBP
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	jmp uuid_0000000000077e8a
	jmp uuid_0000000000077e8c
uuid_0000000000077e8a:
	movb $1, -2504(%rbp)
uuid_0000000000077e8c:
	mov -2520(%RBP),%RSP
	add $-2544, %RSP
uuid_0000000000077e8f:
	mov -2512(%RBP),%RSP
	add $-2544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ec5
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e96
	jmp uuid_0000000000077e98
uuid_0000000000077e96:
	push %RBP
	mov -2616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e93
	jmp uuid_0000000000077e95
uuid_0000000000077e93:
	push %RBP
	mov -2608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e90
	jmp uuid_0000000000077e92
uuid_0000000000077e90:
	movb $1, -2632(%rbp)
uuid_0000000000077e92:
	mov -2728(%RBP),%RSP
	add $-2800, %RSP
uuid_0000000000077e95:
	mov -2648(%RBP),%RSP
	add $-2800, %RSP
uuid_0000000000077e98:
	mov -2640(%RBP),%RSP
	add $-2800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ec2
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e9f
	jmp uuid_0000000000077ea1
uuid_0000000000077e9f:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e9c
	jmp uuid_0000000000077e9e
uuid_0000000000077e9c:
	push %RBP
	mov -2864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e99
	jmp uuid_0000000000077e9b
uuid_0000000000077e99:
	movb $1, -2888(%rbp)
uuid_0000000000077e9b:
	mov -2984(%RBP),%RSP
	add $-3056, %RSP
uuid_0000000000077e9e:
	mov -2904(%RBP),%RSP
	add $-3056, %RSP
uuid_0000000000077ea1:
	mov -2896(%RBP),%RSP
	add $-3056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ebf
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3136(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ea8
	jmp uuid_0000000000077eaa
uuid_0000000000077ea8:
	push %RBP
	mov -3128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077ea5
	jmp uuid_0000000000077ea7
uuid_0000000000077ea5:
	push %RBP
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	jmp uuid_0000000000077ea2
	jmp uuid_0000000000077ea4
uuid_0000000000077ea2:
	movb $1, -3144(%rbp)
uuid_0000000000077ea4:
	mov -3240(%RBP),%RSP
	add $-3296, %RSP
uuid_0000000000077ea7:
	mov -3160(%RBP),%RSP
	add $-3296, %RSP
uuid_0000000000077eaa:
	mov -3152(%RBP),%RSP
	add $-3296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ebc
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077eb1
	jmp uuid_0000000000077eb3
uuid_0000000000077eb1:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077eae
	jmp uuid_0000000000077eb0
uuid_0000000000077eae:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077eab
	jmp uuid_0000000000077ead
uuid_0000000000077eab:
	movb $1, -3384(%rbp)
uuid_0000000000077ead:
	mov -3480(%RBP),%RSP
	add $-3552, %RSP
uuid_0000000000077eb0:
	mov -3400(%RBP),%RSP
	add $-3552, %RSP
uuid_0000000000077eb3:
	mov -3392(%RBP),%RSP
	add $-3552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077eb9
	push %RBP
	jmp uuid_0000000000077eb6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077eb5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077eb8
uuid_0000000000077eb6:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077eb4
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077eb8:
	mov -3560(%RBP),%RSP
	add $-3560, %RSP
	jmp uuid_0000000000077ebb
uuid_0000000000077eb9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -3456(%rbp)
	pushq -3464(%rbp)
	pushq -3472(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ebb:
	mov -3304(%RBP),%RSP
	add $-3552, %RSP
	jmp uuid_0000000000077ebe
uuid_0000000000077ebc:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq -3184(%rbp)
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ebe:
	mov -3064(%RBP),%RSP
	add $-3296, %RSP
	jmp uuid_0000000000077ec1
uuid_0000000000077ebf:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	pushq -3040(%rbp)
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ec1:
	mov -2808(%RBP),%RSP
	add $-3056, %RSP
	jmp uuid_0000000000077ec4
uuid_0000000000077ec2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	pushq -2776(%rbp)
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ec4:
	mov -2552(%RBP),%RSP
	add $-2800, %RSP
	jmp uuid_0000000000077ec7
uuid_0000000000077ec5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ec7:
	mov -2424(%RBP),%RSP
	add $-2544, %RSP
	jmp uuid_0000000000077eca
uuid_0000000000077ec8:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $5
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077eca:
	mov -2136(%RBP),%RSP
	add $-2416, %RSP
	jmp uuid_0000000000077ecd
uuid_0000000000077ecb:
	pushq -2128(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ecd:
	mov -1960(%RBP),%RSP
	add $-2128, %RSP
	jmp uuid_0000000000077ed0
uuid_0000000000077ece:
	pushq -1952(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077ed0:
	mov -1784(%RBP),%RSP
	add $-1952, %RSP
	jmp uuid_0000000000077ed3
uuid_0000000000077ed1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077e69:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e6a
	jmp uuid_0000000000077e6b
uuid_0000000000077e6a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e66
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e5c
	jmp uuid_0000000000077e5e
uuid_0000000000077e5c:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	jmp uuid_0000000000077e59
	jmp uuid_0000000000077e5b
uuid_0000000000077e59:
	push %RBP
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	jmp uuid_0000000000077e56
	jmp uuid_0000000000077e58
uuid_0000000000077e56:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077e53
	jmp uuid_0000000000077e55
uuid_0000000000077e53:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e50
	jmp uuid_0000000000077e52
uuid_0000000000077e50:
	movb $1, -2160(%rbp)
uuid_0000000000077e52:
	mov -2304(%RBP),%RSP
	add $-2424, %RSP
uuid_0000000000077e55:
	mov -2288(%RBP),%RSP
	add $-2424, %RSP
uuid_0000000000077e58:
	mov -2256(%RBP),%RSP
	add $-2424, %RSP
uuid_0000000000077e5b:
	mov -2176(%RBP),%RSP
	add $-2424, %RSP
uuid_0000000000077e5e:
	mov -2168(%RBP),%RSP
	add $-2424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e63
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077e62
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077e65
uuid_0000000000077e63:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e5f
	movq -2424(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2408(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2400(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2392(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2384(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077e61
uuid_0000000000077e5f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077e61:
	mov -2432(%RBP),%RSP
	add $-2432, %RSP
uuid_0000000000077e65:
	mov -2032(%RBP),%RSP
	add $-2432, %RSP
	jmp uuid_0000000000077e68
uuid_0000000000077e66:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077e68:
	mov -1904(%RBP),%RSP
	add $-2024, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000077e69
uuid_0000000000077e6b:
uuid_0000000000077ed3:
	mov -1112(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_0000000000077ed6
uuid_0000000000077ed4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000077e23:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e24
	jmp uuid_0000000000077e25
uuid_0000000000077e24:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e20
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077e16
	jmp uuid_0000000000077e18
uuid_0000000000077e16:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_0000000000077e13
	jmp uuid_0000000000077e15
uuid_0000000000077e13:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_0000000000077e10
	jmp uuid_0000000000077e12
uuid_0000000000077e10:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077e0d
	jmp uuid_0000000000077e0f
uuid_0000000000077e0d:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077e0a
	jmp uuid_0000000000077e0c
uuid_0000000000077e0a:
	movb $1, -1488(%rbp)
uuid_0000000000077e0c:
	mov -1632(%RBP),%RSP
	add $-1752, %RSP
uuid_0000000000077e0f:
	mov -1616(%RBP),%RSP
	add $-1752, %RSP
uuid_0000000000077e12:
	mov -1584(%RBP),%RSP
	add $-1752, %RSP
uuid_0000000000077e15:
	mov -1504(%RBP),%RSP
	add $-1752, %RSP
uuid_0000000000077e18:
	mov -1496(%RBP),%RSP
	add $-1752, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e1d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077e1c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077e1f
uuid_0000000000077e1d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077e19
	movq -1752(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000077e1b
uuid_0000000000077e19:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077e1b:
	mov -1760(%RBP),%RSP
	add $-1760, %RSP
uuid_0000000000077e1f:
	mov -1360(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_0000000000077e22
uuid_0000000000077e20:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000077e22:
	mov -1232(%RBP),%RSP
	add $-1352, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000077e23
uuid_0000000000077e25:
uuid_0000000000077ed6:
	mov -440(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_0000000000077ed9
uuid_0000000000077ed7:
uuid_0000000000077ed9:
	mov -360(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_0000000000077edc
uuid_0000000000077eda:
uuid_0000000000077edc:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowSConsSStringSList:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f09
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ee0
	jmp uuid_0000000000077ee2
uuid_0000000000077ee0:
	push %RBP
	mov -160(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077edd
	jmp uuid_0000000000077edf
uuid_0000000000077edd:
	movb $1, -176(%rbp)
uuid_0000000000077edf:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_0000000000077ee2:
	mov -184(%RBP),%RSP
	add $-200, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f06
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077eff
	jmp uuid_0000000000077f01
uuid_0000000000077eff:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077efc
	jmp uuid_0000000000077efe
uuid_0000000000077efc:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077ef9
	jmp uuid_0000000000077efb
uuid_0000000000077ef9:
	movb $1, -240(%rbp)
uuid_0000000000077efb:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077efe:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000077f01:
	mov -248(%RBP),%RSP
	add $-312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f03
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077f02
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077f05
uuid_0000000000077f03:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000077f05:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000077f08
uuid_0000000000077f06:
uuid_0000000000077ef6:
#call function non-zero : Arrow<StringSList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ef7
	jmp uuid_0000000000077ef8
uuid_0000000000077ef7:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077eec
	jmp uuid_0000000000077eee
uuid_0000000000077eec:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	jmp uuid_0000000000077ee9
	jmp uuid_0000000000077eeb
uuid_0000000000077ee9:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077ee6
	jmp uuid_0000000000077ee8
uuid_0000000000077ee6:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077ee3
	jmp uuid_0000000000077ee5
uuid_0000000000077ee3:
	movb $1, -312(%rbp)
uuid_0000000000077ee5:
	mov -376(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000077ee8:
	mov -360(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000077eeb:
	mov -328(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000077eee:
	mov -320(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ef3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077ef2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077ef5
uuid_0000000000077ef3:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077eef
	jmp uuid_0000000000077ef1
uuid_0000000000077eef:
	movq -352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_0000000000077ef1:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000077ef5:
	mov -256(%RBP),%RSP
	add $-432, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000077ef6
uuid_0000000000077ef8:
uuid_0000000000077f08:
	mov -144(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_0000000000077f0b
uuid_0000000000077f09:
	pushq $0
	pushq $0
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000077f0b:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f4a
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000077f44:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f45
	jmp uuid_0000000000077f46
uuid_0000000000077f45:
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f41
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f18
	jmp uuid_0000000000077f1a
uuid_0000000000077f18:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	jmp uuid_0000000000077f15
	jmp uuid_0000000000077f17
uuid_0000000000077f15:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_0000000000077f12
	jmp uuid_0000000000077f14
uuid_0000000000077f12:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077f0f
	jmp uuid_0000000000077f11
uuid_0000000000077f0f:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077f0c
	jmp uuid_0000000000077f0e
uuid_0000000000077f0c:
	movb $1, -768(%rbp)
uuid_0000000000077f0e:
	mov -912(%RBP),%RSP
	add $-1032, %RSP
uuid_0000000000077f11:
	mov -896(%RBP),%RSP
	add $-1032, %RSP
uuid_0000000000077f14:
	mov -864(%RBP),%RSP
	add $-1032, %RSP
uuid_0000000000077f17:
	mov -784(%RBP),%RSP
	add $-1032, %RSP
uuid_0000000000077f1a:
	mov -776(%RBP),%RSP
	add $-1032, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f3e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077f3d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077f40
uuid_0000000000077f3e:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f3a
	jmp uuid_0000000000077f3c
uuid_0000000000077f3a:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f37
	jmp uuid_0000000000077f39
uuid_0000000000077f37:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f2d
	jmp uuid_0000000000077f2f
uuid_0000000000077f2d:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f24
	jmp uuid_0000000000077f26
uuid_0000000000077f24:
	push %RBP
	jmp uuid_0000000000077f21
	jmp uuid_0000000000077f23
uuid_0000000000077f21:
	push %RBP
	jmp uuid_0000000000077f1e
	jmp uuid_0000000000077f20
uuid_0000000000077f1e:
	push %RBP
	jmp uuid_0000000000077f1b
	jmp uuid_0000000000077f1d
uuid_0000000000077f1b:
	movb $1, -1304(%rbp)
uuid_0000000000077f1d:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000077f20:
	mov -1328(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000077f23:
	mov -1320(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000077f26:
	mov -1312(%RBP),%RSP
	add $-1336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f2a
	jmp uuid_0000000000077f2c
uuid_0000000000077f2a:
	push %RBP
	jmp uuid_0000000000077f27
	jmp uuid_0000000000077f29
uuid_0000000000077f27:
	movb $1, -1208(%rbp)
uuid_0000000000077f29:
	mov -1344(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000077f2c:
	mov -1224(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000077f2f:
	mov -1216(%RBP),%RSP
	add $-1344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f34
	push %RBP
	jmp uuid_0000000000077f31
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077f30
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077f33
uuid_0000000000077f31:
uuid_0000000000077f33:
	mov -1352(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_0000000000077f36
uuid_0000000000077f34:
	movq -856(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -200(%rbp)
uuid_0000000000077f36:
	mov -1128(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000077f39:
	mov -1048(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000077f3c:
	mov -1040(%RBP),%RSP
	add $-1344, %RSP
	movq -1032(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
uuid_0000000000077f40:
	mov -640(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_0000000000077f43
uuid_0000000000077f41:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
uuid_0000000000077f43:
	mov -512(%RBP),%RSP
	add $-632, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_0000000000077f44
uuid_0000000000077f46:
#call function mark-as-special : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mark_SB_as_SB_special_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f47
	jmp uuid_0000000000077f49
uuid_0000000000077f47:
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_0000000000077f49:
	mov -392(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_0000000000077f4c
uuid_0000000000077f4a:
uuid_0000000000077f4c:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	mov %rbp, %rsp
	sub $184, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f60
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f56
	jmp uuid_0000000000077f58
uuid_0000000000077f56:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077f53
	jmp uuid_0000000000077f55
uuid_0000000000077f53:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_0000000000077f50
	jmp uuid_0000000000077f52
uuid_0000000000077f50:
	movb $1, -240(%rbp)
uuid_0000000000077f52:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000077f55:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000077f58:
	mov -248(%RBP),%RSP
	add $-328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f5d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077f5c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077f5f
uuid_0000000000077f5d:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f59
	jmp uuid_0000000000077f5b
uuid_0000000000077f59:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077f5b:
	mov -336(%RBP),%RSP
	add $-336, %RSP
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077f5f:
	mov -192(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_0000000000077f62
uuid_0000000000077f60:
uuid_0000000000077f62:
	mov -144(%RBP),%RSP
	add $-184, %RSP
	mov %rbp, %rsp
	sub $96, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f7b
	jmp uuid_0000000000077f7d
uuid_0000000000077f7b:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f72
	jmp uuid_0000000000077f74
uuid_0000000000077f72:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f69
	jmp uuid_0000000000077f6b
uuid_0000000000077f69:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f66
	jmp uuid_0000000000077f68
uuid_0000000000077f66:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_0000000000077f63
	jmp uuid_0000000000077f65
uuid_0000000000077f63:
	movb $1, -248(%rbp)
uuid_0000000000077f65:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000077f68:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000077f6b:
	mov -256(%RBP),%RSP
	add $-336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f6f
	jmp uuid_0000000000077f71
uuid_0000000000077f6f:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_0000000000077f6c
	jmp uuid_0000000000077f6e
uuid_0000000000077f6c:
	movb $1, -184(%rbp)
uuid_0000000000077f6e:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077f71:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000077f74:
	mov -192(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f78
	jmp uuid_0000000000077f7a
uuid_0000000000077f78:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f75
	jmp uuid_0000000000077f77
uuid_0000000000077f75:
	movb $1, -120(%rbp)
uuid_0000000000077f77:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000077f7a:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000077f7d:
	mov -128(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f97
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f84
	jmp uuid_0000000000077f86
uuid_0000000000077f84:
	push %RBP
	mov -408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077f81
	jmp uuid_0000000000077f83
uuid_0000000000077f81:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077f7e
	jmp uuid_0000000000077f80
uuid_0000000000077f7e:
	movb $1, -424(%rbp)
uuid_0000000000077f80:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_0000000000077f83:
	mov -440(%RBP),%RSP
	add $-496, %RSP
uuid_0000000000077f86:
	mov -432(%RBP),%RSP
	add $-496, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f94
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077f8a
	jmp uuid_0000000000077f8c
uuid_0000000000077f8a:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077f87
	jmp uuid_0000000000077f89
uuid_0000000000077f87:
	movb $1, -536(%rbp)
uuid_0000000000077f89:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000077f8c:
	mov -544(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077f91
	push %RBP
	jmp uuid_0000000000077f8e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077f8d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077f90
uuid_0000000000077f8e:
uuid_0000000000077f90:
	mov -568(%RBP),%RSP
	add $-568, %RSP
	jmp uuid_0000000000077f93
uuid_0000000000077f91:
#call function mark-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function parameter-number : Arrow<Cons<Type,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077f93:
	mov -504(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_0000000000077f96
uuid_0000000000077f94:
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -496(%rbp)
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077f96:
	mov -392(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_0000000000077f99
uuid_0000000000077f97:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077f99:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	mov %rbp, %rsp
	sub $56, %rsp
	ret
infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fa0
	jmp uuid_0000000000077fa2
uuid_0000000000077fa0:
	push %RBP
	jmp uuid_0000000000077f9d
	jmp uuid_0000000000077f9f
uuid_0000000000077f9d:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077f9a
	jmp uuid_0000000000077f9c
uuid_0000000000077f9a:
	movb $1, -272(%rbp)
uuid_0000000000077f9c:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000077f9f:
	mov -288(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000077fa2:
	mov -280(%RBP),%RSP
	add $-304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fc4
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fb2
	jmp uuid_0000000000077fb4
uuid_0000000000077fb2:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077faf
	jmp uuid_0000000000077fb1
uuid_0000000000077faf:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fa9
	jmp uuid_0000000000077fab
uuid_0000000000077fa9:
	push %RBP
	jmp uuid_0000000000077fa6
	jmp uuid_0000000000077fa8
uuid_0000000000077fa6:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077fa3
	jmp uuid_0000000000077fa5
uuid_0000000000077fa3:
	movb $1, -568(%rbp)
uuid_0000000000077fa5:
	mov -592(%RBP),%RSP
	add $-600, %RSP
uuid_0000000000077fa8:
	mov -584(%RBP),%RSP
	add $-600, %RSP
uuid_0000000000077fab:
	mov -576(%RBP),%RSP
	add $-600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fac
	jmp uuid_0000000000077fae
uuid_0000000000077fac:
	movb $1, -392(%rbp)
uuid_0000000000077fae:
	mov -488(%RBP),%RSP
	add $-600, %RSP
uuid_0000000000077fb1:
	mov -408(%RBP),%RSP
	add $-600, %RSP
uuid_0000000000077fb4:
	mov -400(%RBP),%RSP
	add $-600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fc1
	push %RBP
	jmp uuid_0000000000077fbe
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077fbd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077fc0
uuid_0000000000077fbe:
uuid_0000000000077fc0:
	mov -608(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_0000000000077fc3
uuid_0000000000077fc1:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fb6
	jmp uuid_0000000000077fb8
uuid_0000000000077fb6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077fb5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077fb8:
	mov -632(%RBP),%RSP
	add $-632, %RSP
	push %RBP
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fba
	jmp uuid_0000000000077fbc
uuid_0000000000077fba:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000077fb9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077fbc:
	mov -640(%RBP),%RSP
	add $-640, %RSP
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007679b
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function set-type-fields : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call set_SB_type_SB_fields_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -600(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -112(%rbp)
	movq -112(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076582
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_0000000000077fc3:
	mov -312(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_0000000000077fc6
uuid_0000000000077fc4:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007679b
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076582
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076583
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076585
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f56
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq $8, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076582
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_0000000000077fc6:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	mov -112(%rbp), %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_global_SB_context_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fd6
	jmp uuid_0000000000077fd8
uuid_0000000000077fd6:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077fd3
	jmp uuid_0000000000077fd5
uuid_0000000000077fd3:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fcd
	jmp uuid_0000000000077fcf
uuid_0000000000077fcd:
	push %RBP
	jmp uuid_0000000000077fca
	jmp uuid_0000000000077fcc
uuid_0000000000077fca:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077fc7
	jmp uuid_0000000000077fc9
uuid_0000000000077fc7:
	movb $1, -416(%rbp)
uuid_0000000000077fc9:
	mov -440(%RBP),%RSP
	add $-448, %RSP
uuid_0000000000077fcc:
	mov -432(%RBP),%RSP
	add $-448, %RSP
uuid_0000000000077fcf:
	mov -424(%RBP),%RSP
	add $-448, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fd0
	jmp uuid_0000000000077fd2
uuid_0000000000077fd0:
	movb $1, -240(%rbp)
uuid_0000000000077fd2:
	mov -336(%RBP),%RSP
	add $-448, %RSP
uuid_0000000000077fd5:
	mov -256(%RBP),%RSP
	add $-448, %RSP
uuid_0000000000077fd8:
	mov -248(%RBP),%RSP
	add $-448, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007807f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078028
	jmp uuid_000000000007802a
uuid_0000000000078028:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078013
	jmp uuid_0000000000078015
uuid_0000000000078013:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_0000000000078010
	jmp uuid_0000000000078012
uuid_0000000000078010:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078007
	jmp uuid_0000000000078009
uuid_0000000000078007:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ff5
	jmp uuid_0000000000077ff7
uuid_0000000000077ff5:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fec
	jmp uuid_0000000000077fee
uuid_0000000000077fec:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_0000000000077fe9
	jmp uuid_0000000000077feb
uuid_0000000000077fe9:
	movb $1, -1024(%rbp)
uuid_0000000000077feb:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000077fee:
	mov -1032(%RBP),%RSP
	add $-1064, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ff2
	jmp uuid_0000000000077ff4
uuid_0000000000077ff2:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000077fef
	jmp uuid_0000000000077ff1
uuid_0000000000077fef:
	movb $1, -928(%rbp)
uuid_0000000000077ff1:
	mov -1072(%RBP),%RSP
	add $-1144, %RSP
uuid_0000000000077ff4:
	mov -944(%RBP),%RSP
	add $-1144, %RSP
uuid_0000000000077ff7:
	mov -936(%RBP),%RSP
	add $-1144, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078004
	jmp uuid_0000000000078006
uuid_0000000000078004:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077ffe
	jmp uuid_0000000000078000
uuid_0000000000077ffe:
	push %RBP
	jmp uuid_0000000000077ffb
	jmp uuid_0000000000077ffd
uuid_0000000000077ffb:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077ff8
	jmp uuid_0000000000077ffa
uuid_0000000000077ff8:
	movb $1, -1232(%rbp)
uuid_0000000000077ffa:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
uuid_0000000000077ffd:
	mov -1248(%RBP),%RSP
	add $-1264, %RSP
uuid_0000000000078000:
	mov -1240(%RBP),%RSP
	add $-1264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078001
	jmp uuid_0000000000078003
uuid_0000000000078001:
	movb $1, -832(%rbp)
uuid_0000000000078003:
	mov -1152(%RBP),%RSP
	add $-1264, %RSP
uuid_0000000000078006:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_0000000000078009:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007800d
	jmp uuid_000000000007800f
uuid_000000000007800d:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007800a
	jmp uuid_000000000007800c
uuid_000000000007800a:
	movb $1, -704(%rbp)
uuid_000000000007800c:
	mov -1272(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007800f:
	mov -752(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000078012:
	mov -720(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000078015:
	mov -712(%RBP),%RSP
	add $-1344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078025
	jmp uuid_0000000000078027
uuid_0000000000078025:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007801f
	jmp uuid_0000000000078021
uuid_000000000007801f:
	push %RBP
	jmp uuid_000000000007801c
	jmp uuid_000000000007801e
uuid_000000000007801c:
	push %RBP
	jmp uuid_0000000000078019
	jmp uuid_000000000007801b
uuid_0000000000078019:
	push %RBP
	mov -1360(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078016
	jmp uuid_0000000000078018
uuid_0000000000078016:
	movb $1, -1416(%rbp)
uuid_0000000000078018:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007801b:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007801e:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000078021:
	mov -1424(%RBP),%RSP
	add $-1456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078022
	jmp uuid_0000000000078024
uuid_0000000000078022:
	movb $1, -536(%rbp)
uuid_0000000000078024:
	mov -1352(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000078027:
	mov -552(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007802a:
	mov -544(%RBP),%RSP
	add $-1456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007807c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078065
	jmp uuid_0000000000078067
uuid_0000000000078065:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078050
	jmp uuid_0000000000078052
uuid_0000000000078050:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007803e
	jmp uuid_0000000000078040
uuid_000000000007803e:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078035
	jmp uuid_0000000000078037
uuid_0000000000078035:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_0000000000078032
	jmp uuid_0000000000078034
uuid_0000000000078032:
	movb $1, -1832(%rbp)
uuid_0000000000078034:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078037:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007803b
	jmp uuid_000000000007803d
uuid_000000000007803b:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078038
	jmp uuid_000000000007803a
uuid_0000000000078038:
	movb $1, -1736(%rbp)
uuid_000000000007803a:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007803d:
	mov -1752(%RBP),%RSP
	add $-1952, %RSP
uuid_0000000000078040:
	mov -1744(%RBP),%RSP
	add $-1952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007804d
	jmp uuid_000000000007804f
uuid_000000000007804d:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078047
	jmp uuid_0000000000078049
uuid_0000000000078047:
	push %RBP
	jmp uuid_0000000000078044
	jmp uuid_0000000000078046
uuid_0000000000078044:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2072(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078041
	jmp uuid_0000000000078043
uuid_0000000000078041:
	movb $1, -2040(%rbp)
uuid_0000000000078043:
	mov -2064(%RBP),%RSP
	add $-2072, %RSP
uuid_0000000000078046:
	mov -2056(%RBP),%RSP
	add $-2072, %RSP
uuid_0000000000078049:
	mov -2048(%RBP),%RSP
	add $-2072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007804a
	jmp uuid_000000000007804c
uuid_000000000007804a:
	movb $1, -1640(%rbp)
uuid_000000000007804c:
	mov -1960(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007804f:
	mov -1656(%RBP),%RSP
	add $-2072, %RSP
uuid_0000000000078052:
	mov -1648(%RBP),%RSP
	add $-2072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078062
	jmp uuid_0000000000078064
uuid_0000000000078062:
	push %RBP
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq $0
	push %RBP
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007805c
	jmp uuid_000000000007805e
uuid_000000000007805c:
	push %RBP
	jmp uuid_0000000000078059
	jmp uuid_000000000007805b
uuid_0000000000078059:
	push %RBP
	jmp uuid_0000000000078056
	jmp uuid_0000000000078058
uuid_0000000000078056:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078053
	jmp uuid_0000000000078055
uuid_0000000000078053:
	movb $1, -2144(%rbp)
uuid_0000000000078055:
	mov -2176(%RBP),%RSP
	add $-2184, %RSP
uuid_0000000000078058:
	mov -2168(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007805b:
	mov -2160(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007805e:
	mov -2152(%RBP),%RSP
	add $-2184, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007805f
	jmp uuid_0000000000078061
uuid_000000000007805f:
	movb $1, -1544(%rbp)
uuid_0000000000078061:
	mov -2080(%RBP),%RSP
	add $-2184, %RSP
uuid_0000000000078064:
	mov -1560(%RBP),%RSP
	add $-2184, %RSP
uuid_0000000000078067:
	mov -1552(%RBP),%RSP
	add $-2184, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078079
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007806e
	jmp uuid_0000000000078070
uuid_000000000007806e:
	push %RBP
	jmp uuid_000000000007806b
	jmp uuid_000000000007806d
uuid_000000000007806b:
	push %RBP
	jmp uuid_0000000000078068
	jmp uuid_000000000007806a
uuid_0000000000078068:
	movb $1, -2272(%rbp)
uuid_000000000007806a:
	mov -2296(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007806d:
	mov -2288(%RBP),%RSP
	add $-2296, %RSP
uuid_0000000000078070:
	mov -2280(%RBP),%RSP
	add $-2296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078076
	push %RBP
	jmp uuid_0000000000078073
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078072
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078075
uuid_0000000000078073:
uuid_0000000000078075:
	mov -2304(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_0000000000078078
uuid_0000000000078076:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078071
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078078:
	mov -2192(%RBP),%RSP
	add $-2296, %RSP
	jmp uuid_000000000007807b
uuid_0000000000078079:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076358
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007807b:
	mov -1464(%RBP),%RSP
	add $-2208, %RSP
	jmp uuid_000000000007807e
uuid_000000000007807c:
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007802b
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	jmp uuid_000000000007802d
uuid_000000000007802b:
uuid_000000000007802d:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1536(%RBP)
	popq -1528(%RBP)
	popq -1520(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007802f
	jmp uuid_0000000000078031
uuid_000000000007802f:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007802e
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078031:
	mov -1544(%RBP),%RSP
	add $-1544, %RSP
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
uuid_000000000007807e:
	mov -456(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_0000000000078081
uuid_000000000007807f:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fdf
	jmp uuid_0000000000077fe1
uuid_0000000000077fdf:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000077fdc
	jmp uuid_0000000000077fde
uuid_0000000000077fdc:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000077fd9
	jmp uuid_0000000000077fdb
uuid_0000000000077fd9:
	movb $1, -544(%rbp)
uuid_0000000000077fdb:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000077fde:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000077fe1:
	mov -552(%RBP),%RSP
	add $-616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000077fe6
	push %RBP
	jmp uuid_0000000000077fe3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000077fe2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000077fe5
uuid_0000000000077fe3:
uuid_0000000000077fe5:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_0000000000077fe8
uuid_0000000000077fe6:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000077fe8:
	mov -512(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000078081:
	mov -160(%RBP),%RSP
	add $-616, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_well_SB_typed_CL_ArrowNilAST:
uuid_000000000007808f:
#call function is-seq : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call is_SB_seq_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078090
	jmp uuid_0000000000078091
uuid_0000000000078090:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078088
	jmp uuid_000000000007808a
uuid_0000000000078088:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078085
	jmp uuid_0000000000078087
uuid_0000000000078085:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078082
	jmp uuid_0000000000078084
uuid_0000000000078082:
	movb $1, -240(%rbp)
uuid_0000000000078084:
	mov -336(%RBP),%RSP
	add $-408, %RSP
uuid_0000000000078087:
	mov -256(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007808a:
	mov -248(%RBP),%RSP
	add $-408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007808c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007808b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007808e
uuid_000000000007808c:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007808e:
	mov -160(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007808f
uuid_0000000000078091:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078212
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007820f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078098
	jmp uuid_000000000007809a
uuid_0000000000078098:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078095
	jmp uuid_0000000000078097
uuid_0000000000078095:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	jmp uuid_0000000000078092
	jmp uuid_0000000000078094
uuid_0000000000078092:
	movb $1, -400(%rbp)
uuid_0000000000078094:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_0000000000078097:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007809a:
	mov -408(%RBP),%RSP
	add $-552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007820c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780a4
	jmp uuid_00000000000780a6
uuid_00000000000780a4:
	push %RBP
	jmp uuid_00000000000780a1
	jmp uuid_00000000000780a3
uuid_00000000000780a1:
	push %RBP
	jmp uuid_000000000007809e
	jmp uuid_00000000000780a0
uuid_000000000007809e:
	movb $1, -640(%rbp)
uuid_00000000000780a0:
	mov -664(%RBP),%RSP
	add $-664, %RSP
uuid_00000000000780a3:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_00000000000780a6:
	mov -648(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078209
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780c2
	jmp uuid_00000000000780c4
uuid_00000000000780c2:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000780bf
	jmp uuid_00000000000780c1
uuid_00000000000780bf:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780b9
	jmp uuid_00000000000780bb
uuid_00000000000780b9:
	push %RBP
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_00000000000780b6
	jmp uuid_00000000000780b8
uuid_00000000000780b6:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780b3
	jmp uuid_00000000000780b5
uuid_00000000000780b3:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780ad
	jmp uuid_00000000000780af
uuid_00000000000780ad:
	push %RBP
	jmp uuid_00000000000780aa
	jmp uuid_00000000000780ac
uuid_00000000000780aa:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000780a7
	jmp uuid_00000000000780a9
uuid_00000000000780a7:
	movb $1, -1136(%rbp)
uuid_00000000000780a9:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780ac:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780af:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780b0
	jmp uuid_00000000000780b2
uuid_00000000000780b0:
	movb $1, -928(%rbp)
uuid_00000000000780b2:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780b5:
	mov -976(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780b8:
	mov -944(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780bb:
	mov -936(%RBP),%RSP
	add $-1168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780bc
	jmp uuid_00000000000780be
uuid_00000000000780bc:
	movb $1, -752(%rbp)
uuid_00000000000780be:
	mov -848(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780c1:
	mov -768(%RBP),%RSP
	add $-1168, %RSP
uuid_00000000000780c4:
	mov -760(%RBP),%RSP
	add $-1168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078206
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780d4
	jmp uuid_00000000000780d6
uuid_00000000000780d4:
	push %RBP
	jmp uuid_00000000000780d1
	jmp uuid_00000000000780d3
uuid_00000000000780d1:
	push %RBP
	mov -1232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780cb
	jmp uuid_00000000000780cd
uuid_00000000000780cb:
	push %RBP
	jmp uuid_00000000000780c8
	jmp uuid_00000000000780ca
uuid_00000000000780c8:
	push %RBP
	mov -1288(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq $uuid_00000000000763e5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780c5
	jmp uuid_00000000000780c7
uuid_00000000000780c5:
	movb $1, -1360(%rbp)
uuid_00000000000780c7:
	mov -1384(%RBP),%RSP
	add $-1392, %RSP
uuid_00000000000780ca:
	mov -1376(%RBP),%RSP
	add $-1392, %RSP
uuid_00000000000780cd:
	mov -1368(%RBP),%RSP
	add $-1392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780ce
	jmp uuid_00000000000780d0
uuid_00000000000780ce:
	movb $1, -1256(%rbp)
uuid_00000000000780d0:
	mov -1280(%RBP),%RSP
	add $-1392, %RSP
uuid_00000000000780d3:
	mov -1272(%RBP),%RSP
	add $-1392, %RSP
uuid_00000000000780d6:
	mov -1264(%RBP),%RSP
	add $-1392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078203
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780ef
	jmp uuid_00000000000780f1
uuid_00000000000780ef:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780dd
	jmp uuid_00000000000780df
uuid_00000000000780dd:
	push %RBP
	jmp uuid_00000000000780da
	jmp uuid_00000000000780dc
uuid_00000000000780da:
	push %RBP
	jmp uuid_00000000000780d7
	jmp uuid_00000000000780d9
uuid_00000000000780d7:
	movb $1, -1576(%rbp)
uuid_00000000000780d9:
	mov -1600(%RBP),%RSP
	add $-1600, %RSP
uuid_00000000000780dc:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_00000000000780df:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780ec
	jmp uuid_00000000000780ee
uuid_00000000000780ec:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780e6
	jmp uuid_00000000000780e8
uuid_00000000000780e6:
	push %RBP
	jmp uuid_00000000000780e3
	jmp uuid_00000000000780e5
uuid_00000000000780e3:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq $uuid_0000000000076402
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780e0
	jmp uuid_00000000000780e2
uuid_00000000000780e0:
	movb $1, -1688(%rbp)
uuid_00000000000780e2:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000780e5:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000780e8:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780e9
	jmp uuid_00000000000780eb
uuid_00000000000780e9:
	movb $1, -1480(%rbp)
uuid_00000000000780eb:
	mov -1608(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000780ee:
	mov -1496(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000780f1:
	mov -1488(%RBP),%RSP
	add $-1720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078200
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078110
	jmp uuid_0000000000078112
uuid_0000000000078110:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780fe
	jmp uuid_0000000000078100
uuid_00000000000780fe:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000780f5
	jmp uuid_00000000000780f7
uuid_00000000000780f5:
	push %RBP
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	jmp uuid_00000000000780f2
	jmp uuid_00000000000780f4
uuid_00000000000780f2:
	movb $1, -2000(%rbp)
uuid_00000000000780f4:
	mov -2016(%RBP),%RSP
	add $-2040, %RSP
uuid_00000000000780f7:
	mov -2008(%RBP),%RSP
	add $-2040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2000(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000780fb
	jmp uuid_00000000000780fd
uuid_00000000000780fb:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000780f8
	jmp uuid_00000000000780fa
uuid_00000000000780f8:
	movb $1, -1904(%rbp)
uuid_00000000000780fa:
	mov -2048(%RBP),%RSP
	add $-2120, %RSP
uuid_00000000000780fd:
	mov -1920(%RBP),%RSP
	add $-2120, %RSP
uuid_0000000000078100:
	mov -1912(%RBP),%RSP
	add $-2120, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007810d
	jmp uuid_000000000007810f
uuid_000000000007810d:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078107
	jmp uuid_0000000000078109
uuid_0000000000078107:
	push %RBP
	jmp uuid_0000000000078104
	jmp uuid_0000000000078106
uuid_0000000000078104:
	push %RBP
	mov -2136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2240(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078101
	jmp uuid_0000000000078103
uuid_0000000000078101:
	movb $1, -2208(%rbp)
uuid_0000000000078103:
	mov -2232(%RBP),%RSP
	add $-2240, %RSP
uuid_0000000000078106:
	mov -2224(%RBP),%RSP
	add $-2240, %RSP
uuid_0000000000078109:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007810a
	jmp uuid_000000000007810c
uuid_000000000007810a:
	movb $1, -1808(%rbp)
uuid_000000000007810c:
	mov -2128(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007810f:
	mov -1824(%RBP),%RSP
	add $-2240, %RSP
uuid_0000000000078112:
	mov -1816(%RBP),%RSP
	add $-2240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781fd
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078131
	jmp uuid_0000000000078133
uuid_0000000000078131:
	push %RBP
	mov -2312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2416(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007811f
	jmp uuid_0000000000078121
uuid_000000000007811f:
	push %RBP
	mov -2408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078116
	jmp uuid_0000000000078118
uuid_0000000000078116:
	push %RBP
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	jmp uuid_0000000000078113
	jmp uuid_0000000000078115
uuid_0000000000078113:
	movb $1, -2520(%rbp)
uuid_0000000000078115:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078118:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007811c
	jmp uuid_000000000007811e
uuid_000000000007811c:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078119
	jmp uuid_000000000007811b
uuid_0000000000078119:
	movb $1, -2424(%rbp)
uuid_000000000007811b:
	mov -2568(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007811e:
	mov -2440(%RBP),%RSP
	add $-2640, %RSP
uuid_0000000000078121:
	mov -2432(%RBP),%RSP
	add $-2640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007812e
	jmp uuid_0000000000078130
uuid_000000000007812e:
	push %RBP
	mov -2304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2720(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078128
	jmp uuid_000000000007812a
uuid_0000000000078128:
	push %RBP
	jmp uuid_0000000000078125
	jmp uuid_0000000000078127
uuid_0000000000078125:
	push %RBP
	mov -2656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2760(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078122
	jmp uuid_0000000000078124
uuid_0000000000078122:
	movb $1, -2728(%rbp)
uuid_0000000000078124:
	mov -2752(%RBP),%RSP
	add $-2760, %RSP
uuid_0000000000078127:
	mov -2744(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007812a:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007812b
	jmp uuid_000000000007812d
uuid_000000000007812b:
	movb $1, -2328(%rbp)
uuid_000000000007812d:
	mov -2648(%RBP),%RSP
	add $-2760, %RSP
uuid_0000000000078130:
	mov -2344(%RBP),%RSP
	add $-2760, %RSP
uuid_0000000000078133:
	mov -2336(%RBP),%RSP
	add $-2760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781fa
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078155
	jmp uuid_0000000000078157
uuid_0000000000078155:
	push %RBP
	mov -2832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078152
	jmp uuid_0000000000078154
uuid_0000000000078152:
	push %RBP
	mov -2824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007814c
	jmp uuid_000000000007814e
uuid_000000000007814c:
	push %RBP
	mov -3008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078149
	jmp uuid_000000000007814b
uuid_0000000000078149:
	push %RBP
	mov -3000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078143
	jmp uuid_0000000000078145
uuid_0000000000078143:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078140
	jmp uuid_0000000000078142
uuid_0000000000078140:
	push %RBP
	mov -3176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007813a
	jmp uuid_000000000007813c
uuid_000000000007813a:
	push %RBP
	jmp uuid_0000000000078137
	jmp uuid_0000000000078139
uuid_0000000000078137:
	push %RBP
	mov -3304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3408(%rbp)
	pushq $uuid_0000000000076415
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078134
	jmp uuid_0000000000078136
uuid_0000000000078134:
	movb $1, -3376(%rbp)
uuid_0000000000078136:
	mov -3400(%RBP),%RSP
	add $-3408, %RSP
uuid_0000000000078139:
	mov -3392(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007813c:
	mov -3384(%RBP),%RSP
	add $-3408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007813d
	jmp uuid_000000000007813f
uuid_000000000007813d:
	movb $1, -3200(%rbp)
uuid_000000000007813f:
	mov -3296(%RBP),%RSP
	add $-3408, %RSP
uuid_0000000000078142:
	mov -3216(%RBP),%RSP
	add $-3408, %RSP
uuid_0000000000078145:
	mov -3208(%RBP),%RSP
	add $-3408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078146
	jmp uuid_0000000000078148
uuid_0000000000078146:
	movb $1, -3024(%rbp)
uuid_0000000000078148:
	mov -3120(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007814b:
	mov -3040(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007814e:
	mov -3032(%RBP),%RSP
	add $-3408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007814f
	jmp uuid_0000000000078151
uuid_000000000007814f:
	movb $1, -2848(%rbp)
uuid_0000000000078151:
	mov -2944(%RBP),%RSP
	add $-3408, %RSP
uuid_0000000000078154:
	mov -2864(%RBP),%RSP
	add $-3408, %RSP
uuid_0000000000078157:
	mov -2856(%RBP),%RSP
	add $-3408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2848(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781f7
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078171
	jmp uuid_0000000000078173
uuid_0000000000078171:
	push %RBP
	mov -3480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007816e
	jmp uuid_0000000000078170
uuid_000000000007816e:
	push %RBP
	mov -3472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078168
	jmp uuid_000000000007816a
uuid_0000000000078168:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078165
	jmp uuid_0000000000078167
uuid_0000000000078165:
	push %RBP
	mov -3648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3840(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007815f
	jmp uuid_0000000000078161
uuid_000000000007815f:
	push %RBP
	jmp uuid_000000000007815c
	jmp uuid_000000000007815e
uuid_000000000007815c:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3880(%rbp)
	pushq $uuid_0000000000078158
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078159
	jmp uuid_000000000007815b
uuid_0000000000078159:
	movb $1, -3848(%rbp)
uuid_000000000007815b:
	mov -3872(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007815e:
	mov -3864(%RBP),%RSP
	add $-3880, %RSP
uuid_0000000000078161:
	mov -3856(%RBP),%RSP
	add $-3880, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3848(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078162
	jmp uuid_0000000000078164
uuid_0000000000078162:
	movb $1, -3672(%rbp)
uuid_0000000000078164:
	mov -3768(%RBP),%RSP
	add $-3880, %RSP
uuid_0000000000078167:
	mov -3688(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007816a:
	mov -3680(%RBP),%RSP
	add $-3880, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007816b
	jmp uuid_000000000007816d
uuid_000000000007816b:
	movb $1, -3496(%rbp)
uuid_000000000007816d:
	mov -3592(%RBP),%RSP
	add $-3880, %RSP
uuid_0000000000078170:
	mov -3512(%RBP),%RSP
	add $-3880, %RSP
uuid_0000000000078173:
	mov -3504(%RBP),%RSP
	add $-3880, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781f4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3960(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078177
	jmp uuid_0000000000078179
uuid_0000000000078177:
	push %RBP
	jmp uuid_0000000000078174
	jmp uuid_0000000000078176
uuid_0000000000078174:
	movb $1, -3968(%rbp)
uuid_0000000000078176:
	mov -3984(%RBP),%RSP
	add $-3984, %RSP
uuid_0000000000078179:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781f1
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078189
	jmp uuid_000000000007818b
uuid_0000000000078189:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078186
	jmp uuid_0000000000078188
uuid_0000000000078186:
	push %RBP
	mov -4048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078180
	jmp uuid_0000000000078182
uuid_0000000000078180:
	push %RBP
	jmp uuid_000000000007817d
	jmp uuid_000000000007817f
uuid_000000000007817d:
	push %RBP
	mov -4176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4280(%rbp)
	pushq $uuid_00000000000764c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007817a
	jmp uuid_000000000007817c
uuid_000000000007817a:
	movb $1, -4248(%rbp)
uuid_000000000007817c:
	mov -4272(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007817f:
	mov -4264(%RBP),%RSP
	add $-4280, %RSP
uuid_0000000000078182:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078183
	jmp uuid_0000000000078185
uuid_0000000000078183:
	movb $1, -4072(%rbp)
uuid_0000000000078185:
	mov -4168(%RBP),%RSP
	add $-4280, %RSP
uuid_0000000000078188:
	mov -4088(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007818b:
	mov -4080(%RBP),%RSP
	add $-4280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4072(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781ee
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007819b
	jmp uuid_000000000007819d
uuid_000000000007819b:
	push %RBP
	mov -4352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078198
	jmp uuid_000000000007819a
uuid_0000000000078198:
	push %RBP
	mov -4344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4536(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078192
	jmp uuid_0000000000078194
uuid_0000000000078192:
	push %RBP
	jmp uuid_000000000007818f
	jmp uuid_0000000000078191
uuid_000000000007818f:
	push %RBP
	mov -4472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $uuid_00000000000764b2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007818c
	jmp uuid_000000000007818e
uuid_000000000007818c:
	movb $1, -4544(%rbp)
uuid_000000000007818e:
	mov -4568(%RBP),%RSP
	add $-4576, %RSP
uuid_0000000000078191:
	mov -4560(%RBP),%RSP
	add $-4576, %RSP
uuid_0000000000078194:
	mov -4552(%RBP),%RSP
	add $-4576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078195
	jmp uuid_0000000000078197
uuid_0000000000078195:
	movb $1, -4368(%rbp)
uuid_0000000000078197:
	mov -4464(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007819a:
	mov -4384(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007819d:
	mov -4376(%RBP),%RSP
	add $-4576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781eb
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4656(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000781a4
	jmp uuid_00000000000781a6
uuid_00000000000781a4:
	push %RBP
	jmp uuid_00000000000781a1
	jmp uuid_00000000000781a3
uuid_00000000000781a1:
	push %RBP
	mov -4592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007819e
	jmp uuid_00000000000781a0
uuid_000000000007819e:
	movb $1, -4664(%rbp)
uuid_00000000000781a0:
	mov -4688(%RBP),%RSP
	add $-4696, %RSP
uuid_00000000000781a3:
	mov -4680(%RBP),%RSP
	add $-4696, %RSP
uuid_00000000000781a6:
	mov -4672(%RBP),%RSP
	add $-4696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781e8
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000781ad
	jmp uuid_00000000000781af
uuid_00000000000781ad:
	push %RBP
	jmp uuid_00000000000781aa
	jmp uuid_00000000000781ac
uuid_00000000000781aa:
	push %RBP
	mov -4712(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000781a7
	jmp uuid_00000000000781a9
uuid_00000000000781a7:
	movb $1, -4784(%rbp)
uuid_00000000000781a9:
	mov -4808(%RBP),%RSP
	add $-4816, %RSP
uuid_00000000000781ac:
	mov -4800(%RBP),%RSP
	add $-4816, %RSP
uuid_00000000000781af:
	mov -4792(%RBP),%RSP
	add $-4816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781e5
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4896(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000781b9
	jmp uuid_00000000000781bb
uuid_00000000000781b9:
	push %RBP
	pushq -4872(%RBP)
	pushq -4880(%RBP)
	pushq -4888(%RBP)
	jmp uuid_00000000000781b6
	jmp uuid_00000000000781b8
uuid_00000000000781b6:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000781b3
	jmp uuid_00000000000781b5
uuid_00000000000781b3:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000781b0
	jmp uuid_00000000000781b2
uuid_00000000000781b0:
	movb $1, -4904(%rbp)
uuid_00000000000781b2:
	mov -5032(%RBP),%RSP
	add $-5104, %RSP
uuid_00000000000781b5:
	mov -4952(%RBP),%RSP
	add $-5104, %RSP
uuid_00000000000781b8:
	mov -4920(%RBP),%RSP
	add $-5104, %RSP
uuid_00000000000781bb:
	mov -4912(%RBP),%RSP
	add $-5104, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781e2
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000781c2
	jmp uuid_00000000000781c4
uuid_00000000000781c2:
	push %RBP
	mov -5176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000781bf
	jmp uuid_00000000000781c1
uuid_00000000000781bf:
	push %RBP
	mov -5168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000781bc
	jmp uuid_00000000000781be
uuid_00000000000781bc:
	movb $1, -5192(%rbp)
uuid_00000000000781be:
	mov -5288(%RBP),%RSP
	add $-5360, %RSP
uuid_00000000000781c1:
	mov -5208(%RBP),%RSP
	add $-5360, %RSP
uuid_00000000000781c4:
	mov -5200(%RBP),%RSP
	add $-5360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781df
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000781cb
	jmp uuid_00000000000781cd
uuid_00000000000781cb:
	push %RBP
	mov -5432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000781c8
	jmp uuid_00000000000781ca
uuid_00000000000781c8:
	push %RBP
	mov -5424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000781c5
	jmp uuid_00000000000781c7
uuid_00000000000781c5:
	movb $1, -5448(%rbp)
uuid_00000000000781c7:
	mov -5544(%RBP),%RSP
	add $-5616, %RSP
uuid_00000000000781ca:
	mov -5464(%RBP),%RSP
	add $-5616, %RSP
uuid_00000000000781cd:
	mov -5456(%RBP),%RSP
	add $-5616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781dc
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000781d1
	jmp uuid_00000000000781d3
uuid_00000000000781d1:
	push %RBP
	jmp uuid_00000000000781ce
	jmp uuid_00000000000781d0
uuid_00000000000781ce:
	movb $1, -5704(%rbp)
uuid_00000000000781d0:
	mov -5720(%RBP),%RSP
	add $-5720, %RSP
uuid_00000000000781d3:
	mov -5712(%RBP),%RSP
	add $-5720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000781d9
	push %RBP
	jmp uuid_00000000000781d6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000781d5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000781d8
uuid_00000000000781d6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000781d4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781d8:
	mov -5728(%RBP),%RSP
	add $-5728, %RSP
	jmp uuid_00000000000781db
uuid_00000000000781d9:
uuid_00000000000781db:
	mov -5624(%RBP),%RSP
	add $-5720, %RSP
	jmp uuid_00000000000781de
uuid_00000000000781dc:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781de:
	mov -5368(%RBP),%RSP
	add $-5616, %RSP
	jmp uuid_00000000000781e1
uuid_00000000000781df:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781e1:
	mov -5112(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_00000000000781e4
uuid_00000000000781e2:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781e4:
	mov -4824(%RBP),%RSP
	add $-5104, %RSP
	jmp uuid_00000000000781e7
uuid_00000000000781e5:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781e7:
	mov -4704(%RBP),%RSP
	add $-4816, %RSP
	jmp uuid_00000000000781ea
uuid_00000000000781e8:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781ea:
	mov -4584(%RBP),%RSP
	add $-4696, %RSP
	jmp uuid_00000000000781ed
uuid_00000000000781eb:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781ed:
	mov -4288(%RBP),%RSP
	add $-4576, %RSP
	jmp uuid_00000000000781f0
uuid_00000000000781ee:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781f0:
	mov -3992(%RBP),%RSP
	add $-4280, %RSP
	jmp uuid_00000000000781f3
uuid_00000000000781f1:
uuid_00000000000781f3:
	mov -3888(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_00000000000781f6
uuid_00000000000781f4:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781f6:
	mov -3416(%RBP),%RSP
	add $-3880, %RSP
	jmp uuid_00000000000781f9
uuid_00000000000781f7:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	pushq -3088(%rbp)
	pushq -3096(%rbp)
	pushq -3104(%rbp)
	pushq -3112(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781f9:
	mov -2768(%RBP),%RSP
	add $-3408, %RSP
	jmp uuid_00000000000781fc
uuid_00000000000781fa:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq -2616(%rbp)
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781fc:
	mov -2248(%RBP),%RSP
	add $-2760, %RSP
	jmp uuid_00000000000781ff
uuid_00000000000781fd:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000781ff:
	mov -1728(%RBP),%RSP
	add $-2240, %RSP
	jmp uuid_0000000000078202
uuid_0000000000078200:
uuid_0000000000078202:
	mov -1400(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_0000000000078205
uuid_0000000000078203:
uuid_0000000000078205:
	mov -1176(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_0000000000078208
uuid_0000000000078206:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078208:
	mov -672(%RBP),%RSP
	add $-1168, %RSP
	jmp uuid_000000000007820b
uuid_0000000000078209:
uuid_000000000007820b:
	mov -560(%RBP),%RSP
	add $-664, %RSP
	jmp uuid_000000000007820e
uuid_000000000007820c:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007809b
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007809d
uuid_000000000007809b:
uuid_000000000007809d:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007820e:
	mov -320(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_0000000000078211
uuid_000000000007820f:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078211:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000078214
uuid_0000000000078212:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078214:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_one_SB_typed_CL_ArrowNilAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078215
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076540
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078217
uuid_0000000000078215:
uuid_0000000000078217:
	mov -88(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
infer_SB_ctx_CL_ArrowTContextConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007823f
	jmp uuid_0000000000078241
uuid_000000000007823f:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007822d
	jmp uuid_000000000007822f
uuid_000000000007822d:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007821b
	jmp uuid_000000000007821d
uuid_000000000007821b:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_0000000000078218
	jmp uuid_000000000007821a
uuid_0000000000078218:
	movb $1, -552(%rbp)
uuid_000000000007821a:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007821d:
	mov -560(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007822a
	jmp uuid_000000000007822c
uuid_000000000007822a:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078224
	jmp uuid_0000000000078226
uuid_0000000000078224:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_0000000000078221
	jmp uuid_0000000000078223
uuid_0000000000078221:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007821e
	jmp uuid_0000000000078220
uuid_000000000007821e:
	movb $1, -680(%rbp)
uuid_0000000000078220:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000078223:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000078226:
	mov -688(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078227
	jmp uuid_0000000000078229
uuid_0000000000078227:
	movb $1, -456(%rbp)
uuid_0000000000078229:
	mov -600(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007822c:
	mov -472(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007822f:
	mov -464(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007823c
	jmp uuid_000000000007823e
uuid_000000000007823c:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078236
	jmp uuid_0000000000078238
uuid_0000000000078236:
	push %RBP
	jmp uuid_0000000000078233
	jmp uuid_0000000000078235
uuid_0000000000078233:
	push %RBP
	mov -784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078230
	jmp uuid_0000000000078232
uuid_0000000000078230:
	movb $1, -856(%rbp)
uuid_0000000000078232:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000078235:
	mov -872(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000078238:
	mov -864(%RBP),%RSP
	add $-888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078239
	jmp uuid_000000000007823b
uuid_0000000000078239:
	movb $1, -360(%rbp)
uuid_000000000007823b:
	mov -776(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007823e:
	mov -376(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000078241:
	mov -368(%RBP),%RSP
	add $-888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078280
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078272
	jmp uuid_0000000000078274
uuid_0000000000078272:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078269
	jmp uuid_000000000007826b
uuid_0000000000078269:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078257
	jmp uuid_0000000000078259
uuid_0000000000078257:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078245
	jmp uuid_0000000000078247
uuid_0000000000078245:
	push %RBP
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	jmp uuid_0000000000078242
	jmp uuid_0000000000078244
uuid_0000000000078242:
	movb $1, -1264(%rbp)
uuid_0000000000078244:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000078247:
	mov -1272(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078254
	jmp uuid_0000000000078256
uuid_0000000000078254:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007824e
	jmp uuid_0000000000078250
uuid_000000000007824e:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	jmp uuid_000000000007824b
	jmp uuid_000000000007824d
uuid_000000000007824b:
	push %RBP
	mov -1320(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078248
	jmp uuid_000000000007824a
uuid_0000000000078248:
	movb $1, -1392(%rbp)
uuid_000000000007824a:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007824d:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000078250:
	mov -1400(%RBP),%RSP
	add $-1480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078251
	jmp uuid_0000000000078253
uuid_0000000000078251:
	movb $1, -1168(%rbp)
uuid_0000000000078253:
	mov -1312(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000078256:
	mov -1184(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000078259:
	mov -1176(%RBP),%RSP
	add $-1480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078266
	jmp uuid_0000000000078268
uuid_0000000000078266:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078260
	jmp uuid_0000000000078262
uuid_0000000000078260:
	push %RBP
	jmp uuid_000000000007825d
	jmp uuid_000000000007825f
uuid_000000000007825d:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007825a
	jmp uuid_000000000007825c
uuid_000000000007825a:
	movb $1, -1568(%rbp)
uuid_000000000007825c:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007825f:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
uuid_0000000000078262:
	mov -1576(%RBP),%RSP
	add $-1600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078263
	jmp uuid_0000000000078265
uuid_0000000000078263:
	movb $1, -1072(%rbp)
uuid_0000000000078265:
	mov -1488(%RBP),%RSP
	add $-1600, %RSP
uuid_0000000000078268:
	mov -1088(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007826b:
	mov -1080(%RBP),%RSP
	add $-1600, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007826f
	jmp uuid_0000000000078271
uuid_000000000007826f:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007826c
	jmp uuid_000000000007826e
uuid_000000000007826c:
	movb $1, -976(%rbp)
uuid_000000000007826e:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_0000000000078271:
	mov -992(%RBP),%RSP
	add $-1680, %RSP
uuid_0000000000078274:
	mov -984(%RBP),%RSP
	add $-1680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007827d
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -1760(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007827a
	push %RBP
	jmp uuid_0000000000078277
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078276
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078279
uuid_0000000000078277:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078275
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078279:
	mov -1768(%RBP),%RSP
	add $-1768, %RSP
	jmp uuid_000000000007827c
uuid_000000000007827a:
uuid_000000000007827c:
	mov -1688(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007827f
uuid_000000000007827d:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1480(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1480(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007827f:
	mov -896(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_0000000000078282
uuid_0000000000078280:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -768(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -768(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078282:
	mov -280(%RBP),%RSP
	add $-888, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078292
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007828b
	jmp uuid_000000000007828d
uuid_000000000007828b:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078288
	jmp uuid_000000000007828a
uuid_0000000000078288:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_0000000000078285
	jmp uuid_0000000000078287
uuid_0000000000078285:
	movb $1, -312(%rbp)
uuid_0000000000078287:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007828a:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007828d:
	mov -320(%RBP),%RSP
	add $-400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007828f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007828e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078291
uuid_000000000007828f:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078291:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_0000000000078294
uuid_0000000000078292:
uuid_0000000000078294:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007829b
	jmp uuid_000000000007829d
uuid_000000000007829b:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078298
	jmp uuid_000000000007829a
uuid_0000000000078298:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078295
	jmp uuid_0000000000078297
uuid_0000000000078295:
	movb $1, -216(%rbp)
uuid_0000000000078297:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007829a:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007829d:
	mov -224(%RBP),%RSP
	add $-288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782b7
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782a1
	jmp uuid_00000000000782a3
uuid_00000000000782a1:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007829e
	jmp uuid_00000000000782a0
uuid_000000000007829e:
	movb $1, -328(%rbp)
uuid_00000000000782a0:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_00000000000782a3:
	mov -336(%RBP),%RSP
	add $-352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782b4
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782aa
	jmp uuid_00000000000782ac
uuid_00000000000782aa:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000782a7
	jmp uuid_00000000000782a9
uuid_00000000000782a7:
	push %RBP
	jmp uuid_00000000000782a4
	jmp uuid_00000000000782a6
uuid_00000000000782a4:
	movb $1, -392(%rbp)
uuid_00000000000782a6:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_00000000000782a9:
	mov -408(%RBP),%RSP
	add $-456, %RSP
uuid_00000000000782ac:
	mov -400(%RBP),%RSP
	add $-456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782b1
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782ae
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000782ad
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000782b0
uuid_00000000000782ae:
uuid_00000000000782b0:
	mov -464(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_00000000000782b3
uuid_00000000000782b1:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000782b3:
	mov -360(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_00000000000782b6
uuid_00000000000782b4:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -352(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000782b6:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_00000000000782b9
uuid_00000000000782b7:
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000782b9:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
compile_SB_exit_SB_cleanup_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782ba
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782bb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782bc
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_data_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782bd
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_text_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782be
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782bf
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782c0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782c3
	jmp uuid_00000000000782c5
uuid_00000000000782c3:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782c1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782c2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_00000000000782c5:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $main_SB_with_SB_argv_CL_U8, %r15
	mov 0(%r15), %r15b
	push %r15
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782c8
	jmp uuid_00000000000782ca
uuid_00000000000782c8:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782c6
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782c7
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_00000000000782ca:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $main_SB_with_CL_U8, %r15
	mov 0(%r15), %r15b
	push %r15
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782d5
	jmp uuid_00000000000782d7
uuid_00000000000782d5:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782cb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782cc
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $main_SB_with_SB_argv_CL_U8, %r15
	mov 0(%r15), %r15b
	push %r15
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782cf
	jmp uuid_00000000000782d1
uuid_00000000000782cf:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782cd
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782ce
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_00000000000782d1:
	mov -64(%RBP),%RSP
	add $-64, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782d2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782d3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782d4
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_00000000000782d7:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_CL_ArrowNilNil:
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	push %RBP
	pushq -16(%rbp)
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782dc
	push %RBP
	pushq -16(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782d9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000782d8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000782db
uuid_00000000000782d9:
#call function compile-blob : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_blob_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000782db:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	jmp uuid_00000000000782de
uuid_00000000000782dc:
#call function compile-gnu : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_gnu_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000782de:
	mov -24(%RBP),%RSP
	add $-32, %RSP
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_blob_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000078337:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078338
	jmp uuid_0000000000078339
uuid_0000000000078338:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782ee
	jmp uuid_00000000000782f0
uuid_00000000000782ee:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782e5
	jmp uuid_00000000000782e7
uuid_00000000000782e5:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000782e2
	jmp uuid_00000000000782e4
uuid_00000000000782e2:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000782df
	jmp uuid_00000000000782e1
uuid_00000000000782df:
	movb $1, -336(%rbp)
uuid_00000000000782e1:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_00000000000782e4:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_00000000000782e7:
	mov -344(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782eb
	jmp uuid_00000000000782ed
uuid_00000000000782eb:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000782e8
	jmp uuid_00000000000782ea
uuid_00000000000782e8:
	movb $1, -240(%rbp)
uuid_00000000000782ea:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_00000000000782ed:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_00000000000782f0:
	mov -248(%RBP),%RSP
	add $-584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078334
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007830c
	jmp uuid_000000000007830e
uuid_000000000007830c:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078303
	jmp uuid_0000000000078305
uuid_0000000000078303:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078300
	jmp uuid_0000000000078302
uuid_0000000000078300:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000782fa
	jmp uuid_00000000000782fc
uuid_00000000000782fa:
	push %RBP
	jmp uuid_00000000000782f7
	jmp uuid_00000000000782f9
uuid_00000000000782f7:
	push %RBP
	jmp uuid_00000000000782f4
	jmp uuid_00000000000782f6
uuid_00000000000782f4:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000782f1
	jmp uuid_00000000000782f3
uuid_00000000000782f1:
	movb $1, -928(%rbp)
uuid_00000000000782f3:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000782f6:
	mov -952(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000782f9:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000782fc:
	mov -936(%RBP),%RSP
	add $-968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000782fd
	jmp uuid_00000000000782ff
uuid_00000000000782fd:
	movb $1, -768(%rbp)
uuid_00000000000782ff:
	mov -864(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000078302:
	mov -784(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000078305:
	mov -776(%RBP),%RSP
	add $-968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078309
	jmp uuid_000000000007830b
uuid_0000000000078309:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078306
	jmp uuid_0000000000078308
uuid_0000000000078306:
	movb $1, -672(%rbp)
uuid_0000000000078308:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007830b:
	mov -688(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007830e:
	mov -680(%RBP),%RSP
	add $-1048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078331
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007832a
	jmp uuid_000000000007832c
uuid_000000000007832a:
	push %RBP
	mov -1120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078327
	jmp uuid_0000000000078329
uuid_0000000000078327:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078324
	jmp uuid_0000000000078326
uuid_0000000000078324:
	movb $1, -1136(%rbp)
uuid_0000000000078326:
	mov -1232(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000078329:
	mov -1152(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007832c:
	mov -1144(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007832e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007832d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078330
uuid_000000000007832e:
	movq -1304(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_0000000000078330:
	mov -1056(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_0000000000078333
uuid_0000000000078331:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078318
	jmp uuid_000000000007831a
uuid_0000000000078318:
	push %RBP
	jmp uuid_0000000000078315
	jmp uuid_0000000000078317
uuid_0000000000078315:
	push %RBP
	jmp uuid_0000000000078312
	jmp uuid_0000000000078314
uuid_0000000000078312:
	push %RBP
	jmp uuid_000000000007830f
	jmp uuid_0000000000078311
uuid_000000000007830f:
	movb $1, -1208(%rbp)
uuid_0000000000078311:
	mov -1240(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078314:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078317:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007831a:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078321
	push %RBP
	jmp uuid_000000000007831e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007831d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078320
uuid_000000000007831e:
uuid_0000000000078320:
	mov -1248(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_0000000000078323
uuid_0000000000078321:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $uuid_000000000007831b
	pushq $0
	pushq $uuid_000000000007831c
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_0000000000078323:
	mov -1128(%RBP),%RSP
	add $-1392, %RSP
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_0000000000078333:
	mov -592(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_0000000000078336
uuid_0000000000078334:
	movq -584(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_0000000000078336:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078337
uuid_0000000000078339:
	pushq $0
	pushq $0
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r14
	movq 0(%r14), %r15
	movq %r15, -80(%rbp)
	movq 8(%r14), %r15
	movq %r15, -72(%rbp)
	movq 16(%r14), %r15
	movq %r15, -64(%rbp)
	movq 24(%r14), %r15
	movq %r15, -56(%rbp)
	movq 32(%r14), %r15
	movq %r15, -48(%rbp)
	movq 40(%r14), %r15
	movq %r15, -40(%rbp)
	movq 48(%r14), %r15
	movq %r15, -32(%rbp)
	movq 56(%r14), %r15
	movq %r15, -24(%rbp)
	movq 64(%r14), %r15
	movq %r15, -16(%rbp)
uuid_0000000000078390:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078391
	jmp uuid_0000000000078392
uuid_0000000000078391:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078355
	jmp uuid_0000000000078357
uuid_0000000000078355:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007834c
	jmp uuid_000000000007834e
uuid_000000000007834c:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078349
	jmp uuid_000000000007834b
uuid_0000000000078349:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078343
	jmp uuid_0000000000078345
uuid_0000000000078343:
	push %RBP
	jmp uuid_0000000000078340
	jmp uuid_0000000000078342
uuid_0000000000078340:
	push %RBP
	jmp uuid_000000000007833d
	jmp uuid_000000000007833f
uuid_000000000007833d:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007833a
	jmp uuid_000000000007833c
uuid_000000000007833a:
	movb $1, -520(%rbp)
uuid_000000000007833c:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007833f:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078342:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078345:
	mov -528(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078346
	jmp uuid_0000000000078348
uuid_0000000000078346:
	movb $1, -360(%rbp)
uuid_0000000000078348:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007834b:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007834e:
	mov -368(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078352
	jmp uuid_0000000000078354
uuid_0000000000078352:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007834f
	jmp uuid_0000000000078351
uuid_000000000007834f:
	movb $1, -264(%rbp)
uuid_0000000000078351:
	mov -568(%RBP),%RSP
	add $-640, %RSP
uuid_0000000000078354:
	mov -280(%RBP),%RSP
	add $-640, %RSP
uuid_0000000000078357:
	mov -272(%RBP),%RSP
	add $-640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007838d
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078367
	jmp uuid_0000000000078369
uuid_0000000000078367:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007835e
	jmp uuid_0000000000078360
uuid_000000000007835e:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007835b
	jmp uuid_000000000007835d
uuid_000000000007835b:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078358
	jmp uuid_000000000007835a
uuid_0000000000078358:
	movb $1, -824(%rbp)
uuid_000000000007835a:
	mov -920(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007835d:
	mov -840(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000078360:
	mov -832(%RBP),%RSP
	add $-992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078364
	jmp uuid_0000000000078366
uuid_0000000000078364:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078361
	jmp uuid_0000000000078363
uuid_0000000000078361:
	movb $1, -728(%rbp)
uuid_0000000000078363:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000078366:
	mov -744(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000078369:
	mov -736(%RBP),%RSP
	add $-1072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007838a
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078376
	jmp uuid_0000000000078378
uuid_0000000000078376:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007836d
	jmp uuid_000000000007836f
uuid_000000000007836d:
	push %RBP
	jmp uuid_000000000007836a
	jmp uuid_000000000007836c
uuid_000000000007836a:
	movb $1, -1256(%rbp)
uuid_000000000007836c:
	mov -1272(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007836f:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078373
	jmp uuid_0000000000078375
uuid_0000000000078373:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078370
	jmp uuid_0000000000078372
uuid_0000000000078370:
	movb $1, -1160(%rbp)
uuid_0000000000078372:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
uuid_0000000000078375:
	mov -1176(%RBP),%RSP
	add $-1352, %RSP
uuid_0000000000078378:
	mov -1168(%RBP),%RSP
	add $-1352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078387
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1432(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007837f
	jmp uuid_0000000000078381
uuid_000000000007837f:
	push %RBP
	mov -1424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007837c
	jmp uuid_000000000007837e
uuid_000000000007837c:
	push %RBP
	mov -1416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078379
	jmp uuid_000000000007837b
uuid_0000000000078379:
	movb $1, -1440(%rbp)
uuid_000000000007837b:
	mov -1536(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007837e:
	mov -1456(%RBP),%RSP
	add $-1608, %RSP
uuid_0000000000078381:
	mov -1448(%RBP),%RSP
	add $-1608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078384
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078383
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078386
uuid_0000000000078384:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_0000000000078382
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq $0
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1608(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_0000000000078386:
	mov -1360(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_0000000000078389
uuid_0000000000078387:
	movq -1352(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_0000000000078389:
	mov -1080(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007838c
uuid_000000000007838a:
	movq -1072(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007838c:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007838f
uuid_000000000007838d:
	movq -640(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007838f:
	mov -184(%RBP),%RSP
	add $-640, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078390
uuid_0000000000078392:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_gnu_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_00000000000783f2:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783f3
	jmp uuid_00000000000783f4
uuid_00000000000783f3:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783ae
	jmp uuid_00000000000783b0
uuid_00000000000783ae:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783a5
	jmp uuid_00000000000783a7
uuid_00000000000783a5:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783a2
	jmp uuid_00000000000783a4
uuid_00000000000783a2:
	push %RBP
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007839c
	jmp uuid_000000000007839e
uuid_000000000007839c:
	push %RBP
	jmp uuid_0000000000078399
	jmp uuid_000000000007839b
uuid_0000000000078399:
	push %RBP
	jmp uuid_0000000000078396
	jmp uuid_0000000000078398
uuid_0000000000078396:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078393
	jmp uuid_0000000000078395
uuid_0000000000078393:
	movb $1, -496(%rbp)
uuid_0000000000078395:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000078398:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007839b:
	mov -512(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007839e:
	mov -504(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007839f
	jmp uuid_00000000000783a1
uuid_000000000007839f:
	movb $1, -336(%rbp)
uuid_00000000000783a1:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_00000000000783a4:
	mov -352(%RBP),%RSP
	add $-536, %RSP
uuid_00000000000783a7:
	mov -344(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783ab
	jmp uuid_00000000000783ad
uuid_00000000000783ab:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783a8
	jmp uuid_00000000000783aa
uuid_00000000000783a8:
	movb $1, -240(%rbp)
uuid_00000000000783aa:
	mov -544(%RBP),%RSP
	add $-616, %RSP
uuid_00000000000783ad:
	mov -256(%RBP),%RSP
	add $-616, %RSP
uuid_00000000000783b0:
	mov -248(%RBP),%RSP
	add $-616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783ef
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783dc
	jmp uuid_00000000000783de
uuid_00000000000783dc:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783d3
	jmp uuid_00000000000783d5
uuid_00000000000783d3:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783d0
	jmp uuid_00000000000783d2
uuid_00000000000783d0:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783cd
	jmp uuid_00000000000783cf
uuid_00000000000783cd:
	movb $1, -800(%rbp)
uuid_00000000000783cf:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000783d2:
	mov -816(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000783d5:
	mov -808(%RBP),%RSP
	add $-968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783d9
	jmp uuid_00000000000783db
uuid_00000000000783d9:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783d6
	jmp uuid_00000000000783d8
uuid_00000000000783d6:
	movb $1, -704(%rbp)
uuid_00000000000783d8:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_00000000000783db:
	mov -720(%RBP),%RSP
	add $-1048, %RSP
uuid_00000000000783de:
	mov -712(%RBP),%RSP
	add $-1048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783ec
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783e5
	jmp uuid_00000000000783e7
uuid_00000000000783e5:
	push %RBP
	jmp uuid_00000000000783e2
	jmp uuid_00000000000783e4
uuid_00000000000783e2:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783df
	jmp uuid_00000000000783e1
uuid_00000000000783df:
	movb $1, -1136(%rbp)
uuid_00000000000783e1:
	mov -1160(%RBP),%RSP
	add $-1232, %RSP
uuid_00000000000783e4:
	mov -1152(%RBP),%RSP
	add $-1232, %RSP
uuid_00000000000783e7:
	mov -1144(%RBP),%RSP
	add $-1232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783e9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000783e8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000783eb
uuid_00000000000783e9:
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_00000000000783eb:
	mov -1056(%RBP),%RSP
	add $-1232, %RSP
	jmp uuid_00000000000783ee
uuid_00000000000783ec:
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_00000000000783ee:
	mov -624(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_00000000000783f1
uuid_00000000000783ef:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_00000000000783b1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783b2
	jmp uuid_00000000000783b4
uuid_00000000000783b2:
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $1, 0(%r15)
uuid_00000000000783b4:
	mov -624(%RBP),%RSP
	add $-624, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783ca
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783c7
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007831b
	pushq $0
	pushq $uuid_00000000000783b5
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $uuid_00000000000783b6
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783bd
	jmp uuid_00000000000783bf
uuid_00000000000783bd:
	push %RBP
	jmp uuid_00000000000783ba
	jmp uuid_00000000000783bc
uuid_00000000000783ba:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq $uuid_00000000000783b6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783b7
	jmp uuid_00000000000783b9
uuid_00000000000783b7:
	movb $1, -880(%rbp)
uuid_00000000000783b9:
	mov -904(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000783bc:
	mov -896(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000783bf:
	mov -888(%RBP),%RSP
	add $-912, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783c4
	push %RBP
	jmp uuid_00000000000783c1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000783c0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000783c3
uuid_00000000000783c1:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076358
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
	pushq -976(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_00000000000783c3:
	mov -920(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_00000000000783c6
uuid_00000000000783c4:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_00000000000783c6:
	mov -848(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_00000000000783c9
uuid_00000000000783c7:
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_00000000000783c9:
	mov -816(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_00000000000783cc
uuid_00000000000783ca:
uuid_00000000000783cc:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	movq -616(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_00000000000783f1:
	mov -160(%RBP),%RSP
	add $-808, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000783f2
uuid_00000000000783f4:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-finish : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_finish_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_finish_CL_ArrowNilNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-text-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_text_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-exit-cleanup : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_exit_SB_cleanup_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000783f5
	jmp uuid_00000000000783f7
uuid_00000000000783f5:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-data-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_data_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_00000000000783f7:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext:
	pushq $0
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000783fe
	jmp uuid_0000000000078400
uuid_00000000000783fe:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000783fb
	jmp uuid_00000000000783fd
uuid_00000000000783fb:
	push %RBP
	jmp uuid_00000000000783f8
	jmp uuid_00000000000783fa
uuid_00000000000783f8:
	movb $1, -448(%rbp)
uuid_00000000000783fa:
	mov -544(%RBP),%RSP
	add $-544, %RSP
uuid_00000000000783fd:
	mov -464(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000078400:
	mov -456(%RBP),%RSP
	add $-544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078408
	push %RBP
	jmp uuid_0000000000078405
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078404
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078407
uuid_0000000000078405:
uuid_0000000000078407:
	mov -552(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007840a
uuid_0000000000078408:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078401
	jmp uuid_0000000000078403
uuid_0000000000078401:
	movb $1, -288(%rbp)
uuid_0000000000078403:
	mov -552(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007840a:
	mov -368(%RBP),%RSP
	add $-552, %RSP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078426
	jmp uuid_0000000000078428
uuid_0000000000078426:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007841d
	jmp uuid_000000000007841f
uuid_000000000007841d:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007841a
	jmp uuid_000000000007841c
uuid_000000000007841a:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078414
	jmp uuid_0000000000078416
uuid_0000000000078414:
	push %RBP
	jmp uuid_0000000000078411
	jmp uuid_0000000000078413
uuid_0000000000078411:
	push %RBP
	jmp uuid_000000000007840e
	jmp uuid_0000000000078410
uuid_000000000007840e:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007840b
	jmp uuid_000000000007840d
uuid_000000000007840b:
	movb $1, -968(%rbp)
uuid_000000000007840d:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000078410:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000078413:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000078416:
	mov -976(%RBP),%RSP
	add $-1008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078417
	jmp uuid_0000000000078419
uuid_0000000000078417:
	movb $1, -808(%rbp)
uuid_0000000000078419:
	mov -904(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007841c:
	mov -824(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007841f:
	mov -816(%RBP),%RSP
	add $-1008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078423
	jmp uuid_0000000000078425
uuid_0000000000078423:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078420
	jmp uuid_0000000000078422
uuid_0000000000078420:
	movb $1, -712(%rbp)
uuid_0000000000078422:
	mov -1016(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078425:
	mov -728(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078428:
	mov -720(%RBP),%RSP
	add $-1088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007843c
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078432
	jmp uuid_0000000000078434
uuid_0000000000078432:
	push %RBP
	jmp uuid_000000000007842f
	jmp uuid_0000000000078431
uuid_000000000007842f:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007842c
	jmp uuid_000000000007842e
uuid_000000000007842c:
	movb $1, -1176(%rbp)
uuid_000000000007842e:
	mov -1200(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000078431:
	mov -1192(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000078434:
	mov -1184(%RBP),%RSP
	add $-1272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078439
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078436
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078435
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078438
uuid_0000000000078436:
uuid_0000000000078438:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007843b
uuid_0000000000078439:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007843b:
	mov -1096(%RBP),%RSP
	add $-1272, %RSP
	jmp uuid_000000000007843e
uuid_000000000007843c:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078429
#call function compile-global : Arrow<Cons<Cons<FContext,String>,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1008(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call compile_SB_global_CL_ArrowNilConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007842b
uuid_0000000000078429:
uuid_000000000007842b:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007843e:
	mov -632(%RBP),%RSP
	add $-1096, %RSP
	mov %rbp, %rsp
	sub $280, %rsp
	ret
compile_SB_write_CL_ArrowNilNil:
#call function write-file : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_target_CL_String, %r15
	pushq 0(%r15)
	mov $assemble_SB_final_CL_String, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call write_SB_file_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_new_CL_ArrowFContextNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	subq $200, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	pushq $0
	pushq $3
uuid_0000000000078480:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078481
	jmp uuid_0000000000078482
uuid_0000000000078481:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007844b
	jmp uuid_000000000007844d
uuid_000000000007844b:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_0000000000078448
	jmp uuid_000000000007844a
uuid_0000000000078448:
	push %RBP
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_0000000000078445
	jmp uuid_0000000000078447
uuid_0000000000078445:
	push %RBP
	mov -920(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078442
	jmp uuid_0000000000078444
uuid_0000000000078442:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007843f
	jmp uuid_0000000000078441
uuid_000000000007843f:
	movb $1, -1112(%rbp)
uuid_0000000000078441:
	mov -1336(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000078444:
	mov -1320(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000078447:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007844a:
	mov -1128(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007844d:
	mov -1120(%RBP),%RSP
	add $-1536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007847d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007847c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007847f
uuid_000000000007847d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078479
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007847b
uuid_0000000000078479:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078466
	jmp uuid_0000000000078468
uuid_0000000000078466:
	push %RBP
	mov -1592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007845d
	jmp uuid_000000000007845f
uuid_000000000007845d:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078454
	jmp uuid_0000000000078456
uuid_0000000000078454:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078451
	jmp uuid_0000000000078453
uuid_0000000000078451:
	push %RBP
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	jmp uuid_000000000007844e
	jmp uuid_0000000000078450
uuid_000000000007844e:
	movb $1, -1736(%rbp)
uuid_0000000000078450:
	mov -1800(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078453:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078456:
	mov -1744(%RBP),%RSP
	add $-1824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007845a
	jmp uuid_000000000007845c
uuid_000000000007845a:
	push %RBP
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_0000000000078457
	jmp uuid_0000000000078459
uuid_0000000000078457:
	movb $1, -1672(%rbp)
uuid_0000000000078459:
	mov -1832(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007845c:
	mov -1688(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007845f:
	mov -1680(%RBP),%RSP
	add $-1856, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078463
	jmp uuid_0000000000078465
uuid_0000000000078463:
	push %RBP
	mov -1584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078460
	jmp uuid_0000000000078462
uuid_0000000000078460:
	movb $1, -1608(%rbp)
uuid_0000000000078462:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078465:
	mov -1624(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078468:
	mov -1616(%RBP),%RSP
	add $-1872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078476
	push %RBP
	jmp uuid_0000000000078473
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078472
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078475
uuid_0000000000078473:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078475:
	mov -1880(%RBP),%RSP
	add $-1880, %RSP
	jmp uuid_0000000000078478
uuid_0000000000078476:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007846f
	jmp uuid_0000000000078471
uuid_000000000007846f:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007846c
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
	jmp uuid_000000000007846e
uuid_000000000007846c:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078469
	jmp uuid_000000000007846b
uuid_0000000000078469:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
uuid_000000000007846b:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007846e:
	mov -1888(%RBP),%RSP
	add $-1896, %RSP
uuid_0000000000078471:
	mov -1880(%RBP),%RSP
	add $-1896, %RSP
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078478:
	mov -1576(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007847b:
	mov -1544(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007847f:
	mov -904(%RBP),%RSP
	add $-1896, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078480
uuid_0000000000078482:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007849f
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078483
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078484
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -520(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -512(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007849b:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007849c
	jmp uuid_000000000007849d
uuid_000000000007849c:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078491
	jmp uuid_0000000000078493
uuid_0000000000078491:
	push %RBP
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007848e
	jmp uuid_0000000000078490
uuid_000000000007848e:
	push %RBP
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	jmp uuid_000000000007848b
	jmp uuid_000000000007848d
uuid_000000000007848b:
	push %RBP
	mov -928(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078488
	jmp uuid_000000000007848a
uuid_0000000000078488:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078485
	jmp uuid_0000000000078487
uuid_0000000000078485:
	movb $1, -1120(%rbp)
uuid_0000000000078487:
	mov -1344(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007848a:
	mov -1328(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007848d:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000078490:
	mov -1136(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000078493:
	mov -1128(%RBP),%RSP
	add $-1544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078498
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078497
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007849a
uuid_0000000000078498:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078494
	jmp uuid_0000000000078496
uuid_0000000000078494:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078496:
	mov -1552(%RBP),%RSP
	add $-1552, %RSP
	movq -1544(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007849a:
	mov -912(%RBP),%RSP
	add $-1552, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007849b
uuid_000000000007849d:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007849e
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000784a1
uuid_000000000007849f:
uuid_00000000000784a1:
	mov -704(%RBP),%RSP
	add $-704, %RSP
	subq $152, %rsp
	pushq -672(%rbp)
	pushq -664(%rbp)
	pushq -656(%rbp)
	pushq -648(%rbp)
	pushq -640(%rbp)
	pushq -632(%rbp)
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $168, %rsp
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext:
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_00000000000784fa:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784fb
	jmp uuid_00000000000784fc
uuid_00000000000784fb:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784b0
	jmp uuid_00000000000784b2
uuid_00000000000784b0:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_00000000000784ad
	jmp uuid_00000000000784af
uuid_00000000000784ad:
	push %RBP
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_00000000000784aa
	jmp uuid_00000000000784ac
uuid_00000000000784aa:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000784a7
	jmp uuid_00000000000784a9
uuid_00000000000784a7:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000784a4
	jmp uuid_00000000000784a6
uuid_00000000000784a4:
	movb $1, -928(%rbp)
uuid_00000000000784a6:
	mov -1152(%RBP),%RSP
	add $-1352, %RSP
uuid_00000000000784a9:
	mov -1136(%RBP),%RSP
	add $-1352, %RSP
uuid_00000000000784ac:
	mov -1104(%RBP),%RSP
	add $-1352, %RSP
uuid_00000000000784af:
	mov -944(%RBP),%RSP
	add $-1352, %RSP
uuid_00000000000784b2:
	mov -936(%RBP),%RSP
	add $-1352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784f7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000784f6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000784f9
uuid_00000000000784f7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784f3
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_00000000000784f5
uuid_00000000000784f3:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784cb
	jmp uuid_00000000000784cd
uuid_00000000000784cb:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784c2
	jmp uuid_00000000000784c4
uuid_00000000000784c2:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784b9
	jmp uuid_00000000000784bb
uuid_00000000000784b9:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1608(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784b6
	jmp uuid_00000000000784b8
uuid_00000000000784b6:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	jmp uuid_00000000000784b3
	jmp uuid_00000000000784b5
uuid_00000000000784b3:
	movb $1, -1552(%rbp)
uuid_00000000000784b5:
	mov -1616(%RBP),%RSP
	add $-1640, %RSP
uuid_00000000000784b8:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_00000000000784bb:
	mov -1560(%RBP),%RSP
	add $-1640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784bf
	jmp uuid_00000000000784c1
uuid_00000000000784bf:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	jmp uuid_00000000000784bc
	jmp uuid_00000000000784be
uuid_00000000000784bc:
	movb $1, -1488(%rbp)
uuid_00000000000784be:
	mov -1648(%RBP),%RSP
	add $-1672, %RSP
uuid_00000000000784c1:
	mov -1504(%RBP),%RSP
	add $-1672, %RSP
uuid_00000000000784c4:
	mov -1496(%RBP),%RSP
	add $-1672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784c8
	jmp uuid_00000000000784ca
uuid_00000000000784c8:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784c5
	jmp uuid_00000000000784c7
uuid_00000000000784c5:
	movb $1, -1424(%rbp)
uuid_00000000000784c7:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_00000000000784ca:
	mov -1440(%RBP),%RSP
	add $-1688, %RSP
uuid_00000000000784cd:
	mov -1432(%RBP),%RSP
	add $-1688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784f0
	push %RBP
	jmp uuid_00000000000784ed
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000784ec
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000784ef
uuid_00000000000784ed:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784e9
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	jmp uuid_00000000000784eb
uuid_00000000000784e9:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_00000000000784eb:
	mov -1704(%RBP),%RSP
	add $-1704, %RSP
uuid_00000000000784ef:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_00000000000784f2
uuid_00000000000784f0:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784e2
	jmp uuid_00000000000784e4
uuid_00000000000784e2:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784df
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784dc
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_00000000000784de
uuid_00000000000784dc:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_00000000000784de:
	mov -1712(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_00000000000784e1
uuid_00000000000784df:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000784d5
	jmp uuid_00000000000784d7
uuid_00000000000784d5:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784d2
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_00000000000784d4
uuid_00000000000784d2:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_00000000000784d4:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000784d7:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000784e1:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000784e4:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_00000000000784f2:
	mov -1392(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000784f5:
	mov -1360(%RBP),%RSP
	add $-1720, %RSP
uuid_00000000000784f9:
	mov -720(%RBP),%RSP
	add $-1720, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000784fa
uuid_00000000000784fc:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .length : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_00000000000784fe
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000784fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007849e
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078500
uuid_00000000000784fe:
uuid_0000000000078500:
	mov -520(%RBP),%RSP
	add $-520, %RSP
	subq $168, %rsp
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_vararg_CL_ArrowFragmentListConsASTConsTypeConsStringFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_0000000000078517:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078518
	jmp uuid_0000000000078519
uuid_0000000000078518:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007850d
	jmp uuid_000000000007850f
uuid_000000000007850d:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	jmp uuid_000000000007850a
	jmp uuid_000000000007850c
uuid_000000000007850a:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_0000000000078507
	jmp uuid_0000000000078509
uuid_0000000000078507:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078504
	jmp uuid_0000000000078506
uuid_0000000000078504:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078501
	jmp uuid_0000000000078503
uuid_0000000000078501:
	movb $1, -896(%rbp)
uuid_0000000000078503:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_0000000000078506:
	mov -1104(%RBP),%RSP
	add $-1320, %RSP
uuid_0000000000078509:
	mov -1072(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007850c:
	mov -912(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007850f:
	mov -904(%RBP),%RSP
	add $-1320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078514
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078513
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078516
uuid_0000000000078514:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078510
	jmp uuid_0000000000078512
uuid_0000000000078510:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_0000000000078512:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
	movq -1320(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078516:
	mov -688(%RBP),%RSP
	add $-1328, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078517
uuid_0000000000078519:
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	subq $200, %rsp
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::set-vararg : Arrow<Cons<Fragment,List<Array<Fragment,?>>>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
#call function cons : Arrow<Cons<Array<Fragment,?>,List<Array<Fragment,?>>>,List<Array<Fragment,?>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Fragment,Array<Fragment,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	mov %RBX, %RBP
	call cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
with_SB_location_CL_ArrowASTConsSourceLocationAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078587
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078584
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078520
	jmp uuid_0000000000078522
uuid_0000000000078520:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007851d
	jmp uuid_000000000007851f
uuid_000000000007851d:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007851a
	jmp uuid_000000000007851c
uuid_000000000007851a:
	movb $1, -504(%rbp)
uuid_000000000007851c:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007851f:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000078522:
	mov -512(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078581
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007852c
	jmp uuid_000000000007852e
uuid_000000000007852c:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_0000000000078529
	jmp uuid_000000000007852b
uuid_0000000000078529:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078526
	jmp uuid_0000000000078528
uuid_0000000000078526:
	movb $1, -680(%rbp)
uuid_0000000000078528:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007852b:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007852e:
	mov -688(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007857e
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078535
	jmp uuid_0000000000078537
uuid_0000000000078535:
	push %RBP
	jmp uuid_0000000000078532
	jmp uuid_0000000000078534
uuid_0000000000078532:
	movb $1, -856(%rbp)
uuid_0000000000078534:
	mov -872(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000078537:
	mov -864(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007857b
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007853e
	jmp uuid_0000000000078540
uuid_000000000007853e:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007853b
	jmp uuid_000000000007853d
uuid_000000000007853b:
	push %RBP
	mov -936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078538
	jmp uuid_000000000007853a
uuid_0000000000078538:
	movb $1, -960(%rbp)
uuid_000000000007853a:
	mov -1056(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007853d:
	mov -976(%RBP),%RSP
	add $-1128, %RSP
uuid_0000000000078540:
	mov -968(%RBP),%RSP
	add $-1128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078578
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007854a
	jmp uuid_000000000007854c
uuid_000000000007854a:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_0000000000078547
	jmp uuid_0000000000078549
uuid_0000000000078547:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078544
	jmp uuid_0000000000078546
uuid_0000000000078544:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078541
	jmp uuid_0000000000078543
uuid_0000000000078541:
	movb $1, -1216(%rbp)
uuid_0000000000078543:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_0000000000078546:
	mov -1264(%RBP),%RSP
	add $-1416, %RSP
uuid_0000000000078549:
	mov -1232(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007854c:
	mov -1224(%RBP),%RSP
	add $-1416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078575
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1496(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078553
	jmp uuid_0000000000078555
uuid_0000000000078553:
	push %RBP
	mov -1488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078550
	jmp uuid_0000000000078552
uuid_0000000000078550:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007854d
	jmp uuid_000000000007854f
uuid_000000000007854d:
	movb $1, -1504(%rbp)
uuid_000000000007854f:
	mov -1600(%RBP),%RSP
	add $-1672, %RSP
uuid_0000000000078552:
	mov -1520(%RBP),%RSP
	add $-1672, %RSP
uuid_0000000000078555:
	mov -1512(%RBP),%RSP
	add $-1672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078572
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007855c
	jmp uuid_000000000007855e
uuid_000000000007855c:
	push %RBP
	mov -1744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078559
	jmp uuid_000000000007855b
uuid_0000000000078559:
	push %RBP
	mov -1736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078556
	jmp uuid_0000000000078558
uuid_0000000000078556:
	movb $1, -1760(%rbp)
uuid_0000000000078558:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007855b:
	mov -1776(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007855e:
	mov -1768(%RBP),%RSP
	add $-1928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007856f
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078565
	jmp uuid_0000000000078567
uuid_0000000000078565:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078562
	jmp uuid_0000000000078564
uuid_0000000000078562:
	push %RBP
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	jmp uuid_000000000007855f
	jmp uuid_0000000000078561
uuid_000000000007855f:
	movb $1, -2016(%rbp)
uuid_0000000000078561:
	mov -2112(%RBP),%RSP
	add $-2168, %RSP
uuid_0000000000078564:
	mov -2032(%RBP),%RSP
	add $-2168, %RSP
uuid_0000000000078567:
	mov -2024(%RBP),%RSP
	add $-2168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007856c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007856b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007856e
uuid_000000000007856c:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078568
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	popq -2168(%RBP)
	popq -2160(%RBP)
	popq -2152(%RBP)
	popq -2144(%RBP)
	popq -2136(%RBP)
	popq -2128(%RBP)
	popq -2120(%RBP)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -2104(%RBP)
	popq -2096(%RBP)
	popq -2088(%RBP)
	popq -2080(%RBP)
	popq -2072(%RBP)
	popq -2064(%RBP)
	popq -2056(%RBP)
	popq -2048(%RBP)
	popq -2040(%RBP)
	jmp uuid_000000000007856a
uuid_0000000000078568:
uuid_000000000007856a:
	mov -2176(%RBP),%RSP
	add $-2176, %RSP
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007856e:
	mov -1936(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_0000000000078571
uuid_000000000007856f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_0000000000078571:
	mov -1680(%RBP),%RSP
	add $-1928, %RSP
	jmp uuid_0000000000078574
uuid_0000000000078572:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_0000000000078574:
	mov -1424(%RBP),%RSP
	add $-1672, %RSP
	jmp uuid_0000000000078577
uuid_0000000000078575:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $5
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_0000000000078577:
	mov -1136(%RBP),%RSP
	add $-1416, %RSP
	jmp uuid_000000000007857a
uuid_0000000000078578:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007857a:
	mov -880(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007857d
uuid_000000000007857b:
uuid_000000000007857d:
	mov -776(%RBP),%RSP
	add $-872, %RSP
	jmp uuid_0000000000078580
uuid_000000000007857e:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007852f
	pushq -768(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $6
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_0000000000078531
uuid_000000000007852f:
uuid_0000000000078531:
	mov -776(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000078580:
	mov -600(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_0000000000078583
uuid_0000000000078581:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078523
	pushq -592(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $7
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_0000000000078525
uuid_0000000000078523:
uuid_0000000000078525:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_0000000000078583:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	jmp uuid_0000000000078586
uuid_0000000000078584:
uuid_0000000000078586:
	mov -344(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_0000000000078589
uuid_0000000000078587:
uuid_0000000000078589:
	mov -264(%RBP),%RSP
	add $-336, %RSP
	subq $72, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $112, %rsp
	ret
with_SB_location_CL_ArrowTokenConsSourceLocationToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078593
	jmp uuid_0000000000078595
uuid_0000000000078593:
	push %RBP
	jmp uuid_0000000000078590
	jmp uuid_0000000000078592
uuid_0000000000078590:
	push %RBP
	jmp uuid_000000000007858d
	jmp uuid_000000000007858f
uuid_000000000007858d:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007858a
	jmp uuid_000000000007858c
uuid_000000000007858a:
	movb $1, -224(%rbp)
uuid_000000000007858c:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007858f:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078592:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078595:
	mov -232(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078597
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078596
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078599
uuid_0000000000078597:
	pushq -264(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078599:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
without_SB_location_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785fe
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785fb
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785a0
	jmp uuid_00000000000785a2
uuid_00000000000785a0:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007859d
	jmp uuid_000000000007859f
uuid_000000000007859d:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007859a
	jmp uuid_000000000007859c
uuid_000000000007859a:
	movb $1, -472(%rbp)
uuid_000000000007859c:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007859f:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_00000000000785a2:
	mov -480(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785f8
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785a9
	jmp uuid_00000000000785ab
uuid_00000000000785a9:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_00000000000785a6
	jmp uuid_00000000000785a8
uuid_00000000000785a6:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000785a3
	jmp uuid_00000000000785a5
uuid_00000000000785a3:
	movb $1, -648(%rbp)
uuid_00000000000785a5:
	mov -728(%RBP),%RSP
	add $-736, %RSP
uuid_00000000000785a8:
	mov -664(%RBP),%RSP
	add $-736, %RSP
uuid_00000000000785ab:
	mov -656(%RBP),%RSP
	add $-736, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785f5
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785af
	jmp uuid_00000000000785b1
uuid_00000000000785af:
	push %RBP
	jmp uuid_00000000000785ac
	jmp uuid_00000000000785ae
uuid_00000000000785ac:
	movb $1, -824(%rbp)
uuid_00000000000785ae:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_00000000000785b1:
	mov -832(%RBP),%RSP
	add $-840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785f2
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785b8
	jmp uuid_00000000000785ba
uuid_00000000000785b8:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785b5
	jmp uuid_00000000000785b7
uuid_00000000000785b5:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785b2
	jmp uuid_00000000000785b4
uuid_00000000000785b2:
	movb $1, -928(%rbp)
uuid_00000000000785b4:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_00000000000785b7:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_00000000000785ba:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785ef
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785c4
	jmp uuid_00000000000785c6
uuid_00000000000785c4:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_00000000000785c1
	jmp uuid_00000000000785c3
uuid_00000000000785c1:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785be
	jmp uuid_00000000000785c0
uuid_00000000000785be:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785bb
	jmp uuid_00000000000785bd
uuid_00000000000785bb:
	movb $1, -1184(%rbp)
uuid_00000000000785bd:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_00000000000785c0:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_00000000000785c3:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_00000000000785c6:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785ec
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785cd
	jmp uuid_00000000000785cf
uuid_00000000000785cd:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785ca
	jmp uuid_00000000000785cc
uuid_00000000000785ca:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785c7
	jmp uuid_00000000000785c9
uuid_00000000000785c7:
	movb $1, -1472(%rbp)
uuid_00000000000785c9:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_00000000000785cc:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_00000000000785cf:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785e9
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785d6
	jmp uuid_00000000000785d8
uuid_00000000000785d6:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785d3
	jmp uuid_00000000000785d5
uuid_00000000000785d3:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785d0
	jmp uuid_00000000000785d2
uuid_00000000000785d0:
	movb $1, -1728(%rbp)
uuid_00000000000785d2:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_00000000000785d5:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_00000000000785d8:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785e6
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000785df
	jmp uuid_00000000000785e1
uuid_00000000000785df:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000785dc
	jmp uuid_00000000000785de
uuid_00000000000785dc:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_00000000000785d9
	jmp uuid_00000000000785db
uuid_00000000000785d9:
	movb $1, -1984(%rbp)
uuid_00000000000785db:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_00000000000785de:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_00000000000785e1:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000785e3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000785e2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000785e5
uuid_00000000000785e3:
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785e5:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_00000000000785e8
uuid_00000000000785e6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785e8:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_00000000000785eb
uuid_00000000000785e9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785eb:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_00000000000785ee
uuid_00000000000785ec:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785ee:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_00000000000785f1
uuid_00000000000785ef:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785f1:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_00000000000785f4
uuid_00000000000785f2:
uuid_00000000000785f4:
	mov -744(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_00000000000785f7
uuid_00000000000785f5:
	pushq -736(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785f7:
	mov -568(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_00000000000785fa
uuid_00000000000785f8:
	pushq -560(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_00000000000785fa:
	mov -392(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_00000000000785fd
uuid_00000000000785fb:
uuid_00000000000785fd:
	mov -312(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000078600
uuid_00000000000785fe:
uuid_0000000000078600:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
without_SB_location_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007860a
	jmp uuid_000000000007860c
uuid_000000000007860a:
	push %RBP
	jmp uuid_0000000000078607
	jmp uuid_0000000000078609
uuid_0000000000078607:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078604
	jmp uuid_0000000000078606
uuid_0000000000078604:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078601
	jmp uuid_0000000000078603
uuid_0000000000078601:
	movb $1, -192(%rbp)
uuid_0000000000078603:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000078606:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000078609:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007860c:
	mov -200(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007860e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007860d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078610
uuid_000000000007860e:
	pushq -240(%rbp)
	pushq -224(%rbp)
	pushq $uuid_0000000000075fd2
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078610:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
with_SB_key_CL_ArrowTokenConsStringToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007861a
	jmp uuid_000000000007861c
uuid_000000000007861a:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	jmp uuid_0000000000078617
	jmp uuid_0000000000078619
uuid_0000000000078617:
	push %RBP
	jmp uuid_0000000000078614
	jmp uuid_0000000000078616
uuid_0000000000078614:
	push %RBP
	jmp uuid_0000000000078611
	jmp uuid_0000000000078613
uuid_0000000000078611:
	movb $1, -200(%rbp)
uuid_0000000000078613:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078616:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078619:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007861c:
	mov -208(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007861e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007861d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078620
uuid_000000000007861e:
	pushq -64(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078620:
	mov -136(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
location_SB_of_CL_ArrowSourceLocationAST:
	pushq $uuid_0000000000078621
	pushq $0
	pushq $0
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078628
	jmp uuid_000000000007862a
uuid_0000000000078628:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_0000000000078625
	jmp uuid_0000000000078627
uuid_0000000000078625:
	push %RBP
	jmp uuid_0000000000078622
	jmp uuid_0000000000078624
uuid_0000000000078622:
	movb $1, -272(%rbp)
uuid_0000000000078624:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000078627:
	mov -288(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007862a:
	mov -280(%RBP),%RSP
	add $-352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078689
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078631
	jmp uuid_0000000000078633
uuid_0000000000078631:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007862e
	jmp uuid_0000000000078630
uuid_000000000007862e:
	push %RBP
	jmp uuid_000000000007862b
	jmp uuid_000000000007862d
uuid_000000000007862b:
	movb $1, -440(%rbp)
uuid_000000000007862d:
	mov -520(%RBP),%RSP
	add $-520, %RSP
uuid_0000000000078630:
	mov -456(%RBP),%RSP
	add $-520, %RSP
uuid_0000000000078633:
	mov -448(%RBP),%RSP
	add $-520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078686
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007863a
	jmp uuid_000000000007863c
uuid_000000000007863a:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078637
	jmp uuid_0000000000078639
uuid_0000000000078637:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078634
	jmp uuid_0000000000078636
uuid_0000000000078634:
	movb $1, -608(%rbp)
uuid_0000000000078636:
	mov -704(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000078639:
	mov -624(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007863c:
	mov -616(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078683
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078649
	jmp uuid_000000000007864b
uuid_0000000000078649:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_0000000000078646
	jmp uuid_0000000000078648
uuid_0000000000078646:
	push %RBP
	mov -824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078643
	jmp uuid_0000000000078645
uuid_0000000000078643:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078640
	jmp uuid_0000000000078642
uuid_0000000000078640:
	movb $1, -864(%rbp)
uuid_0000000000078642:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000078645:
	mov -912(%RBP),%RSP
	add $-1064, %RSP
uuid_0000000000078648:
	mov -880(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007864b:
	mov -872(%RBP),%RSP
	add $-1064, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078680
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078655
	jmp uuid_0000000000078657
uuid_0000000000078655:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078652
	jmp uuid_0000000000078654
uuid_0000000000078652:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007864f
	jmp uuid_0000000000078651
uuid_000000000007864f:
	movb $1, -1152(%rbp)
uuid_0000000000078651:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_0000000000078654:
	mov -1168(%RBP),%RSP
	add $-1320, %RSP
uuid_0000000000078657:
	mov -1160(%RBP),%RSP
	add $-1320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007867d
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078661
	jmp uuid_0000000000078663
uuid_0000000000078661:
	push %RBP
	mov -1392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007865e
	jmp uuid_0000000000078660
uuid_000000000007865e:
	push %RBP
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007865b
	jmp uuid_000000000007865d
uuid_000000000007865b:
	movb $1, -1408(%rbp)
uuid_000000000007865d:
	mov -1504(%RBP),%RSP
	add $-1560, %RSP
uuid_0000000000078660:
	mov -1424(%RBP),%RSP
	add $-1560, %RSP
uuid_0000000000078663:
	mov -1416(%RBP),%RSP
	add $-1560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007867a
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007866d
	jmp uuid_000000000007866f
uuid_000000000007866d:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007866a
	jmp uuid_000000000007866c
uuid_000000000007866a:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078667
	jmp uuid_0000000000078669
uuid_0000000000078667:
	movb $1, -1648(%rbp)
uuid_0000000000078669:
	mov -1744(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007866c:
	mov -1664(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007866f:
	mov -1656(%RBP),%RSP
	add $-1816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078677
	push %RBP
	jmp uuid_0000000000078674
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078673
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078676
uuid_0000000000078674:
uuid_0000000000078676:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_0000000000078679
uuid_0000000000078677:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078670
	jmp uuid_0000000000078672
uuid_0000000000078670:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000078672:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078679:
	mov -1568(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007867c
uuid_000000000007867a:
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078664
	jmp uuid_0000000000078666
uuid_0000000000078664:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000078666:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007867c:
	mov -1328(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007867f
uuid_000000000007867d:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078658
	jmp uuid_000000000007865a
uuid_0000000000078658:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007865a:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007867f:
	mov -1072(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_0000000000078682
uuid_0000000000078680:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007864c
	jmp uuid_000000000007864e
uuid_000000000007864c:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007864e:
	mov -1072(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000078682:
	mov -784(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_0000000000078685
uuid_0000000000078683:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007863d
	jmp uuid_000000000007863f
uuid_000000000007863d:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007863f:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000078685:
	mov -528(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_0000000000078688
uuid_0000000000078686:
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000078688:
	mov -360(%RBP),%RSP
	add $-520, %RSP
	jmp uuid_000000000007868b
uuid_0000000000078689:
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007868b:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	subq $32, %rsp
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
unique_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078695
	jmp uuid_0000000000078697
uuid_0000000000078695:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_0000000000078692
	jmp uuid_0000000000078694
uuid_0000000000078692:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007868f
	jmp uuid_0000000000078691
uuid_000000000007868f:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007868c
	jmp uuid_000000000007868e
uuid_000000000007868c:
	movb $1, -192(%rbp)
uuid_000000000007868e:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078691:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078694:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078697:
	mov -200(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078699
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078698
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007869b
uuid_0000000000078699:
	pushq -272(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007869b:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_SB_verbose_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000786a5
	jmp uuid_00000000000786a7
uuid_00000000000786a5:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_00000000000786a2
	jmp uuid_00000000000786a4
uuid_00000000000786a2:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007869f
	jmp uuid_00000000000786a1
uuid_000000000007869f:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007869c
	jmp uuid_000000000007869e
uuid_000000000007869c:
	movb $1, -192(%rbp)
uuid_000000000007869e:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000786a1:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000786a4:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_00000000000786a7:
	mov -200(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786a9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000786a8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000786ab
uuid_00000000000786a9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076114
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000786ab:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
token_CL__CL_new_CL_ArrowTokenString:
	pushq -8(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function location::new : Arrow<Nil,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call location_CL__CL_new_CL_ArrowSourceLocationNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
location_CL__CL_new_CL_ArrowSourceLocationNil:
	pushq $uuid_0000000000078621
	pushq $0
	pushq $0
	pushq $0
	subq $32, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
non_SB_zero_CL_ArrowU64SourceLocation:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000786b5
	jmp uuid_00000000000786b7
uuid_00000000000786b5:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000786b2
	jmp uuid_00000000000786b4
uuid_00000000000786b2:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000786af
	jmp uuid_00000000000786b1
uuid_00000000000786af:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000786ac
	jmp uuid_00000000000786ae
uuid_00000000000786ac:
	movb $1, -128(%rbp)
uuid_00000000000786ae:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_00000000000786b1:
	mov -160(%RBP),%RSP
	add $-184, %RSP
uuid_00000000000786b4:
	mov -144(%RBP),%RSP
	add $-184, %RSP
uuid_00000000000786b7:
	mov -136(%RBP),%RSP
	add $-184, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786bc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000786bb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000786be
uuid_00000000000786bc:
	push %RBP
	movq -168(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000786b8
	jmp uuid_00000000000786ba
uuid_00000000000786b8:
	movq $1, -48(%rbp)
uuid_00000000000786ba:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_00000000000786be:
	mov -88(%RBP),%RSP
	add $-192, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_already_SB_tokenized_CL_ArrowU64String:
	pushq $0
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_00000000000786d5:
#call function non-zero : Arrow<List<String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786d6
	jmp uuid_00000000000786d7
uuid_00000000000786d6:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000786cb
	jmp uuid_00000000000786cd
uuid_00000000000786cb:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000786c8
	jmp uuid_00000000000786ca
uuid_00000000000786c8:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000786c5
	jmp uuid_00000000000786c7
uuid_00000000000786c5:
	movb $1, -112(%rbp)
uuid_00000000000786c7:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000786ca:
	mov -128(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000786cd:
	mov -120(%RBP),%RSP
	add $-168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786d2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000786d1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000786d4
uuid_00000000000786d2:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786ce
	jmp uuid_00000000000786d0
uuid_00000000000786ce:
	movq $1, -24(%rbp)
uuid_00000000000786d0:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -136(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_00000000000786d4:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000786d5
uuid_00000000000786d7:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
tokenize_CL_ArrowNilString:
	pushq $uuid_0000000000075fd2
	push %RBP
#call function is-already-tokenized : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call is_SB_already_SB_tokenized_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786dc
#call function read-file : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call read_SB_file_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
#call function cons : Arrow<Cons<String,List<String>>,List<String>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStringConsListStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_00000000000786de
uuid_00000000000786dc:
uuid_00000000000786de:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $1
	pushq $1
	pushq $1
	pushq $1
	pushq $0
uuid_0000000000078760:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000078761
	jmp uuid_0000000000078762
uuid_0000000000078761:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -112(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786e3
	push %RBP
	jmp uuid_00000000000786e0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000786df
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000786e2
uuid_00000000000786e0:
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -80(%rbp)
uuid_00000000000786e2:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_00000000000786e5
uuid_00000000000786e3:
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	movq $1, -80(%rbp)
uuid_00000000000786e5:
	mov -120(%RBP),%RSP
	add $-128, %RSP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $35
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007875d
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007875a
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078757
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $32
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078754
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $40
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078751
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $41
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007874e
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $39
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007874b
	push %RBP
	pushq -136(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078748
	push %RBP
	pushq -136(%rbp)
	jmp uuid_0000000000078745
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078744
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078747
uuid_0000000000078745:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078741
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076112
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007873e
	jmp uuid_0000000000078740
uuid_000000000007873e:
	pushq $uuid_0000000000076112
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_0000000000078740:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_0000000000078743
uuid_0000000000078741:
uuid_0000000000078743:
	mov -288(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000078747:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007874a
uuid_0000000000078748:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078737
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078730
	jmp uuid_0000000000078732
uuid_0000000000078730:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_0000000000078732:
	mov -280(%RBP),%RSP
	add $-336, %RSP
	pushq $uuid_000000000007610f
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_0000000000078739
uuid_0000000000078737:
uuid_0000000000078739:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007874a:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007874d
uuid_000000000007874b:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078729
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078722
	jmp uuid_0000000000078724
uuid_0000000000078722:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_0000000000078724:
	mov -264(%RBP),%RSP
	add $-320, %RSP
	pushq $uuid_0000000000076111
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007872b
uuid_0000000000078729:
uuid_000000000007872b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007874d:
	mov -240(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000078750
uuid_000000000007874e:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007871b
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078714
	jmp uuid_0000000000078716
uuid_0000000000078714:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_0000000000078716:
	mov -248(%RBP),%RSP
	add $-304, %RSP
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_0000000000075ef8
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007871d
uuid_000000000007871b:
uuid_000000000007871d:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000078750:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000078753
uuid_0000000000078751:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007870d
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078706
	jmp uuid_0000000000078708
uuid_0000000000078706:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_0000000000078708:
	mov -232(%RBP),%RSP
	add $-288, %RSP
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_0000000000075ef6
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	jmp uuid_000000000007870f
uuid_000000000007870d:
uuid_000000000007870f:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_0000000000078753:
	mov -208(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000078756
uuid_0000000000078754:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786ff
	jmp uuid_0000000000078701
uuid_00000000000786ff:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_0000000000078701:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_0000000000078756:
	mov -192(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000078759
uuid_0000000000078757:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786f8
	jmp uuid_00000000000786fa
uuid_00000000000786f8:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_00000000000786fa:
	mov -192(%RBP),%RSP
	add $-248, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_0000000000078759:
	mov -176(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007875c
uuid_000000000007875a:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786f1
	jmp uuid_00000000000786f3
uuid_00000000000786f1:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_00000000000786f3:
	mov -176(%RBP),%RSP
	add $-232, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $0, -40(%rbp)
uuid_000000000007875c:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007875f
uuid_000000000007875d:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000786ea
	jmp uuid_00000000000786ec
uuid_00000000000786ea:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_00000000000786ec:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $1, -40(%rbp)
uuid_000000000007875f:
	mov -144(%RBP),%RSP
	add $-216, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078760
uuid_0000000000078762:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078767
	jmp uuid_0000000000078769
uuid_0000000000078767:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_0000000000078769:
	mov -112(%RBP),%RSP
	add $-168, %RSP
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078770
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007876e
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007876f
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078772
uuid_0000000000078770:
uuid_0000000000078772:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
align_CL_ArrowI64I64:
#call function max : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $8
	mov %RBX, %RBP
	call max_CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_nil_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078779
	jmp uuid_000000000007877b
uuid_0000000000078779:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078776
	jmp uuid_0000000000078778
uuid_0000000000078776:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078773
	jmp uuid_0000000000078775
uuid_0000000000078773:
	movb $1, -104(%rbp)
uuid_0000000000078775:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078778:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007877b:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007878c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078782
	jmp uuid_0000000000078784
uuid_0000000000078782:
	push %RBP
	jmp uuid_000000000007877f
	jmp uuid_0000000000078781
uuid_000000000007877f:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007877c
	jmp uuid_000000000007877e
uuid_000000000007877c:
	movb $1, -216(%rbp)
uuid_000000000007877e:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000078781:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000078784:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078789
	push %RBP
	jmp uuid_0000000000078786
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078785
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078788
uuid_0000000000078786:
uuid_0000000000078788:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007878b
uuid_0000000000078789:
	movq $1, -40(%rbp)
uuid_000000000007878b:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007878e
uuid_000000000007878c:
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007878e:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_seq_CL_ArrowU64AST:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078795
	jmp uuid_0000000000078797
uuid_0000000000078795:
	push %RBP
	jmp uuid_0000000000078792
	jmp uuid_0000000000078794
uuid_0000000000078792:
	push %RBP
	jmp uuid_000000000007878f
	jmp uuid_0000000000078791
uuid_000000000007878f:
	movb $1, -248(%rbp)
uuid_0000000000078791:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078794:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078797:
	mov -256(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007879c
	push %RBP
	jmp uuid_0000000000078799
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078798
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007879b
uuid_0000000000078799:
uuid_000000000007879b:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007879e
uuid_000000000007879c:
	movq $1, -88(%rbp)
uuid_000000000007879e:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
is_SB_arrow_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787a5
	jmp uuid_00000000000787a7
uuid_00000000000787a5:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787a2
	jmp uuid_00000000000787a4
uuid_00000000000787a2:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007879f
	jmp uuid_00000000000787a1
uuid_000000000007879f:
	movb $1, -104(%rbp)
uuid_00000000000787a1:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787a4:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787a7:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787b8
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787ae
	jmp uuid_00000000000787b0
uuid_00000000000787ae:
	push %RBP
	jmp uuid_00000000000787ab
	jmp uuid_00000000000787ad
uuid_00000000000787ab:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_00000000000765c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787a8
	jmp uuid_00000000000787aa
uuid_00000000000787a8:
	movb $1, -216(%rbp)
uuid_00000000000787aa:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000787ad:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000787b0:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787b5
	push %RBP
	jmp uuid_00000000000787b2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000787b1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000787b4
uuid_00000000000787b2:
uuid_00000000000787b4:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000787b7
uuid_00000000000787b5:
	movq $1, -40(%rbp)
uuid_00000000000787b7:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_00000000000787ba
uuid_00000000000787b8:
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000787ba:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_hook_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787c1
	jmp uuid_00000000000787c3
uuid_00000000000787c1:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787be
	jmp uuid_00000000000787c0
uuid_00000000000787be:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787bb
	jmp uuid_00000000000787bd
uuid_00000000000787bb:
	movb $1, -104(%rbp)
uuid_00000000000787bd:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787c0:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787c3:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787d4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787ca
	jmp uuid_00000000000787cc
uuid_00000000000787ca:
	push %RBP
	jmp uuid_00000000000787c7
	jmp uuid_00000000000787c9
uuid_00000000000787c7:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000076718
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787c4
	jmp uuid_00000000000787c6
uuid_00000000000787c4:
	movb $1, -216(%rbp)
uuid_00000000000787c6:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000787c9:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000787cc:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787d1
	push %RBP
	jmp uuid_00000000000787ce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000787cd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000787d0
uuid_00000000000787ce:
uuid_00000000000787d0:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000787d3
uuid_00000000000787d1:
	movq $1, -40(%rbp)
uuid_00000000000787d3:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_00000000000787d6
uuid_00000000000787d4:
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000787d6:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_blob_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787dd
	jmp uuid_00000000000787df
uuid_00000000000787dd:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787da
	jmp uuid_00000000000787dc
uuid_00000000000787da:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787d7
	jmp uuid_00000000000787d9
uuid_00000000000787d7:
	movb $1, -104(%rbp)
uuid_00000000000787d9:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787dc:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787df:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787f0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787e6
	jmp uuid_00000000000787e8
uuid_00000000000787e6:
	push %RBP
	jmp uuid_00000000000787e3
	jmp uuid_00000000000787e5
uuid_00000000000787e3:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000077a75
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787e0
	jmp uuid_00000000000787e2
uuid_00000000000787e0:
	movb $1, -216(%rbp)
uuid_00000000000787e2:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000787e5:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000787e8:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787ed
	push %RBP
	jmp uuid_00000000000787ea
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000787e9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000787ec
uuid_00000000000787ea:
uuid_00000000000787ec:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000787ef
uuid_00000000000787ed:
	movq $1, -40(%rbp)
uuid_00000000000787ef:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_00000000000787f2
uuid_00000000000787f0:
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000787f2:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_cons_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000787f9
	jmp uuid_00000000000787fb
uuid_00000000000787f9:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787f6
	jmp uuid_00000000000787f8
uuid_00000000000787f6:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000787f3
	jmp uuid_00000000000787f5
uuid_00000000000787f3:
	movb $1, -104(%rbp)
uuid_00000000000787f5:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787f8:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000787fb:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007880c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078802
	jmp uuid_0000000000078804
uuid_0000000000078802:
	push %RBP
	jmp uuid_00000000000787ff
	jmp uuid_0000000000078801
uuid_00000000000787ff:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000787fc
	jmp uuid_00000000000787fe
uuid_00000000000787fc:
	movb $1, -216(%rbp)
uuid_00000000000787fe:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000078801:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000078804:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078809
	push %RBP
	jmp uuid_0000000000078806
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078805
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078808
uuid_0000000000078806:
uuid_0000000000078808:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007880b
uuid_0000000000078809:
	movq $1, -40(%rbp)
uuid_000000000007880b:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007880e
uuid_000000000007880c:
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007880e:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_ctx_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078815
	jmp uuid_0000000000078817
uuid_0000000000078815:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078812
	jmp uuid_0000000000078814
uuid_0000000000078812:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007880f
	jmp uuid_0000000000078811
uuid_000000000007880f:
	movb $1, -104(%rbp)
uuid_0000000000078811:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078814:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078817:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078829
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007881f
	jmp uuid_0000000000078821
uuid_000000000007881f:
	push %RBP
	jmp uuid_000000000007881c
	jmp uuid_000000000007881e
uuid_000000000007881c:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000078818
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078819
	jmp uuid_000000000007881b
uuid_0000000000078819:
	movb $1, -216(%rbp)
uuid_000000000007881b:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007881e:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000078821:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078826
	push %RBP
	jmp uuid_0000000000078823
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078822
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078825
uuid_0000000000078823:
uuid_0000000000078825:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000078828
uuid_0000000000078826:
	movq $1, -40(%rbp)
uuid_0000000000078828:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007882b
uuid_0000000000078829:
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007882b:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_string_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078832
	jmp uuid_0000000000078834
uuid_0000000000078832:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007882f
	jmp uuid_0000000000078831
uuid_000000000007882f:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007882c
	jmp uuid_000000000007882e
uuid_000000000007882c:
	movb $1, -104(%rbp)
uuid_000000000007882e:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078831:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078834:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078846
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007883c
	jmp uuid_000000000007883e
uuid_000000000007883c:
	push %RBP
	jmp uuid_0000000000078839
	jmp uuid_000000000007883b
uuid_0000000000078839:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000078835
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078836
	jmp uuid_0000000000078838
uuid_0000000000078836:
	movb $1, -216(%rbp)
uuid_0000000000078838:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007883b:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007883e:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078843
	push %RBP
	jmp uuid_0000000000078840
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007883f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078842
uuid_0000000000078840:
uuid_0000000000078842:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000078845
uuid_0000000000078843:
	movq $1, -40(%rbp)
uuid_0000000000078845:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000078848
uuid_0000000000078846:
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000078848:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_onto_SB_stack_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007884f
	jmp uuid_0000000000078851
uuid_000000000007884f:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007884c
	jmp uuid_000000000007884e
uuid_000000000007884c:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078849
	jmp uuid_000000000007884b
uuid_0000000000078849:
	movb $1, -104(%rbp)
uuid_000000000007884b:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007884e:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078851:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078875
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007886b
	jmp uuid_000000000007886d
uuid_000000000007886b:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078862
	jmp uuid_0000000000078864
uuid_0000000000078862:
	push %RBP
	jmp uuid_000000000007885f
	jmp uuid_0000000000078861
uuid_000000000007885f:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078859
	jmp uuid_000000000007885b
uuid_0000000000078859:
	push %RBP
	jmp uuid_0000000000078856
	jmp uuid_0000000000078858
uuid_0000000000078856:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_0000000000078852
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078853
	jmp uuid_0000000000078855
uuid_0000000000078853:
	movb $1, -336(%rbp)
uuid_0000000000078855:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000078858:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007885b:
	mov -344(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007885c
	jmp uuid_000000000007885e
uuid_000000000007885c:
	movb $1, -280(%rbp)
uuid_000000000007885e:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000078861:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000078864:
	mov -288(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078868
	jmp uuid_000000000007886a
uuid_0000000000078868:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_0000000000076ba8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078865
	jmp uuid_0000000000078867
uuid_0000000000078865:
	movb $1, -216(%rbp)
uuid_0000000000078867:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007886a:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007886d:
	mov -224(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078872
	push %RBP
	jmp uuid_000000000007886f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007886e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078871
uuid_000000000007886f:
uuid_0000000000078871:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000078874
uuid_0000000000078872:
	movq $1, -40(%rbp)
uuid_0000000000078874:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000078877
uuid_0000000000078875:
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000078877:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_offset_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007887e
	jmp uuid_0000000000078880
uuid_000000000007887e:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007887b
	jmp uuid_000000000007887d
uuid_000000000007887b:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078878
	jmp uuid_000000000007887a
uuid_0000000000078878:
	movb $1, -104(%rbp)
uuid_000000000007887a:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007887d:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000078880:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788a4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007889a
	jmp uuid_000000000007889c
uuid_000000000007889a:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078891
	jmp uuid_0000000000078893
uuid_0000000000078891:
	push %RBP
	jmp uuid_000000000007888e
	jmp uuid_0000000000078890
uuid_000000000007888e:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078888
	jmp uuid_000000000007888a
uuid_0000000000078888:
	push %RBP
	jmp uuid_0000000000078885
	jmp uuid_0000000000078887
uuid_0000000000078885:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_0000000000078881
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078882
	jmp uuid_0000000000078884
uuid_0000000000078882:
	movb $1, -336(%rbp)
uuid_0000000000078884:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000078887:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007888a:
	mov -344(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007888b
	jmp uuid_000000000007888d
uuid_000000000007888b:
	movb $1, -280(%rbp)
uuid_000000000007888d:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000078890:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_0000000000078893:
	mov -288(%RBP),%RSP
	add $-368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078897
	jmp uuid_0000000000078899
uuid_0000000000078897:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_0000000000076ba8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078894
	jmp uuid_0000000000078896
uuid_0000000000078894:
	movb $1, -216(%rbp)
uuid_0000000000078896:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000078899:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007889c:
	mov -224(%RBP),%RSP
	add $-384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788a1
	push %RBP
	jmp uuid_000000000007889e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007889d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000788a0
uuid_000000000007889e:
uuid_00000000000788a0:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_00000000000788a3
uuid_00000000000788a1:
	movq $1, -40(%rbp)
uuid_00000000000788a3:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_00000000000788a6
uuid_00000000000788a4:
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000788a6:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_branchconditional_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788ad
	jmp uuid_00000000000788af
uuid_00000000000788ad:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000788aa
	jmp uuid_00000000000788ac
uuid_00000000000788aa:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000788a7
	jmp uuid_00000000000788a9
uuid_00000000000788a7:
	movb $1, -104(%rbp)
uuid_00000000000788a9:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000788ac:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000788af:
	mov -112(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788c1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788b7
	jmp uuid_00000000000788b9
uuid_00000000000788b7:
	push %RBP
	jmp uuid_00000000000788b4
	jmp uuid_00000000000788b6
uuid_00000000000788b4:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_00000000000788b0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788b1
	jmp uuid_00000000000788b3
uuid_00000000000788b1:
	movb $1, -216(%rbp)
uuid_00000000000788b3:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000788b6:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_00000000000788b9:
	mov -224(%RBP),%RSP
	add $-248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788be
	push %RBP
	jmp uuid_00000000000788bb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000788ba
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000788bd
uuid_00000000000788bb:
uuid_00000000000788bd:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000788c0
uuid_00000000000788be:
	movq $1, -40(%rbp)
uuid_00000000000788c0:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_00000000000788c3
uuid_00000000000788c1:
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_00000000000788c3:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_AD__CL_ArrowASTConsASTAST:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788d4
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788ca
	jmp uuid_00000000000788cc
uuid_00000000000788ca:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000788c7
	jmp uuid_00000000000788c9
uuid_00000000000788c7:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000788c4
	jmp uuid_00000000000788c6
uuid_00000000000788c4:
	movb $1, -392(%rbp)
uuid_00000000000788c6:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_00000000000788c9:
	mov -408(%RBP),%RSP
	add $-560, %RSP
uuid_00000000000788cc:
	mov -400(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788d1
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_00000000000788ce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000788cd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000788d0
uuid_00000000000788ce:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000788d0:
	mov -568(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_00000000000788d3
uuid_00000000000788d1:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000788d3:
	mov -312(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_00000000000788d6
uuid_00000000000788d4:
uuid_00000000000788d6:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
print_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788e0
	jmp uuid_00000000000788e2
uuid_00000000000788e0:
	push %RBP
	jmp uuid_00000000000788dd
	jmp uuid_00000000000788df
uuid_00000000000788dd:
	push %RBP
	jmp uuid_00000000000788da
	jmp uuid_00000000000788dc
uuid_00000000000788da:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000788d7
	jmp uuid_00000000000788d9
uuid_00000000000788d7:
	movb $1, -192(%rbp)
uuid_00000000000788d9:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000788dc:
	mov -216(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000788df:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_00000000000788e2:
	mov -200(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788e4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000788e3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000788e6
uuid_00000000000788e4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000788e6:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_CL_ArrowNilContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788fc
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788f9
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000788f0
	jmp uuid_00000000000788f2
uuid_00000000000788f0:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_00000000000788ed
	jmp uuid_00000000000788ef
uuid_00000000000788ed:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000788ea
	jmp uuid_00000000000788ec
uuid_00000000000788ea:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000788e7
	jmp uuid_00000000000788e9
uuid_00000000000788e7:
	movb $1, -520(%rbp)
uuid_00000000000788e9:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_00000000000788ec:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_00000000000788ef:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_00000000000788f2:
	mov -528(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000788f6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000788f5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000788f8
uuid_00000000000788f6:
#call function print : Arrow<Context,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788f3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788f4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000788f8:
	mov -416(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_00000000000788fb
uuid_00000000000788f9:
uuid_00000000000788fb:
	mov -312(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_00000000000788fe
uuid_00000000000788fc:
uuid_00000000000788fe:
	mov -208(%RBP),%RSP
	add $-304, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
print_CL_ArrowNilTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078915
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078912
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007890b
	jmp uuid_000000000007890d
uuid_000000000007890b:
	push %RBP
	jmp uuid_0000000000078908
	jmp uuid_000000000007890a
uuid_0000000000078908:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_0000000000078905
	jmp uuid_0000000000078907
uuid_0000000000078905:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078902
	jmp uuid_0000000000078904
uuid_0000000000078902:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000788ff
	jmp uuid_0000000000078901
uuid_00000000000788ff:
	movb $1, -640(%rbp)
uuid_0000000000078901:
	mov -712(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000078904:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000078907:
	mov -664(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007890a:
	mov -656(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007890d:
	mov -648(%RBP),%RSP
	add $-832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007890f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007890e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078911
uuid_000000000007890f:
#call function print : Arrow<TContext,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788f4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078911:
	mov -512(%RBP),%RSP
	add $-832, %RSP
	jmp uuid_0000000000078914
uuid_0000000000078912:
uuid_0000000000078914:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_0000000000078917
uuid_0000000000078915:
uuid_0000000000078917:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	mov %rbp, %rsp
	sub $128, %rsp
	ret
print_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078988
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078985
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007891f
	jmp uuid_0000000000078921
uuid_000000000007891f:
	push %RBP
	jmp uuid_000000000007891c
	jmp uuid_000000000007891e
uuid_000000000007891c:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078919
	jmp uuid_000000000007891b
uuid_0000000000078919:
	movb $1, -400(%rbp)
uuid_000000000007891b:
	mov -424(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007891e:
	mov -416(%RBP),%RSP
	add $-432, %RSP
uuid_0000000000078921:
	mov -408(%RBP),%RSP
	add $-432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078982
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078928
	jmp uuid_000000000007892a
uuid_0000000000078928:
	push %RBP
	jmp uuid_0000000000078925
	jmp uuid_0000000000078927
uuid_0000000000078925:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078922
	jmp uuid_0000000000078924
uuid_0000000000078922:
	movb $1, -520(%rbp)
uuid_0000000000078924:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_0000000000078927:
	mov -536(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007892a:
	mov -528(%RBP),%RSP
	add $-552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007897f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007892e
	jmp uuid_0000000000078930
uuid_000000000007892e:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007892b
	jmp uuid_000000000007892d
uuid_000000000007892b:
	movb $1, -640(%rbp)
uuid_000000000007892d:
	mov -656(%RBP),%RSP
	add $-680, %RSP
uuid_0000000000078930:
	mov -648(%RBP),%RSP
	add $-680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007897c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078934
	jmp uuid_0000000000078936
uuid_0000000000078934:
	push %RBP
	jmp uuid_0000000000078931
	jmp uuid_0000000000078933
uuid_0000000000078931:
	movb $1, -768(%rbp)
uuid_0000000000078933:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000078936:
	mov -776(%RBP),%RSP
	add $-784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078979
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007893d
	jmp uuid_000000000007893f
uuid_000000000007893d:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007893a
	jmp uuid_000000000007893c
uuid_000000000007893a:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078937
	jmp uuid_0000000000078939
uuid_0000000000078937:
	movb $1, -872(%rbp)
uuid_0000000000078939:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007893c:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007893f:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078976
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078947
	jmp uuid_0000000000078949
uuid_0000000000078947:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078944
	jmp uuid_0000000000078946
uuid_0000000000078944:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_0000000000078941
	jmp uuid_0000000000078943
uuid_0000000000078941:
	movb $1, -1128(%rbp)
uuid_0000000000078943:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_0000000000078946:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_0000000000078949:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078973
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078951
	jmp uuid_0000000000078953
uuid_0000000000078951:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007894e
	jmp uuid_0000000000078950
uuid_000000000007894e:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007894b
	jmp uuid_000000000007894d
uuid_000000000007894b:
	movb $1, -1368(%rbp)
uuid_000000000007894d:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000078950:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000078953:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078970
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007895d
	jmp uuid_000000000007895f
uuid_000000000007895d:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007895a
	jmp uuid_000000000007895c
uuid_000000000007895a:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078957
	jmp uuid_0000000000078959
uuid_0000000000078957:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078954
	jmp uuid_0000000000078956
uuid_0000000000078954:
	movb $1, -1624(%rbp)
uuid_0000000000078956:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078959:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007895c:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007895f:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007896d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078966
	jmp uuid_0000000000078968
uuid_0000000000078966:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078963
	jmp uuid_0000000000078965
uuid_0000000000078963:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078960
	jmp uuid_0000000000078962
uuid_0000000000078960:
	movb $1, -1912(%rbp)
uuid_0000000000078962:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_0000000000078965:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_0000000000078968:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007896a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078969
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007896c
uuid_000000000007896a:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788f4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007896c:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007896f
uuid_000000000007896d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076112
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000761a0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007896f:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_0000000000078972
uuid_0000000000078970:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078972:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_0000000000078975
uuid_0000000000078973:
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007894a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078975:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_0000000000078978
uuid_0000000000078976:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078940
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788f3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078978:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007897b
uuid_0000000000078979:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076ba8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007897b:
	mov -688(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007897e
uuid_000000000007897c:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007897e:
	mov -560(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_0000000000078981
uuid_000000000007897f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076111
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078981:
	mov -440(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_0000000000078984
uuid_0000000000078982:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078984:
	mov -320(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_0000000000078987
uuid_0000000000078985:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ee6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078987:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007898a
uuid_0000000000078988:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078918
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007898a:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
print_CL_ArrowNilFContext:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007898b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007899f:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000789a0
	jmp uuid_00000000000789a1
uuid_00000000000789a0:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078998
	jmp uuid_000000000007899a
uuid_0000000000078998:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_0000000000078995
	jmp uuid_0000000000078997
uuid_0000000000078995:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_0000000000078992
	jmp uuid_0000000000078994
uuid_0000000000078992:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007898f
	jmp uuid_0000000000078991
uuid_000000000007898f:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007898c
	jmp uuid_000000000007898e
uuid_000000000007898c:
	movb $1, -624(%rbp)
uuid_000000000007898e:
	mov -848(%RBP),%RSP
	add $-1048, %RSP
uuid_0000000000078991:
	mov -832(%RBP),%RSP
	add $-1048, %RSP
uuid_0000000000078994:
	mov -800(%RBP),%RSP
	add $-1048, %RSP
uuid_0000000000078997:
	mov -640(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007899a:
	mov -632(%RBP),%RSP
	add $-1048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007899c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007899b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007899e
uuid_000000000007899c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007671a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007899e:
	mov -416(%RBP),%RSP
	add $-1048, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007899f
uuid_00000000000789a1:
	mov %rbp, %rsp
	sub $208, %rsp
	ret
print_CL_ArrowNilFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789b4
	jmp uuid_00000000000789b6
uuid_00000000000789b4:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_00000000000789b1
	jmp uuid_00000000000789b3
uuid_00000000000789b1:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000789ae
	jmp uuid_00000000000789b0
uuid_00000000000789ae:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_00000000000789ab
	jmp uuid_00000000000789ad
uuid_00000000000789ab:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789a8
	jmp uuid_00000000000789aa
uuid_00000000000789a8:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000789a5
	jmp uuid_00000000000789a7
uuid_00000000000789a5:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_00000000000789a2
	jmp uuid_00000000000789a4
uuid_00000000000789a2:
	movb $1, -480(%rbp)
uuid_00000000000789a4:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000789a7:
	mov -784(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000789aa:
	mov -768(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000789ad:
	mov -736(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000789b0:
	mov -528(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000789b3:
	mov -496(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000789b6:
	mov -488(%RBP),%RSP
	add $-912, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000789cd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000789cc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000789cf
uuid_00000000000789cd:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000789b7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000789b8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000789c9:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000789ca
	jmp uuid_00000000000789cb
uuid_00000000000789ca:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789c2
	jmp uuid_00000000000789c4
uuid_00000000000789c2:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_00000000000789bf
	jmp uuid_00000000000789c1
uuid_00000000000789bf:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789bc
	jmp uuid_00000000000789be
uuid_00000000000789bc:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000789b9
	jmp uuid_00000000000789bb
uuid_00000000000789b9:
	movb $1, -1024(%rbp)
uuid_00000000000789bb:
	mov -1088(%RBP),%RSP
	add $-1136, %RSP
uuid_00000000000789be:
	mov -1072(%RBP),%RSP
	add $-1136, %RSP
uuid_00000000000789c1:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_00000000000789c4:
	mov -1032(%RBP),%RSP
	add $-1136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000789c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000789c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000789c8
uuid_00000000000789c6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076115
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788f3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -792(%rbp)
uuid_00000000000789c8:
	mov -968(%RBP),%RSP
	add $-1136, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000789c9
uuid_00000000000789cb:
uuid_00000000000789cf:
	mov -320(%RBP),%RSP
	add $-912, %RSP
	mov %rbp, %rsp
	sub $160, %rsp
	ret
print_CL_ArrowNilFragmentList:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789d6
	jmp uuid_00000000000789d8
uuid_00000000000789d6:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	jmp uuid_00000000000789d3
	jmp uuid_00000000000789d5
uuid_00000000000789d3:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000789d0
	jmp uuid_00000000000789d2
uuid_00000000000789d0:
	movb $1, -528(%rbp)
uuid_00000000000789d2:
	mov -704(%RBP),%RSP
	add $-872, %RSP
uuid_00000000000789d5:
	mov -544(%RBP),%RSP
	add $-872, %RSP
uuid_00000000000789d8:
	mov -536(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000789dd
	push %RBP
	jmp uuid_00000000000789da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000789d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000789dc
uuid_00000000000789da:
uuid_00000000000789dc:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_00000000000789df
uuid_00000000000789dd:
#call function print : Arrow<FragmentList,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000789df:
	mov -352(%RBP),%RSP
	add $-872, %RSP
	mov %rbp, %rsp
	sub $176, %rsp
	ret
print_CL_ArrowNilSourceLocation:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789e9
	jmp uuid_00000000000789eb
uuid_00000000000789e9:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789e6
	jmp uuid_00000000000789e8
uuid_00000000000789e6:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789e3
	jmp uuid_00000000000789e5
uuid_00000000000789e3:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789e0
	jmp uuid_00000000000789e2
uuid_00000000000789e0:
	movb $1, -120(%rbp)
uuid_00000000000789e2:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000789e5:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000789e8:
	mov -136(%RBP),%RSP
	add $-176, %RSP
uuid_00000000000789eb:
	mov -128(%RBP),%RSP
	add $-176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000789f0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000789ef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000789f2
uuid_00000000000789f0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000789ec
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000789ed
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000789ee
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000789f2:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
print_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a26
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789f6
	jmp uuid_00000000000789f8
uuid_00000000000789f6:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789f3
	jmp uuid_00000000000789f5
uuid_00000000000789f3:
	movb $1, -128(%rbp)
uuid_00000000000789f5:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_00000000000789f8:
	mov -136(%RBP),%RSP
	add $-152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a23
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789ff
	jmp uuid_0000000000078a01
uuid_00000000000789ff:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000789fc
	jmp uuid_00000000000789fe
uuid_00000000000789fc:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000789f9
	jmp uuid_00000000000789fb
uuid_00000000000789f9:
	movb $1, -192(%rbp)
uuid_00000000000789fb:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_00000000000789fe:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078a01:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a20
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a08
	jmp uuid_0000000000078a0a
uuid_0000000000078a08:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a05
	jmp uuid_0000000000078a07
uuid_0000000000078a05:
	push %RBP
	mov -280(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a02
	jmp uuid_0000000000078a04
uuid_0000000000078a02:
	movb $1, -304(%rbp)
uuid_0000000000078a04:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000078a07:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000078a0a:
	mov -312(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a1d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a16
	jmp uuid_0000000000078a18
uuid_0000000000078a16:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a13
	jmp uuid_0000000000078a15
uuid_0000000000078a13:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078a10
	jmp uuid_0000000000078a12
uuid_0000000000078a10:
	movb $1, -416(%rbp)
uuid_0000000000078a12:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_0000000000078a15:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_0000000000078a18:
	mov -424(%RBP),%RSP
	add $-488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a1a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078a19
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078a1c
uuid_0000000000078a1a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000762ab
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000762ac
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a1c:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_0000000000078a1f
uuid_0000000000078a1d:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a0d
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a0c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078a0f
uuid_0000000000078a0d:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a0b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a0f:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000078a1f:
	mov -272(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000078a22
uuid_0000000000078a20:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a22:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000078a25
uuid_0000000000078a23:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a25:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000078a28
uuid_0000000000078a26:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000760b0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a28:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
print_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a44
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a31
	jmp uuid_0000000000078a33
uuid_0000000000078a31:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a2e
	jmp uuid_0000000000078a30
uuid_0000000000078a2e:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_0000000000078a2b
	jmp uuid_0000000000078a2d
uuid_0000000000078a2b:
	movb $1, -192(%rbp)
uuid_0000000000078a2d:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000078a30:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000078a33:
	mov -200(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a41
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a3a
	jmp uuid_0000000000078a3c
uuid_0000000000078a3a:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a37
	jmp uuid_0000000000078a39
uuid_0000000000078a37:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_0000000000078a34
	jmp uuid_0000000000078a36
uuid_0000000000078a34:
	movb $1, -336(%rbp)
uuid_0000000000078a36:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000078a39:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000078a3c:
	mov -344(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a3e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078a3d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078a40
uuid_0000000000078a3e:
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007626b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a40:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_0000000000078a43
uuid_0000000000078a41:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078a43:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000078a46
uuid_0000000000078a44:
uuid_0000000000078a46:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
reverse_CL_ArrowFragmentListFragmentList:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_0000000000078a54:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a55
	jmp uuid_0000000000078a56
uuid_0000000000078a55:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a4d
	jmp uuid_0000000000078a4f
uuid_0000000000078a4d:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_0000000000078a4a
	jmp uuid_0000000000078a4c
uuid_0000000000078a4a:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a47
	jmp uuid_0000000000078a49
uuid_0000000000078a47:
	movb $1, -696(%rbp)
uuid_0000000000078a49:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000078a4c:
	mov -712(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000078a4f:
	mov -704(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078a51
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078a50
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078a53
uuid_0000000000078a51:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq $0
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	movq -1040(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078a53:
	mov -520(%RBP),%RSP
	add $-1040, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078a54
uuid_0000000000078a56:
	subq $168, %rsp
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
serialize_SB_ast_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ad7
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ad4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a5a
	jmp uuid_0000000000078a5c
uuid_0000000000078a5a:
	push %RBP
	jmp uuid_0000000000078a57
	jmp uuid_0000000000078a59
uuid_0000000000078a57:
	movb $1, -400(%rbp)
uuid_0000000000078a59:
	mov -416(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000078a5c:
	mov -408(%RBP),%RSP
	add $-416, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ad1
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a63
	jmp uuid_0000000000078a65
uuid_0000000000078a63:
	push %RBP
	jmp uuid_0000000000078a60
	jmp uuid_0000000000078a62
uuid_0000000000078a60:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078a5d
	jmp uuid_0000000000078a5f
uuid_0000000000078a5d:
	movb $1, -504(%rbp)
uuid_0000000000078a5f:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000078a62:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000078a65:
	mov -512(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ace
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a6d
	jmp uuid_0000000000078a6f
uuid_0000000000078a6d:
	push %RBP
	jmp uuid_0000000000078a6a
	jmp uuid_0000000000078a6c
uuid_0000000000078a6a:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078a67
	jmp uuid_0000000000078a69
uuid_0000000000078a67:
	movb $1, -624(%rbp)
uuid_0000000000078a69:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000078a6c:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000078a6f:
	mov -632(%RBP),%RSP
	add $-656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078acb
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a74
	jmp uuid_0000000000078a76
uuid_0000000000078a74:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_0000000000078a71
	jmp uuid_0000000000078a73
uuid_0000000000078a71:
	movb $1, -744(%rbp)
uuid_0000000000078a73:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_0000000000078a76:
	mov -752(%RBP),%RSP
	add $-784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ac8
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a7d
	jmp uuid_0000000000078a7f
uuid_0000000000078a7d:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a7a
	jmp uuid_0000000000078a7c
uuid_0000000000078a7a:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a77
	jmp uuid_0000000000078a79
uuid_0000000000078a77:
	movb $1, -872(%rbp)
uuid_0000000000078a79:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000078a7c:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000078a7f:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ac5
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a88
	jmp uuid_0000000000078a8a
uuid_0000000000078a88:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a85
	jmp uuid_0000000000078a87
uuid_0000000000078a85:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_0000000000078a82
	jmp uuid_0000000000078a84
uuid_0000000000078a82:
	movb $1, -1128(%rbp)
uuid_0000000000078a84:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_0000000000078a87:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_0000000000078a8a:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ac2
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a92
	jmp uuid_0000000000078a94
uuid_0000000000078a92:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a8f
	jmp uuid_0000000000078a91
uuid_0000000000078a8f:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a8c
	jmp uuid_0000000000078a8e
uuid_0000000000078a8c:
	movb $1, -1368(%rbp)
uuid_0000000000078a8e:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000078a91:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000078a94:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078abf
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078a9f
	jmp uuid_0000000000078aa1
uuid_0000000000078a9f:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_0000000000078a9c
	jmp uuid_0000000000078a9e
uuid_0000000000078a9c:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a99
	jmp uuid_0000000000078a9b
uuid_0000000000078a99:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078a96
	jmp uuid_0000000000078a98
uuid_0000000000078a96:
	movb $1, -1624(%rbp)
uuid_0000000000078a98:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078a9b:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078a9e:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_0000000000078aa1:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078abc
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078aa9
	jmp uuid_0000000000078aab
uuid_0000000000078aa9:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078aa6
	jmp uuid_0000000000078aa8
uuid_0000000000078aa6:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2080(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078aa3
	jmp uuid_0000000000078aa5
uuid_0000000000078aa3:
	movb $1, -1912(%rbp)
uuid_0000000000078aa5:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_0000000000078aa8:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_0000000000078aab:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ab9
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2160(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ab2
	jmp uuid_0000000000078ab4
uuid_0000000000078ab2:
	push %RBP
	mov -2152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078aaf
	jmp uuid_0000000000078ab1
uuid_0000000000078aaf:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078aac
	jmp uuid_0000000000078aae
uuid_0000000000078aac:
	movb $1, -2168(%rbp)
uuid_0000000000078aae:
	mov -2264(%RBP),%RSP
	add $-2336, %RSP
uuid_0000000000078ab1:
	mov -2184(%RBP),%RSP
	add $-2336, %RSP
uuid_0000000000078ab4:
	mov -2176(%RBP),%RSP
	add $-2336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ab6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078ab5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078ab8
uuid_0000000000078ab6:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ab8:
	mov -2088(%RBP),%RSP
	add $-2336, %RSP
	jmp uuid_0000000000078abb
uuid_0000000000078ab9:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078abb:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_0000000000078abe
uuid_0000000000078abc:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078aa2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078abe:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_0000000000078ac1
uuid_0000000000078abf:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a95
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ac1:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_0000000000078ac4
uuid_0000000000078ac2:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a8b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ac4:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_0000000000078ac7
uuid_0000000000078ac5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a80
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ac7:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_0000000000078aca
uuid_0000000000078ac8:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078aca:
	mov -664(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_0000000000078acd
uuid_0000000000078acb:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a70
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078acd:
	mov -544(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_0000000000078ad0
uuid_0000000000078ace:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a66
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ad0:
	mov -424(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_0000000000078ad3
uuid_0000000000078ad1:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076ba8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ad3:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_0000000000078ad6
uuid_0000000000078ad4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ad6:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000078ad9
uuid_0000000000078ad7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ee6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078ad9:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
serialize_SB_ast_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078af5
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ae2
	jmp uuid_0000000000078ae4
uuid_0000000000078ae2:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078adf
	jmp uuid_0000000000078ae1
uuid_0000000000078adf:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_0000000000078adc
	jmp uuid_0000000000078ade
uuid_0000000000078adc:
	movb $1, -192(%rbp)
uuid_0000000000078ade:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000078ae1:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000078ae4:
	mov -200(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078af2
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078aeb
	jmp uuid_0000000000078aed
uuid_0000000000078aeb:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078ae8
	jmp uuid_0000000000078aea
uuid_0000000000078ae8:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_0000000000078ae5
	jmp uuid_0000000000078ae7
uuid_0000000000078ae5:
	movb $1, -336(%rbp)
uuid_0000000000078ae7:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000078aea:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000078aed:
	mov -344(%RBP),%RSP
	add $-424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078aef
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078aee
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078af1
uuid_0000000000078aef:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a95
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078af1:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_0000000000078af4
uuid_0000000000078af2:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078af4:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000078af7
uuid_0000000000078af5:
uuid_0000000000078af7:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
serialize_SB_ast_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b29
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078afc
	jmp uuid_0000000000078afe
uuid_0000000000078afc:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078af9
	jmp uuid_0000000000078afb
uuid_0000000000078af9:
	movb $1, -128(%rbp)
uuid_0000000000078afb:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000078afe:
	mov -136(%RBP),%RSP
	add $-152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b26
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b05
	jmp uuid_0000000000078b07
uuid_0000000000078b05:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b02
	jmp uuid_0000000000078b04
uuid_0000000000078b02:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078aff
	jmp uuid_0000000000078b01
uuid_0000000000078aff:
	movb $1, -192(%rbp)
uuid_0000000000078b01:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078b04:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000078b07:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b23
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b0f
	jmp uuid_0000000000078b11
uuid_0000000000078b0f:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b0c
	jmp uuid_0000000000078b0e
uuid_0000000000078b0c:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b09
	jmp uuid_0000000000078b0b
uuid_0000000000078b09:
	movb $1, -304(%rbp)
uuid_0000000000078b0b:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000078b0e:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000078b11:
	mov -312(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b20
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b18
	jmp uuid_0000000000078b1a
uuid_0000000000078b18:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b15
	jmp uuid_0000000000078b17
uuid_0000000000078b15:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b12
	jmp uuid_0000000000078b14
uuid_0000000000078b12:
	movb $1, -416(%rbp)
uuid_0000000000078b14:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_0000000000078b17:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_0000000000078b1a:
	mov -424(%RBP),%RSP
	add $-488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b1d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078b1c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078b1f
uuid_0000000000078b1d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a95
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a70
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078b1b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078b1f:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_0000000000078b22
uuid_0000000000078b20:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a70
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078b22:
	mov -272(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_0000000000078b25
uuid_0000000000078b23:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a95
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078b08
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a95
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078b25:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000078b28
uuid_0000000000078b26:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078a66
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078b28:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000078b2b
uuid_0000000000078b29:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078af8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078b2b:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
slot_CL_ArrowTypeConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b32
	jmp uuid_0000000000078b34
uuid_0000000000078b32:
	push %RBP
	jmp uuid_0000000000078b2f
	jmp uuid_0000000000078b31
uuid_0000000000078b2f:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b2c
	jmp uuid_0000000000078b2e
uuid_0000000000078b2c:
	movb $1, -128(%rbp)
uuid_0000000000078b2e:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000078b31:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000078b34:
	mov -136(%RBP),%RSP
	add $-160, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b4b
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b3e
	jmp uuid_0000000000078b40
uuid_0000000000078b3e:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b3b
	jmp uuid_0000000000078b3d
uuid_0000000000078b3b:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b38
	jmp uuid_0000000000078b3a
uuid_0000000000078b38:
	movb $1, -200(%rbp)
uuid_0000000000078b3a:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078b3d:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000078b40:
	mov -208(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b48
	push %RBP
	jmp uuid_0000000000078b45
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078b44
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078b47
uuid_0000000000078b45:
uuid_0000000000078b47:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000078b4a
uuid_0000000000078b48:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b41
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	jmp uuid_0000000000078b43
uuid_0000000000078b41:
	movq -296(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_0000000000078b43:
	mov -304(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000078b4a:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000078b4d
uuid_0000000000078b4b:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b35
	jmp uuid_0000000000078b37
uuid_0000000000078b35:
	movq -24(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_0000000000078b37:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000078b4d:
	mov -96(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
slot_CL_ArrowTypeConsStringConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b54
	jmp uuid_0000000000078b56
uuid_0000000000078b54:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b51
	jmp uuid_0000000000078b53
uuid_0000000000078b51:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b4e
	jmp uuid_0000000000078b50
uuid_0000000000078b4e:
	movb $1, -136(%rbp)
uuid_0000000000078b50:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_0000000000078b53:
	mov -152(%RBP),%RSP
	add $-208, %RSP
uuid_0000000000078b56:
	mov -144(%RBP),%RSP
	add $-208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b80
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b73
	jmp uuid_0000000000078b75
uuid_0000000000078b73:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b70
	jmp uuid_0000000000078b72
uuid_0000000000078b70:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078b6d
	jmp uuid_0000000000078b6f
uuid_0000000000078b6d:
	movb $1, -248(%rbp)
uuid_0000000000078b6f:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000078b72:
	mov -264(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000078b75:
	mov -256(%RBP),%RSP
	add $-320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b7d
	push %RBP
	jmp uuid_0000000000078b7a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078b79
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078b7c
uuid_0000000000078b7a:
uuid_0000000000078b7c:
	mov -328(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_0000000000078b7f
uuid_0000000000078b7d:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b76
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -56(%rbp)
	jmp uuid_0000000000078b78
uuid_0000000000078b76:
	movq -344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_0000000000078b78:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000078b7f:
	mov -216(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_0000000000078b82
uuid_0000000000078b80:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b6a
	jmp uuid_0000000000078b6c
uuid_0000000000078b6a:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b5d
	jmp uuid_0000000000078b5f
uuid_0000000000078b5d:
	push %RBP
	jmp uuid_0000000000078b5a
	jmp uuid_0000000000078b5c
uuid_0000000000078b5a:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b57
	jmp uuid_0000000000078b59
uuid_0000000000078b57:
	movb $1, -312(%rbp)
uuid_0000000000078b59:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000078b5c:
	mov -328(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000078b5f:
	mov -320(%RBP),%RSP
	add $-344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b67
	push %RBP
	jmp uuid_0000000000078b64
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078b63
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078b66
uuid_0000000000078b64:
uuid_0000000000078b66:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_0000000000078b69
uuid_0000000000078b67:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b60
	jmp uuid_0000000000078b62
uuid_0000000000078b60:
	movq -24(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_0000000000078b62:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000078b69:
	mov -264(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000078b6c:
	mov -216(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000078b82:
	mov -104(%RBP),%RSP
	add $-352, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
uuid_CL_ArrowStringNil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000078b83
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-hex : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call to_SB_hex_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
iuid_CL_ArrowU64Nil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov -16(%rbp), %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
var_SB_name_SB_if_SB_var_CL_ArrowStringAST:
	pushq $uuid_0000000000075fd2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b8a
	jmp uuid_0000000000078b8c
uuid_0000000000078b8a:
	push %RBP
	jmp uuid_0000000000078b87
	jmp uuid_0000000000078b89
uuid_0000000000078b87:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b84
	jmp uuid_0000000000078b86
uuid_0000000000078b84:
	movb $1, -248(%rbp)
uuid_0000000000078b86:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000078b89:
	mov -264(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000078b8c:
	mov -256(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b9d
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078b93
	jmp uuid_0000000000078b95
uuid_0000000000078b93:
	push %RBP
	jmp uuid_0000000000078b90
	jmp uuid_0000000000078b92
uuid_0000000000078b90:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078b8d
	jmp uuid_0000000000078b8f
uuid_0000000000078b8d:
	movb $1, -368(%rbp)
uuid_0000000000078b8f:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_0000000000078b92:
	mov -384(%RBP),%RSP
	add $-400, %RSP
uuid_0000000000078b95:
	mov -376(%RBP),%RSP
	add $-400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078b9a
	push %RBP
	jmp uuid_0000000000078b97
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078b96
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078b99
uuid_0000000000078b97:
uuid_0000000000078b99:
	mov -408(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_0000000000078b9c
uuid_0000000000078b9a:
	movq -400(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -400(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_0000000000078b9c:
	mov -288(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_0000000000078b9f
uuid_0000000000078b9d:
	movq -280(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -280(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_0000000000078b9f:
	mov -168(%RBP),%RSP
	add $-280, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_expect_CL_ArrowNilConsListTokenString:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_SB_lambda_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bcb
	jmp uuid_0000000000078bcd
uuid_0000000000078bcb:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bb6
	jmp uuid_0000000000078bb8
uuid_0000000000078bb6:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078bb3
	jmp uuid_0000000000078bb5
uuid_0000000000078bb3:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bad
	jmp uuid_0000000000078baf
uuid_0000000000078bad:
	push %RBP
	jmp uuid_0000000000078baa
	jmp uuid_0000000000078bac
uuid_0000000000078baa:
	push %RBP
	jmp uuid_0000000000078ba7
	jmp uuid_0000000000078ba9
uuid_0000000000078ba7:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078ba4
	jmp uuid_0000000000078ba6
uuid_0000000000078ba4:
	movb $1, -520(%rbp)
uuid_0000000000078ba6:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078ba9:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078bac:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078baf:
	mov -528(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bb0
	jmp uuid_0000000000078bb2
uuid_0000000000078bb0:
	movb $1, -360(%rbp)
uuid_0000000000078bb2:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078bb5:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000078bb8:
	mov -368(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bc8
	jmp uuid_0000000000078bca
uuid_0000000000078bc8:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bc2
	jmp uuid_0000000000078bc4
uuid_0000000000078bc2:
	push %RBP
	jmp uuid_0000000000078bbf
	jmp uuid_0000000000078bc1
uuid_0000000000078bbf:
	push %RBP
	jmp uuid_0000000000078bbc
	jmp uuid_0000000000078bbe
uuid_0000000000078bbc:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bb9
	jmp uuid_0000000000078bbb
uuid_0000000000078bb9:
	movb $1, -632(%rbp)
uuid_0000000000078bbb:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000078bbe:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000078bc1:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000078bc4:
	mov -640(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bc5
	jmp uuid_0000000000078bc7
uuid_0000000000078bc5:
	movb $1, -264(%rbp)
uuid_0000000000078bc7:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000078bca:
	mov -280(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000078bcd:
	mov -272(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bd2
	push %RBP
	jmp uuid_0000000000078bcf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078bce
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078bd1
uuid_0000000000078bcf:
uuid_0000000000078bd1:
	mov -680(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_0000000000078bd4
uuid_0000000000078bd2:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -448(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078bd4:
	mov -184(%RBP),%RSP
	add $-672, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078be6
	jmp uuid_0000000000078be8
uuid_0000000000078be6:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	jmp uuid_0000000000078be3
	jmp uuid_0000000000078be5
uuid_0000000000078be3:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bdd
	jmp uuid_0000000000078bdf
uuid_0000000000078bdd:
	push %RBP
	jmp uuid_0000000000078bda
	jmp uuid_0000000000078bdc
uuid_0000000000078bda:
	push %RBP
	mov -1240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1344(%rbp)
	pushq $uuid_00000000000761a0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bd7
	jmp uuid_0000000000078bd9
uuid_0000000000078bd7:
	movb $1, -1312(%rbp)
uuid_0000000000078bd9:
	mov -1336(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000078bdc:
	mov -1328(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000078bdf:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078be0
	jmp uuid_0000000000078be2
uuid_0000000000078be0:
	movb $1, -1136(%rbp)
uuid_0000000000078be2:
	mov -1232(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000078be5:
	mov -1152(%RBP),%RSP
	add $-1344, %RSP
uuid_0000000000078be8:
	mov -1144(%RBP),%RSP
	add $-1344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c03
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bfc
	jmp uuid_0000000000078bfe
uuid_0000000000078bfc:
	push %RBP
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_0000000000078bf9
	jmp uuid_0000000000078bfb
uuid_0000000000078bf9:
	push %RBP
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	jmp uuid_0000000000078bf6
	jmp uuid_0000000000078bf8
uuid_0000000000078bf6:
	movb $1, -1512(%rbp)
uuid_0000000000078bf8:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_0000000000078bfb:
	mov -1528(%RBP),%RSP
	add $-1680, %RSP
uuid_0000000000078bfe:
	mov -1520(%RBP),%RSP
	add $-1680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c00
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078bff
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078c02
uuid_0000000000078c00:
	movq -1680(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078c02:
	mov -1352(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_0000000000078c05
uuid_0000000000078c03:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078bef
	jmp uuid_0000000000078bf1
uuid_0000000000078bef:
	push %RBP
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_0000000000078bec
	jmp uuid_0000000000078bee
uuid_0000000000078bec:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_0000000000078be9
	jmp uuid_0000000000078beb
uuid_0000000000078be9:
	movb $1, -1664(%rbp)
uuid_0000000000078beb:
	mov -1760(%RBP),%RSP
	add $-1832, %RSP
uuid_0000000000078bee:
	mov -1680(%RBP),%RSP
	add $-1832, %RSP
uuid_0000000000078bf1:
	mov -1672(%RBP),%RSP
	add $-1832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078bf3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078bf2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078bf5
uuid_0000000000078bf3:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST+CaseNumber<9>,Array<AST+CaseNumber<9>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1752(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -752(%rbp)
uuid_0000000000078bf5:
	mov -1504(%RBP),%RSP
	add $-1832, %RSP
uuid_0000000000078c05:
	mov -976(%RBP),%RSP
	add $-1832, %RSP
uuid_0000000000078c42:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c43
	jmp uuid_0000000000078c44
uuid_0000000000078c43:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c15
	jmp uuid_0000000000078c17
uuid_0000000000078c15:
	push %RBP
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	jmp uuid_0000000000078c12
	jmp uuid_0000000000078c14
uuid_0000000000078c12:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c0c
	jmp uuid_0000000000078c0e
uuid_0000000000078c0c:
	push %RBP
	jmp uuid_0000000000078c09
	jmp uuid_0000000000078c0b
uuid_0000000000078c09:
	push %RBP
	mov -2256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2360(%rbp)
	pushq $uuid_00000000000761a0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c06
	jmp uuid_0000000000078c08
uuid_0000000000078c06:
	movb $1, -2328(%rbp)
uuid_0000000000078c08:
	mov -2352(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000078c0b:
	mov -2344(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000078c0e:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c0f
	jmp uuid_0000000000078c11
uuid_0000000000078c0f:
	movb $1, -2152(%rbp)
uuid_0000000000078c11:
	mov -2248(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000078c14:
	mov -2168(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000078c17:
	mov -2160(%RBP),%RSP
	add $-2360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c3f
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c2b
	jmp uuid_0000000000078c2d
uuid_0000000000078c2b:
	push %RBP
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c28
	jmp uuid_0000000000078c2a
uuid_0000000000078c28:
	push %RBP
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	jmp uuid_0000000000078c25
	jmp uuid_0000000000078c27
uuid_0000000000078c25:
	movb $1, -2528(%rbp)
uuid_0000000000078c27:
	mov -2624(%RBP),%RSP
	add $-2696, %RSP
uuid_0000000000078c2a:
	mov -2544(%RBP),%RSP
	add $-2696, %RSP
uuid_0000000000078c2d:
	mov -2536(%RBP),%RSP
	add $-2696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c3c
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c35
	jmp uuid_0000000000078c37
uuid_0000000000078c35:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	jmp uuid_0000000000078c32
	jmp uuid_0000000000078c34
uuid_0000000000078c32:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_0000000000078c2f
	jmp uuid_0000000000078c31
uuid_0000000000078c2f:
	movb $1, -2864(%rbp)
uuid_0000000000078c31:
	mov -2960(%RBP),%RSP
	add $-3032, %RSP
uuid_0000000000078c34:
	mov -2880(%RBP),%RSP
	add $-3032, %RSP
uuid_0000000000078c37:
	mov -2872(%RBP),%RSP
	add $-3032, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c39
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078c38
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078c3b
uuid_0000000000078c39:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2952(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2944(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2936(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2928(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2920(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2912(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2904(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2896(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2888(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078c3b:
	mov -2704(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_0000000000078c3e
uuid_0000000000078c3c:
#call function parse-expect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078c2e
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_expect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078c3e:
	mov -2368(%RBP),%RSP
	add $-2696, %RSP
	jmp uuid_0000000000078c41
uuid_0000000000078c3f:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c1e
	jmp uuid_0000000000078c20
uuid_0000000000078c1e:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_0000000000078c1b
	jmp uuid_0000000000078c1d
uuid_0000000000078c1b:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_0000000000078c18
	jmp uuid_0000000000078c1a
uuid_0000000000078c18:
	movb $1, -2680(%rbp)
uuid_0000000000078c1a:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078c1d:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078c20:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c22
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078c21
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078c24
uuid_0000000000078c22:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -752(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078c24:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078c41:
	mov -1992(%RBP),%RSP
	add $-2848, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078c42
uuid_0000000000078c44:
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -1984(%rbp)
	pushq -1976(%rbp)
	pushq -1968(%rbp)
	pushq -1960(%rbp)
	pushq -1952(%rbp)
	pushq -1944(%rbp)
	pushq -1936(%rbp)
	pushq -1928(%rbp)
	pushq -1920(%rbp)
	pushq -1912(%rbp)
	pushq -1904(%rbp)
	pushq -1896(%rbp)
	pushq -1888(%rbp)
	pushq -1880(%rbp)
	pushq -1872(%rbp)
	pushq -1864(%rbp)
	pushq -1856(%rbp)
	pushq -1848(%rbp)
	pushq -1840(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_0000000000078c90:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c91
	jmp uuid_0000000000078c92
uuid_0000000000078c91:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c5b
	jmp uuid_0000000000078c5d
uuid_0000000000078c5b:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078c58
	jmp uuid_0000000000078c5a
uuid_0000000000078c58:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c52
	jmp uuid_0000000000078c54
uuid_0000000000078c52:
	push %RBP
	jmp uuid_0000000000078c4f
	jmp uuid_0000000000078c51
uuid_0000000000078c4f:
	push %RBP
	jmp uuid_0000000000078c4c
	jmp uuid_0000000000078c4e
uuid_0000000000078c4c:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_000000000007610f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c49
	jmp uuid_0000000000078c4b
uuid_0000000000078c49:
	movb $1, -544(%rbp)
uuid_0000000000078c4b:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000078c4e:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000078c51:
	mov -560(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000078c54:
	mov -552(%RBP),%RSP
	add $-584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c55
	jmp uuid_0000000000078c57
uuid_0000000000078c55:
	movb $1, -384(%rbp)
uuid_0000000000078c57:
	mov -480(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000078c5a:
	mov -400(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000078c5d:
	mov -392(%RBP),%RSP
	add $-584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c8d
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c70
	jmp uuid_0000000000078c72
uuid_0000000000078c70:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078c6d
	jmp uuid_0000000000078c6f
uuid_0000000000078c6d:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c67
	jmp uuid_0000000000078c69
uuid_0000000000078c67:
	push %RBP
	jmp uuid_0000000000078c64
	jmp uuid_0000000000078c66
uuid_0000000000078c64:
	push %RBP
	jmp uuid_0000000000078c61
	jmp uuid_0000000000078c63
uuid_0000000000078c61:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c5e
	jmp uuid_0000000000078c60
uuid_0000000000078c5e:
	movb $1, -832(%rbp)
uuid_0000000000078c60:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000078c63:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000078c66:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000078c69:
	mov -840(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c6a
	jmp uuid_0000000000078c6c
uuid_0000000000078c6a:
	movb $1, -672(%rbp)
uuid_0000000000078c6c:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000078c6f:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000078c72:
	mov -680(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c8a
	push %RBP
	jmp uuid_0000000000078c87
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078c86
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078c89
uuid_0000000000078c87:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078c7c
	jmp uuid_0000000000078c7e
uuid_0000000000078c7c:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_0000000000078c79
	jmp uuid_0000000000078c7b
uuid_0000000000078c79:
	push %RBP
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	jmp uuid_0000000000078c76
	jmp uuid_0000000000078c78
uuid_0000000000078c76:
	movb $1, -1200(%rbp)
uuid_0000000000078c78:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_0000000000078c7b:
	mov -1216(%RBP),%RSP
	add $-1368, %RSP
uuid_0000000000078c7e:
	mov -1208(%RBP),%RSP
	add $-1368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c83
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078c82
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078c85
uuid_0000000000078c83:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c7f
	movq -1368(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -88(%rbp)
	jmp uuid_0000000000078c81
uuid_0000000000078c7f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000078c81:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078c85:
	mov -1040(%RBP),%RSP
	add $-1376, %RSP
uuid_0000000000078c89:
	mov -880(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_0000000000078c8c
uuid_0000000000078c8a:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c73
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_0000000000078c75
uuid_0000000000078c73:
uuid_0000000000078c75:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	movq -760(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078c8c:
	mov -592(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_0000000000078c8f
uuid_0000000000078c8d:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000078c8f:
	mov -304(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078c90
uuid_0000000000078c92:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_one_SB_expression_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d2b
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ca9
	jmp uuid_0000000000078cab
uuid_0000000000078ca9:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078ca6
	jmp uuid_0000000000078ca8
uuid_0000000000078ca6:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ca0
	jmp uuid_0000000000078ca2
uuid_0000000000078ca0:
	push %RBP
	jmp uuid_0000000000078c9d
	jmp uuid_0000000000078c9f
uuid_0000000000078c9d:
	push %RBP
	jmp uuid_0000000000078c9a
	jmp uuid_0000000000078c9c
uuid_0000000000078c9a:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq $uuid_0000000000076112
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078c97
	jmp uuid_0000000000078c99
uuid_0000000000078c97:
	movb $1, -624(%rbp)
uuid_0000000000078c99:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000078c9c:
	mov -648(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000078c9f:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000078ca2:
	mov -632(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ca3
	jmp uuid_0000000000078ca5
uuid_0000000000078ca3:
	movb $1, -464(%rbp)
uuid_0000000000078ca5:
	mov -560(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000078ca8:
	mov -480(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000078cab:
	mov -472(%RBP),%RSP
	add $-664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d28
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ccb
	jmp uuid_0000000000078ccd
uuid_0000000000078ccb:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078cc8
	jmp uuid_0000000000078cca
uuid_0000000000078cc8:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078cc2
	jmp uuid_0000000000078cc4
uuid_0000000000078cc2:
	push %RBP
	jmp uuid_0000000000078cbf
	jmp uuid_0000000000078cc1
uuid_0000000000078cbf:
	push %RBP
	jmp uuid_0000000000078cbc
	jmp uuid_0000000000078cbe
uuid_0000000000078cbc:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078cb9
	jmp uuid_0000000000078cbb
uuid_0000000000078cb9:
	movb $1, -912(%rbp)
uuid_0000000000078cbb:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000078cbe:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000078cc1:
	mov -928(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000078cc4:
	mov -920(%RBP),%RSP
	add $-952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078cc5
	jmp uuid_0000000000078cc7
uuid_0000000000078cc5:
	movb $1, -752(%rbp)
uuid_0000000000078cc7:
	mov -848(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000078cca:
	mov -768(%RBP),%RSP
	add $-952, %RSP
uuid_0000000000078ccd:
	mov -760(%RBP),%RSP
	add $-952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d25
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ce1
	jmp uuid_0000000000078ce3
uuid_0000000000078ce1:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078cde
	jmp uuid_0000000000078ce0
uuid_0000000000078cde:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078cd8
	jmp uuid_0000000000078cda
uuid_0000000000078cd8:
	push %RBP
	jmp uuid_0000000000078cd5
	jmp uuid_0000000000078cd7
uuid_0000000000078cd5:
	push %RBP
	jmp uuid_0000000000078cd2
	jmp uuid_0000000000078cd4
uuid_0000000000078cd2:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq $uuid_0000000000075ef6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ccf
	jmp uuid_0000000000078cd1
uuid_0000000000078ccf:
	movb $1, -1200(%rbp)
uuid_0000000000078cd1:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078cd4:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078cd7:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078cda:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078cdb
	jmp uuid_0000000000078cdd
uuid_0000000000078cdb:
	movb $1, -1040(%rbp)
uuid_0000000000078cdd:
	mov -1136(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078ce0:
	mov -1056(%RBP),%RSP
	add $-1240, %RSP
uuid_0000000000078ce3:
	mov -1048(%RBP),%RSP
	add $-1240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d22
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d0c
	jmp uuid_0000000000078d0e
uuid_0000000000078d0c:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078cf7
	jmp uuid_0000000000078cf9
uuid_0000000000078cf7:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078cf4
	jmp uuid_0000000000078cf6
uuid_0000000000078cf4:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_0000000000078cf1
	jmp uuid_0000000000078cf3
uuid_0000000000078cf1:
	movb $1, -1424(%rbp)
uuid_0000000000078cf3:
	mov -1520(%RBP),%RSP
	add $-1576, %RSP
uuid_0000000000078cf6:
	mov -1440(%RBP),%RSP
	add $-1576, %RSP
uuid_0000000000078cf9:
	mov -1432(%RBP),%RSP
	add $-1576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d09
	jmp uuid_0000000000078d0b
uuid_0000000000078d09:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d03
	jmp uuid_0000000000078d05
uuid_0000000000078d03:
	push %RBP
	jmp uuid_0000000000078d00
	jmp uuid_0000000000078d02
uuid_0000000000078d00:
	push %RBP
	jmp uuid_0000000000078cfd
	jmp uuid_0000000000078cff
uuid_0000000000078cfd:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_0000000000076111
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078cfa
	jmp uuid_0000000000078cfc
uuid_0000000000078cfa:
	movb $1, -1648(%rbp)
uuid_0000000000078cfc:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000078cff:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000078d02:
	mov -1664(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000078d05:
	mov -1656(%RBP),%RSP
	add $-1688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d06
	jmp uuid_0000000000078d08
uuid_0000000000078d06:
	movb $1, -1328(%rbp)
uuid_0000000000078d08:
	mov -1584(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000078d0b:
	mov -1344(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000078d0e:
	mov -1336(%RBP),%RSP
	add $-1688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d1f
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d15
	jmp uuid_0000000000078d17
uuid_0000000000078d15:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078d12
	jmp uuid_0000000000078d14
uuid_0000000000078d12:
	push %RBP
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_0000000000078d0f
	jmp uuid_0000000000078d11
uuid_0000000000078d0f:
	movb $1, -1776(%rbp)
uuid_0000000000078d11:
	mov -1872(%RBP),%RSP
	add $-1928, %RSP
uuid_0000000000078d14:
	mov -1792(%RBP),%RSP
	add $-1928, %RSP
uuid_0000000000078d17:
	mov -1784(%RBP),%RSP
	add $-1928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d1c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078d1b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078d1e
uuid_0000000000078d1c:
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -1880(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d18
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_0000000000078d1a
uuid_0000000000078d18:
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000078d1a:
	mov -1936(%RBP),%RSP
	add $-1936, %RSP
	movq -1864(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1856(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1848(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1840(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1832(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1800(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_0000000000078d1e:
	mov -1696(%RBP),%RSP
	add $-1936, %RSP
	jmp uuid_0000000000078d21
uuid_0000000000078d1f:
	mov -1528(%RBP), %RAX
	push %RAX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1512(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_0000000000078d21:
	mov -1248(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_0000000000078d24
uuid_0000000000078d22:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078cea
	jmp uuid_0000000000078cec
uuid_0000000000078cea:
	push %RBP
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	jmp uuid_0000000000078ce7
	jmp uuid_0000000000078ce9
uuid_0000000000078ce7:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_0000000000078ce4
	jmp uuid_0000000000078ce6
uuid_0000000000078ce4:
	movb $1, -1560(%rbp)
uuid_0000000000078ce6:
	mov -1656(%RBP),%RSP
	add $-1728, %RSP
uuid_0000000000078ce9:
	mov -1576(%RBP),%RSP
	add $-1728, %RSP
uuid_0000000000078cec:
	mov -1568(%RBP),%RSP
	add $-1728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078cee
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078ced
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078cf0
uuid_0000000000078cee:
	movq -1728(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_0000000000078cf0:
	mov -1400(%RBP),%RSP
	add $-1728, %RSP
uuid_0000000000078d24:
	mov -960(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_0000000000078d27
uuid_0000000000078d25:
#call function parse-unexpect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078cce
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_unexpect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078d27:
	mov -672(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_0000000000078d2a
uuid_0000000000078d28:
#call function parse-lambda : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call parse_SB_lambda_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078cb2
	jmp uuid_0000000000078cb4
uuid_0000000000078cb2:
	push %RBP
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_0000000000078caf
	jmp uuid_0000000000078cb1
uuid_0000000000078caf:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	jmp uuid_0000000000078cac
	jmp uuid_0000000000078cae
uuid_0000000000078cac:
	movb $1, -984(%rbp)
uuid_0000000000078cae:
	mov -1080(%RBP),%RSP
	add $-1152, %RSP
uuid_0000000000078cb1:
	mov -1000(%RBP),%RSP
	add $-1152, %RSP
uuid_0000000000078cb4:
	mov -992(%RBP),%RSP
	add $-1152, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078cb6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078cb5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078cb8
uuid_0000000000078cb6:
	movq -1152(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_0000000000078cb8:
	mov -824(%RBP),%RSP
	add $-1152, %RSP
uuid_0000000000078d2a:
	mov -384(%RBP),%RSP
	add $-1152, %RSP
	jmp uuid_0000000000078d2d
uuid_0000000000078d2b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
uuid_0000000000078d2d:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_toplevel_CL_ArrowASTListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_0000000000078f79:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f7a
	jmp uuid_0000000000078f7b
uuid_0000000000078f7a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d42
	jmp uuid_0000000000078d44
uuid_0000000000078d42:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078d3f
	jmp uuid_0000000000078d41
uuid_0000000000078d3f:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d39
	jmp uuid_0000000000078d3b
uuid_0000000000078d39:
	push %RBP
	jmp uuid_0000000000078d36
	jmp uuid_0000000000078d38
uuid_0000000000078d36:
	push %RBP
	jmp uuid_0000000000078d33
	jmp uuid_0000000000078d35
uuid_0000000000078d33:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_000000000007610f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d30
	jmp uuid_0000000000078d32
uuid_0000000000078d30:
	movb $1, -472(%rbp)
uuid_0000000000078d32:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_0000000000078d35:
	mov -496(%RBP),%RSP
	add $-512, %RSP
uuid_0000000000078d38:
	mov -488(%RBP),%RSP
	add $-512, %RSP
uuid_0000000000078d3b:
	mov -480(%RBP),%RSP
	add $-512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d3c
	jmp uuid_0000000000078d3e
uuid_0000000000078d3c:
	movb $1, -312(%rbp)
uuid_0000000000078d3e:
	mov -408(%RBP),%RSP
	add $-512, %RSP
uuid_0000000000078d41:
	mov -328(%RBP),%RSP
	add $-512, %RSP
uuid_0000000000078d44:
	mov -320(%RBP),%RSP
	add $-512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f76
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d58
	jmp uuid_0000000000078d5a
uuid_0000000000078d58:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078d55
	jmp uuid_0000000000078d57
uuid_0000000000078d55:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d4f
	jmp uuid_0000000000078d51
uuid_0000000000078d4f:
	push %RBP
	jmp uuid_0000000000078d4c
	jmp uuid_0000000000078d4e
uuid_0000000000078d4c:
	push %RBP
	jmp uuid_0000000000078d49
	jmp uuid_0000000000078d4b
uuid_0000000000078d49:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $uuid_0000000000078d45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d46
	jmp uuid_0000000000078d48
uuid_0000000000078d46:
	movb $1, -760(%rbp)
uuid_0000000000078d48:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000078d4b:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000078d4e:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000078d51:
	mov -768(%RBP),%RSP
	add $-800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d52
	jmp uuid_0000000000078d54
uuid_0000000000078d52:
	movb $1, -600(%rbp)
uuid_0000000000078d54:
	mov -696(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000078d57:
	mov -616(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000078d5a:
	mov -608(%RBP),%RSP
	add $-800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f73
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d98
	jmp uuid_0000000000078d9a
uuid_0000000000078d98:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078d95
	jmp uuid_0000000000078d97
uuid_0000000000078d95:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d8f
	jmp uuid_0000000000078d91
uuid_0000000000078d8f:
	push %RBP
	jmp uuid_0000000000078d8c
	jmp uuid_0000000000078d8e
uuid_0000000000078d8c:
	push %RBP
	jmp uuid_0000000000078d89
	jmp uuid_0000000000078d8b
uuid_0000000000078d89:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_0000000000078d85
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d86
	jmp uuid_0000000000078d88
uuid_0000000000078d86:
	movb $1, -1048(%rbp)
uuid_0000000000078d88:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078d8b:
	mov -1072(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078d8e:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078d91:
	mov -1056(%RBP),%RSP
	add $-1088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d92
	jmp uuid_0000000000078d94
uuid_0000000000078d92:
	movb $1, -888(%rbp)
uuid_0000000000078d94:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078d97:
	mov -904(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000078d9a:
	mov -896(%RBP),%RSP
	add $-1088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f70
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078dd1
	jmp uuid_0000000000078dd3
uuid_0000000000078dd1:
	push %RBP
	mov -1160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078dbb
	jmp uuid_0000000000078dbd
uuid_0000000000078dbb:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078db8
	jmp uuid_0000000000078dba
uuid_0000000000078db8:
	push %RBP
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq $0
	push %RBP
	mov -1424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078db2
	jmp uuid_0000000000078db4
uuid_0000000000078db2:
	push %RBP
	jmp uuid_0000000000078daf
	jmp uuid_0000000000078db1
uuid_0000000000078daf:
	push %RBP
	jmp uuid_0000000000078dac
	jmp uuid_0000000000078dae
uuid_0000000000078dac:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $uuid_0000000000078da8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078da9
	jmp uuid_0000000000078dab
uuid_0000000000078da9:
	movb $1, -1432(%rbp)
uuid_0000000000078dab:
	mov -1464(%RBP),%RSP
	add $-1472, %RSP
uuid_0000000000078dae:
	mov -1456(%RBP),%RSP
	add $-1472, %RSP
uuid_0000000000078db1:
	mov -1448(%RBP),%RSP
	add $-1472, %RSP
uuid_0000000000078db4:
	mov -1440(%RBP),%RSP
	add $-1472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078db5
	jmp uuid_0000000000078db7
uuid_0000000000078db5:
	movb $1, -1272(%rbp)
uuid_0000000000078db7:
	mov -1368(%RBP),%RSP
	add $-1472, %RSP
uuid_0000000000078dba:
	mov -1288(%RBP),%RSP
	add $-1472, %RSP
uuid_0000000000078dbd:
	mov -1280(%RBP),%RSP
	add $-1472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078dce
	jmp uuid_0000000000078dd0
uuid_0000000000078dce:
	push %RBP
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078dc8
	jmp uuid_0000000000078dca
uuid_0000000000078dc8:
	push %RBP
	jmp uuid_0000000000078dc5
	jmp uuid_0000000000078dc7
uuid_0000000000078dc5:
	push %RBP
	jmp uuid_0000000000078dc2
	jmp uuid_0000000000078dc4
uuid_0000000000078dc2:
	push %RBP
	mov -1488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1584(%rbp)
	pushq $uuid_0000000000078dbe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078dbf
	jmp uuid_0000000000078dc1
uuid_0000000000078dbf:
	movb $1, -1544(%rbp)
uuid_0000000000078dc1:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000078dc4:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000078dc7:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000078dca:
	mov -1552(%RBP),%RSP
	add $-1584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078dcb
	jmp uuid_0000000000078dcd
uuid_0000000000078dcb:
	movb $1, -1176(%rbp)
uuid_0000000000078dcd:
	mov -1480(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000078dd0:
	mov -1192(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000078dd3:
	mov -1184(%RBP),%RSP
	add $-1584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f6d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e00
	jmp uuid_0000000000078e02
uuid_0000000000078e00:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078dfd
	jmp uuid_0000000000078dff
uuid_0000000000078dfd:
	push %RBP
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078df7
	jmp uuid_0000000000078df9
uuid_0000000000078df7:
	push %RBP
	jmp uuid_0000000000078df4
	jmp uuid_0000000000078df6
uuid_0000000000078df4:
	push %RBP
	jmp uuid_0000000000078df1
	jmp uuid_0000000000078df3
uuid_0000000000078df1:
	push %RBP
	mov -1776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_0000000000078da8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078dee
	jmp uuid_0000000000078df0
uuid_0000000000078dee:
	movb $1, -1832(%rbp)
uuid_0000000000078df0:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078df3:
	mov -1856(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078df6:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078df9:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078dfa
	jmp uuid_0000000000078dfc
uuid_0000000000078dfa:
	movb $1, -1672(%rbp)
uuid_0000000000078dfc:
	mov -1768(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078dff:
	mov -1688(%RBP),%RSP
	add $-1872, %RSP
uuid_0000000000078e02:
	mov -1680(%RBP),%RSP
	add $-1872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f6a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e70
	jmp uuid_0000000000078e72
uuid_0000000000078e70:
	push %RBP
	mov -1944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e5a
	jmp uuid_0000000000078e5c
uuid_0000000000078e5a:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e44
	jmp uuid_0000000000078e46
uuid_0000000000078e44:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e2f
	jmp uuid_0000000000078e31
uuid_0000000000078e2f:
	push %RBP
	mov -2232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078e2c
	jmp uuid_0000000000078e2e
uuid_0000000000078e2c:
	push %RBP
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq $0
	push %RBP
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e26
	jmp uuid_0000000000078e28
uuid_0000000000078e26:
	push %RBP
	jmp uuid_0000000000078e23
	jmp uuid_0000000000078e25
uuid_0000000000078e23:
	push %RBP
	jmp uuid_0000000000078e20
	jmp uuid_0000000000078e22
uuid_0000000000078e20:
	push %RBP
	mov -2352(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078e1d
	jmp uuid_0000000000078e1f
uuid_0000000000078e1d:
	movb $1, -2408(%rbp)
uuid_0000000000078e1f:
	mov -2440(%RBP),%RSP
	add $-2448, %RSP
uuid_0000000000078e22:
	mov -2432(%RBP),%RSP
	add $-2448, %RSP
uuid_0000000000078e25:
	mov -2424(%RBP),%RSP
	add $-2448, %RSP
uuid_0000000000078e28:
	mov -2416(%RBP),%RSP
	add $-2448, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e29
	jmp uuid_0000000000078e2b
uuid_0000000000078e29:
	movb $1, -2248(%rbp)
uuid_0000000000078e2b:
	mov -2344(%RBP),%RSP
	add $-2448, %RSP
uuid_0000000000078e2e:
	mov -2264(%RBP),%RSP
	add $-2448, %RSP
uuid_0000000000078e31:
	mov -2256(%RBP),%RSP
	add $-2448, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e41
	jmp uuid_0000000000078e43
uuid_0000000000078e41:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e3b
	jmp uuid_0000000000078e3d
uuid_0000000000078e3b:
	push %RBP
	jmp uuid_0000000000078e38
	jmp uuid_0000000000078e3a
uuid_0000000000078e38:
	push %RBP
	jmp uuid_0000000000078e35
	jmp uuid_0000000000078e37
uuid_0000000000078e35:
	push %RBP
	mov -2464(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078e32
	jmp uuid_0000000000078e34
uuid_0000000000078e32:
	movb $1, -2520(%rbp)
uuid_0000000000078e34:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078e37:
	mov -2544(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078e3a:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078e3d:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e3e
	jmp uuid_0000000000078e40
uuid_0000000000078e3e:
	movb $1, -2152(%rbp)
uuid_0000000000078e40:
	mov -2456(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078e43:
	mov -2168(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078e46:
	mov -2160(%RBP),%RSP
	add $-2560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e57
	jmp uuid_0000000000078e59
uuid_0000000000078e57:
	push %RBP
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e51
	jmp uuid_0000000000078e53
uuid_0000000000078e51:
	push %RBP
	jmp uuid_0000000000078e4e
	jmp uuid_0000000000078e50
uuid_0000000000078e4e:
	push %RBP
	jmp uuid_0000000000078e4b
	jmp uuid_0000000000078e4d
uuid_0000000000078e4b:
	push %RBP
	mov -2576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $uuid_0000000000078e47
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e48
	jmp uuid_0000000000078e4a
uuid_0000000000078e48:
	movb $1, -2632(%rbp)
uuid_0000000000078e4a:
	mov -2664(%RBP),%RSP
	add $-2672, %RSP
uuid_0000000000078e4d:
	mov -2656(%RBP),%RSP
	add $-2672, %RSP
uuid_0000000000078e50:
	mov -2648(%RBP),%RSP
	add $-2672, %RSP
uuid_0000000000078e53:
	mov -2640(%RBP),%RSP
	add $-2672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e54
	jmp uuid_0000000000078e56
uuid_0000000000078e54:
	movb $1, -2056(%rbp)
uuid_0000000000078e56:
	mov -2568(%RBP),%RSP
	add $-2672, %RSP
uuid_0000000000078e59:
	mov -2072(%RBP),%RSP
	add $-2672, %RSP
uuid_0000000000078e5c:
	mov -2064(%RBP),%RSP
	add $-2672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e6d
	jmp uuid_0000000000078e6f
uuid_0000000000078e6d:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e67
	jmp uuid_0000000000078e69
uuid_0000000000078e67:
	push %RBP
	jmp uuid_0000000000078e64
	jmp uuid_0000000000078e66
uuid_0000000000078e64:
	push %RBP
	jmp uuid_0000000000078e61
	jmp uuid_0000000000078e63
uuid_0000000000078e61:
	push %RBP
	mov -2688(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq $uuid_0000000000078e5d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e5e
	jmp uuid_0000000000078e60
uuid_0000000000078e5e:
	movb $1, -2744(%rbp)
uuid_0000000000078e60:
	mov -2776(%RBP),%RSP
	add $-2784, %RSP
uuid_0000000000078e63:
	mov -2768(%RBP),%RSP
	add $-2784, %RSP
uuid_0000000000078e66:
	mov -2760(%RBP),%RSP
	add $-2784, %RSP
uuid_0000000000078e69:
	mov -2752(%RBP),%RSP
	add $-2784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e6a
	jmp uuid_0000000000078e6c
uuid_0000000000078e6a:
	movb $1, -1960(%rbp)
uuid_0000000000078e6c:
	mov -2680(%RBP),%RSP
	add $-2784, %RSP
uuid_0000000000078e6f:
	mov -1976(%RBP),%RSP
	add $-2784, %RSP
uuid_0000000000078e72:
	mov -1968(%RBP),%RSP
	add $-2784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f67
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078eb8
	jmp uuid_0000000000078eba
uuid_0000000000078eb8:
	push %RBP
	mov -2856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ea2
	jmp uuid_0000000000078ea4
uuid_0000000000078ea2:
	push %RBP
	mov -2952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e8d
	jmp uuid_0000000000078e8f
uuid_0000000000078e8d:
	push %RBP
	mov -3048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078e8a
	jmp uuid_0000000000078e8c
uuid_0000000000078e8a:
	push %RBP
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e84
	jmp uuid_0000000000078e86
uuid_0000000000078e84:
	push %RBP
	jmp uuid_0000000000078e81
	jmp uuid_0000000000078e83
uuid_0000000000078e81:
	push %RBP
	jmp uuid_0000000000078e7e
	jmp uuid_0000000000078e80
uuid_0000000000078e7e:
	push %RBP
	mov -3168(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078e7b
	jmp uuid_0000000000078e7d
uuid_0000000000078e7b:
	movb $1, -3224(%rbp)
uuid_0000000000078e7d:
	mov -3256(%RBP),%RSP
	add $-3264, %RSP
uuid_0000000000078e80:
	mov -3248(%RBP),%RSP
	add $-3264, %RSP
uuid_0000000000078e83:
	mov -3240(%RBP),%RSP
	add $-3264, %RSP
uuid_0000000000078e86:
	mov -3232(%RBP),%RSP
	add $-3264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e87
	jmp uuid_0000000000078e89
uuid_0000000000078e87:
	movb $1, -3064(%rbp)
uuid_0000000000078e89:
	mov -3160(%RBP),%RSP
	add $-3264, %RSP
uuid_0000000000078e8c:
	mov -3080(%RBP),%RSP
	add $-3264, %RSP
uuid_0000000000078e8f:
	mov -3072(%RBP),%RSP
	add $-3264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3064(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e9f
	jmp uuid_0000000000078ea1
uuid_0000000000078e9f:
	push %RBP
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq $0
	push %RBP
	mov -3328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e99
	jmp uuid_0000000000078e9b
uuid_0000000000078e99:
	push %RBP
	jmp uuid_0000000000078e96
	jmp uuid_0000000000078e98
uuid_0000000000078e96:
	push %RBP
	jmp uuid_0000000000078e93
	jmp uuid_0000000000078e95
uuid_0000000000078e93:
	push %RBP
	mov -3280(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078e90
	jmp uuid_0000000000078e92
uuid_0000000000078e90:
	movb $1, -3336(%rbp)
uuid_0000000000078e92:
	mov -3368(%RBP),%RSP
	add $-3376, %RSP
uuid_0000000000078e95:
	mov -3360(%RBP),%RSP
	add $-3376, %RSP
uuid_0000000000078e98:
	mov -3352(%RBP),%RSP
	add $-3376, %RSP
uuid_0000000000078e9b:
	mov -3344(%RBP),%RSP
	add $-3376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e9c
	jmp uuid_0000000000078e9e
uuid_0000000000078e9c:
	movb $1, -2968(%rbp)
uuid_0000000000078e9e:
	mov -3272(%RBP),%RSP
	add $-3376, %RSP
uuid_0000000000078ea1:
	mov -2984(%RBP),%RSP
	add $-3376, %RSP
uuid_0000000000078ea4:
	mov -2976(%RBP),%RSP
	add $-3376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078eb5
	jmp uuid_0000000000078eb7
uuid_0000000000078eb5:
	push %RBP
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq $0
	push %RBP
	mov -3440(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078eaf
	jmp uuid_0000000000078eb1
uuid_0000000000078eaf:
	push %RBP
	jmp uuid_0000000000078eac
	jmp uuid_0000000000078eae
uuid_0000000000078eac:
	push %RBP
	jmp uuid_0000000000078ea9
	jmp uuid_0000000000078eab
uuid_0000000000078ea9:
	push %RBP
	mov -3392(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq $uuid_0000000000078ea5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ea6
	jmp uuid_0000000000078ea8
uuid_0000000000078ea6:
	movb $1, -3448(%rbp)
uuid_0000000000078ea8:
	mov -3480(%RBP),%RSP
	add $-3488, %RSP
uuid_0000000000078eab:
	mov -3472(%RBP),%RSP
	add $-3488, %RSP
uuid_0000000000078eae:
	mov -3464(%RBP),%RSP
	add $-3488, %RSP
uuid_0000000000078eb1:
	mov -3456(%RBP),%RSP
	add $-3488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078eb2
	jmp uuid_0000000000078eb4
uuid_0000000000078eb2:
	movb $1, -2872(%rbp)
uuid_0000000000078eb4:
	mov -3384(%RBP),%RSP
	add $-3488, %RSP
uuid_0000000000078eb7:
	mov -2888(%RBP),%RSP
	add $-3488, %RSP
uuid_0000000000078eba:
	mov -2880(%RBP),%RSP
	add $-3488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f64
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ee3
	jmp uuid_0000000000078ee5
uuid_0000000000078ee3:
	push %RBP
	mov -3560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ecd
	jmp uuid_0000000000078ecf
uuid_0000000000078ecd:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078eca
	jmp uuid_0000000000078ecc
uuid_0000000000078eca:
	push %RBP
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ec4
	jmp uuid_0000000000078ec6
uuid_0000000000078ec4:
	push %RBP
	jmp uuid_0000000000078ec1
	jmp uuid_0000000000078ec3
uuid_0000000000078ec1:
	push %RBP
	jmp uuid_0000000000078ebe
	jmp uuid_0000000000078ec0
uuid_0000000000078ebe:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078ebb
	jmp uuid_0000000000078ebd
uuid_0000000000078ebb:
	movb $1, -3832(%rbp)
uuid_0000000000078ebd:
	mov -3864(%RBP),%RSP
	add $-3872, %RSP
uuid_0000000000078ec0:
	mov -3856(%RBP),%RSP
	add $-3872, %RSP
uuid_0000000000078ec3:
	mov -3848(%RBP),%RSP
	add $-3872, %RSP
uuid_0000000000078ec6:
	mov -3840(%RBP),%RSP
	add $-3872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ec7
	jmp uuid_0000000000078ec9
uuid_0000000000078ec7:
	movb $1, -3672(%rbp)
uuid_0000000000078ec9:
	mov -3768(%RBP),%RSP
	add $-3872, %RSP
uuid_0000000000078ecc:
	mov -3688(%RBP),%RSP
	add $-3872, %RSP
uuid_0000000000078ecf:
	mov -3680(%RBP),%RSP
	add $-3872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ee0
	jmp uuid_0000000000078ee2
uuid_0000000000078ee0:
	push %RBP
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078eda
	jmp uuid_0000000000078edc
uuid_0000000000078eda:
	push %RBP
	jmp uuid_0000000000078ed7
	jmp uuid_0000000000078ed9
uuid_0000000000078ed7:
	push %RBP
	jmp uuid_0000000000078ed4
	jmp uuid_0000000000078ed6
uuid_0000000000078ed4:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3984(%rbp)
	pushq $uuid_0000000000078ed0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ed1
	jmp uuid_0000000000078ed3
uuid_0000000000078ed1:
	movb $1, -3944(%rbp)
uuid_0000000000078ed3:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
uuid_0000000000078ed6:
	mov -3968(%RBP),%RSP
	add $-3984, %RSP
uuid_0000000000078ed9:
	mov -3960(%RBP),%RSP
	add $-3984, %RSP
uuid_0000000000078edc:
	mov -3952(%RBP),%RSP
	add $-3984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3944(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078edd
	jmp uuid_0000000000078edf
uuid_0000000000078edd:
	movb $1, -3576(%rbp)
uuid_0000000000078edf:
	mov -3880(%RBP),%RSP
	add $-3984, %RSP
uuid_0000000000078ee2:
	mov -3592(%RBP),%RSP
	add $-3984, %RSP
uuid_0000000000078ee5:
	mov -3584(%RBP),%RSP
	add $-3984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f61
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f17
	jmp uuid_0000000000078f19
uuid_0000000000078f17:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f01
	jmp uuid_0000000000078f03
uuid_0000000000078f01:
	push %RBP
	mov -4152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ef8
	jmp uuid_0000000000078efa
uuid_0000000000078ef8:
	push %RBP
	mov -4248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078ef5
	jmp uuid_0000000000078ef7
uuid_0000000000078ef5:
	push %RBP
	pushq -4192(%RBP)
	pushq -4200(%RBP)
	pushq -4208(%RBP)
	pushq -4216(%RBP)
	pushq -4224(%RBP)
	pushq -4232(%RBP)
	pushq -4240(%RBP)
	pushq $0
	push %RBP
	mov -4416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078eef
	jmp uuid_0000000000078ef1
uuid_0000000000078eef:
	push %RBP
	jmp uuid_0000000000078eec
	jmp uuid_0000000000078eee
uuid_0000000000078eec:
	push %RBP
	jmp uuid_0000000000078ee9
	jmp uuid_0000000000078eeb
uuid_0000000000078ee9:
	push %RBP
	mov -4368(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078ee6
	jmp uuid_0000000000078ee8
uuid_0000000000078ee6:
	movb $1, -4424(%rbp)
uuid_0000000000078ee8:
	mov -4456(%RBP),%RSP
	add $-4464, %RSP
uuid_0000000000078eeb:
	mov -4448(%RBP),%RSP
	add $-4464, %RSP
uuid_0000000000078eee:
	mov -4440(%RBP),%RSP
	add $-4464, %RSP
uuid_0000000000078ef1:
	mov -4432(%RBP),%RSP
	add $-4464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4424(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ef2
	jmp uuid_0000000000078ef4
uuid_0000000000078ef2:
	movb $1, -4264(%rbp)
uuid_0000000000078ef4:
	mov -4360(%RBP),%RSP
	add $-4464, %RSP
uuid_0000000000078ef7:
	mov -4280(%RBP),%RSP
	add $-4464, %RSP
uuid_0000000000078efa:
	mov -4272(%RBP),%RSP
	add $-4464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078efe
	jmp uuid_0000000000078f00
uuid_0000000000078efe:
	push %RBP
	pushq -4096(%RBP)
	pushq -4104(%RBP)
	pushq -4112(%RBP)
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq -4144(%RBP)
	jmp uuid_0000000000078efb
	jmp uuid_0000000000078efd
uuid_0000000000078efb:
	movb $1, -4168(%rbp)
uuid_0000000000078efd:
	mov -4472(%RBP),%RSP
	add $-4528, %RSP
uuid_0000000000078f00:
	mov -4184(%RBP),%RSP
	add $-4528, %RSP
uuid_0000000000078f03:
	mov -4176(%RBP),%RSP
	add $-4528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f14
	jmp uuid_0000000000078f16
uuid_0000000000078f14:
	push %RBP
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	pushq -4040(%RBP)
	pushq -4048(%RBP)
	pushq $0
	push %RBP
	mov -4592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f0e
	jmp uuid_0000000000078f10
uuid_0000000000078f0e:
	push %RBP
	jmp uuid_0000000000078f0b
	jmp uuid_0000000000078f0d
uuid_0000000000078f0b:
	push %RBP
	jmp uuid_0000000000078f08
	jmp uuid_0000000000078f0a
uuid_0000000000078f08:
	push %RBP
	mov -4544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4640(%rbp)
	pushq $uuid_0000000000078f04
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f05
	jmp uuid_0000000000078f07
uuid_0000000000078f05:
	movb $1, -4600(%rbp)
uuid_0000000000078f07:
	mov -4632(%RBP),%RSP
	add $-4640, %RSP
uuid_0000000000078f0a:
	mov -4624(%RBP),%RSP
	add $-4640, %RSP
uuid_0000000000078f0d:
	mov -4616(%RBP),%RSP
	add $-4640, %RSP
uuid_0000000000078f10:
	mov -4608(%RBP),%RSP
	add $-4640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f11
	jmp uuid_0000000000078f13
uuid_0000000000078f11:
	movb $1, -4072(%rbp)
uuid_0000000000078f13:
	mov -4536(%RBP),%RSP
	add $-4640, %RSP
uuid_0000000000078f16:
	mov -4088(%RBP),%RSP
	add $-4640, %RSP
uuid_0000000000078f19:
	mov -4080(%RBP),%RSP
	add $-4640, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4072(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f5e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f3a
	jmp uuid_0000000000078f3c
uuid_0000000000078f3a:
	push %RBP
	mov -4712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4816(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f31
	jmp uuid_0000000000078f33
uuid_0000000000078f31:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078f2e
	jmp uuid_0000000000078f30
uuid_0000000000078f2e:
	push %RBP
	pushq -4752(%RBP)
	pushq -4760(%RBP)
	pushq -4768(%RBP)
	pushq -4776(%RBP)
	pushq -4784(%RBP)
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq $0
	push %RBP
	mov -4976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f28
	jmp uuid_0000000000078f2a
uuid_0000000000078f28:
	push %RBP
	jmp uuid_0000000000078f25
	jmp uuid_0000000000078f27
uuid_0000000000078f25:
	push %RBP
	jmp uuid_0000000000078f22
	jmp uuid_0000000000078f24
uuid_0000000000078f22:
	push %RBP
	mov -4928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5024(%rbp)
	pushq $uuid_0000000000078f1e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f1f
	jmp uuid_0000000000078f21
uuid_0000000000078f1f:
	movb $1, -4984(%rbp)
uuid_0000000000078f21:
	mov -5016(%RBP),%RSP
	add $-5024, %RSP
uuid_0000000000078f24:
	mov -5008(%RBP),%RSP
	add $-5024, %RSP
uuid_0000000000078f27:
	mov -5000(%RBP),%RSP
	add $-5024, %RSP
uuid_0000000000078f2a:
	mov -4992(%RBP),%RSP
	add $-5024, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f2b
	jmp uuid_0000000000078f2d
uuid_0000000000078f2b:
	movb $1, -4824(%rbp)
uuid_0000000000078f2d:
	mov -4920(%RBP),%RSP
	add $-5024, %RSP
uuid_0000000000078f30:
	mov -4840(%RBP),%RSP
	add $-5024, %RSP
uuid_0000000000078f33:
	mov -4832(%RBP),%RSP
	add $-5024, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4824(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f37
	jmp uuid_0000000000078f39
uuid_0000000000078f37:
	push %RBP
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	pushq -4688(%RBP)
	pushq -4696(%RBP)
	pushq -4704(%RBP)
	jmp uuid_0000000000078f34
	jmp uuid_0000000000078f36
uuid_0000000000078f34:
	movb $1, -4728(%rbp)
uuid_0000000000078f36:
	mov -5032(%RBP),%RSP
	add $-5088, %RSP
uuid_0000000000078f39:
	mov -4744(%RBP),%RSP
	add $-5088, %RSP
uuid_0000000000078f3c:
	mov -4736(%RBP),%RSP
	add $-5088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f5b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_0000000000078f58
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078f57
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078f5a
uuid_0000000000078f58:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq $0
	push %RBP
	mov -5480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f50
	jmp uuid_0000000000078f52
uuid_0000000000078f50:
	push %RBP
	pushq -5408(%RBP)
	pushq -5416(%RBP)
	pushq -5424(%RBP)
	pushq -5432(%RBP)
	pushq -5440(%RBP)
	pushq -5448(%RBP)
	pushq -5456(%RBP)
	pushq -5464(%RBP)
	pushq -5472(%RBP)
	jmp uuid_0000000000078f4d
	jmp uuid_0000000000078f4f
uuid_0000000000078f4d:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	pushq -5400(%RBP)
	jmp uuid_0000000000078f4a
	jmp uuid_0000000000078f4c
uuid_0000000000078f4a:
	movb $1, -5488(%rbp)
uuid_0000000000078f4c:
	mov -5584(%RBP),%RSP
	add $-5656, %RSP
uuid_0000000000078f4f:
	mov -5504(%RBP),%RSP
	add $-5656, %RSP
uuid_0000000000078f52:
	mov -5496(%RBP),%RSP
	add $-5656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f54
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078f53
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078f56
uuid_0000000000078f54:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f56:
	mov -5328(%RBP),%RSP
	add $-5656, %RSP
uuid_0000000000078f5a:
	mov -5096(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_0000000000078f5d
uuid_0000000000078f5b:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f43
	jmp uuid_0000000000078f45
uuid_0000000000078f43:
	push %RBP
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	jmp uuid_0000000000078f40
	jmp uuid_0000000000078f42
uuid_0000000000078f40:
	push %RBP
	pushq -5256(%RBP)
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	pushq -5288(%RBP)
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	pushq -5320(%RBP)
	jmp uuid_0000000000078f3d
	jmp uuid_0000000000078f3f
uuid_0000000000078f3d:
	movb $1, -5408(%rbp)
uuid_0000000000078f3f:
	mov -5504(%RBP),%RSP
	add $-5576, %RSP
uuid_0000000000078f42:
	mov -5424(%RBP),%RSP
	add $-5576, %RSP
uuid_0000000000078f45:
	mov -5416(%RBP),%RSP
	add $-5576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f47
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078f46
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078f49
uuid_0000000000078f47:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f49:
	mov -5248(%RBP),%RSP
	add $-5576, %RSP
uuid_0000000000078f5d:
	mov -4648(%RBP),%RSP
	add $-5576, %RSP
	jmp uuid_0000000000078f60
uuid_0000000000078f5e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000078f1a
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078f1b
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000078f1b
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078f1c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000078f1c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078f1d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000078f1d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078f1b
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000078f1b
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078f1d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000078f1d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4464(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4464(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000764a4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
	pushq $5
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -4352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -4344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -4336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -4328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -4320(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -4312(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -4304(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -4296(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -4288(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f60:
	mov -3992(%RBP),%RSP
	add $-4640, %RSP
	jmp uuid_0000000000078f63
uuid_0000000000078f61:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3760(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3752(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3744(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3736(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3728(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3720(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3712(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3704(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3696(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f63:
	mov -3496(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_0000000000078f66
uuid_0000000000078f64:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3376(%rbp)
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3152(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3112(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3104(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3096(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3088(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f66:
	mov -2792(%RBP),%RSP
	add $-3488, %RSP
	jmp uuid_0000000000078f69
uuid_0000000000078f67:
#call function close : Arrow<SfxList,Array<SfxList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SfxListSfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2448(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076981
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000774fc
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	movq -2336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f69:
	mov -1880(%RBP),%RSP
	add $-2784, %RSP
	jmp uuid_0000000000078f6c
uuid_0000000000078f6a:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq $0
	push %RBP
	mov -2184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e09
	jmp uuid_0000000000078e0b
uuid_0000000000078e09:
	push %RBP
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	jmp uuid_0000000000078e06
	jmp uuid_0000000000078e08
uuid_0000000000078e06:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	jmp uuid_0000000000078e03
	jmp uuid_0000000000078e05
uuid_0000000000078e03:
	movb $1, -2192(%rbp)
uuid_0000000000078e05:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000078e08:
	mov -2208(%RBP),%RSP
	add $-2360, %RSP
uuid_0000000000078e0b:
	mov -2200(%RBP),%RSP
	add $-2360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e1a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078e19
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078e1c
uuid_0000000000078e1a:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078e12
	jmp uuid_0000000000078e14
uuid_0000000000078e12:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_0000000000078e0f
	jmp uuid_0000000000078e11
uuid_0000000000078e0f:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_0000000000078e0c
	jmp uuid_0000000000078e0e
uuid_0000000000078e0c:
	movb $1, -2680(%rbp)
uuid_0000000000078e0e:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078e11:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078e14:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078e16
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078e15
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078e18
uuid_0000000000078e16:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078e18:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078e1c:
	mov -2032(%RBP),%RSP
	add $-2848, %RSP
uuid_0000000000078f6c:
	mov -1592(%RBP),%RSP
	add $-2848, %RSP
	jmp uuid_0000000000078f6f
uuid_0000000000078f6d:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078dda
	jmp uuid_0000000000078ddc
uuid_0000000000078dda:
	push %RBP
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	jmp uuid_0000000000078dd7
	jmp uuid_0000000000078dd9
uuid_0000000000078dd7:
	push %RBP
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_0000000000078dd4
	jmp uuid_0000000000078dd6
uuid_0000000000078dd4:
	movb $1, -1904(%rbp)
uuid_0000000000078dd6:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_0000000000078dd9:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_0000000000078ddc:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078deb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078dea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078ded
uuid_0000000000078deb:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq $0
	push %RBP
	mov -2384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078de3
	jmp uuid_0000000000078de5
uuid_0000000000078de3:
	push %RBP
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	jmp uuid_0000000000078de0
	jmp uuid_0000000000078de2
uuid_0000000000078de0:
	push %RBP
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	jmp uuid_0000000000078ddd
	jmp uuid_0000000000078ddf
uuid_0000000000078ddd:
	movb $1, -2392(%rbp)
uuid_0000000000078ddf:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078de2:
	mov -2408(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000078de5:
	mov -2400(%RBP),%RSP
	add $-2560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078de7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078de6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078de9
uuid_0000000000078de7:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function index-tag-is-fragment : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -2480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078de9:
	mov -2232(%RBP),%RSP
	add $-2584, %RSP
uuid_0000000000078ded:
	mov -1744(%RBP),%RSP
	add $-2584, %RSP
uuid_0000000000078f6f:
	mov -1096(%RBP),%RSP
	add $-2584, %RSP
	jmp uuid_0000000000078f72
uuid_0000000000078f70:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078da1
	jmp uuid_0000000000078da3
uuid_0000000000078da1:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	jmp uuid_0000000000078d9e
	jmp uuid_0000000000078da0
uuid_0000000000078d9e:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_0000000000078d9b
	jmp uuid_0000000000078d9d
uuid_0000000000078d9b:
	movb $1, -1408(%rbp)
uuid_0000000000078d9d:
	mov -1504(%RBP),%RSP
	add $-1576, %RSP
uuid_0000000000078da0:
	mov -1424(%RBP),%RSP
	add $-1576, %RSP
uuid_0000000000078da3:
	mov -1416(%RBP),%RSP
	add $-1576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078da5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078da4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078da7
uuid_0000000000078da5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078da7:
	mov -1248(%RBP),%RSP
	add $-1576, %RSP
uuid_0000000000078f72:
	mov -808(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_0000000000078f75
uuid_0000000000078f73:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d61
	jmp uuid_0000000000078d63
uuid_0000000000078d61:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_0000000000078d5e
	jmp uuid_0000000000078d60
uuid_0000000000078d5e:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_0000000000078d5b
	jmp uuid_0000000000078d5d
uuid_0000000000078d5b:
	movb $1, -1120(%rbp)
uuid_0000000000078d5d:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000078d60:
	mov -1136(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000078d63:
	mov -1128(%RBP),%RSP
	add $-1288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d82
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078d81
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078d84
uuid_0000000000078d82:
#call function take-one-expr : Arrow<List<Token>,Tuple<List<Token>,List<Token>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	mov %RBX, %RBP
	call take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d6a
	jmp uuid_0000000000078d6c
uuid_0000000000078d6a:
	push %RBP
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	jmp uuid_0000000000078d67
	jmp uuid_0000000000078d69
uuid_0000000000078d67:
	push %RBP
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	jmp uuid_0000000000078d64
	jmp uuid_0000000000078d66
uuid_0000000000078d64:
	movb $1, -1608(%rbp)
uuid_0000000000078d66:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000078d69:
	mov -1624(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000078d6c:
	mov -1616(%RBP),%RSP
	add $-1776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d7e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078d7d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078d80
uuid_0000000000078d7e:
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	push %RBP
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq $0
	push %RBP
	mov -2000(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d73
	jmp uuid_0000000000078d75
uuid_0000000000078d73:
	push %RBP
	mov -1992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000078d70
	jmp uuid_0000000000078d72
uuid_0000000000078d70:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078d6d
	jmp uuid_0000000000078d6f
uuid_0000000000078d6d:
	movb $1, -2008(%rbp)
uuid_0000000000078d6f:
	mov -2104(%RBP),%RSP
	add $-2176, %RSP
uuid_0000000000078d72:
	mov -2024(%RBP),%RSP
	add $-2176, %RSP
uuid_0000000000078d75:
	mov -2016(%RBP),%RSP
	add $-2176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078d7a
	push %RBP
	jmp uuid_0000000000078d77
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078d76
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078d79
uuid_0000000000078d77:
uuid_0000000000078d79:
	mov -2184(%RBP),%RSP
	add $-2184, %RSP
	jmp uuid_0000000000078d7c
uuid_0000000000078d7a:
	movq -2096(%rbp), %r15
	movq %r15, -1848(%rbp)
	movq -2088(%rbp), %r15
	movq %r15, -1840(%rbp)
	movq -2080(%rbp), %r15
	movq %r15, -1832(%rbp)
	movq -2072(%rbp), %r15
	movq %r15, -1824(%rbp)
	movq -2064(%rbp), %r15
	movq %r15, -1816(%rbp)
	movq -2056(%rbp), %r15
	movq %r15, -1808(%rbp)
	movq -2048(%rbp), %r15
	movq %r15, -1800(%rbp)
	movq -2040(%rbp), %r15
	movq %r15, -1792(%rbp)
	movq -2032(%rbp), %r15
	movq %r15, -1784(%rbp)
uuid_0000000000078d7c:
	mov -1928(%RBP),%RSP
	add $-2176, %RSP
#call function close : Arrow<MacroList,Array<MacroList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_MacroListMacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	movq -1696(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078d80:
	mov -1448(%RBP),%RSP
	add $-2176, %RSP
uuid_0000000000078d84:
	mov -960(%RBP),%RSP
	add $-2176, %RSP
uuid_0000000000078f75:
	mov -520(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_0000000000078f78
uuid_0000000000078f76:
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000078f78:
	mov -232(%RBP),%RSP
	add $-512, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078f79
uuid_0000000000078f7b:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_0000000000078f94:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000078f95
	jmp uuid_0000000000078f96
uuid_0000000000078f95:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f8b
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $62
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f88
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f85
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f82
	push %RBP
	jmp uuid_0000000000078f7f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078f7e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078f81
uuid_0000000000078f7f:
uuid_0000000000078f81:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000078f84
uuid_0000000000078f82:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_0000000000078f84:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000078f87
uuid_0000000000078f85:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_0000000000078f87:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000078f8a
uuid_0000000000078f88:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_0000000000078f8a:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000078f8d
uuid_0000000000078f8b:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_0000000000078f8d:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078f91
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_0000000000078f93
uuid_0000000000078f91:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $44
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f8e
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_0000000000078f90
uuid_0000000000078f8e:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000078f90:
	mov -128(%RBP),%RSP
	add $-128, %RSP
uuid_0000000000078f93:
	mov -120(%RBP),%RSP
	add $-128, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078f94
uuid_0000000000078f96:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_SB_single_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_0000000000078ff5:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000078ff6
	jmp uuid_0000000000078ff7
uuid_0000000000078ff6:
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078ff2
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fc8
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $62
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fc5
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fc2
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fbf
	push %RBP
	jmp uuid_0000000000078fbc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078fbb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078fbe
uuid_0000000000078fbc:
uuid_0000000000078fbe:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000078fc1
uuid_0000000000078fbf:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000078fc1:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000078fc4
uuid_0000000000078fc2:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000078fc4:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000078fc7
uuid_0000000000078fc5:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000078fc7:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000078fca
uuid_0000000000078fc8:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000078fca:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078fef
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_0000000000078ff1
uuid_0000000000078fef:
	pushq -32(%rbp)
	push %RBP
	pushq -128(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fec
	push %RBP
	pushq -128(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fe9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078fe8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078feb
uuid_0000000000078fe9:
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078fd4
	jmp uuid_0000000000078fd6
uuid_0000000000078fd4:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078fd1
	jmp uuid_0000000000078fd3
uuid_0000000000078fd1:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078fce
	jmp uuid_0000000000078fd0
uuid_0000000000078fce:
	movb $1, -224(%rbp)
uuid_0000000000078fd0:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000078fd3:
	mov -240(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000078fd6:
	mov -232(%RBP),%RSP
	add $-296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fe5
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000078fda
	jmp uuid_0000000000078fdc
uuid_0000000000078fda:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000078fd7
	jmp uuid_0000000000078fd9
uuid_0000000000078fd7:
	movb $1, -336(%rbp)
uuid_0000000000078fd9:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000078fdc:
	mov -344(%RBP),%RSP
	add $-360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fe2
	push %RBP
	jmp uuid_0000000000078fdf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078fde
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078fe1
uuid_0000000000078fdf:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000078fdd
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000078fe1:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_0000000000078fe4
uuid_0000000000078fe2:
	pushq -360(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000078fe4:
	mov -304(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_0000000000078fe7
uuid_0000000000078fe5:
	pushq -296(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000078fe7:
	mov -192(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000078feb:
	mov -152(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000078fee
uuid_0000000000078fec:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fcb
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000764d8
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_0000000000078fcd
uuid_0000000000078fcb:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000764d8
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000078fcd:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000078fee:
	mov -136(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000078ff1:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000078ff4
uuid_0000000000078ff2:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fb8
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fb5
	push %RBP
	pushq -96(%rbp)
	jmp uuid_0000000000078fb2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000078fb1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000078fb4
uuid_0000000000078fb2:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000078fb4:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000078fb7
uuid_0000000000078fb5:
	movb $60, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fae
	jmp uuid_0000000000078fb0
uuid_0000000000078fae:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_00000000000760b0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fab
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fa8
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_0000000000078faa
uuid_0000000000078fa8:
	pushq $0
	pushq -144(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000078faa:
	mov -160(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000078fad
uuid_0000000000078fab:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000078fad:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000078fb0:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000078fb7:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000078fba
uuid_0000000000078fb8:
	movb $91, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fa1
	jmp uuid_0000000000078fa3
uuid_0000000000078fa1:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_00000000000760b0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f9e
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078f9b
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_0000000000078f9d
uuid_0000000000078f9b:
	pushq $0
	pushq -128(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000078f9d:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000078fa0
uuid_0000000000078f9e:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000078fa0:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000078fa3:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000078fba:
	mov -104(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000078ff4:
	mov -88(%RBP),%RSP
	add $-136, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000078ff5
uuid_0000000000078ff7:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079002
	jmp uuid_0000000000079004
uuid_0000000000079002:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_00000000000760b0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078fff
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000078ffc
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_0000000000078ffe
uuid_0000000000078ffc:
	pushq $0
	pushq -96(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000078ffe:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000079001
uuid_0000000000078fff:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000079001:
	mov -104(%RBP),%RSP
	add $-104, %RSP
uuid_0000000000079004:
	mov -88(%RBP),%RSP
	add $-104, %RSP
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_CL_ArrowTypeString:
	pushq $0
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079005
	jmp uuid_0000000000079007
uuid_0000000000079005:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_0000000000076298
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movb $1, -24(%rbp)
uuid_0000000000079007:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007902e:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007902f
	jmp uuid_0000000000079030
uuid_000000000007902f:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $60
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079015
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $62
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079012
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $91
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007900f
	push %RBP
	pushq -96(%rbp)
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $93
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007900c
	push %RBP
	jmp uuid_0000000000079009
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079008
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007900b
uuid_0000000000079009:
uuid_000000000007900b:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007900e
uuid_000000000007900c:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007900e:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000079011
uuid_000000000007900f:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079011:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000079014
uuid_0000000000079012:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079014:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000079017
uuid_0000000000079015:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079017:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007902b
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007902d
uuid_000000000007902b:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	pushq $43
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079028
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007902a
uuid_0000000000079028:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007901e
	jmp uuid_0000000000079020
uuid_000000000007901e:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007901b
	jmp uuid_000000000007901d
uuid_000000000007901b:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079018
	jmp uuid_000000000007901a
uuid_0000000000079018:
	movb $1, -192(%rbp)
uuid_000000000007901a:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007901d:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000079020:
	mov -200(%RBP),%RSP
	add $-264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079025
	push %RBP
	jmp uuid_0000000000079022
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079021
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079024
uuid_0000000000079022:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_0000000000079024:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_0000000000079027
uuid_0000000000079025:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -288(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_0000000000079027:
	mov -160(%RBP),%RSP
	add $-288, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007902a:
	mov -128(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007902d:
	mov -120(%RBP),%RSP
	add $-288, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007902e
uuid_0000000000079030:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079041
	jmp uuid_0000000000079043
uuid_0000000000079041:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079037
	jmp uuid_0000000000079039
uuid_0000000000079037:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079034
	jmp uuid_0000000000079036
uuid_0000000000079034:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079031
	jmp uuid_0000000000079033
uuid_0000000000079031:
	movb $1, -160(%rbp)
uuid_0000000000079033:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000079036:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_0000000000079039:
	mov -168(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007903e
	push %RBP
	jmp uuid_000000000007903b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007903a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007903d
uuid_000000000007903b:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007903d:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000079040
uuid_000000000007903e:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -256(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_0000000000079040:
	mov -128(%RBP),%RSP
	add $-256, %RSP
uuid_0000000000079043:
	mov -96(%RBP),%RSP
	add $-256, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079048
	jmp uuid_000000000007904a
uuid_0000000000079048:
	pushq $uuid_0000000000076298
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007904a:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	subq $24, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_unexpect_CL_ArrowNilConsListTokenString:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_CL_ArrowNilNil:
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
remove_SB_parens_CL_ArrowListTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079065
	jmp uuid_0000000000079067
uuid_0000000000079065:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079062
	jmp uuid_0000000000079064
uuid_0000000000079062:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007905c
	jmp uuid_000000000007905e
uuid_000000000007905c:
	push %RBP
	jmp uuid_0000000000079059
	jmp uuid_000000000007905b
uuid_0000000000079059:
	push %RBP
	jmp uuid_0000000000079056
	jmp uuid_0000000000079058
uuid_0000000000079056:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_0000000000075ef6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079053
	jmp uuid_0000000000079055
uuid_0000000000079053:
	movb $1, -400(%rbp)
uuid_0000000000079055:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000079058:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007905b:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007905e:
	mov -408(%RBP),%RSP
	add $-440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007905f
	jmp uuid_0000000000079061
uuid_000000000007905f:
	movb $1, -240(%rbp)
uuid_0000000000079061:
	mov -336(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000079064:
	mov -256(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000079067:
	mov -248(%RBP),%RSP
	add $-440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079093
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079092
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079095
uuid_0000000000079093:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007908f:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079090
	jmp uuid_0000000000079091
uuid_0000000000079090:
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007907c
	jmp uuid_000000000007907e
uuid_000000000007907c:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079079
	jmp uuid_000000000007907b
uuid_0000000000079079:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079073
	jmp uuid_0000000000079075
uuid_0000000000079073:
	push %RBP
	jmp uuid_0000000000079070
	jmp uuid_0000000000079072
uuid_0000000000079070:
	push %RBP
	jmp uuid_000000000007906d
	jmp uuid_000000000007906f
uuid_000000000007906d:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007906a
	jmp uuid_000000000007906c
uuid_000000000007906a:
	movb $1, -832(%rbp)
uuid_000000000007906c:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007906f:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000079072:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_0000000000079075:
	mov -840(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079076
	jmp uuid_0000000000079078
uuid_0000000000079076:
	movb $1, -672(%rbp)
uuid_0000000000079078:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007907b:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007907e:
	mov -680(%RBP),%RSP
	add $-872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007908c
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079085
	jmp uuid_0000000000079087
uuid_0000000000079085:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079082
	jmp uuid_0000000000079084
uuid_0000000000079082:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007907f
	jmp uuid_0000000000079081
uuid_000000000007907f:
	movb $1, -960(%rbp)
uuid_0000000000079081:
	mov -1056(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079084:
	mov -976(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079087:
	mov -968(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079089
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079088
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007908b
uuid_0000000000079089:
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	movq -1048(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -264(%rbp)
uuid_000000000007908b:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007908e
uuid_000000000007908c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
uuid_000000000007908e:
	mov -592(%RBP),%RSP
	add $-872, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007908f
uuid_0000000000079091:
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079095:
	mov -160(%RBP),%RSP
	add $-512, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
uuid_00000000000790e6:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790e7
	jmp uuid_00000000000790e8
uuid_00000000000790e7:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000790ae
	jmp uuid_00000000000790b0
uuid_00000000000790ae:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000790ab
	jmp uuid_00000000000790ad
uuid_00000000000790ab:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000790a5
	jmp uuid_00000000000790a7
uuid_00000000000790a5:
	push %RBP
	jmp uuid_00000000000790a2
	jmp uuid_00000000000790a4
uuid_00000000000790a2:
	push %RBP
	jmp uuid_000000000007909f
	jmp uuid_00000000000790a1
uuid_000000000007909f:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007610f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007909c
	jmp uuid_000000000007909e
uuid_000000000007909c:
	movb $1, -552(%rbp)
uuid_000000000007909e:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000790a1:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000790a4:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000790a7:
	mov -560(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790a8
	jmp uuid_00000000000790aa
uuid_00000000000790a8:
	movb $1, -392(%rbp)
uuid_00000000000790aa:
	mov -488(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000790ad:
	mov -408(%RBP),%RSP
	add $-592, %RSP
uuid_00000000000790b0:
	mov -400(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790e3
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000790ba
	jmp uuid_00000000000790bc
uuid_00000000000790ba:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000790b7
	jmp uuid_00000000000790b9
uuid_00000000000790b7:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	jmp uuid_00000000000790b4
	jmp uuid_00000000000790b6
uuid_00000000000790b4:
	movb $1, -680(%rbp)
uuid_00000000000790b6:
	mov -776(%RBP),%RSP
	add $-832, %RSP
uuid_00000000000790b9:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_00000000000790bc:
	mov -688(%RBP),%RSP
	add $-832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790e0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000790df
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000790e2
uuid_00000000000790e0:
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000790c6
	jmp uuid_00000000000790c8
uuid_00000000000790c6:
	push %RBP
	jmp uuid_00000000000790c3
	jmp uuid_00000000000790c5
uuid_00000000000790c3:
	push %RBP
	jmp uuid_00000000000790c0
	jmp uuid_00000000000790c2
uuid_00000000000790c0:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $uuid_0000000000075ef6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790bd
	jmp uuid_00000000000790bf
uuid_00000000000790bd:
	movb $1, -960(%rbp)
uuid_00000000000790bf:
	mov -992(%RBP),%RSP
	add $-1000, %RSP
uuid_00000000000790c2:
	mov -984(%RBP),%RSP
	add $-1000, %RSP
uuid_00000000000790c5:
	mov -976(%RBP),%RSP
	add $-1000, %RSP
uuid_00000000000790c8:
	mov -968(%RBP),%RSP
	add $-1000, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790dc
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000790d2
	jmp uuid_00000000000790d4
uuid_00000000000790d2:
	push %RBP
	jmp uuid_00000000000790cf
	jmp uuid_00000000000790d1
uuid_00000000000790cf:
	push %RBP
	jmp uuid_00000000000790cc
	jmp uuid_00000000000790ce
uuid_00000000000790cc:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_0000000000075ef8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790c9
	jmp uuid_00000000000790cb
uuid_00000000000790c9:
	movb $1, -1072(%rbp)
uuid_00000000000790cb:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_00000000000790ce:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_00000000000790d1:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_00000000000790d4:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790d9
	push %RBP
	jmp uuid_00000000000790d6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000790d5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000790d8
uuid_00000000000790d6:
uuid_00000000000790d8:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_00000000000790db
uuid_00000000000790d9:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_00000000000790db:
	mov -1008(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_00000000000790de
uuid_00000000000790dc:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_00000000000790de:
	mov -896(%RBP),%RSP
	add $-1000, %RSP
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -768(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_00000000000790e2:
	mov -600(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_00000000000790e5
uuid_00000000000790e3:
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790b1
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head : Arrow<List<Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call head_CL_ArrowTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_00000000000790b3
uuid_00000000000790b1:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000790b3:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_00000000000790e5:
	mov -312(%RBP),%RSP
	add $-600, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000790e6
uuid_00000000000790e8:
#call function remove-parens : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call remove_SB_parens_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, %RAX
	movq $8, %R14
	subq %R14, %RAX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076582
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076584
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076585
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076583
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_00000000000790e9
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_0000000000076586
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -336(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	subq $152, %rsp
	pushq -880(%rbp)
	pushq -872(%rbp)
	pushq -864(%rbp)
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $344, %rsp
	ret
compile_SB_declare_SB_cstring_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079105
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_0000000000075fd2
uuid_00000000000790fd:
#call function non-zero : Arrow<StringStringList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790fe
	jmp uuid_00000000000790ff
uuid_00000000000790fe:
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000790f3
	jmp uuid_00000000000790f5
uuid_00000000000790f3:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000790f0
	jmp uuid_00000000000790f2
uuid_00000000000790f0:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000790ed
	jmp uuid_00000000000790ef
uuid_00000000000790ed:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000790ea
	jmp uuid_00000000000790ec
uuid_00000000000790ea:
	movb $1, -296(%rbp)
uuid_00000000000790ec:
	mov -344(%RBP),%RSP
	add $-376, %RSP
uuid_00000000000790ef:
	mov -328(%RBP),%RSP
	add $-376, %RSP
uuid_00000000000790f2:
	mov -312(%RBP),%RSP
	add $-376, %RSP
uuid_00000000000790f5:
	mov -304(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790fa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000790f9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000790fc
uuid_00000000000790fa:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000790f6
	movq -376(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -184(%rbp)
	jmp uuid_00000000000790f8
uuid_00000000000790f6:
	movq -320(%rbp), %r15
	movq %r15, -216(%rbp)
	mov -320(%rbp), %r15
	mov %r15, -216(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_00000000000790f8:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_00000000000790fc:
	mov -256(%RBP),%RSP
	add $-384, %RSP
	add $32, %rsp
	add $32, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $32, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000790fd
uuid_00000000000790ff:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000079102
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -216(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079100
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function escape-literal : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call escape_SB_literal_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079101
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<StringStringList,Array<StringStringList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_StringStringListStringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -216(%rbp)
	pushq $0
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	jmp uuid_0000000000079104
uuid_0000000000079102:
uuid_0000000000079104:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_0000000000079107
uuid_0000000000079105:
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079107:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079138
	jmp uuid_000000000007913a
uuid_0000000000079138:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007912f
	jmp uuid_0000000000079131
uuid_000000000007912f:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007911d
	jmp uuid_000000000007911f
uuid_000000000007911d:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007910b
	jmp uuid_000000000007910d
uuid_000000000007910b:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_0000000000079108
	jmp uuid_000000000007910a
uuid_0000000000079108:
	movb $1, -760(%rbp)
uuid_000000000007910a:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007910d:
	mov -768(%RBP),%RSP
	add $-800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007911a
	jmp uuid_000000000007911c
uuid_000000000007911a:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079114
	jmp uuid_0000000000079116
uuid_0000000000079114:
	push %RBP
	jmp uuid_0000000000079111
	jmp uuid_0000000000079113
uuid_0000000000079111:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007910e
	jmp uuid_0000000000079110
uuid_000000000007910e:
	movb $1, -888(%rbp)
uuid_0000000000079110:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_0000000000079113:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_0000000000079116:
	mov -896(%RBP),%RSP
	add $-920, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079117
	jmp uuid_0000000000079119
uuid_0000000000079117:
	movb $1, -664(%rbp)
uuid_0000000000079119:
	mov -808(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007911c:
	mov -680(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007911f:
	mov -672(%RBP),%RSP
	add $-920, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007912c
	jmp uuid_000000000007912e
uuid_000000000007912c:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079126
	jmp uuid_0000000000079128
uuid_0000000000079126:
	push %RBP
	jmp uuid_0000000000079123
	jmp uuid_0000000000079125
uuid_0000000000079123:
	push %RBP
	mov -936(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079120
	jmp uuid_0000000000079122
uuid_0000000000079120:
	movb $1, -1008(%rbp)
uuid_0000000000079122:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000079125:
	mov -1024(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000079128:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079129
	jmp uuid_000000000007912b
uuid_0000000000079129:
	movb $1, -568(%rbp)
uuid_000000000007912b:
	mov -928(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007912e:
	mov -584(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000079131:
	mov -576(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079135
	jmp uuid_0000000000079137
uuid_0000000000079135:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079132
	jmp uuid_0000000000079134
uuid_0000000000079132:
	movb $1, -472(%rbp)
uuid_0000000000079134:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_0000000000079137:
	mov -488(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007913a:
	mov -480(%RBP),%RSP
	add $-1120, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007916f
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079165
	jmp uuid_0000000000079167
uuid_0000000000079165:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079153
	jmp uuid_0000000000079155
uuid_0000000000079153:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079141
	jmp uuid_0000000000079143
uuid_0000000000079141:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007913e
	jmp uuid_0000000000079140
uuid_000000000007913e:
	movb $1, -1400(%rbp)
uuid_0000000000079140:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_0000000000079143:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079150
	jmp uuid_0000000000079152
uuid_0000000000079150:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007914a
	jmp uuid_000000000007914c
uuid_000000000007914a:
	push %RBP
	jmp uuid_0000000000079147
	jmp uuid_0000000000079149
uuid_0000000000079147:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079144
	jmp uuid_0000000000079146
uuid_0000000000079144:
	movb $1, -1528(%rbp)
uuid_0000000000079146:
	mov -1552(%RBP),%RSP
	add $-1560, %RSP
uuid_0000000000079149:
	mov -1544(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007914c:
	mov -1536(%RBP),%RSP
	add $-1560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007914d
	jmp uuid_000000000007914f
uuid_000000000007914d:
	movb $1, -1304(%rbp)
uuid_000000000007914f:
	mov -1448(%RBP),%RSP
	add $-1560, %RSP
uuid_0000000000079152:
	mov -1320(%RBP),%RSP
	add $-1560, %RSP
uuid_0000000000079155:
	mov -1312(%RBP),%RSP
	add $-1560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079162
	jmp uuid_0000000000079164
uuid_0000000000079162:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007915c
	jmp uuid_000000000007915e
uuid_000000000007915c:
	push %RBP
	jmp uuid_0000000000079159
	jmp uuid_000000000007915b
uuid_0000000000079159:
	push %RBP
	mov -1576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079156
	jmp uuid_0000000000079158
uuid_0000000000079156:
	movb $1, -1648(%rbp)
uuid_0000000000079158:
	mov -1672(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007915b:
	mov -1664(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007915e:
	mov -1656(%RBP),%RSP
	add $-1680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007915f
	jmp uuid_0000000000079161
uuid_000000000007915f:
	movb $1, -1208(%rbp)
uuid_0000000000079161:
	mov -1568(%RBP),%RSP
	add $-1680, %RSP
uuid_0000000000079164:
	mov -1224(%RBP),%RSP
	add $-1680, %RSP
uuid_0000000000079167:
	mov -1216(%RBP),%RSP
	add $-1680, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007916c
	push %RBP
	jmp uuid_0000000000079169
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079168
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007916b
uuid_0000000000079169:
uuid_000000000007916b:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007916e
uuid_000000000007916c:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1688(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1560(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007916e:
	mov -1128(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_0000000000079171
uuid_000000000007916f:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007913b
	jmp uuid_000000000007913d
uuid_000000000007913b:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1160(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -920(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007913d:
	mov -1128(%RBP),%RSP
	add $-1184, %RSP
uuid_0000000000079171:
	mov -392(%RBP),%RSP
	add $-1184, %RSP
	subq $200, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793d4
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793d1
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079178
	jmp uuid_000000000007917a
uuid_0000000000079178:
	push %RBP
	jmp uuid_0000000000079175
	jmp uuid_0000000000079177
uuid_0000000000079175:
	push %RBP
	mov -696(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079172
	jmp uuid_0000000000079174
uuid_0000000000079172:
	movb $1, -768(%rbp)
uuid_0000000000079174:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000079177:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007917a:
	mov -776(%RBP),%RSP
	add $-800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793ce
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079181
	jmp uuid_0000000000079183
uuid_0000000000079181:
	push %RBP
	jmp uuid_000000000007917e
	jmp uuid_0000000000079180
uuid_000000000007917e:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007917b
	jmp uuid_000000000007917d
uuid_000000000007917b:
	movb $1, -888(%rbp)
uuid_000000000007917d:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_0000000000079180:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_0000000000079183:
	mov -896(%RBP),%RSP
	add $-920, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793cb
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000791e9
	jmp uuid_00000000000791eb
uuid_00000000000791e9:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000791d7
	jmp uuid_00000000000791d9
uuid_00000000000791d7:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000791ce
	jmp uuid_00000000000791d0
uuid_00000000000791ce:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_00000000000791cb
	jmp uuid_00000000000791cd
uuid_00000000000791cb:
	movb $1, -1200(%rbp)
uuid_00000000000791cd:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_00000000000791d0:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791d4
	jmp uuid_00000000000791d6
uuid_00000000000791d4:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000791d1
	jmp uuid_00000000000791d3
uuid_00000000000791d1:
	movb $1, -1104(%rbp)
uuid_00000000000791d3:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_00000000000791d6:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_00000000000791d9:
	mov -1112(%RBP),%RSP
	add $-1320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791e6
	jmp uuid_00000000000791e8
uuid_00000000000791e6:
	push %RBP
	mov -984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000791e0
	jmp uuid_00000000000791e2
uuid_00000000000791e0:
	push %RBP
	jmp uuid_00000000000791dd
	jmp uuid_00000000000791df
uuid_00000000000791dd:
	push %RBP
	mov -1336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791da
	jmp uuid_00000000000791dc
uuid_00000000000791da:
	movb $1, -1408(%rbp)
uuid_00000000000791dc:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_00000000000791df:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
uuid_00000000000791e2:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791e3
	jmp uuid_00000000000791e5
uuid_00000000000791e3:
	movb $1, -1008(%rbp)
uuid_00000000000791e5:
	mov -1328(%RBP),%RSP
	add $-1440, %RSP
uuid_00000000000791e8:
	mov -1024(%RBP),%RSP
	add $-1440, %RSP
uuid_00000000000791eb:
	mov -1016(%RBP),%RSP
	add $-1440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793c8
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079204
	jmp uuid_0000000000079206
uuid_0000000000079204:
	push %RBP
	mov -1512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000791f2
	jmp uuid_00000000000791f4
uuid_00000000000791f2:
	push %RBP
	jmp uuid_00000000000791ef
	jmp uuid_00000000000791f1
uuid_00000000000791ef:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000791ec
	jmp uuid_00000000000791ee
uuid_00000000000791ec:
	movb $1, -1624(%rbp)
uuid_00000000000791ee:
	mov -1648(%RBP),%RSP
	add $-1656, %RSP
uuid_00000000000791f1:
	mov -1640(%RBP),%RSP
	add $-1656, %RSP
uuid_00000000000791f4:
	mov -1632(%RBP),%RSP
	add $-1656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079201
	jmp uuid_0000000000079203
uuid_0000000000079201:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000791fb
	jmp uuid_00000000000791fd
uuid_00000000000791fb:
	push %RBP
	jmp uuid_00000000000791f8
	jmp uuid_00000000000791fa
uuid_00000000000791f8:
	push %RBP
	mov -1672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_00000000000763e5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791f5
	jmp uuid_00000000000791f7
uuid_00000000000791f5:
	movb $1, -1744(%rbp)
uuid_00000000000791f7:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_00000000000791fa:
	mov -1760(%RBP),%RSP
	add $-1776, %RSP
uuid_00000000000791fd:
	mov -1752(%RBP),%RSP
	add $-1776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791fe
	jmp uuid_0000000000079200
uuid_00000000000791fe:
	movb $1, -1528(%rbp)
uuid_0000000000079200:
	mov -1664(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000079203:
	mov -1544(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000079206:
	mov -1536(%RBP),%RSP
	add $-1776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793c5
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007921f
	jmp uuid_0000000000079221
uuid_000000000007921f:
	push %RBP
	mov -1848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007920d
	jmp uuid_000000000007920f
uuid_000000000007920d:
	push %RBP
	jmp uuid_000000000007920a
	jmp uuid_000000000007920c
uuid_000000000007920a:
	push %RBP
	mov -1888(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079207
	jmp uuid_0000000000079209
uuid_0000000000079207:
	movb $1, -1960(%rbp)
uuid_0000000000079209:
	mov -1984(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007920c:
	mov -1976(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007920f:
	mov -1968(%RBP),%RSP
	add $-1992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007921c
	jmp uuid_000000000007921e
uuid_000000000007921c:
	push %RBP
	mov -1840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079216
	jmp uuid_0000000000079218
uuid_0000000000079216:
	push %RBP
	jmp uuid_0000000000079213
	jmp uuid_0000000000079215
uuid_0000000000079213:
	push %RBP
	mov -2008(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_0000000000076402
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079210
	jmp uuid_0000000000079212
uuid_0000000000079210:
	movb $1, -2080(%rbp)
uuid_0000000000079212:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079215:
	mov -2096(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079218:
	mov -2088(%RBP),%RSP
	add $-2112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2080(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079219
	jmp uuid_000000000007921b
uuid_0000000000079219:
	movb $1, -1864(%rbp)
uuid_000000000007921b:
	mov -2000(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007921e:
	mov -1880(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079221:
	mov -1872(%RBP),%RSP
	add $-2112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793c2
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079231
	jmp uuid_0000000000079233
uuid_0000000000079231:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007922e
	jmp uuid_0000000000079230
uuid_000000000007922e:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079228
	jmp uuid_000000000007922a
uuid_0000000000079228:
	push %RBP
	jmp uuid_0000000000079225
	jmp uuid_0000000000079227
uuid_0000000000079225:
	push %RBP
	mov -2304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2408(%rbp)
	pushq $uuid_00000000000764b2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079222
	jmp uuid_0000000000079224
uuid_0000000000079222:
	movb $1, -2376(%rbp)
uuid_0000000000079224:
	mov -2400(%RBP),%RSP
	add $-2408, %RSP
uuid_0000000000079227:
	mov -2392(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007922a:
	mov -2384(%RBP),%RSP
	add $-2408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007922b
	jmp uuid_000000000007922d
uuid_000000000007922b:
	movb $1, -2200(%rbp)
uuid_000000000007922d:
	mov -2296(%RBP),%RSP
	add $-2408, %RSP
uuid_0000000000079230:
	mov -2216(%RBP),%RSP
	add $-2408, %RSP
uuid_0000000000079233:
	mov -2208(%RBP),%RSP
	add $-2408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793bf
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079243
	jmp uuid_0000000000079245
uuid_0000000000079243:
	push %RBP
	mov -2480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079240
	jmp uuid_0000000000079242
uuid_0000000000079240:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007923a
	jmp uuid_000000000007923c
uuid_000000000007923a:
	push %RBP
	jmp uuid_0000000000079237
	jmp uuid_0000000000079239
uuid_0000000000079237:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq $uuid_00000000000764c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079234
	jmp uuid_0000000000079236
uuid_0000000000079234:
	movb $1, -2672(%rbp)
uuid_0000000000079236:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_0000000000079239:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007923c:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007923d
	jmp uuid_000000000007923f
uuid_000000000007923d:
	movb $1, -2496(%rbp)
uuid_000000000007923f:
	mov -2592(%RBP),%RSP
	add $-2704, %RSP
uuid_0000000000079242:
	mov -2512(%RBP),%RSP
	add $-2704, %RSP
uuid_0000000000079245:
	mov -2504(%RBP),%RSP
	add $-2704, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793bc
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007929b
	jmp uuid_000000000007929d
uuid_000000000007929b:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079289
	jmp uuid_000000000007928b
uuid_0000000000079289:
	push %RBP
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	jmp uuid_0000000000079286
	jmp uuid_0000000000079288
uuid_0000000000079286:
	movb $1, -2888(%rbp)
uuid_0000000000079288:
	mov -2904(%RBP),%RSP
	add $-2928, %RSP
uuid_000000000007928b:
	mov -2896(%RBP),%RSP
	add $-2928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079298
	jmp uuid_000000000007929a
uuid_0000000000079298:
	push %RBP
	mov -2768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079292
	jmp uuid_0000000000079294
uuid_0000000000079292:
	push %RBP
	jmp uuid_000000000007928f
	jmp uuid_0000000000079291
uuid_000000000007928f:
	push %RBP
	mov -2944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq $uuid_0000000000076491
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007928c
	jmp uuid_000000000007928e
uuid_000000000007928c:
	movb $1, -3016(%rbp)
uuid_000000000007928e:
	mov -3040(%RBP),%RSP
	add $-3048, %RSP
uuid_0000000000079291:
	mov -3032(%RBP),%RSP
	add $-3048, %RSP
uuid_0000000000079294:
	mov -3024(%RBP),%RSP
	add $-3048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079295
	jmp uuid_0000000000079297
uuid_0000000000079295:
	movb $1, -2792(%rbp)
uuid_0000000000079297:
	mov -2936(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007929a:
	mov -2808(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007929d:
	mov -2800(%RBP),%RSP
	add $-3048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793b9
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792bc
	jmp uuid_00000000000792be
uuid_00000000000792bc:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792aa
	jmp uuid_00000000000792ac
uuid_00000000000792aa:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792a1
	jmp uuid_00000000000792a3
uuid_00000000000792a1:
	push %RBP
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	jmp uuid_000000000007929e
	jmp uuid_00000000000792a0
uuid_000000000007929e:
	movb $1, -3328(%rbp)
uuid_00000000000792a0:
	mov -3344(%RBP),%RSP
	add $-3368, %RSP
uuid_00000000000792a3:
	mov -3336(%RBP),%RSP
	add $-3368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792a7
	jmp uuid_00000000000792a9
uuid_00000000000792a7:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000792a4
	jmp uuid_00000000000792a6
uuid_00000000000792a4:
	movb $1, -3232(%rbp)
uuid_00000000000792a6:
	mov -3376(%RBP),%RSP
	add $-3448, %RSP
uuid_00000000000792a9:
	mov -3248(%RBP),%RSP
	add $-3448, %RSP
uuid_00000000000792ac:
	mov -3240(%RBP),%RSP
	add $-3448, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792b9
	jmp uuid_00000000000792bb
uuid_00000000000792b9:
	push %RBP
	mov -3112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792b3
	jmp uuid_00000000000792b5
uuid_00000000000792b3:
	push %RBP
	jmp uuid_00000000000792b0
	jmp uuid_00000000000792b2
uuid_00000000000792b0:
	push %RBP
	mov -3464(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3568(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792ad
	jmp uuid_00000000000792af
uuid_00000000000792ad:
	movb $1, -3536(%rbp)
uuid_00000000000792af:
	mov -3560(%RBP),%RSP
	add $-3568, %RSP
uuid_00000000000792b2:
	mov -3552(%RBP),%RSP
	add $-3568, %RSP
uuid_00000000000792b5:
	mov -3544(%RBP),%RSP
	add $-3568, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3536(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792b6
	jmp uuid_00000000000792b8
uuid_00000000000792b6:
	movb $1, -3136(%rbp)
uuid_00000000000792b8:
	mov -3456(%RBP),%RSP
	add $-3568, %RSP
uuid_00000000000792bb:
	mov -3152(%RBP),%RSP
	add $-3568, %RSP
uuid_00000000000792be:
	mov -3144(%RBP),%RSP
	add $-3568, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793b6
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792e0
	jmp uuid_00000000000792e2
uuid_00000000000792e0:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000792dd
	jmp uuid_00000000000792df
uuid_00000000000792dd:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792d7
	jmp uuid_00000000000792d9
uuid_00000000000792d7:
	push %RBP
	mov -3816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000792d4
	jmp uuid_00000000000792d6
uuid_00000000000792d4:
	push %RBP
	mov -3808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792ce
	jmp uuid_00000000000792d0
uuid_00000000000792ce:
	push %RBP
	mov -3992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000792cb
	jmp uuid_00000000000792cd
uuid_00000000000792cb:
	push %RBP
	mov -3984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792c5
	jmp uuid_00000000000792c7
uuid_00000000000792c5:
	push %RBP
	jmp uuid_00000000000792c2
	jmp uuid_00000000000792c4
uuid_00000000000792c2:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	pushq $uuid_0000000000076415
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792bf
	jmp uuid_00000000000792c1
uuid_00000000000792bf:
	movb $1, -4184(%rbp)
uuid_00000000000792c1:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792c4:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792c7:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792c8
	jmp uuid_00000000000792ca
uuid_00000000000792c8:
	movb $1, -4008(%rbp)
uuid_00000000000792ca:
	mov -4104(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792cd:
	mov -4024(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792d0:
	mov -4016(%RBP),%RSP
	add $-4216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4008(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792d1
	jmp uuid_00000000000792d3
uuid_00000000000792d1:
	movb $1, -3832(%rbp)
uuid_00000000000792d3:
	mov -3928(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792d6:
	mov -3848(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792d9:
	mov -3840(%RBP),%RSP
	add $-4216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792da
	jmp uuid_00000000000792dc
uuid_00000000000792da:
	movb $1, -3656(%rbp)
uuid_00000000000792dc:
	mov -3752(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792df:
	mov -3672(%RBP),%RSP
	add $-4216, %RSP
uuid_00000000000792e2:
	mov -3664(%RBP),%RSP
	add $-4216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793b3
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079308
	jmp uuid_000000000007930a
uuid_0000000000079308:
	push %RBP
	mov -4288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079305
	jmp uuid_0000000000079307
uuid_0000000000079305:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792ff
	jmp uuid_0000000000079301
uuid_00000000000792ff:
	push %RBP
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq -4464(%RBP)
	jmp uuid_00000000000792fc
	jmp uuid_00000000000792fe
uuid_00000000000792fc:
	push %RBP
	mov -4440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792f9
	jmp uuid_00000000000792fb
uuid_00000000000792f9:
	push %RBP
	mov -4432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq $0
	push %RBP
	mov -4752(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792f3
	jmp uuid_00000000000792f5
uuid_00000000000792f3:
	push %RBP
	jmp uuid_00000000000792f0
	jmp uuid_00000000000792f2
uuid_00000000000792f0:
	push %RBP
	mov -4688(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000792ed
	jmp uuid_00000000000792ef
uuid_00000000000792ed:
	movb $1, -4760(%rbp)
uuid_00000000000792ef:
	mov -4784(%RBP),%RSP
	add $-4792, %RSP
uuid_00000000000792f2:
	mov -4776(%RBP),%RSP
	add $-4792, %RSP
uuid_00000000000792f5:
	mov -4768(%RBP),%RSP
	add $-4792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000792f6
	jmp uuid_00000000000792f8
uuid_00000000000792f6:
	movb $1, -4480(%rbp)
uuid_00000000000792f8:
	mov -4608(%RBP),%RSP
	add $-4792, %RSP
uuid_00000000000792fb:
	mov -4528(%RBP),%RSP
	add $-4792, %RSP
uuid_00000000000792fe:
	mov -4496(%RBP),%RSP
	add $-4792, %RSP
uuid_0000000000079301:
	mov -4488(%RBP),%RSP
	add $-4792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079302
	jmp uuid_0000000000079304
uuid_0000000000079302:
	movb $1, -4304(%rbp)
uuid_0000000000079304:
	mov -4400(%RBP),%RSP
	add $-4792, %RSP
uuid_0000000000079307:
	mov -4320(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007930a:
	mov -4312(%RBP),%RSP
	add $-4792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793b0
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079330
	jmp uuid_0000000000079332
uuid_0000000000079330:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007932d
	jmp uuid_000000000007932f
uuid_000000000007932d:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007932a
	jmp uuid_000000000007932c
uuid_000000000007932a:
	movb $1, -4880(%rbp)
uuid_000000000007932c:
	mov -4976(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007932f:
	mov -4896(%RBP),%RSP
	add $-5048, %RSP
uuid_0000000000079332:
	mov -4888(%RBP),%RSP
	add $-5048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793ad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000793ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000793af
uuid_00000000000793ad:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793a9
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793a6
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000793a8
uuid_00000000000793a6:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793a8:
	mov -5064(%RBP),%RSP
	add $-5368, %RSP
	jmp uuid_00000000000793ab
uuid_00000000000793a9:
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079339
	jmp uuid_000000000007933b
uuid_0000000000079339:
	push %RBP
	jmp uuid_0000000000079336
	jmp uuid_0000000000079338
uuid_0000000000079336:
	push %RBP
	mov -5144(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079333
	jmp uuid_0000000000079335
uuid_0000000000079333:
	movb $1, -5216(%rbp)
uuid_0000000000079335:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_0000000000079338:
	mov -5232(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007933b:
	mov -5224(%RBP),%RSP
	add $-5248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793a3
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079363
	jmp uuid_0000000000079365
uuid_0000000000079363:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5424(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079351
	jmp uuid_0000000000079353
uuid_0000000000079351:
	push %RBP
	mov -5416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007933f
	jmp uuid_0000000000079341
uuid_000000000007933f:
	push %RBP
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	jmp uuid_000000000007933c
	jmp uuid_000000000007933e
uuid_000000000007933c:
	movb $1, -5528(%rbp)
uuid_000000000007933e:
	mov -5544(%RBP),%RSP
	add $-5568, %RSP
uuid_0000000000079341:
	mov -5536(%RBP),%RSP
	add $-5568, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007934e
	jmp uuid_0000000000079350
uuid_000000000007934e:
	push %RBP
	mov -5408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5648(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079348
	jmp uuid_000000000007934a
uuid_0000000000079348:
	push %RBP
	jmp uuid_0000000000079345
	jmp uuid_0000000000079347
uuid_0000000000079345:
	push %RBP
	mov -5584(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079342
	jmp uuid_0000000000079344
uuid_0000000000079342:
	movb $1, -5656(%rbp)
uuid_0000000000079344:
	mov -5680(%RBP),%RSP
	add $-5688, %RSP
uuid_0000000000079347:
	mov -5672(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007934a:
	mov -5664(%RBP),%RSP
	add $-5688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007934b
	jmp uuid_000000000007934d
uuid_000000000007934b:
	movb $1, -5432(%rbp)
uuid_000000000007934d:
	mov -5576(%RBP),%RSP
	add $-5688, %RSP
uuid_0000000000079350:
	mov -5448(%RBP),%RSP
	add $-5688, %RSP
uuid_0000000000079353:
	mov -5440(%RBP),%RSP
	add $-5688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5432(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079360
	jmp uuid_0000000000079362
uuid_0000000000079360:
	push %RBP
	mov -5312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007935a
	jmp uuid_000000000007935c
uuid_000000000007935a:
	push %RBP
	jmp uuid_0000000000079357
	jmp uuid_0000000000079359
uuid_0000000000079357:
	push %RBP
	mov -5704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079354
	jmp uuid_0000000000079356
uuid_0000000000079354:
	movb $1, -5776(%rbp)
uuid_0000000000079356:
	mov -5800(%RBP),%RSP
	add $-5808, %RSP
uuid_0000000000079359:
	mov -5792(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007935c:
	mov -5784(%RBP),%RSP
	add $-5808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007935d
	jmp uuid_000000000007935f
uuid_000000000007935d:
	movb $1, -5336(%rbp)
uuid_000000000007935f:
	mov -5696(%RBP),%RSP
	add $-5808, %RSP
uuid_0000000000079362:
	mov -5352(%RBP),%RSP
	add $-5808, %RSP
uuid_0000000000079365:
	mov -5344(%RBP),%RSP
	add $-5808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793a0
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5888(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007936c
	jmp uuid_000000000007936e
uuid_000000000007936c:
	push %RBP
	jmp uuid_0000000000079369
	jmp uuid_000000000007936b
uuid_0000000000079369:
	push %RBP
	mov -5824(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079366
	jmp uuid_0000000000079368
uuid_0000000000079366:
	movb $1, -5896(%rbp)
uuid_0000000000079368:
	mov -5920(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007936b:
	mov -5912(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007936e:
	mov -5904(%RBP),%RSP
	add $-5928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5896(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007939d
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -6008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079396
	jmp uuid_0000000000079398
uuid_0000000000079396:
	push %RBP
	mov -6000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6104(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079384
	jmp uuid_0000000000079386
uuid_0000000000079384:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6200(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079372
	jmp uuid_0000000000079374
uuid_0000000000079372:
	push %RBP
	pushq -6176(%RBP)
	pushq -6184(%RBP)
	pushq -6192(%RBP)
	jmp uuid_000000000007936f
	jmp uuid_0000000000079371
uuid_000000000007936f:
	movb $1, -6208(%rbp)
uuid_0000000000079371:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
uuid_0000000000079374:
	mov -6216(%RBP),%RSP
	add $-6248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079381
	jmp uuid_0000000000079383
uuid_0000000000079381:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007937b
	jmp uuid_000000000007937d
uuid_000000000007937b:
	push %RBP
	jmp uuid_0000000000079378
	jmp uuid_000000000007937a
uuid_0000000000079378:
	push %RBP
	mov -6264(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079375
	jmp uuid_0000000000079377
uuid_0000000000079375:
	movb $1, -6336(%rbp)
uuid_0000000000079377:
	mov -6360(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007937a:
	mov -6352(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007937d:
	mov -6344(%RBP),%RSP
	add $-6368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007937e
	jmp uuid_0000000000079380
uuid_000000000007937e:
	movb $1, -6112(%rbp)
uuid_0000000000079380:
	mov -6256(%RBP),%RSP
	add $-6368, %RSP
uuid_0000000000079383:
	mov -6128(%RBP),%RSP
	add $-6368, %RSP
uuid_0000000000079386:
	mov -6120(%RBP),%RSP
	add $-6368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079393
	jmp uuid_0000000000079395
uuid_0000000000079393:
	push %RBP
	mov -5992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007938d
	jmp uuid_000000000007938f
uuid_000000000007938d:
	push %RBP
	jmp uuid_000000000007938a
	jmp uuid_000000000007938c
uuid_000000000007938a:
	push %RBP
	mov -6384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6488(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079387
	jmp uuid_0000000000079389
uuid_0000000000079387:
	movb $1, -6456(%rbp)
uuid_0000000000079389:
	mov -6480(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007938c:
	mov -6472(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007938f:
	mov -6464(%RBP),%RSP
	add $-6488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079390
	jmp uuid_0000000000079392
uuid_0000000000079390:
	movb $1, -6016(%rbp)
uuid_0000000000079392:
	mov -6376(%RBP),%RSP
	add $-6488, %RSP
uuid_0000000000079395:
	mov -6032(%RBP),%RSP
	add $-6488, %RSP
uuid_0000000000079398:
	mov -6024(%RBP),%RSP
	add $-6488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007939a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079399
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007939c
uuid_000000000007939a:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -6368(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007939c:
	mov -5936(%RBP),%RSP
	add $-6488, %RSP
	jmp uuid_000000000007939f
uuid_000000000007939d:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5928(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007939f:
	mov -5816(%RBP),%RSP
	add $-5928, %RSP
	jmp uuid_00000000000793a2
uuid_00000000000793a0:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793a2:
	mov -5256(%RBP),%RSP
	add $-5808, %RSP
	jmp uuid_00000000000793a5
uuid_00000000000793a3:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5248(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793a5:
	mov -5136(%RBP),%RSP
	add $-5248, %RSP
uuid_00000000000793ab:
	mov -5056(%RBP),%RSP
	add $-5248, %RSP
uuid_00000000000793af:
	mov -4800(%RBP),%RSP
	add $-5248, %RSP
	jmp uuid_00000000000793b2
uuid_00000000000793b0:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4832(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $0
	push %RBP
	mov -5008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007931d
	jmp uuid_000000000007931f
uuid_000000000007931d:
	push %RBP
	jmp uuid_000000000007931a
	jmp uuid_000000000007931c
uuid_000000000007931a:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079314
	jmp uuid_0000000000079316
uuid_0000000000079314:
	push %RBP
	jmp uuid_0000000000079311
	jmp uuid_0000000000079313
uuid_0000000000079311:
	push %RBP
	jmp uuid_000000000007930e
	jmp uuid_0000000000079310
uuid_000000000007930e:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007930b
	jmp uuid_000000000007930d
uuid_000000000007930b:
	movb $1, -5120(%rbp)
uuid_000000000007930d:
	mov -5152(%RBP),%RSP
	add $-5224, %RSP
uuid_0000000000079310:
	mov -5144(%RBP),%RSP
	add $-5224, %RSP
uuid_0000000000079313:
	mov -5136(%RBP),%RSP
	add $-5224, %RSP
uuid_0000000000079316:
	mov -5128(%RBP),%RSP
	add $-5224, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079317
	jmp uuid_0000000000079319
uuid_0000000000079317:
	movb $1, -5016(%rbp)
uuid_0000000000079319:
	mov -5040(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007931c:
	mov -5032(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007931f:
	mov -5024(%RBP),%RSP
	add $-5224, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079324
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079323
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079326
uuid_0000000000079324:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007655d
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -5320(%RBP)
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079320
	jmp uuid_0000000000079322
uuid_0000000000079320:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007655d
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq $uuid_0000000000076b42
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -4856(%RBP)
	popq -4848(%RBP)
	popq -4840(%RBP)
uuid_0000000000079322:
	mov -5408(%RBP),%RSP
	add $-5560, %RSP
uuid_0000000000079326:
	mov -4936(%RBP),%RSP
	add $-5560, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007655d
	pushq -4840(%rbp)
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_0000000000079327
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_0000000000079327
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079328
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079329
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4832(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793b2:
	mov -4224(%RBP),%RSP
	add $-5560, %RSP
	jmp uuid_00000000000793b5
uuid_00000000000793b3:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $-8
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000792e3
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -4464(%RBP), %RAX
	push %RAX
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4464(%RBP), %RAX
	push %RAX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4656(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4624(%RBP), %RAX
	push %RAX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_00000000000792e4
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_00000000000792e5
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_00000000000792e6
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000792e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000792e8
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000792e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000075f9a
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788b0
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000078f1b
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000075f9d
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000792e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000788b0
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000792e9
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -280(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000792ea
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000792ec
uuid_00000000000792ea:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000792ec:
	mov -4872(%RBP),%RSP
	add $-4872, %RSP
uuid_00000000000793b5:
	mov -3576(%RBP),%RSP
	add $-4872, %RSP
	jmp uuid_00000000000793b8
uuid_00000000000793b6:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793b8:
	mov -3056(%RBP),%RSP
	add $-3568, %RSP
	jmp uuid_00000000000793bb
uuid_00000000000793b9:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000774fc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076981
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000764a4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076584
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f96
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793bb:
	mov -2712(%RBP),%RSP
	add $-3080, %RSP
	jmp uuid_00000000000793be
uuid_00000000000793bc:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007925e
	jmp uuid_0000000000079260
uuid_000000000007925e:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079255
	jmp uuid_0000000000079257
uuid_0000000000079255:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007924c
	jmp uuid_000000000007924e
uuid_000000000007924c:
	push %RBP
	mov -2904(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079249
	jmp uuid_000000000007924b
uuid_0000000000079249:
	push %RBP
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079246
	jmp uuid_0000000000079248
uuid_0000000000079246:
	movb $1, -2920(%rbp)
uuid_0000000000079248:
	mov -2984(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007924b:
	mov -2936(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007924e:
	mov -2928(%RBP),%RSP
	add $-3008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2920(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079252
	jmp uuid_0000000000079254
uuid_0000000000079252:
	push %RBP
	jmp uuid_000000000007924f
	jmp uuid_0000000000079251
uuid_000000000007924f:
	movb $1, -2856(%rbp)
uuid_0000000000079251:
	mov -3016(%RBP),%RSP
	add $-3016, %RSP
uuid_0000000000079254:
	mov -2872(%RBP),%RSP
	add $-3016, %RSP
uuid_0000000000079257:
	mov -2864(%RBP),%RSP
	add $-3016, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007925b
	jmp uuid_000000000007925d
uuid_000000000007925b:
	push %RBP
	mov -2768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3032(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079258
	jmp uuid_000000000007925a
uuid_0000000000079258:
	movb $1, -2792(%rbp)
uuid_000000000007925a:
	mov -3024(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007925d:
	mov -2808(%RBP),%RSP
	add $-3032, %RSP
uuid_0000000000079260:
	mov -2800(%RBP),%RSP
	add $-3032, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079283
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -3064(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079279
	jmp uuid_000000000007927b
uuid_0000000000079279:
	push %RBP
	mov -3056(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079270
	jmp uuid_0000000000079272
uuid_0000000000079270:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079267
	jmp uuid_0000000000079269
uuid_0000000000079267:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079264
	jmp uuid_0000000000079266
uuid_0000000000079264:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	jmp uuid_0000000000079261
	jmp uuid_0000000000079263
uuid_0000000000079261:
	movb $1, -3200(%rbp)
uuid_0000000000079263:
	mov -3264(%RBP),%RSP
	add $-3288, %RSP
uuid_0000000000079266:
	mov -3216(%RBP),%RSP
	add $-3288, %RSP
uuid_0000000000079269:
	mov -3208(%RBP),%RSP
	add $-3288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007926d
	jmp uuid_000000000007926f
uuid_000000000007926d:
	push %RBP
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007926a
	jmp uuid_000000000007926c
uuid_000000000007926a:
	movb $1, -3136(%rbp)
uuid_000000000007926c:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007926f:
	mov -3152(%RBP),%RSP
	add $-3320, %RSP
uuid_0000000000079272:
	mov -3144(%RBP),%RSP
	add $-3320, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079276
	jmp uuid_0000000000079278
uuid_0000000000079276:
	push %RBP
	mov -3048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_00000000000764d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079273
	jmp uuid_0000000000079275
uuid_0000000000079273:
	movb $1, -3072(%rbp)
uuid_0000000000079275:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_0000000000079278:
	mov -3088(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007927b:
	mov -3080(%RBP),%RSP
	add $-3336, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3072(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079280
	push %RBP
	jmp uuid_000000000007927d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007927c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007927f
uuid_000000000007927d:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007927f:
	mov -3344(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_0000000000079282
uuid_0000000000079280:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007650f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3344(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079282:
	mov -3040(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_0000000000079285
uuid_0000000000079283:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079285:
	mov -2760(%RBP),%RSP
	add $-3032, %RSP
uuid_00000000000793be:
	mov -2416(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_00000000000793c1
uuid_00000000000793bf:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793c1:
	mov -2120(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_00000000000793c4
uuid_00000000000793c2:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1992(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000763f8
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq $uuid_0000000000078382
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076189
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_0000000000076b42
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793c4:
	mov -1784(%RBP),%RSP
	add $-2288, %RSP
	jmp uuid_00000000000793c7
uuid_00000000000793c5:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1656(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000763f8
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::label : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_label_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793c7:
	mov -1448(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_00000000000793ca
uuid_00000000000793c8:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793ca:
	mov -928(%RBP),%RSP
	add $-1440, %RSP
	jmp uuid_00000000000793cd
uuid_00000000000793cb:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791c8
	pushq $0
	push %RBP
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079184
	jmp uuid_0000000000079186
uuid_0000000000079184:
	movb $1, -960(%rbp)
uuid_0000000000079186:
	mov -968(%RBP),%RSP
	add $-968, %RSP
	push %RBP
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079187
	jmp uuid_0000000000079189
uuid_0000000000079187:
	movb $1, -960(%rbp)
uuid_0000000000079189:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	push %RBP
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007918a
	jmp uuid_000000000007918c
uuid_000000000007918a:
	movb $1, -960(%rbp)
uuid_000000000007918c:
	mov -984(%RBP),%RSP
	add $-984, %RSP
	push %RBP
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007918d
	jmp uuid_000000000007918f
uuid_000000000007918d:
	movb $1, -960(%rbp)
uuid_000000000007918f:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791c5
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function class-of-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call class_SB_of_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791c2
	pushq -920(%rbp)
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq $uuid_0000000000079190
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791bf
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq $uuid_0000000000079191
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791bc
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_0000000000079192
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791b9
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq $uuid_000000000007613c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791b6
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq $uuid_0000000000079194
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791b3
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_0000000000079196
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791b0
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $uuid_0000000000079198
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791ad
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq $uuid_000000000007919a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791aa
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007919c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791a7
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_000000000007919e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000791a4
	push %RBP
	jmp uuid_00000000000791a1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000791a0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000791a3
uuid_00000000000791a1:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791a3:
	mov -1184(%RBP),%RSP
	add $-1184, %RSP
	jmp uuid_00000000000791a6
uuid_00000000000791a4:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007919f
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791a6:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_00000000000791a9
uuid_00000000000791a7:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007919d
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791a9:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_00000000000791ac
uuid_00000000000791aa:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007919b
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791ac:
	mov -1136(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_00000000000791af
uuid_00000000000791ad:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079199
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791af:
	mov -1120(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_00000000000791b2
uuid_00000000000791b0:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079197
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791b2:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_00000000000791b5
uuid_00000000000791b3:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079195
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791b5:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_00000000000791b8
uuid_00000000000791b6:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079193
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791b8:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_00000000000791bb
uuid_00000000000791b9:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f97
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791bb:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_00000000000791be
uuid_00000000000791bc:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f56
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791be:
	mov -1040(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_00000000000791c1
uuid_00000000000791bf:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f8f
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791c1:
	mov -1024(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_00000000000791c4
uuid_00000000000791c2:
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_0000000000076b42
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791c4:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
	jmp uuid_00000000000791c7
uuid_00000000000791c5:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791c7:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_00000000000791ca
uuid_00000000000791c8:
#call function compile-declare-cstring : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call compile_SB_declare_SB_cstring_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000791ca:
	mov -952(%RBP),%RSP
	add $-952, %RSP
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793cd:
	mov -808(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_00000000000793d0
uuid_00000000000793ce:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -800(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793d0:
	mov -688(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_00000000000793d3
uuid_00000000000793d1:
uuid_00000000000793d3:
	mov -608(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_00000000000793d6
uuid_00000000000793d4:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793d6:
	mov -528(%RBP),%RSP
	add $-600, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -288(%rbp)
	push %RBP
	pushq -456(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793db
	push %RBP
	jmp uuid_00000000000793d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000793d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000793da
uuid_00000000000793d8:
#call function compile-expr-direct : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793da:
	mov -480(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_00000000000793dd
uuid_00000000000793db:
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000765c6
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000793dd:
	mov -464(%RBP),%RSP
	add $-472, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793f6
	jmp uuid_00000000000793f8
uuid_00000000000793f6:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793ed
	jmp uuid_00000000000793ef
uuid_00000000000793ed:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793e4
	jmp uuid_00000000000793e6
uuid_00000000000793e4:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793e1
	jmp uuid_00000000000793e3
uuid_00000000000793e1:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_00000000000793de
	jmp uuid_00000000000793e0
uuid_00000000000793de:
	movb $1, -672(%rbp)
uuid_00000000000793e0:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_00000000000793e3:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_00000000000793e6:
	mov -680(%RBP),%RSP
	add $-760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793ea
	jmp uuid_00000000000793ec
uuid_00000000000793ea:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_00000000000793e7
	jmp uuid_00000000000793e9
uuid_00000000000793e7:
	movb $1, -608(%rbp)
uuid_00000000000793e9:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_00000000000793ec:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_00000000000793ef:
	mov -616(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793f3
	jmp uuid_00000000000793f5
uuid_00000000000793f3:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793f0
	jmp uuid_00000000000793f2
uuid_00000000000793f0:
	movb $1, -544(%rbp)
uuid_00000000000793f2:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_00000000000793f5:
	mov -560(%RBP),%RSP
	add $-808, %RSP
uuid_00000000000793f8:
	mov -552(%RBP),%RSP
	add $-808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079416
	push %RBP
	jmp uuid_0000000000079413
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079412
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079415
uuid_0000000000079413:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007940f
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	jmp uuid_0000000000079411
uuid_000000000007940f:
uuid_0000000000079411:
	mov -976(%RBP),%RSP
	add $-976, %RSP
#call function close : Arrow<FragmentList+CaseNumber<1>,Array<FragmentList+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_0000000000079415:
	mov -816(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_0000000000079418
uuid_0000000000079416:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793ff
	jmp uuid_0000000000079401
uuid_00000000000793ff:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000793fc
	jmp uuid_00000000000793fe
uuid_00000000000793fc:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000793f9
	jmp uuid_00000000000793fb
uuid_00000000000793f9:
	movb $1, -968(%rbp)
uuid_00000000000793fb:
	mov -1064(%RBP),%RSP
	add $-1136, %RSP
uuid_00000000000793fe:
	mov -984(%RBP),%RSP
	add $-1136, %RSP
uuid_0000000000079401:
	mov -976(%RBP),%RSP
	add $-1136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007940c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007940b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007940e
uuid_000000000007940c:
#call function compile-fragment-args : Arrow<Cons<Cons<Cons<FContext,Type>,AST>,I64>,FragmentList>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_0000000000076ba8
	pushq $uuid_0000000000078852
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079402
	jmp uuid_0000000000079404
uuid_0000000000079402:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_0000000000079404:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_0000000000076ba8
	pushq $uuid_0000000000078852
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079405
	jmp uuid_0000000000079407
uuid_0000000000079405:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_0000000000079407:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079408
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	jmp uuid_000000000007940a
uuid_0000000000079408:
uuid_000000000007940a:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007940e:
	mov -888(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000079418:
	mov -512(%RBP),%RSP
	add $-1480, %RSP
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_global_CL_ArrowNilConsASTConsStringFContext:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079422
	jmp uuid_0000000000079424
uuid_0000000000079422:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007941f
	jmp uuid_0000000000079421
uuid_000000000007941f:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007941c
	jmp uuid_000000000007941e
uuid_000000000007941c:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079419
	jmp uuid_000000000007941b
uuid_0000000000079419:
	movb $1, -472(%rbp)
uuid_000000000007941b:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007941e:
	mov -520(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079421:
	mov -488(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079424:
	mov -480(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007946a
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079462
	jmp uuid_0000000000079464
uuid_0000000000079462:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079450
	jmp uuid_0000000000079452
uuid_0000000000079450:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079447
	jmp uuid_0000000000079449
uuid_0000000000079447:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_0000000000079444
	jmp uuid_0000000000079446
uuid_0000000000079444:
	movb $1, -952(%rbp)
uuid_0000000000079446:
	mov -968(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000079449:
	mov -960(%RBP),%RSP
	add $-992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007944d
	jmp uuid_000000000007944f
uuid_000000000007944d:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007944a
	jmp uuid_000000000007944c
uuid_000000000007944a:
	movb $1, -856(%rbp)
uuid_000000000007944c:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007944f:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000079452:
	mov -864(%RBP),%RSP
	add $-1072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007945f
	jmp uuid_0000000000079461
uuid_000000000007945f:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079459
	jmp uuid_000000000007945b
uuid_0000000000079459:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_0000000000079456
	jmp uuid_0000000000079458
uuid_0000000000079456:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079453
	jmp uuid_0000000000079455
uuid_0000000000079453:
	movb $1, -1160(%rbp)
uuid_0000000000079455:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000079458:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007945b:
	mov -1168(%RBP),%RSP
	add $-1248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007945c
	jmp uuid_000000000007945e
uuid_000000000007945c:
	movb $1, -760(%rbp)
uuid_000000000007945e:
	mov -1080(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000079461:
	mov -776(%RBP),%RSP
	add $-1248, %RSP
uuid_0000000000079464:
	mov -768(%RBP),%RSP
	add $-1248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079467
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079466
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079469
uuid_0000000000079467:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -1280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079465
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000075f1f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	pushq -208(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq $7
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076358
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000076359
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007633c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq $-8
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $uuid_0000000000076b42
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_0000000000079469:
	mov -680(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007946c
uuid_000000000007946a:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $uuid_0000000000077a75
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079441
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_0000000000079425
	pushq $0
	pushq $0
	pushq $3
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq $0
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $8
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -712(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_00000000000783b1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007942d
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	jmp uuid_000000000007942f
uuid_000000000007942d:
	mov $main_SB_with_CL_U8, %r15
	movb $1, 0(%r15)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	push %RBP
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007942a
	push %RBP
	jmp uuid_0000000000079427
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079426
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079429
uuid_0000000000079427:
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $1, 0(%r15)
uuid_0000000000079429:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007942c
uuid_000000000007942a:
uuid_000000000007942c:
	mov -984(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000783b1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
uuid_000000000007942f:
	mov -904(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000076189
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	mov 0(%r15), %r15b
	push %r15
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007943b
	jmp uuid_000000000007943d
uuid_000000000007943b:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	pushq $0
	pushq $uuid_0000000000079430
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_0000000000079431
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_0000000000079432
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_0000000000079433
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079434
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_0000000000079435
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_0000000000079436
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079434
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_0000000000079435
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_0000000000079437
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079438
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_0000000000079439
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007943a
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007943d:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007943e
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_0000000000076b42
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000782d3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007943f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -712(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079329
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079440
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_0000000000079443
uuid_0000000000079441:
uuid_0000000000079443:
	mov -680(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007946c:
	mov -392(%RBP),%RSP
	add $-680, %RSP
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext:
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007946d
	movq -384(%rbp), %r15
	movq %r15, -488(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -472(%rbp)
	jmp uuid_000000000007946f
uuid_000000000007946d:
uuid_000000000007946f:
	mov -496(%RBP),%RSP
	add $-496, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079476
	jmp uuid_0000000000079478
uuid_0000000000079476:
	push %RBP
	jmp uuid_0000000000079473
	jmp uuid_0000000000079475
uuid_0000000000079473:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079470
	jmp uuid_0000000000079472
uuid_0000000000079470:
	movb $1, -560(%rbp)
uuid_0000000000079472:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000079475:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000079478:
	mov -568(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007947d
	push %RBP
	jmp uuid_000000000007947a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079479
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007947c
uuid_000000000007947a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_00000000000790e9
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_0000000000076586
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -208(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076510
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007947c:
	mov -600(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007947f
uuid_000000000007947d:
uuid_000000000007947f:
	mov -528(%RBP),%RSP
	add $-592, %RSP
	subq $152, %rsp
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $464, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079498
	jmp uuid_000000000007949a
uuid_0000000000079498:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007948f
	jmp uuid_0000000000079491
uuid_000000000007948f:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079486
	jmp uuid_0000000000079488
uuid_0000000000079486:
	push %RBP
	mov -624(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079483
	jmp uuid_0000000000079485
uuid_0000000000079483:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_0000000000079480
	jmp uuid_0000000000079482
uuid_0000000000079480:
	movb $1, -640(%rbp)
uuid_0000000000079482:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079485:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079488:
	mov -648(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007948c
	jmp uuid_000000000007948e
uuid_000000000007948c:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_0000000000079489
	jmp uuid_000000000007948b
uuid_0000000000079489:
	movb $1, -576(%rbp)
uuid_000000000007948b:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007948e:
	mov -592(%RBP),%RSP
	add $-760, %RSP
uuid_0000000000079491:
	mov -584(%RBP),%RSP
	add $-760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079495
	jmp uuid_0000000000079497
uuid_0000000000079495:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq $uuid_000000000007635a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079492
	jmp uuid_0000000000079494
uuid_0000000000079492:
	movb $1, -512(%rbp)
uuid_0000000000079494:
	mov -768(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000079497:
	mov -528(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007949a:
	mov -520(%RBP),%RSP
	add $-776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794bb
	push %RBP
	jmp uuid_00000000000794b8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000794b7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000794ba
uuid_00000000000794b8:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -792(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794b4
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794b1
	jmp uuid_00000000000794b3
uuid_00000000000794b1:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $uuid_0000000000076573
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794ae
	jmp uuid_00000000000794b0
uuid_00000000000794ae:
	pushq $uuid_0000000000076574
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076574
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000794b0:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_00000000000794b3:
	mov -808(%RBP),%RSP
	add $-912, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -384(%RBP), %RAX
	push %RAX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000794b6
uuid_00000000000794b4:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_0000000000076b42
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000794b6:
	mov -800(%RBP),%RSP
	add $-800, %RSP
uuid_00000000000794ba:
	mov -784(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_00000000000794bd
uuid_00000000000794bb:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794a1
	jmp uuid_00000000000794a3
uuid_00000000000794a1:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007949e
	jmp uuid_00000000000794a0
uuid_000000000007949e:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007949b
	jmp uuid_000000000007949d
uuid_000000000007949b:
	movb $1, -936(%rbp)
uuid_000000000007949d:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_00000000000794a0:
	mov -952(%RBP),%RSP
	add $-1104, %RSP
uuid_00000000000794a3:
	mov -944(%RBP),%RSP
	add $-1104, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -936(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794ab
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000794aa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000794ad
uuid_00000000000794ab:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794a7
	jmp uuid_00000000000794a9
uuid_00000000000794a7:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $uuid_0000000000076573
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794a4
	jmp uuid_00000000000794a6
uuid_00000000000794a4:
	pushq $uuid_0000000000076574
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076574
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000765c5
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000794a6:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_00000000000794a9:
	mov -1264(%RBP),%RSP
	add $-1368, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov -1192(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1456(%RBP), %RAX
	push %RAX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000794ad:
	mov -856(%RBP),%RSP
	add $-1528, %RSP
uuid_00000000000794bd:
	mov -480(%RBP),%RSP
	add $-1528, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	subq $152, %rsp
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq $uuid_0000000000077a75
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794d2
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794be
	jmp uuid_00000000000794c0
uuid_00000000000794be:
	pushq $4
	popq -472(%RBP)
uuid_00000000000794c0:
	mov -872(%RBP),%RSP
	add $-872, %RSP
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794c1
	jmp uuid_00000000000794c3
uuid_00000000000794c1:
	pushq $4
	popq -472(%RBP)
uuid_00000000000794c3:
	mov -880(%RBP),%RSP
	add $-880, %RSP
#call function compile-stack-call-push-args : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000794c4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1032(%RBP)
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	pushq $0
	pushq $0
	pushq $3
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000794c5
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000794c6
	pushq $0
	pushq -360(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000794c7
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000794c5
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000792e6
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000794c8
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_00000000000794c9
	pushq $0
#call function to-string : Arrow<IsUsed,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringIsUsed
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000792e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000792e8
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000792e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000794ca
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000794cb
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007635a
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000792e7
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -464(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	push %RBP
	movq -1072(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794cf
	jmp uuid_00000000000794d1
uuid_00000000000794cf:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $4
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794cc
	jmp uuid_00000000000794ce
uuid_00000000000794cc:
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_00000000000794ce:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_00000000000794d1:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	jmp uuid_00000000000794d4
uuid_00000000000794d2:
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -360(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_00000000000794d4:
	mov -864(%RBP),%RSP
	add $-864, %RSP
	subq $152, %rsp
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	pushq -728(%rbp)
	pushq -720(%rbp)
	pushq -712(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $480, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
uuid_00000000000794e2:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794e3
	jmp uuid_00000000000794e4
uuid_00000000000794e3:
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794db
	jmp uuid_00000000000794dd
uuid_00000000000794db:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000794d8
	jmp uuid_00000000000794da
uuid_00000000000794d8:
	push %RBP
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_00000000000794d5
	jmp uuid_00000000000794d7
uuid_00000000000794d5:
	movb $1, -1168(%rbp)
uuid_00000000000794d7:
	mov -1360(%RBP),%RSP
	add $-1512, %RSP
uuid_00000000000794da:
	mov -1184(%RBP),%RSP
	add $-1512, %RSP
uuid_00000000000794dd:
	mov -1176(%RBP),%RSP
	add $-1512, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794df
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000794de
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000794e1
uuid_00000000000794df:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1352(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -752(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -656(%rbp)
uuid_00000000000794e1:
	mov -992(%RBP),%RSP
	add $-1512, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000794e2
uuid_00000000000794e4:
	subq $152, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007950f
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794f1
	jmp uuid_00000000000794f3
uuid_00000000000794f1:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_00000000000794ee
	jmp uuid_00000000000794f0
uuid_00000000000794ee:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_00000000000794eb
	jmp uuid_00000000000794ed
uuid_00000000000794eb:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000794e8
	jmp uuid_00000000000794ea
uuid_00000000000794e8:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000794e5
	jmp uuid_00000000000794e7
uuid_00000000000794e5:
	movb $1, -840(%rbp)
uuid_00000000000794e7:
	mov -1064(%RBP),%RSP
	add $-1264, %RSP
uuid_00000000000794ea:
	mov -1048(%RBP),%RSP
	add $-1264, %RSP
uuid_00000000000794ed:
	mov -1016(%RBP),%RSP
	add $-1264, %RSP
uuid_00000000000794f0:
	mov -856(%RBP),%RSP
	add $-1264, %RSP
uuid_00000000000794f3:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007950c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007950b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007950e
uuid_000000000007950c:
#call function translate-local-variables : Arrow<Cons<FContext,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
	popq -1072(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007831b
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794f7
	jmp uuid_00000000000794f9
uuid_00000000000794f7:
	push %RBP
	mov -1312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq $uuid_00000000000769e7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794f4
	jmp uuid_00000000000794f6
uuid_00000000000794f4:
	movb $1, -1328(%rbp)
uuid_00000000000794f6:
	mov -1344(%RBP),%RSP
	add $-1352, %RSP
uuid_00000000000794f9:
	mov -1336(%RBP),%RSP
	add $-1352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079508
	push %RBP
	jmp uuid_0000000000079505
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079504
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079507
uuid_0000000000079505:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079507:
	mov -1360(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007950a
uuid_0000000000079508:
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_0000000000078382
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794fd
	jmp uuid_00000000000794ff
uuid_00000000000794fd:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000794fa
	jmp uuid_00000000000794fc
uuid_00000000000794fa:
	movb $1, -1416(%rbp)
uuid_00000000000794fc:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_00000000000794ff:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079501
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079500
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079503
uuid_0000000000079501:
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1448(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079503:
	mov -1384(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007950a:
	mov -1296(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007950e:
	mov -632(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_0000000000079511
uuid_000000000007950f:
uuid_0000000000079511:
	mov -424(%RBP),%RSP
	add $-624, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $216, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	push %RBP
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007951b
	jmp uuid_000000000007951d
uuid_000000000007951b:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_0000000000079518
	jmp uuid_000000000007951a
uuid_0000000000079518:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079515
	jmp uuid_0000000000079517
uuid_0000000000079515:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079512
	jmp uuid_0000000000079514
uuid_0000000000079512:
	movb $1, -760(%rbp)
uuid_0000000000079514:
	mov -888(%RBP),%RSP
	add $-960, %RSP
uuid_0000000000079517:
	mov -808(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007951a:
	mov -776(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007951d:
	mov -768(%RBP),%RSP
	add $-960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079523
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079522
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079525
uuid_0000000000079523:
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	mov -968(%RBP), %RAX
	movq %RAX, -288(%rbp)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_00000000000765c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007951f
	jmp uuid_0000000000079521
uuid_000000000007951f:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000079425
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq $uuid_0000000000079425
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007951e
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -1992(%RBP)
	popq -1984(%RBP)
	popq -1976(%RBP)
	popq -1968(%RBP)
	popq -1960(%RBP)
	popq -1952(%RBP)
	popq -1944(%RBP)
	popq -1936(%RBP)
	popq -1928(%RBP)
	popq -1920(%RBP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
	popq -1840(%RBP)
	popq -1832(%RBP)
	popq -1824(%RBP)
	popq -1816(%RBP)
	popq -1808(%RBP)
	popq -1800(%RBP)
uuid_0000000000079521:
	mov -2000(%RBP),%RSP
	add $-2152, %RSP
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
uuid_0000000000079525:
	mov -680(%RBP),%RSP
	add $-2224, %RSP
	subq $152, %rsp
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007952f
	jmp uuid_0000000000079531
uuid_000000000007952f:
	push %RBP
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	jmp uuid_000000000007952c
	jmp uuid_000000000007952e
uuid_000000000007952c:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079529
	jmp uuid_000000000007952b
uuid_0000000000079529:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079526
	jmp uuid_0000000000079528
uuid_0000000000079526:
	movb $1, -784(%rbp)
uuid_0000000000079528:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007952b:
	mov -832(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007952e:
	mov -800(%RBP),%RSP
	add $-984, %RSP
uuid_0000000000079531:
	mov -792(%RBP),%RSP
	add $-984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079533
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079532
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079535
uuid_0000000000079533:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
uuid_0000000000079535:
	mov -704(%RBP),%RSP
	add $-1056, %RSP
	subq $152, %rsp
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext:
	pushq -552(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079566
	jmp uuid_0000000000079568
uuid_0000000000079566:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007955d
	jmp uuid_000000000007955f
uuid_000000000007955d:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007954b
	jmp uuid_000000000007954d
uuid_000000000007954b:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079539
	jmp uuid_000000000007953b
uuid_0000000000079539:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_0000000000079536
	jmp uuid_0000000000079538
uuid_0000000000079536:
	movb $1, -1016(%rbp)
uuid_0000000000079538:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007953b:
	mov -1024(%RBP),%RSP
	add $-1056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079548
	jmp uuid_000000000007954a
uuid_0000000000079548:
	push %RBP
	mov -896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079542
	jmp uuid_0000000000079544
uuid_0000000000079542:
	push %RBP
	jmp uuid_000000000007953f
	jmp uuid_0000000000079541
uuid_000000000007953f:
	push %RBP
	mov -1072(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007953c
	jmp uuid_000000000007953e
uuid_000000000007953c:
	movb $1, -1144(%rbp)
uuid_000000000007953e:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_0000000000079541:
	mov -1160(%RBP),%RSP
	add $-1176, %RSP
uuid_0000000000079544:
	mov -1152(%RBP),%RSP
	add $-1176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079545
	jmp uuid_0000000000079547
uuid_0000000000079545:
	movb $1, -920(%rbp)
uuid_0000000000079547:
	mov -1064(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007954a:
	mov -936(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007954d:
	mov -928(%RBP),%RSP
	add $-1176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007955a
	jmp uuid_000000000007955c
uuid_000000000007955a:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079554
	jmp uuid_0000000000079556
uuid_0000000000079554:
	push %RBP
	jmp uuid_0000000000079551
	jmp uuid_0000000000079553
uuid_0000000000079551:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007954e
	jmp uuid_0000000000079550
uuid_000000000007954e:
	movb $1, -1264(%rbp)
uuid_0000000000079550:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_0000000000079553:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_0000000000079556:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079557
	jmp uuid_0000000000079559
uuid_0000000000079557:
	movb $1, -824(%rbp)
uuid_0000000000079559:
	mov -1184(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007955c:
	mov -840(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007955f:
	mov -832(%RBP),%RSP
	add $-1296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079563
	jmp uuid_0000000000079565
uuid_0000000000079563:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079560
	jmp uuid_0000000000079562
uuid_0000000000079560:
	movb $1, -728(%rbp)
uuid_0000000000079562:
	mov -1304(%RBP),%RSP
	add $-1376, %RSP
uuid_0000000000079565:
	mov -744(%RBP),%RSP
	add $-1376, %RSP
uuid_0000000000079568:
	mov -736(%RBP),%RSP
	add $-1376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795f7
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -1456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795ca
	jmp uuid_00000000000795cc
uuid_00000000000795ca:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795b8
	jmp uuid_00000000000795ba
uuid_00000000000795b8:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795a6
	jmp uuid_00000000000795a8
uuid_00000000000795a6:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	jmp uuid_00000000000795a3
	jmp uuid_00000000000795a5
uuid_00000000000795a3:
	movb $1, -1656(%rbp)
uuid_00000000000795a5:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
uuid_00000000000795a8:
	mov -1664(%RBP),%RSP
	add $-1696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1656(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795b5
	jmp uuid_00000000000795b7
uuid_00000000000795b5:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795af
	jmp uuid_00000000000795b1
uuid_00000000000795af:
	push %RBP
	jmp uuid_00000000000795ac
	jmp uuid_00000000000795ae
uuid_00000000000795ac:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000795a9
	jmp uuid_00000000000795ab
uuid_00000000000795a9:
	movb $1, -1784(%rbp)
uuid_00000000000795ab:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000795ae:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000795b1:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795b2
	jmp uuid_00000000000795b4
uuid_00000000000795b2:
	movb $1, -1560(%rbp)
uuid_00000000000795b4:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000795b7:
	mov -1576(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000795ba:
	mov -1568(%RBP),%RSP
	add $-1816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795c7
	jmp uuid_00000000000795c9
uuid_00000000000795c7:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795c1
	jmp uuid_00000000000795c3
uuid_00000000000795c1:
	push %RBP
	jmp uuid_00000000000795be
	jmp uuid_00000000000795c0
uuid_00000000000795be:
	push %RBP
	mov -1832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795bb
	jmp uuid_00000000000795bd
uuid_00000000000795bb:
	movb $1, -1904(%rbp)
uuid_00000000000795bd:
	mov -1928(%RBP),%RSP
	add $-1936, %RSP
uuid_00000000000795c0:
	mov -1920(%RBP),%RSP
	add $-1936, %RSP
uuid_00000000000795c3:
	mov -1912(%RBP),%RSP
	add $-1936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795c4
	jmp uuid_00000000000795c6
uuid_00000000000795c4:
	movb $1, -1464(%rbp)
uuid_00000000000795c6:
	mov -1824(%RBP),%RSP
	add $-1936, %RSP
uuid_00000000000795c9:
	mov -1480(%RBP),%RSP
	add $-1936, %RSP
uuid_00000000000795cc:
	mov -1472(%RBP),%RSP
	add $-1936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795f4
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795f1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000795f0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000795f3
uuid_00000000000795f1:
uuid_00000000000795f3:
	mov -1944(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_00000000000795f6
uuid_00000000000795f4:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795ed
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795ea
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795e4
	jmp uuid_00000000000795e6
uuid_00000000000795e4:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000795e6:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795e7
	jmp uuid_00000000000795e9
uuid_00000000000795e7:
	mov -2048(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_00000000000795e9:
	mov -2120(%RBP),%RSP
	add $-2120, %RSP
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_00000000000795ec
uuid_00000000000795ea:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795e1
	jmp uuid_00000000000795e3
uuid_00000000000795e1:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000795e3:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000795ec:
	mov -1952(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_00000000000795ef
uuid_00000000000795ed:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq $0
	push %RBP
	mov -2096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795d3
	jmp uuid_00000000000795d5
uuid_00000000000795d3:
	push %RBP
	mov -2088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000795d0
	jmp uuid_00000000000795d2
uuid_00000000000795d0:
	push %RBP
	mov -2080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000795cd
	jmp uuid_00000000000795cf
uuid_00000000000795cd:
	movb $1, -2104(%rbp)
uuid_00000000000795cf:
	mov -2200(%RBP),%RSP
	add $-2272, %RSP
uuid_00000000000795d2:
	mov -2120(%RBP),%RSP
	add $-2272, %RSP
uuid_00000000000795d5:
	mov -2112(%RBP),%RSP
	add $-2272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795de
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000795dd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000795e0
uuid_00000000000795de:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795da
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795d9
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000795dc
uuid_00000000000795da:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795d6
	jmp uuid_00000000000795d8
uuid_00000000000795d6:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000795d8:
	mov -2288(%RBP),%RSP
	add $-2288, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2408(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	pushq -3152(%RBP)
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	pushq -3216(%RBP)
	pushq -3224(%RBP)
	pushq -3232(%RBP)
	pushq -3240(%RBP)
	pushq -3248(%RBP)
	pushq -3256(%RBP)
	pushq -3264(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -2448(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_00000000000795dc:
	mov -2280(%RBP),%RSP
	add $-3272, %RSP
uuid_00000000000795e0:
	mov -2024(%RBP),%RSP
	add $-3272, %RSP
uuid_00000000000795ef:
	mov -1944(%RBP),%RSP
	add $-3272, %RSP
uuid_00000000000795f6:
	mov -1384(%RBP),%RSP
	add $-3272, %RSP
	jmp uuid_00000000000795f9
uuid_00000000000795f7:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007959d
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007959a
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079594
	jmp uuid_0000000000079596
uuid_0000000000079594:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079596:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079597
	jmp uuid_0000000000079599
uuid_0000000000079597:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_0000000000079599:
	mov -1560(%RBP),%RSP
	add $-1560, %RSP
	mov -1520(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007959c
uuid_000000000007959a:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079591
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1408(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_0000000000079593
uuid_0000000000079591:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007958b
	jmp uuid_000000000007958d
uuid_000000000007958b:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007958d:
	mov -1408(%RBP),%RSP
	add $-1408, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007958e
	jmp uuid_0000000000079590
uuid_000000000007958e:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_0000000000079590:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
	mov -1528(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079593:
	mov -1400(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007959c:
	mov -1392(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007959f
uuid_000000000007959d:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007956f
	jmp uuid_0000000000079571
uuid_000000000007956f:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007956c
	jmp uuid_000000000007956e
uuid_000000000007956c:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079569
	jmp uuid_000000000007956b
uuid_0000000000079569:
	movb $1, -1544(%rbp)
uuid_000000000007956b:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007956e:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000079571:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079588
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079587
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007958a
uuid_0000000000079588:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079584
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007957b
	jmp uuid_000000000007957d
uuid_000000000007957b:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007957d:
	mov -1728(%RBP),%RSP
	add $-1728, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007957e
	jmp uuid_0000000000079580
uuid_000000000007957e:
	mov -1816(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_0000000000079580:
	mov -1888(%RBP),%RSP
	add $-1888, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079581
	jmp uuid_0000000000079583
uuid_0000000000079581:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_0000000000079583:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1848(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_0000000000079586
uuid_0000000000079584:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079578
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1736(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007957a
uuid_0000000000079578:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079572
	jmp uuid_0000000000079574
uuid_0000000000079572:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079574:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079575
	jmp uuid_0000000000079577
uuid_0000000000079575:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_0000000000079577:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1856(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007957a:
	mov -1728(%RBP),%RSP
	add $-2728, %RSP
uuid_0000000000079586:
	mov -1720(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007958a:
	mov -1464(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007959f:
	mov -1384(%RBP),%RSP
	add $-2728, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000795a0
	jmp uuid_00000000000795a2
uuid_00000000000795a0:
	movq -568(%rbp), %r15
	movq %r15, -552(%rbp)
	mov -568(%rbp), %r15
	mov %r15, -552(%rbp)
uuid_00000000000795a2:
	mov -2736(%RBP),%RSP
	add $-2736, %RSP
uuid_00000000000795f9:
	mov -648(%RBP),%RSP
	add $-2736, %RSP
	pushq -552(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	pushq $0
	subq $424, %rsp
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	pushq 696(%rsp)
	pushq 712(%rsp)
	pushq 728(%rsp)
	pushq 744(%rsp)
	pushq 760(%rsp)
	pushq 776(%rsp)
	pushq 792(%rsp)
	pushq 808(%rsp)
	pushq 824(%rsp)
	pushq 840(%rsp)
	pushq 856(%rsp)
	pushq 872(%rsp)
	pushq 888(%rsp)
	pushq 904(%rsp)
	pushq 920(%rsp)
	pushq 936(%rsp)
	pushq 952(%rsp)
	pushq 968(%rsp)
	pushq 984(%rsp)
	pushq 1000(%rsp)
	pushq 1016(%rsp)
	pushq 1032(%rsp)
	pushq 1048(%rsp)
	pushq 1064(%rsp)
	pushq 1080(%rsp)
	pushq 1096(%rsp)
	pushq 1112(%rsp)
	pushq 1128(%rsp)
	pushq 1144(%rsp)
	pushq 1160(%rsp)
	pushq 1176(%rsp)
	pushq 1192(%rsp)
	pushq 1208(%rsp)
	pushq 1224(%rsp)
	pushq 1240(%rsp)
	pushq 1256(%rsp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	popq -640(%rbp)
	popq -648(%rbp)
	popq -656(%rbp)
	popq -664(%rbp)
	popq -672(%rbp)
	popq -680(%rbp)
	popq -688(%rbp)
	popq -696(%rbp)
	popq -704(%rbp)
	popq -712(%rbp)
	popq -720(%rbp)
	popq -728(%rbp)
	popq -736(%rbp)
	popq -744(%rbp)
	popq -752(%rbp)
	popq -760(%rbp)
	popq -768(%rbp)
	popq -776(%rbp)
	popq -784(%rbp)
	popq -792(%rbp)
	popq -800(%rbp)
	popq -808(%rbp)
	popq -816(%rbp)
	popq -824(%rbp)
	popq -832(%rbp)
	popq -840(%rbp)
	popq -848(%rbp)
	popq -856(%rbp)
	popq -864(%rbp)
	popq -872(%rbp)
	popq -880(%rbp)
	popq -888(%rbp)
	popq -896(%rbp)
	popq -904(%rbp)
	popq -912(%rbp)
	popq -920(%rbp)
	popq -928(%rbp)
	popq -936(%rbp)
	popq -944(%rbp)
	popq -952(%rbp)
	popq -960(%rbp)
	popq -968(%rbp)
	popq -976(%rbp)
	popq -984(%rbp)
	addq $424, %rsp
	mov %rbp, %rsp
	sub $560, %rsp
	ret
blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext:
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079910
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007990d
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079600
	jmp uuid_0000000000079602
uuid_0000000000079600:
	push %RBP
	jmp uuid_00000000000795fd
	jmp uuid_00000000000795ff
uuid_00000000000795fd:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000795fa
	jmp uuid_00000000000795fc
uuid_00000000000795fa:
	movb $1, -640(%rbp)
uuid_00000000000795fc:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_00000000000795ff:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079602:
	mov -648(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007990a
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079609
	jmp uuid_000000000007960b
uuid_0000000000079609:
	push %RBP
	jmp uuid_0000000000079606
	jmp uuid_0000000000079608
uuid_0000000000079606:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079603
	jmp uuid_0000000000079605
uuid_0000000000079603:
	movb $1, -760(%rbp)
uuid_0000000000079605:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079608:
	mov -776(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007960b:
	mov -768(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079907
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007962a
	jmp uuid_000000000007962c
uuid_000000000007962a:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079618
	jmp uuid_000000000007961a
uuid_0000000000079618:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007960f
	jmp uuid_0000000000079611
uuid_000000000007960f:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	jmp uuid_000000000007960c
	jmp uuid_000000000007960e
uuid_000000000007960c:
	movb $1, -1072(%rbp)
uuid_000000000007960e:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079611:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079615
	jmp uuid_0000000000079617
uuid_0000000000079615:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079612
	jmp uuid_0000000000079614
uuid_0000000000079612:
	movb $1, -976(%rbp)
uuid_0000000000079614:
	mov -1120(%RBP),%RSP
	add $-1192, %RSP
uuid_0000000000079617:
	mov -992(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007961a:
	mov -984(%RBP),%RSP
	add $-1192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079627
	jmp uuid_0000000000079629
uuid_0000000000079627:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079621
	jmp uuid_0000000000079623
uuid_0000000000079621:
	push %RBP
	jmp uuid_000000000007961e
	jmp uuid_0000000000079620
uuid_000000000007961e:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1312(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007961b
	jmp uuid_000000000007961d
uuid_000000000007961b:
	movb $1, -1280(%rbp)
uuid_000000000007961d:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000079620:
	mov -1296(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000079623:
	mov -1288(%RBP),%RSP
	add $-1312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079624
	jmp uuid_0000000000079626
uuid_0000000000079624:
	movb $1, -880(%rbp)
uuid_0000000000079626:
	mov -1200(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000079629:
	mov -896(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007962c:
	mov -888(%RBP),%RSP
	add $-1312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079904
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007964b
	jmp uuid_000000000007964d
uuid_000000000007964b:
	push %RBP
	mov -1384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079639
	jmp uuid_000000000007963b
uuid_0000000000079639:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1584(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079630
	jmp uuid_0000000000079632
uuid_0000000000079630:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007962d
	jmp uuid_000000000007962f
uuid_000000000007962d:
	movb $1, -1592(%rbp)
uuid_000000000007962f:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079632:
	mov -1600(%RBP),%RSP
	add $-1632, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079636
	jmp uuid_0000000000079638
uuid_0000000000079636:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079633
	jmp uuid_0000000000079635
uuid_0000000000079633:
	movb $1, -1496(%rbp)
uuid_0000000000079635:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000079638:
	mov -1512(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007963b:
	mov -1504(%RBP),%RSP
	add $-1712, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079648
	jmp uuid_000000000007964a
uuid_0000000000079648:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079642
	jmp uuid_0000000000079644
uuid_0000000000079642:
	push %RBP
	jmp uuid_000000000007963f
	jmp uuid_0000000000079641
uuid_000000000007963f:
	push %RBP
	mov -1728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007963c
	jmp uuid_000000000007963e
uuid_000000000007963c:
	movb $1, -1800(%rbp)
uuid_000000000007963e:
	mov -1824(%RBP),%RSP
	add $-1832, %RSP
uuid_0000000000079641:
	mov -1816(%RBP),%RSP
	add $-1832, %RSP
uuid_0000000000079644:
	mov -1808(%RBP),%RSP
	add $-1832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079645
	jmp uuid_0000000000079647
uuid_0000000000079645:
	movb $1, -1400(%rbp)
uuid_0000000000079647:
	mov -1720(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007964a:
	mov -1416(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007964d:
	mov -1408(%RBP),%RSP
	add $-1832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079901
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007965d
	jmp uuid_000000000007965f
uuid_000000000007965d:
	push %RBP
	mov -1904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007965a
	jmp uuid_000000000007965c
uuid_000000000007965a:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2088(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079654
	jmp uuid_0000000000079656
uuid_0000000000079654:
	push %RBP
	jmp uuid_0000000000079651
	jmp uuid_0000000000079653
uuid_0000000000079651:
	push %RBP
	mov -2024(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq $uuid_00000000000764b2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007964e
	jmp uuid_0000000000079650
uuid_000000000007964e:
	movb $1, -2096(%rbp)
uuid_0000000000079650:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_0000000000079653:
	mov -2112(%RBP),%RSP
	add $-2128, %RSP
uuid_0000000000079656:
	mov -2104(%RBP),%RSP
	add $-2128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2096(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079657
	jmp uuid_0000000000079659
uuid_0000000000079657:
	movb $1, -1920(%rbp)
uuid_0000000000079659:
	mov -2016(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007965c:
	mov -1936(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007965f:
	mov -1928(%RBP),%RSP
	add $-2128, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798fe
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796d4
	jmp uuid_00000000000796d6
uuid_00000000000796d4:
	push %RBP
	mov -2200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796a0
	jmp uuid_00000000000796a2
uuid_00000000000796a0:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007969d
	jmp uuid_000000000007969f
uuid_000000000007969d:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079697
	jmp uuid_0000000000079699
uuid_0000000000079697:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079679
	jmp uuid_000000000007967b
uuid_0000000000079679:
	push %RBP
	mov -2568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079666
	jmp uuid_0000000000079668
uuid_0000000000079666:
	push %RBP
	jmp uuid_0000000000079663
	jmp uuid_0000000000079665
uuid_0000000000079663:
	push %RBP
	mov -2608(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079660
	jmp uuid_0000000000079662
uuid_0000000000079660:
	movb $1, -2680(%rbp)
uuid_0000000000079662:
	mov -2704(%RBP),%RSP
	add $-2712, %RSP
uuid_0000000000079665:
	mov -2696(%RBP),%RSP
	add $-2712, %RSP
uuid_0000000000079668:
	mov -2688(%RBP),%RSP
	add $-2712, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079676
	jmp uuid_0000000000079678
uuid_0000000000079676:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079670
	jmp uuid_0000000000079672
uuid_0000000000079670:
	push %RBP
	jmp uuid_000000000007966d
	jmp uuid_000000000007966f
uuid_000000000007966d:
	push %RBP
	mov -2728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2832(%rbp)
	pushq $uuid_0000000000079669
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007966a
	jmp uuid_000000000007966c
uuid_000000000007966a:
	movb $1, -2800(%rbp)
uuid_000000000007966c:
	mov -2824(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007966f:
	mov -2816(%RBP),%RSP
	add $-2832, %RSP
uuid_0000000000079672:
	mov -2808(%RBP),%RSP
	add $-2832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079673
	jmp uuid_0000000000079675
uuid_0000000000079673:
	movb $1, -2584(%rbp)
uuid_0000000000079675:
	mov -2720(%RBP),%RSP
	add $-2832, %RSP
uuid_0000000000079678:
	mov -2600(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007967b:
	mov -2592(%RBP),%RSP
	add $-2832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079694
	jmp uuid_0000000000079696
uuid_0000000000079694:
	push %RBP
	mov -2464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007968e
	jmp uuid_0000000000079690
uuid_000000000007968e:
	push %RBP
	jmp uuid_000000000007968b
	jmp uuid_000000000007968d
uuid_000000000007968b:
	push %RBP
	mov -2880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079688
	jmp uuid_000000000007968a
uuid_0000000000079688:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079682
	jmp uuid_0000000000079684
uuid_0000000000079682:
	push %RBP
	jmp uuid_000000000007967f
	jmp uuid_0000000000079681
uuid_000000000007967f:
	push %RBP
	mov -3032(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007967c
	jmp uuid_000000000007967e
uuid_000000000007967c:
	movb $1, -3104(%rbp)
uuid_000000000007967e:
	mov -3128(%RBP),%RSP
	add $-3136, %RSP
uuid_0000000000079681:
	mov -3120(%RBP),%RSP
	add $-3136, %RSP
uuid_0000000000079684:
	mov -3112(%RBP),%RSP
	add $-3136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079685
	jmp uuid_0000000000079687
uuid_0000000000079685:
	movb $1, -2920(%rbp)
uuid_0000000000079687:
	mov -3024(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007968a:
	mov -2944(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007968d:
	mov -2936(%RBP),%RSP
	add $-3136, %RSP
uuid_0000000000079690:
	mov -2928(%RBP),%RSP
	add $-3136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2920(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079691
	jmp uuid_0000000000079693
uuid_0000000000079691:
	movb $1, -2488(%rbp)
uuid_0000000000079693:
	mov -2840(%RBP),%RSP
	add $-3136, %RSP
uuid_0000000000079696:
	mov -2504(%RBP),%RSP
	add $-3136, %RSP
uuid_0000000000079699:
	mov -2496(%RBP),%RSP
	add $-3136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007969a
	jmp uuid_000000000007969c
uuid_000000000007969a:
	movb $1, -2312(%rbp)
uuid_000000000007969c:
	mov -2408(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007969f:
	mov -2328(%RBP),%RSP
	add $-3136, %RSP
uuid_00000000000796a2:
	mov -2320(%RBP),%RSP
	add $-3136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796d1
	jmp uuid_00000000000796d3
uuid_00000000000796d1:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796cb
	jmp uuid_00000000000796cd
uuid_00000000000796cb:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3312(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796b9
	jmp uuid_00000000000796bb
uuid_00000000000796b9:
	push %RBP
	mov -3304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3408(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796a6
	jmp uuid_00000000000796a8
uuid_00000000000796a6:
	push %RBP
	jmp uuid_00000000000796a3
	jmp uuid_00000000000796a5
uuid_00000000000796a3:
	movb $1, -3416(%rbp)
uuid_00000000000796a5:
	mov -3432(%RBP),%RSP
	add $-3432, %RSP
uuid_00000000000796a8:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796b6
	jmp uuid_00000000000796b8
uuid_00000000000796b6:
	push %RBP
	mov -3296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796b0
	jmp uuid_00000000000796b2
uuid_00000000000796b0:
	push %RBP
	jmp uuid_00000000000796ad
	jmp uuid_00000000000796af
uuid_00000000000796ad:
	push %RBP
	mov -3448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3552(%rbp)
	pushq $uuid_00000000000796a9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796aa
	jmp uuid_00000000000796ac
uuid_00000000000796aa:
	movb $1, -3520(%rbp)
uuid_00000000000796ac:
	mov -3544(%RBP),%RSP
	add $-3552, %RSP
uuid_00000000000796af:
	mov -3536(%RBP),%RSP
	add $-3552, %RSP
uuid_00000000000796b2:
	mov -3528(%RBP),%RSP
	add $-3552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796b3
	jmp uuid_00000000000796b5
uuid_00000000000796b3:
	movb $1, -3320(%rbp)
uuid_00000000000796b5:
	mov -3440(%RBP),%RSP
	add $-3552, %RSP
uuid_00000000000796b8:
	mov -3336(%RBP),%RSP
	add $-3552, %RSP
uuid_00000000000796bb:
	mov -3328(%RBP),%RSP
	add $-3552, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3320(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796c8
	jmp uuid_00000000000796ca
uuid_00000000000796c8:
	push %RBP
	mov -3200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3632(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796c2
	jmp uuid_00000000000796c4
uuid_00000000000796c2:
	push %RBP
	jmp uuid_00000000000796bf
	jmp uuid_00000000000796c1
uuid_00000000000796bf:
	push %RBP
	mov -3568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3672(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796bc
	jmp uuid_00000000000796be
uuid_00000000000796bc:
	movb $1, -3640(%rbp)
uuid_00000000000796be:
	mov -3664(%RBP),%RSP
	add $-3672, %RSP
uuid_00000000000796c1:
	mov -3656(%RBP),%RSP
	add $-3672, %RSP
uuid_00000000000796c4:
	mov -3648(%RBP),%RSP
	add $-3672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796c5
	jmp uuid_00000000000796c7
uuid_00000000000796c5:
	movb $1, -3224(%rbp)
uuid_00000000000796c7:
	mov -3560(%RBP),%RSP
	add $-3672, %RSP
uuid_00000000000796ca:
	mov -3240(%RBP),%RSP
	add $-3672, %RSP
uuid_00000000000796cd:
	mov -3232(%RBP),%RSP
	add $-3672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796ce
	jmp uuid_00000000000796d0
uuid_00000000000796ce:
	movb $1, -2216(%rbp)
uuid_00000000000796d0:
	mov -3144(%RBP),%RSP
	add $-3672, %RSP
uuid_00000000000796d3:
	mov -2232(%RBP),%RSP
	add $-3672, %RSP
uuid_00000000000796d6:
	mov -2224(%RBP),%RSP
	add $-3672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798fb
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007973f
	jmp uuid_0000000000079741
uuid_000000000007973f:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007970b
	jmp uuid_000000000007970d
uuid_000000000007970b:
	push %RBP
	mov -3840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079708
	jmp uuid_000000000007970a
uuid_0000000000079708:
	push %RBP
	mov -3832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079702
	jmp uuid_0000000000079704
uuid_0000000000079702:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000796ff
	jmp uuid_0000000000079701
uuid_00000000000796ff:
	push %RBP
	mov -4008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796f9
	jmp uuid_00000000000796fb
uuid_00000000000796f9:
	push %RBP
	jmp uuid_00000000000796f6
	jmp uuid_00000000000796f8
uuid_00000000000796f6:
	push %RBP
	mov -4168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4304(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796f3
	jmp uuid_00000000000796f5
uuid_00000000000796f3:
	push %RBP
	mov -4160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ed
	jmp uuid_00000000000796ef
uuid_00000000000796ed:
	push %RBP
	jmp uuid_00000000000796ea
	jmp uuid_00000000000796ec
uuid_00000000000796ea:
	push %RBP
	mov -4320(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000796e7
	jmp uuid_00000000000796e9
uuid_00000000000796e7:
	movb $1, -4392(%rbp)
uuid_00000000000796e9:
	mov -4416(%RBP),%RSP
	add $-4424, %RSP
uuid_00000000000796ec:
	mov -4408(%RBP),%RSP
	add $-4424, %RSP
uuid_00000000000796ef:
	mov -4400(%RBP),%RSP
	add $-4424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796f0
	jmp uuid_00000000000796f2
uuid_00000000000796f0:
	movb $1, -4208(%rbp)
uuid_00000000000796f2:
	mov -4312(%RBP),%RSP
	add $-4424, %RSP
uuid_00000000000796f5:
	mov -4232(%RBP),%RSP
	add $-4424, %RSP
uuid_00000000000796f8:
	mov -4224(%RBP),%RSP
	add $-4424, %RSP
uuid_00000000000796fb:
	mov -4216(%RBP),%RSP
	add $-4424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796fc
	jmp uuid_00000000000796fe
uuid_00000000000796fc:
	movb $1, -4032(%rbp)
uuid_00000000000796fe:
	mov -4128(%RBP),%RSP
	add $-4424, %RSP
uuid_0000000000079701:
	mov -4048(%RBP),%RSP
	add $-4424, %RSP
uuid_0000000000079704:
	mov -4040(%RBP),%RSP
	add $-4424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4032(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079705
	jmp uuid_0000000000079707
uuid_0000000000079705:
	movb $1, -3856(%rbp)
uuid_0000000000079707:
	mov -3952(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007970a:
	mov -3872(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007970d:
	mov -3864(%RBP),%RSP
	add $-4424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007973c
	jmp uuid_000000000007973e
uuid_000000000007973c:
	push %RBP
	mov -3736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079736
	jmp uuid_0000000000079738
uuid_0000000000079736:
	push %RBP
	mov -4496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079724
	jmp uuid_0000000000079726
uuid_0000000000079724:
	push %RBP
	mov -4592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4696(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079711
	jmp uuid_0000000000079713
uuid_0000000000079711:
	push %RBP
	jmp uuid_000000000007970e
	jmp uuid_0000000000079710
uuid_000000000007970e:
	movb $1, -4704(%rbp)
uuid_0000000000079710:
	mov -4720(%RBP),%RSP
	add $-4720, %RSP
uuid_0000000000079713:
	mov -4712(%RBP),%RSP
	add $-4720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079721
	jmp uuid_0000000000079723
uuid_0000000000079721:
	push %RBP
	mov -4584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4800(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007971b
	jmp uuid_000000000007971d
uuid_000000000007971b:
	push %RBP
	jmp uuid_0000000000079718
	jmp uuid_000000000007971a
uuid_0000000000079718:
	push %RBP
	mov -4736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4840(%rbp)
	pushq $uuid_0000000000079714
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079715
	jmp uuid_0000000000079717
uuid_0000000000079715:
	movb $1, -4808(%rbp)
uuid_0000000000079717:
	mov -4832(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007971a:
	mov -4824(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007971d:
	mov -4816(%RBP),%RSP
	add $-4840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007971e
	jmp uuid_0000000000079720
uuid_000000000007971e:
	movb $1, -4608(%rbp)
uuid_0000000000079720:
	mov -4728(%RBP),%RSP
	add $-4840, %RSP
uuid_0000000000079723:
	mov -4624(%RBP),%RSP
	add $-4840, %RSP
uuid_0000000000079726:
	mov -4616(%RBP),%RSP
	add $-4840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079733
	jmp uuid_0000000000079735
uuid_0000000000079733:
	push %RBP
	mov -4488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4920(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007972d
	jmp uuid_000000000007972f
uuid_000000000007972d:
	push %RBP
	jmp uuid_000000000007972a
	jmp uuid_000000000007972c
uuid_000000000007972a:
	push %RBP
	mov -4856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079727
	jmp uuid_0000000000079729
uuid_0000000000079727:
	movb $1, -4928(%rbp)
uuid_0000000000079729:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007972c:
	mov -4944(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007972f:
	mov -4936(%RBP),%RSP
	add $-4960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079730
	jmp uuid_0000000000079732
uuid_0000000000079730:
	movb $1, -4512(%rbp)
uuid_0000000000079732:
	mov -4848(%RBP),%RSP
	add $-4960, %RSP
uuid_0000000000079735:
	mov -4528(%RBP),%RSP
	add $-4960, %RSP
uuid_0000000000079738:
	mov -4520(%RBP),%RSP
	add $-4960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079739
	jmp uuid_000000000007973b
uuid_0000000000079739:
	movb $1, -3760(%rbp)
uuid_000000000007973b:
	mov -4432(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007973e:
	mov -3776(%RBP),%RSP
	add $-4960, %RSP
uuid_0000000000079741:
	mov -3768(%RBP),%RSP
	add $-4960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798f8
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007976e
	jmp uuid_0000000000079770
uuid_000000000007976e:
	push %RBP
	mov -5032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5136(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007975b
	jmp uuid_000000000007975d
uuid_000000000007975b:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079758
	jmp uuid_000000000007975a
uuid_0000000000079758:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079755
	jmp uuid_0000000000079757
uuid_0000000000079755:
	movb $1, -5144(%rbp)
uuid_0000000000079757:
	mov -5240(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007975a:
	mov -5160(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007975d:
	mov -5152(%RBP),%RSP
	add $-5312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5144(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007976b
	jmp uuid_000000000007976d
uuid_000000000007976b:
	push %RBP
	mov -5024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079765
	jmp uuid_0000000000079767
uuid_0000000000079765:
	push %RBP
	jmp uuid_0000000000079762
	jmp uuid_0000000000079764
uuid_0000000000079762:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5432(%rbp)
	pushq $uuid_000000000007975e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007975f
	jmp uuid_0000000000079761
uuid_000000000007975f:
	movb $1, -5400(%rbp)
uuid_0000000000079761:
	mov -5424(%RBP),%RSP
	add $-5432, %RSP
uuid_0000000000079764:
	mov -5416(%RBP),%RSP
	add $-5432, %RSP
uuid_0000000000079767:
	mov -5408(%RBP),%RSP
	add $-5432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079768
	jmp uuid_000000000007976a
uuid_0000000000079768:
	movb $1, -5048(%rbp)
uuid_000000000007976a:
	mov -5320(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007976d:
	mov -5064(%RBP),%RSP
	add $-5432, %RSP
uuid_0000000000079770:
	mov -5056(%RBP),%RSP
	add $-5432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798f5
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079784
	jmp uuid_0000000000079786
uuid_0000000000079784:
	push %RBP
	jmp uuid_0000000000079781
	jmp uuid_0000000000079783
uuid_0000000000079781:
	push %RBP
	mov -5496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007977b
	jmp uuid_000000000007977d
uuid_000000000007977b:
	push %RBP
	jmp uuid_0000000000079778
	jmp uuid_000000000007977a
uuid_0000000000079778:
	push %RBP
	mov -5552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5656(%rbp)
	pushq $uuid_0000000000079774
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079775
	jmp uuid_0000000000079777
uuid_0000000000079775:
	movb $1, -5624(%rbp)
uuid_0000000000079777:
	mov -5648(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007977a:
	mov -5640(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007977d:
	mov -5632(%RBP),%RSP
	add $-5656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007977e
	jmp uuid_0000000000079780
uuid_000000000007977e:
	movb $1, -5520(%rbp)
uuid_0000000000079780:
	mov -5544(%RBP),%RSP
	add $-5656, %RSP
uuid_0000000000079783:
	mov -5536(%RBP),%RSP
	add $-5656, %RSP
uuid_0000000000079786:
	mov -5528(%RBP),%RSP
	add $-5656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798f2
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079797
	jmp uuid_0000000000079799
uuid_0000000000079797:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079794
	jmp uuid_0000000000079796
uuid_0000000000079794:
	push %RBP
	mov -5720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5912(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007978e
	jmp uuid_0000000000079790
uuid_000000000007978e:
	push %RBP
	jmp uuid_000000000007978b
	jmp uuid_000000000007978d
uuid_000000000007978b:
	push %RBP
	mov -5848(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq $uuid_0000000000079787
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079788
	jmp uuid_000000000007978a
uuid_0000000000079788:
	movb $1, -5920(%rbp)
uuid_000000000007978a:
	mov -5944(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007978d:
	mov -5936(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000079790:
	mov -5928(%RBP),%RSP
	add $-5952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5920(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079791
	jmp uuid_0000000000079793
uuid_0000000000079791:
	movb $1, -5744(%rbp)
uuid_0000000000079793:
	mov -5840(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000079796:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000079799:
	mov -5752(%RBP),%RSP
	add $-5952, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798ef
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797b3
	jmp uuid_00000000000797b5
uuid_00000000000797b3:
	push %RBP
	mov -6024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797a0
	jmp uuid_00000000000797a2
uuid_00000000000797a0:
	push %RBP
	mov -6120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007979d
	jmp uuid_000000000007979f
uuid_000000000007979d:
	push %RBP
	mov -6112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007979a
	jmp uuid_000000000007979c
uuid_000000000007979a:
	movb $1, -6136(%rbp)
uuid_000000000007979c:
	mov -6232(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007979f:
	mov -6152(%RBP),%RSP
	add $-6304, %RSP
uuid_00000000000797a2:
	mov -6144(%RBP),%RSP
	add $-6304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797b0
	jmp uuid_00000000000797b2
uuid_00000000000797b0:
	push %RBP
	mov -6016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797aa
	jmp uuid_00000000000797ac
uuid_00000000000797aa:
	push %RBP
	jmp uuid_00000000000797a7
	jmp uuid_00000000000797a9
uuid_00000000000797a7:
	push %RBP
	mov -6320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6424(%rbp)
	pushq $uuid_00000000000797a3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797a4
	jmp uuid_00000000000797a6
uuid_00000000000797a4:
	movb $1, -6392(%rbp)
uuid_00000000000797a6:
	mov -6416(%RBP),%RSP
	add $-6424, %RSP
uuid_00000000000797a9:
	mov -6408(%RBP),%RSP
	add $-6424, %RSP
uuid_00000000000797ac:
	mov -6400(%RBP),%RSP
	add $-6424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797ad
	jmp uuid_00000000000797af
uuid_00000000000797ad:
	movb $1, -6040(%rbp)
uuid_00000000000797af:
	mov -6312(%RBP),%RSP
	add $-6424, %RSP
uuid_00000000000797b2:
	mov -6056(%RBP),%RSP
	add $-6424, %RSP
uuid_00000000000797b5:
	mov -6048(%RBP),%RSP
	add $-6424, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798ec
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797d1
	jmp uuid_00000000000797d3
uuid_00000000000797d1:
	push %RBP
	mov -6496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797bf
	jmp uuid_00000000000797c1
uuid_00000000000797bf:
	push %RBP
	mov -6592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797bc
	jmp uuid_00000000000797be
uuid_00000000000797bc:
	push %RBP
	mov -6584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797b9
	jmp uuid_00000000000797bb
uuid_00000000000797b9:
	movb $1, -6608(%rbp)
uuid_00000000000797bb:
	mov -6704(%RBP),%RSP
	add $-6776, %RSP
uuid_00000000000797be:
	mov -6624(%RBP),%RSP
	add $-6776, %RSP
uuid_00000000000797c1:
	mov -6616(%RBP),%RSP
	add $-6776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797ce
	jmp uuid_00000000000797d0
uuid_00000000000797ce:
	push %RBP
	mov -6488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6856(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797c8
	jmp uuid_00000000000797ca
uuid_00000000000797c8:
	push %RBP
	jmp uuid_00000000000797c5
	jmp uuid_00000000000797c7
uuid_00000000000797c5:
	push %RBP
	mov -6792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6896(%rbp)
	pushq $uuid_00000000000762ac
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797c2
	jmp uuid_00000000000797c4
uuid_00000000000797c2:
	movb $1, -6864(%rbp)
uuid_00000000000797c4:
	mov -6888(%RBP),%RSP
	add $-6896, %RSP
uuid_00000000000797c7:
	mov -6880(%RBP),%RSP
	add $-6896, %RSP
uuid_00000000000797ca:
	mov -6872(%RBP),%RSP
	add $-6896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797cb
	jmp uuid_00000000000797cd
uuid_00000000000797cb:
	movb $1, -6512(%rbp)
uuid_00000000000797cd:
	mov -6784(%RBP),%RSP
	add $-6896, %RSP
uuid_00000000000797d0:
	mov -6528(%RBP),%RSP
	add $-6896, %RSP
uuid_00000000000797d3:
	mov -6520(%RBP),%RSP
	add $-6896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798e9
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6976(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797f0
	jmp uuid_00000000000797f2
uuid_00000000000797f0:
	push %RBP
	mov -6968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797dd
	jmp uuid_00000000000797df
uuid_00000000000797dd:
	push %RBP
	mov -7064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797da
	jmp uuid_00000000000797dc
uuid_00000000000797da:
	push %RBP
	mov -7056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797d7
	jmp uuid_00000000000797d9
uuid_00000000000797d7:
	movb $1, -7080(%rbp)
uuid_00000000000797d9:
	mov -7176(%RBP),%RSP
	add $-7248, %RSP
uuid_00000000000797dc:
	mov -7096(%RBP),%RSP
	add $-7248, %RSP
uuid_00000000000797df:
	mov -7088(%RBP),%RSP
	add $-7248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7080(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797ed
	jmp uuid_00000000000797ef
uuid_00000000000797ed:
	push %RBP
	mov -6960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797e7
	jmp uuid_00000000000797e9
uuid_00000000000797e7:
	push %RBP
	jmp uuid_00000000000797e4
	jmp uuid_00000000000797e6
uuid_00000000000797e4:
	push %RBP
	mov -7264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7368(%rbp)
	pushq $uuid_00000000000797e0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797e1
	jmp uuid_00000000000797e3
uuid_00000000000797e1:
	movb $1, -7336(%rbp)
uuid_00000000000797e3:
	mov -7360(%RBP),%RSP
	add $-7368, %RSP
uuid_00000000000797e6:
	mov -7352(%RBP),%RSP
	add $-7368, %RSP
uuid_00000000000797e9:
	mov -7344(%RBP),%RSP
	add $-7368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797ea
	jmp uuid_00000000000797ec
uuid_00000000000797ea:
	movb $1, -6984(%rbp)
uuid_00000000000797ec:
	mov -7256(%RBP),%RSP
	add $-7368, %RSP
uuid_00000000000797ef:
	mov -7000(%RBP),%RSP
	add $-7368, %RSP
uuid_00000000000797f2:
	mov -6992(%RBP),%RSP
	add $-7368, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6984(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798e6
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007980c
	jmp uuid_000000000007980e
uuid_000000000007980c:
	push %RBP
	mov -7440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797f9
	jmp uuid_00000000000797fb
uuid_00000000000797f9:
	push %RBP
	mov -7536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797f6
	jmp uuid_00000000000797f8
uuid_00000000000797f6:
	push %RBP
	mov -7528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797f3
	jmp uuid_00000000000797f5
uuid_00000000000797f3:
	movb $1, -7552(%rbp)
uuid_00000000000797f5:
	mov -7648(%RBP),%RSP
	add $-7720, %RSP
uuid_00000000000797f8:
	mov -7568(%RBP),%RSP
	add $-7720, %RSP
uuid_00000000000797fb:
	mov -7560(%RBP),%RSP
	add $-7720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079809
	jmp uuid_000000000007980b
uuid_0000000000079809:
	push %RBP
	mov -7432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079803
	jmp uuid_0000000000079805
uuid_0000000000079803:
	push %RBP
	jmp uuid_0000000000079800
	jmp uuid_0000000000079802
uuid_0000000000079800:
	push %RBP
	mov -7736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7840(%rbp)
	pushq $uuid_00000000000797fc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797fd
	jmp uuid_00000000000797ff
uuid_00000000000797fd:
	movb $1, -7808(%rbp)
uuid_00000000000797ff:
	mov -7832(%RBP),%RSP
	add $-7840, %RSP
uuid_0000000000079802:
	mov -7824(%RBP),%RSP
	add $-7840, %RSP
uuid_0000000000079805:
	mov -7816(%RBP),%RSP
	add $-7840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079806
	jmp uuid_0000000000079808
uuid_0000000000079806:
	movb $1, -7456(%rbp)
uuid_0000000000079808:
	mov -7728(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007980b:
	mov -7472(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007980e:
	mov -7464(%RBP),%RSP
	add $-7840, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798e3
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079828
	jmp uuid_000000000007982a
uuid_0000000000079828:
	push %RBP
	mov -7912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079815
	jmp uuid_0000000000079817
uuid_0000000000079815:
	push %RBP
	mov -8008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079812
	jmp uuid_0000000000079814
uuid_0000000000079812:
	push %RBP
	mov -8000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007980f
	jmp uuid_0000000000079811
uuid_000000000007980f:
	movb $1, -8024(%rbp)
uuid_0000000000079811:
	mov -8120(%RBP),%RSP
	add $-8192, %RSP
uuid_0000000000079814:
	mov -8040(%RBP),%RSP
	add $-8192, %RSP
uuid_0000000000079817:
	mov -8032(%RBP),%RSP
	add $-8192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079825
	jmp uuid_0000000000079827
uuid_0000000000079825:
	push %RBP
	mov -7904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007981f
	jmp uuid_0000000000079821
uuid_000000000007981f:
	push %RBP
	jmp uuid_000000000007981c
	jmp uuid_000000000007981e
uuid_000000000007981c:
	push %RBP
	mov -8208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8312(%rbp)
	pushq $uuid_0000000000079818
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079819
	jmp uuid_000000000007981b
uuid_0000000000079819:
	movb $1, -8280(%rbp)
uuid_000000000007981b:
	mov -8304(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007981e:
	mov -8296(%RBP),%RSP
	add $-8312, %RSP
uuid_0000000000079821:
	mov -8288(%RBP),%RSP
	add $-8312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079822
	jmp uuid_0000000000079824
uuid_0000000000079822:
	movb $1, -7928(%rbp)
uuid_0000000000079824:
	mov -8200(%RBP),%RSP
	add $-8312, %RSP
uuid_0000000000079827:
	mov -7944(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007982a:
	mov -7936(%RBP),%RSP
	add $-8312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798e0
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079843
	jmp uuid_0000000000079845
uuid_0000000000079843:
	push %RBP
	mov -8384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079831
	jmp uuid_0000000000079833
uuid_0000000000079831:
	push %RBP
	mov -8480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007982e
	jmp uuid_0000000000079830
uuid_000000000007982e:
	push %RBP
	mov -8472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007982b
	jmp uuid_000000000007982d
uuid_000000000007982b:
	movb $1, -8496(%rbp)
uuid_000000000007982d:
	mov -8592(%RBP),%RSP
	add $-8664, %RSP
uuid_0000000000079830:
	mov -8512(%RBP),%RSP
	add $-8664, %RSP
uuid_0000000000079833:
	mov -8504(%RBP),%RSP
	add $-8664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079840
	jmp uuid_0000000000079842
uuid_0000000000079840:
	push %RBP
	mov -8376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8744(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007983a
	jmp uuid_000000000007983c
uuid_000000000007983a:
	push %RBP
	jmp uuid_0000000000079837
	jmp uuid_0000000000079839
uuid_0000000000079837:
	push %RBP
	mov -8680(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8784(%rbp)
	pushq $uuid_0000000000076285
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079834
	jmp uuid_0000000000079836
uuid_0000000000079834:
	movb $1, -8752(%rbp)
uuid_0000000000079836:
	mov -8776(%RBP),%RSP
	add $-8784, %RSP
uuid_0000000000079839:
	mov -8768(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007983c:
	mov -8760(%RBP),%RSP
	add $-8784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8752(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007983d
	jmp uuid_000000000007983f
uuid_000000000007983d:
	movb $1, -8400(%rbp)
uuid_000000000007983f:
	mov -8672(%RBP),%RSP
	add $-8784, %RSP
uuid_0000000000079842:
	mov -8416(%RBP),%RSP
	add $-8784, %RSP
uuid_0000000000079845:
	mov -8408(%RBP),%RSP
	add $-8784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798dd
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8864(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007985e
	jmp uuid_0000000000079860
uuid_000000000007985e:
	push %RBP
	mov -8856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007984c
	jmp uuid_000000000007984e
uuid_000000000007984c:
	push %RBP
	mov -8952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079849
	jmp uuid_000000000007984b
uuid_0000000000079849:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079846
	jmp uuid_0000000000079848
uuid_0000000000079846:
	movb $1, -8968(%rbp)
uuid_0000000000079848:
	mov -9064(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007984b:
	mov -8984(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007984e:
	mov -8976(%RBP),%RSP
	add $-9136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007985b
	jmp uuid_000000000007985d
uuid_000000000007985b:
	push %RBP
	mov -8848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9216(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079855
	jmp uuid_0000000000079857
uuid_0000000000079855:
	push %RBP
	jmp uuid_0000000000079852
	jmp uuid_0000000000079854
uuid_0000000000079852:
	push %RBP
	mov -9152(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9256(%rbp)
	pushq $uuid_0000000000075f5a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007984f
	jmp uuid_0000000000079851
uuid_000000000007984f:
	movb $1, -9224(%rbp)
uuid_0000000000079851:
	mov -9248(%RBP),%RSP
	add $-9256, %RSP
uuid_0000000000079854:
	mov -9240(%RBP),%RSP
	add $-9256, %RSP
uuid_0000000000079857:
	mov -9232(%RBP),%RSP
	add $-9256, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079858
	jmp uuid_000000000007985a
uuid_0000000000079858:
	movb $1, -8872(%rbp)
uuid_000000000007985a:
	mov -9144(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007985d:
	mov -8888(%RBP),%RSP
	add $-9256, %RSP
uuid_0000000000079860:
	mov -8880(%RBP),%RSP
	add $-9256, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798da
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079882
	jmp uuid_0000000000079884
uuid_0000000000079882:
	push %RBP
	mov -9328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007987f
	jmp uuid_0000000000079881
uuid_000000000007987f:
	push %RBP
	mov -9320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079879
	jmp uuid_000000000007987b
uuid_0000000000079879:
	push %RBP
	mov -9504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079876
	jmp uuid_0000000000079878
uuid_0000000000079876:
	push %RBP
	mov -9496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079870
	jmp uuid_0000000000079872
uuid_0000000000079870:
	push %RBP
	mov -9680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007986d
	jmp uuid_000000000007986f
uuid_000000000007986d:
	push %RBP
	mov -9672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079867
	jmp uuid_0000000000079869
uuid_0000000000079867:
	push %RBP
	jmp uuid_0000000000079864
	jmp uuid_0000000000079866
uuid_0000000000079864:
	push %RBP
	mov -9800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9904(%rbp)
	pushq $uuid_0000000000076415
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079861
	jmp uuid_0000000000079863
uuid_0000000000079861:
	movb $1, -9872(%rbp)
uuid_0000000000079863:
	mov -9896(%RBP),%RSP
	add $-9904, %RSP
uuid_0000000000079866:
	mov -9888(%RBP),%RSP
	add $-9904, %RSP
uuid_0000000000079869:
	mov -9880(%RBP),%RSP
	add $-9904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007986a
	jmp uuid_000000000007986c
uuid_000000000007986a:
	movb $1, -9696(%rbp)
uuid_000000000007986c:
	mov -9792(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007986f:
	mov -9712(%RBP),%RSP
	add $-9904, %RSP
uuid_0000000000079872:
	mov -9704(%RBP),%RSP
	add $-9904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079873
	jmp uuid_0000000000079875
uuid_0000000000079873:
	movb $1, -9520(%rbp)
uuid_0000000000079875:
	mov -9616(%RBP),%RSP
	add $-9904, %RSP
uuid_0000000000079878:
	mov -9536(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007987b:
	mov -9528(%RBP),%RSP
	add $-9904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007987c
	jmp uuid_000000000007987e
uuid_000000000007987c:
	movb $1, -9344(%rbp)
uuid_000000000007987e:
	mov -9440(%RBP),%RSP
	add $-9904, %RSP
uuid_0000000000079881:
	mov -9360(%RBP),%RSP
	add $-9904, %RSP
uuid_0000000000079884:
	mov -9352(%RBP),%RSP
	add $-9904, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798d7
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798ad
	jmp uuid_00000000000798af
uuid_00000000000798ad:
	push %RBP
	mov -9976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000798aa
	jmp uuid_00000000000798ac
uuid_00000000000798aa:
	push %RBP
	mov -9968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798a4
	jmp uuid_00000000000798a6
uuid_00000000000798a4:
	push %RBP
	pushq -10136(%RBP)
	pushq -10144(%RBP)
	pushq -10152(%RBP)
	jmp uuid_00000000000798a1
	jmp uuid_00000000000798a3
uuid_00000000000798a1:
	push %RBP
	mov -10128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -10288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007989e
	jmp uuid_00000000000798a0
uuid_000000000007989e:
	push %RBP
	mov -10120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079898
	jmp uuid_000000000007989a
uuid_0000000000079898:
	push %RBP
	jmp uuid_0000000000079895
	jmp uuid_0000000000079897
uuid_0000000000079895:
	push %RBP
	mov -10304(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079892
	jmp uuid_0000000000079894
uuid_0000000000079892:
	movb $1, -10376(%rbp)
uuid_0000000000079894:
	mov -10400(%RBP),%RSP
	add $-10408, %RSP
uuid_0000000000079897:
	mov -10392(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007989a:
	mov -10384(%RBP),%RSP
	add $-10408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007989b
	jmp uuid_000000000007989d
uuid_000000000007989b:
	movb $1, -10168(%rbp)
uuid_000000000007989d:
	mov -10296(%RBP),%RSP
	add $-10408, %RSP
uuid_00000000000798a0:
	mov -10216(%RBP),%RSP
	add $-10408, %RSP
uuid_00000000000798a3:
	mov -10184(%RBP),%RSP
	add $-10408, %RSP
uuid_00000000000798a6:
	mov -10176(%RBP),%RSP
	add $-10408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798a7
	jmp uuid_00000000000798a9
uuid_00000000000798a7:
	movb $1, -9992(%rbp)
uuid_00000000000798a9:
	mov -10088(%RBP),%RSP
	add $-10408, %RSP
uuid_00000000000798ac:
	mov -10008(%RBP),%RSP
	add $-10408, %RSP
uuid_00000000000798af:
	mov -10000(%RBP),%RSP
	add $-10408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9992(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798d4
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -10488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798b6
	jmp uuid_00000000000798b8
uuid_00000000000798b6:
	push %RBP
	mov -10480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000798b3
	jmp uuid_00000000000798b5
uuid_00000000000798b3:
	push %RBP
	mov -10472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000798b0
	jmp uuid_00000000000798b2
uuid_00000000000798b0:
	movb $1, -10496(%rbp)
uuid_00000000000798b2:
	mov -10592(%RBP),%RSP
	add $-10664, %RSP
uuid_00000000000798b5:
	mov -10512(%RBP),%RSP
	add $-10664, %RSP
uuid_00000000000798b8:
	mov -10504(%RBP),%RSP
	add $-10664, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798d1
	push %RBP
	jmp uuid_00000000000798ce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000798cd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000798d0
uuid_00000000000798ce:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000798cc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000798d0:
	mov -10672(%RBP),%RSP
	add $-10672, %RSP
	jmp uuid_00000000000798d3
uuid_00000000000798d1:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798c9
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10680(%RBP)
	pushq -10688(%RBP)
	pushq -10696(%RBP)
	pushq -10704(%RBP)
	pushq -10712(%RBP)
	pushq -10720(%RBP)
	pushq -10728(%RBP)
	pushq -10736(%RBP)
	pushq -10744(%RBP)
	pushq -10752(%RBP)
	pushq -10760(%RBP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
	pushq -10792(%RBP)
	pushq -10800(%RBP)
	pushq -10808(%RBP)
	pushq -10816(%RBP)
	pushq -10824(%RBP)
	pushq -10832(%RBP)
	pushq -10840(%RBP)
	pushq -10848(%RBP)
	pushq -10856(%RBP)
	pushq -10864(%RBP)
	pushq -10872(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10912(%RBP)
	pushq -10920(%RBP)
	pushq -10928(%RBP)
	pushq -10936(%RBP)
	pushq -10944(%RBP)
	pushq -10952(%RBP)
	pushq -10960(%RBP)
	pushq -10968(%RBP)
	pushq -10976(%RBP)
	pushq -10984(%RBP)
	pushq -10992(%RBP)
	pushq -11000(%RBP)
	pushq -11008(%RBP)
	pushq -11016(%RBP)
	pushq -11024(%RBP)
	pushq -11032(%RBP)
	pushq -11040(%RBP)
	pushq -11048(%RBP)
	pushq -11056(%RBP)
	pushq -11064(%RBP)
	pushq -11072(%RBP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	pushq -11104(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -10880(%RBP)
	pushq -10888(%RBP)
	pushq -10896(%RBP)
	pushq -11112(%RBP)
	pushq -11120(%RBP)
	pushq -11128(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -11144(%rbp)
	pushq -11152(%rbp)
	pushq -11160(%rbp)
	pushq -11168(%rbp)
	pushq -11176(%rbp)
	pushq -11184(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000798cb
uuid_00000000000798c9:
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	push %RBP
	pushq -10680(%rbp)
	pushq -10688(%rbp)
	pushq -10696(%rbp)
	pushq -10704(%rbp)
	pushq -10712(%rbp)
	pushq -10720(%rbp)
	pushq -10728(%rbp)
	pushq -10736(%rbp)
	pushq -10744(%rbp)
	pushq $0
	push %RBP
	mov -10824(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798bf
	jmp uuid_00000000000798c1
uuid_00000000000798bf:
	push %RBP
	jmp uuid_00000000000798bc
	jmp uuid_00000000000798be
uuid_00000000000798bc:
	push %RBP
	mov -10760(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000798b9
	jmp uuid_00000000000798bb
uuid_00000000000798b9:
	movb $1, -10832(%rbp)
uuid_00000000000798bb:
	mov -10856(%RBP),%RSP
	add $-10864, %RSP
uuid_00000000000798be:
	mov -10848(%RBP),%RSP
	add $-10864, %RSP
uuid_00000000000798c1:
	mov -10840(%RBP),%RSP
	add $-10864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000798c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000798c8
uuid_00000000000798c6:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10864(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798c2
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10864(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10880(%rbp)
	pushq -10888(%rbp)
	pushq -10896(%rbp)
	pushq -10904(%rbp)
	pushq -10912(%rbp)
	pushq -10920(%rbp)
	pushq -10928(%rbp)
	pushq -10936(%rbp)
	pushq -10944(%rbp)
	pushq -10952(%rbp)
	pushq -10960(%rbp)
	pushq -10968(%rbp)
	pushq -10976(%rbp)
	pushq -10984(%rbp)
	pushq -10992(%rbp)
	pushq -11000(%rbp)
	pushq -11008(%rbp)
	pushq -11016(%rbp)
	pushq -11024(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000798c4
uuid_00000000000798c2:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10864(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798c4:
	mov -10872(%RBP),%RSP
	add $-11104, %RSP
uuid_00000000000798c8:
	mov -10752(%RBP),%RSP
	add $-11104, %RSP
uuid_00000000000798cb:
	mov -10672(%RBP),%RSP
	add $-11104, %RSP
uuid_00000000000798d3:
	mov -10416(%RBP),%RSP
	add $-11104, %RSP
	jmp uuid_00000000000798d6
uuid_00000000000798d4:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -208(%rbp)
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq $uuid_0000000000078382
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10408(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_00000000000798d6:
	mov -9912(%RBP),%RSP
	add $-10816, %RSP
	jmp uuid_00000000000798d9
uuid_00000000000798d7:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9720(%rbp)
	pushq -9728(%rbp)
	pushq -9736(%rbp)
	pushq -9744(%rbp)
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10112(%RBP)
	pushq -10120(%RBP)
	pushq -10128(%RBP)
	pushq -10144(%rbp)
	pushq -10152(%rbp)
	pushq -10160(%rbp)
	push %RBP
	pushq -10168(%rbp)
	pushq -10176(%rbp)
	pushq -10184(%rbp)
	pushq $0
	push %RBP
	mov -10216(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079888
	jmp uuid_000000000007988a
uuid_0000000000079888:
	push %RBP
	mov -10208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10248(%rbp)
	pushq $uuid_0000000000075f8f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079885
	jmp uuid_0000000000079887
uuid_0000000000079885:
	movb $1, -10224(%rbp)
uuid_0000000000079887:
	mov -10240(%RBP),%RSP
	add $-10248, %RSP
uuid_000000000007988a:
	mov -10232(%RBP),%RSP
	add $-10248, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007988f
	push %RBP
	jmp uuid_000000000007988c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007988b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007988e
uuid_000000000007988c:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9368(%rbp)
	pushq -9376(%rbp)
	pushq -9384(%rbp)
	pushq -9392(%rbp)
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	pushq -10480(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007988e:
	mov -10256(%RBP),%RSP
	add $-10488, %RSP
	jmp uuid_0000000000079891
uuid_000000000007988f:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9544(%rbp)
	pushq -9552(%rbp)
	pushq -9560(%rbp)
	pushq -9568(%rbp)
	pushq -9576(%rbp)
	pushq -9584(%rbp)
	pushq -9592(%rbp)
	pushq -9600(%rbp)
	pushq -9608(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10456(%RBP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079891:
	mov -10192(%RBP),%RSP
	add $-10480, %RSP
uuid_00000000000798d9:
	mov -9264(%RBP),%RSP
	add $-10480, %RSP
	jmp uuid_00000000000798dc
uuid_00000000000798da:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9072(%rbp)
	pushq -9080(%rbp)
	pushq -9088(%rbp)
	pushq -9096(%rbp)
	pushq -9104(%rbp)
	pushq -9112(%rbp)
	pushq -9120(%rbp)
	pushq -9128(%rbp)
	pushq -9136(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9464(%RBP)
	pushq -9472(%RBP)
	pushq -9480(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8992(%rbp)
	pushq -9000(%rbp)
	pushq -9008(%rbp)
	pushq -9016(%rbp)
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	pushq -9048(%rbp)
	pushq -9056(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9720(%RBP)
	pushq -9728(%RBP)
	pushq -9736(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9496(%rbp)
	pushq -9504(%rbp)
	pushq -9512(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798dc:
	mov -8792(%RBP),%RSP
	add $-9784, %RSP
	jmp uuid_00000000000798df
uuid_00000000000798dd:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -8648(%rbp)
	pushq -8656(%rbp)
	pushq -8664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8992(%RBP)
	pushq -9000(%RBP)
	pushq -9008(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8520(%rbp)
	pushq -8528(%rbp)
	pushq -8536(%rbp)
	pushq -8544(%rbp)
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	pushq -8576(%rbp)
	pushq -8584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9280(%rbp)
	pushq -9288(%rbp)
	pushq -9296(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9304(%rbp)
	pushq -9312(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798df:
	mov -8320(%RBP),%RSP
	add $-9312, %RSP
	jmp uuid_00000000000798e2
uuid_00000000000798e0:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8128(%rbp)
	pushq -8136(%rbp)
	pushq -8144(%rbp)
	pushq -8152(%rbp)
	pushq -8160(%rbp)
	pushq -8168(%rbp)
	pushq -8176(%rbp)
	pushq -8184(%rbp)
	pushq -8192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8048(%rbp)
	pushq -8056(%rbp)
	pushq -8064(%rbp)
	pushq -8072(%rbp)
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	pushq -8104(%rbp)
	pushq -8112(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8776(%RBP)
	pushq -8784(%RBP)
	pushq -8792(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8808(%rbp)
	pushq -8816(%rbp)
	pushq -8824(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8832(%rbp)
	pushq -8840(%rbp)
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798e2:
	mov -7848(%RBP),%RSP
	add $-8840, %RSP
	jmp uuid_00000000000798e5
uuid_00000000000798e3:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7656(%rbp)
	pushq -7664(%rbp)
	pushq -7672(%rbp)
	pushq -7680(%rbp)
	pushq -7688(%rbp)
	pushq -7696(%rbp)
	pushq -7704(%rbp)
	pushq -7712(%rbp)
	pushq -7720(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8048(%RBP)
	pushq -8056(%RBP)
	pushq -8064(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7576(%rbp)
	pushq -7584(%rbp)
	pushq -7592(%rbp)
	pushq -7600(%rbp)
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	pushq -7632(%rbp)
	pushq -7640(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8304(%RBP)
	pushq -8312(%RBP)
	pushq -8320(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8336(%rbp)
	pushq -8344(%rbp)
	pushq -8352(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function * : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8360(%rbp)
	pushq -8368(%rbp)
	mov %RBX, %RBP
	call _ML__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798e5:
	mov -7376(%RBP),%RSP
	add $-8368, %RSP
	jmp uuid_00000000000798e8
uuid_00000000000798e6:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7184(%rbp)
	pushq -7192(%rbp)
	pushq -7200(%rbp)
	pushq -7208(%rbp)
	pushq -7216(%rbp)
	pushq -7224(%rbp)
	pushq -7232(%rbp)
	pushq -7240(%rbp)
	pushq -7248(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7576(%RBP)
	pushq -7584(%RBP)
	pushq -7592(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7104(%rbp)
	pushq -7112(%rbp)
	pushq -7120(%rbp)
	pushq -7128(%rbp)
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	pushq -7160(%rbp)
	pushq -7168(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7864(%rbp)
	pushq -7872(%rbp)
	pushq -7880(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7888(%rbp)
	pushq -7896(%rbp)
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798e8:
	mov -6904(%RBP),%RSP
	add $-7896, %RSP
	jmp uuid_00000000000798eb
uuid_00000000000798e9:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	pushq -6744(%rbp)
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6632(%rbp)
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7360(%RBP)
	pushq -7368(%RBP)
	pushq -7376(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7392(%rbp)
	pushq -7400(%rbp)
	pushq -7408(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7416(%rbp)
	pushq -7424(%rbp)
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797d4
	pushq $0
	pushq $uuid_0000000000075f56
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000797d6
uuid_00000000000797d4:
	pushq $0
	pushq $uuid_0000000000075f8f
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000797d6:
	mov -7432(%RBP),%RSP
	add $-7432, %RSP
uuid_00000000000798eb:
	mov -6432(%RBP),%RSP
	add $-7432, %RSP
	jmp uuid_00000000000798ee
uuid_00000000000798ec:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	pushq -6288(%rbp)
	pushq -6296(%rbp)
	pushq -6304(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6632(%RBP)
	pushq -6640(%RBP)
	pushq -6648(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6888(%RBP)
	pushq -6896(%RBP)
	pushq -6904(%RBP)
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6920(%rbp)
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797b6
	pushq $0
	pushq $uuid_0000000000075f56
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_00000000000797b8
uuid_00000000000797b6:
	pushq $0
	pushq $uuid_0000000000075f8f
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000797b8:
	mov -6944(%RBP),%RSP
	add $-6944, %RSP
uuid_00000000000798ee:
	mov -5960(%RBP),%RSP
	add $-6944, %RSP
	jmp uuid_00000000000798f1
uuid_00000000000798ef:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5768(%rbp)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6160(%RBP)
	pushq -6168(%RBP)
	pushq -6176(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function align : Arrow<I64,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6216(%rbp)
	mov %RBX, %RBP
	call align_CL_ArrowI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798f1:
	mov -5664(%RBP),%RSP
	add $-6216, %RSP
	jmp uuid_00000000000798f4
uuid_00000000000798f2:
	pushq $0
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_00000000000798f4:
	mov -5440(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_00000000000798f7
uuid_00000000000798f5:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5640(%RBP)
	pushq -5648(%RBP)
	pushq -5656(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_0000000000079771:
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079772
	jmp uuid_0000000000079773
uuid_0000000000079772:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -5960(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_0000000000079771
uuid_0000000000079773:
uuid_00000000000798f7:
	mov -4968(%RBP),%RSP
	add $-5960, %RSP
	jmp uuid_00000000000798fa
uuid_00000000000798f8:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
uuid_0000000000079752:
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079753
	jmp uuid_0000000000079754
uuid_0000000000079753:
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	push %RBP
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079748
	jmp uuid_000000000007974a
uuid_0000000000079748:
	push %RBP
	mov -5264(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079745
	jmp uuid_0000000000079747
uuid_0000000000079745:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079742
	jmp uuid_0000000000079744
uuid_0000000000079742:
	movb $1, -5280(%rbp)
uuid_0000000000079744:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
uuid_0000000000079747:
	mov -5296(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007974a:
	mov -5288(%RBP),%RSP
	add $-5352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007974f
	push %RBP
	jmp uuid_000000000007974c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007974b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007974e
uuid_000000000007974c:
	pushq $0
	pushq $0
	pushq $3
	popq -5216(%RBP)
	popq -5208(%RBP)
	popq -5200(%RBP)
uuid_000000000007974e:
	mov -5360(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_0000000000079751
uuid_000000000007974f:
#call function fragment::expression : Arrow<S,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4424(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007951e
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	pushq -5376(%rbp)
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	pushq -5408(%rbp)
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	pushq -5696(%rbp)
	pushq -5704(%rbp)
	pushq -208(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -5320(%rbp), %r15
	movq %r15, -5216(%rbp)
	movq -5312(%rbp), %r15
	movq %r15, -5208(%rbp)
	movq -5304(%rbp), %r15
	movq %r15, -5200(%rbp)
uuid_0000000000079751:
	mov -5248(%RBP),%RSP
	add $-5960, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_0000000000079752
uuid_0000000000079754:
uuid_00000000000798fa:
	mov -3680(%RBP),%RSP
	add $-5216, %RSP
	jmp uuid_00000000000798fd
uuid_00000000000798fb:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2712(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
uuid_00000000000796e4:
#call function non-zero : Arrow<List<Array<Fragment,?>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796e5
	jmp uuid_00000000000796e6
uuid_00000000000796e5:
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	push %RBP
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796dd
	jmp uuid_00000000000796df
uuid_00000000000796dd:
	push %RBP
	mov -3896(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000796da
	jmp uuid_00000000000796dc
uuid_00000000000796da:
	push %RBP
	mov -3888(%RBP), %RAX
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000796d7
	jmp uuid_00000000000796d9
uuid_00000000000796d7:
	movb $1, -3912(%rbp)
uuid_00000000000796d9:
	mov -3960(%RBP),%RSP
	add $-4112, %RSP
uuid_00000000000796dc:
	mov -3928(%RBP),%RSP
	add $-4112, %RSP
uuid_00000000000796df:
	mov -3920(%RBP),%RSP
	add $-4112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000796e1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000796e0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000796e3
uuid_00000000000796e1:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3136(%rbp)
	pushq -3768(%RBP)
	pushq -3776(%RBP)
	pushq -3784(%RBP)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -208(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -4520(%RBP)
	pushq -4528(%RBP)
	pushq -4536(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -3952(%rbp), %r15
	movq %r15, -3848(%rbp)
	movq -3944(%rbp), %r15
	movq %r15, -3840(%rbp)
	movq -3936(%rbp), %r15
	movq %r15, -3832(%rbp)
uuid_00000000000796e3:
	mov -3880(%RBP),%RSP
	add $-4568, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_00000000000796e4
uuid_00000000000796e6:
uuid_00000000000798fd:
	mov -2136(%RBP),%RSP
	add $-3848, %RSP
	jmp uuid_0000000000079900
uuid_00000000000798fe:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079900:
	mov -1840(%RBP),%RSP
	add $-2360, %RSP
	jmp uuid_0000000000079903
uuid_0000000000079901:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079903:
	mov -1320(%RBP),%RSP
	add $-2064, %RSP
	jmp uuid_0000000000079906
uuid_0000000000079904:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079906:
	mov -800(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_0000000000079909
uuid_0000000000079907:
	pushq $0
	pushq -792(%rbp)
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_0000000000079909:
	mov -680(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007990c
uuid_000000000007990a:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -672(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007990c:
	mov -560(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007990f
uuid_000000000007990d:
uuid_000000000007990f:
	mov -480(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_0000000000079912
uuid_0000000000079910:
uuid_0000000000079912:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	subq $232, %rsp
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $232, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079931
	jmp uuid_0000000000079933
uuid_0000000000079931:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007991f
	jmp uuid_0000000000079921
uuid_000000000007991f:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079916
	jmp uuid_0000000000079918
uuid_0000000000079916:
	push %RBP
	jmp uuid_0000000000079913
	jmp uuid_0000000000079915
uuid_0000000000079913:
	movb $1, -792(%rbp)
uuid_0000000000079915:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000079918:
	mov -800(%RBP),%RSP
	add $-808, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007991c
	jmp uuid_000000000007991e
uuid_000000000007991c:
	push %RBP
	mov -672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079919
	jmp uuid_000000000007991b
uuid_0000000000079919:
	movb $1, -696(%rbp)
uuid_000000000007991b:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007991e:
	mov -712(%RBP),%RSP
	add $-888, %RSP
uuid_0000000000079921:
	mov -704(%RBP),%RSP
	add $-888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007992e
	jmp uuid_0000000000079930
uuid_000000000007992e:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079928
	jmp uuid_000000000007992a
uuid_0000000000079928:
	push %RBP
	jmp uuid_0000000000079925
	jmp uuid_0000000000079927
uuid_0000000000079925:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079922
	jmp uuid_0000000000079924
uuid_0000000000079922:
	movb $1, -976(%rbp)
uuid_0000000000079924:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000079927:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007992a:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007992b
	jmp uuid_000000000007992d
uuid_000000000007992b:
	movb $1, -600(%rbp)
uuid_000000000007992d:
	mov -896(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000079930:
	mov -616(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000079933:
	mov -608(%RBP),%RSP
	add $-1008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079971
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079943
	jmp uuid_0000000000079945
uuid_0000000000079943:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079940
	jmp uuid_0000000000079942
uuid_0000000000079940:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007993a
	jmp uuid_000000000007993c
uuid_000000000007993a:
	push %RBP
	jmp uuid_0000000000079937
	jmp uuid_0000000000079939
uuid_0000000000079937:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079934
	jmp uuid_0000000000079936
uuid_0000000000079934:
	movb $1, -1272(%rbp)
uuid_0000000000079936:
	mov -1296(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000079939:
	mov -1288(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007993c:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007993d
	jmp uuid_000000000007993f
uuid_000000000007993d:
	movb $1, -1096(%rbp)
uuid_000000000007993f:
	mov -1192(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000079942:
	mov -1112(%RBP),%RSP
	add $-1304, %RSP
uuid_0000000000079945:
	mov -1104(%RBP),%RSP
	add $-1304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007996e
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079961
	jmp uuid_0000000000079963
uuid_0000000000079961:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079958
	jmp uuid_000000000007995a
uuid_0000000000079958:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079955
	jmp uuid_0000000000079957
uuid_0000000000079955:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007994f
	jmp uuid_0000000000079951
uuid_000000000007994f:
	push %RBP
	jmp uuid_000000000007994c
	jmp uuid_000000000007994e
uuid_000000000007994c:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079949
	jmp uuid_000000000007994b
uuid_0000000000079949:
	movb $1, -1664(%rbp)
uuid_000000000007994b:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007994e:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_0000000000079951:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079952
	jmp uuid_0000000000079954
uuid_0000000000079952:
	movb $1, -1488(%rbp)
uuid_0000000000079954:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
uuid_0000000000079957:
	mov -1504(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007995a:
	mov -1496(%RBP),%RSP
	add $-1696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007995e
	jmp uuid_0000000000079960
uuid_000000000007995e:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007995b
	jmp uuid_000000000007995d
uuid_000000000007995b:
	movb $1, -1392(%rbp)
uuid_000000000007995d:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000079960:
	mov -1408(%RBP),%RSP
	add $-1776, %RSP
uuid_0000000000079963:
	mov -1400(%RBP),%RSP
	add $-1776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007996b
	push %RBP
	jmp uuid_0000000000079968
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079967
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007996a
uuid_0000000000079968:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000078382
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_0000000000078382
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007996a:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007996d
uuid_000000000007996b:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079964
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000078382
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_0000000000078382
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_0000000000079966
uuid_0000000000079964:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_0000000000079966:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007996d:
	mov -1312(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_0000000000079970
uuid_000000000007996e:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079946
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000078382
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_0000000000078382
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_0000000000079948
uuid_0000000000079946:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_0000000000079948:
	mov -1312(%RBP),%RSP
	add $-1568, %RSP
uuid_0000000000079970:
	mov -1016(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_0000000000079973
uuid_0000000000079971:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_0000000000079973:
	mov -520(%RBP),%RSP
	add $-1008, %RSP
	subq $152, %rsp
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $440, %rsp
	ret
extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007998c
	jmp uuid_000000000007998e
uuid_000000000007998c:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007997a
	jmp uuid_000000000007997c
uuid_000000000007997a:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	jmp uuid_0000000000079977
	jmp uuid_0000000000079979
uuid_0000000000079977:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079974
	jmp uuid_0000000000079976
uuid_0000000000079974:
	movb $1, -560(%rbp)
uuid_0000000000079976:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_0000000000079979:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007997c:
	mov -568(%RBP),%RSP
	add $-648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079989
	jmp uuid_000000000007998b
uuid_0000000000079989:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079983
	jmp uuid_0000000000079985
uuid_0000000000079983:
	push %RBP
	jmp uuid_0000000000079980
	jmp uuid_0000000000079982
uuid_0000000000079980:
	push %RBP
	mov -664(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $uuid_0000000000079774
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007997d
	jmp uuid_000000000007997f
uuid_000000000007997d:
	movb $1, -736(%rbp)
uuid_000000000007997f:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000079982:
	mov -752(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000079985:
	mov -744(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079986
	jmp uuid_0000000000079988
uuid_0000000000079986:
	movb $1, -464(%rbp)
uuid_0000000000079988:
	mov -656(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007998b:
	mov -480(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007998e:
	mov -472(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799f6
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079995
	jmp uuid_0000000000079997
uuid_0000000000079995:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079992
	jmp uuid_0000000000079994
uuid_0000000000079992:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007998f
	jmp uuid_0000000000079991
uuid_000000000007998f:
	movb $1, -856(%rbp)
uuid_0000000000079991:
	mov -952(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000079994:
	mov -872(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000079997:
	mov -864(%RBP),%RSP
	add $-1024, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799f3
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799a1
	jmp uuid_00000000000799a3
uuid_00000000000799a1:
	push %RBP
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007999e
	jmp uuid_00000000000799a0
uuid_000000000007999e:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007999b
	jmp uuid_000000000007999d
uuid_000000000007999b:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079998
	jmp uuid_000000000007999a
uuid_0000000000079998:
	movb $1, -1112(%rbp)
uuid_000000000007999a:
	mov -1240(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007999d:
	mov -1160(%RBP),%RSP
	add $-1312, %RSP
uuid_00000000000799a0:
	mov -1128(%RBP),%RSP
	add $-1312, %RSP
uuid_00000000000799a3:
	mov -1120(%RBP),%RSP
	add $-1312, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799f0
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799ed
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799ea
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799a7
	jmp uuid_00000000000799a9
uuid_00000000000799a7:
	push %RBP
	jmp uuid_00000000000799a4
	jmp uuid_00000000000799a6
uuid_00000000000799a4:
	movb $1, -1560(%rbp)
uuid_00000000000799a6:
	mov -1576(%RBP),%RSP
	add $-1576, %RSP
uuid_00000000000799a9:
	mov -1568(%RBP),%RSP
	add $-1576, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799e7
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799b0
	jmp uuid_00000000000799b2
uuid_00000000000799b0:
	push %RBP
	jmp uuid_00000000000799ad
	jmp uuid_00000000000799af
uuid_00000000000799ad:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000799aa
	jmp uuid_00000000000799ac
uuid_00000000000799aa:
	movb $1, -1664(%rbp)
uuid_00000000000799ac:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_00000000000799af:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_00000000000799b2:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799e4
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799b9
	jmp uuid_00000000000799bb
uuid_00000000000799b9:
	push %RBP
	jmp uuid_00000000000799b6
	jmp uuid_00000000000799b8
uuid_00000000000799b6:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000799b3
	jmp uuid_00000000000799b5
uuid_00000000000799b3:
	movb $1, -1784(%rbp)
uuid_00000000000799b5:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000799b8:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_00000000000799bb:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799e1
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799c2
	jmp uuid_00000000000799c4
uuid_00000000000799c2:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799bf
	jmp uuid_00000000000799c1
uuid_00000000000799bf:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799bc
	jmp uuid_00000000000799be
uuid_00000000000799bc:
	movb $1, -1904(%rbp)
uuid_00000000000799be:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_00000000000799c1:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_00000000000799c4:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799de
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799cb
	jmp uuid_00000000000799cd
uuid_00000000000799cb:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799c8
	jmp uuid_00000000000799ca
uuid_00000000000799c8:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799c5
	jmp uuid_00000000000799c7
uuid_00000000000799c5:
	movb $1, -2160(%rbp)
uuid_00000000000799c7:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_00000000000799ca:
	mov -2176(%RBP),%RSP
	add $-2328, %RSP
uuid_00000000000799cd:
	mov -2168(%RBP),%RSP
	add $-2328, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799db
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799d4
	jmp uuid_00000000000799d6
uuid_00000000000799d4:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799d1
	jmp uuid_00000000000799d3
uuid_00000000000799d1:
	push %RBP
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	jmp uuid_00000000000799ce
	jmp uuid_00000000000799d0
uuid_00000000000799ce:
	movb $1, -2416(%rbp)
uuid_00000000000799d0:
	mov -2512(%RBP),%RSP
	add $-2568, %RSP
uuid_00000000000799d3:
	mov -2432(%RBP),%RSP
	add $-2568, %RSP
uuid_00000000000799d6:
	mov -2424(%RBP),%RSP
	add $-2568, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_00000000000799d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000799da
uuid_00000000000799d8:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2664(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2656(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2648(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2640(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2632(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2624(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2616(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2608(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2600(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2592(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2584(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2576(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_00000000000799da:
	mov -2336(%RBP),%RSP
	add $-2664, %RSP
	jmp uuid_00000000000799dd
uuid_00000000000799db:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2520(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2512(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2504(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2496(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2488(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2480(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_00000000000799dd:
	mov -2080(%RBP),%RSP
	add $-2520, %RSP
	jmp uuid_00000000000799e0
uuid_00000000000799de:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2264(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2216(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2208(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2200(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2192(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2184(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2176(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_00000000000799e0:
	mov -1824(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_00000000000799e3
uuid_00000000000799e1:
uuid_00000000000799e3:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_00000000000799e6
uuid_00000000000799e4:
uuid_00000000000799e6:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_00000000000799e9
uuid_00000000000799e7:
uuid_00000000000799e9:
	mov -1480(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_00000000000799ec
uuid_00000000000799ea:
uuid_00000000000799ec:
	mov -1400(%RBP),%RSP
	add $-1472, %RSP
	jmp uuid_00000000000799ef
uuid_00000000000799ed:
uuid_00000000000799ef:
	mov -1320(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_00000000000799f2
uuid_00000000000799f0:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1504(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_00000000000799f2:
	mov -1032(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_00000000000799f5
uuid_00000000000799f3:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1216(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_00000000000799f5:
	mov -776(%RBP),%RSP
	add $-1216, %RSP
	jmp uuid_00000000000799f8
uuid_00000000000799f6:
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -648(%rbp)
	pushq -776(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	pushq $0
	movq -872(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_00000000000799f8:
	mov -384(%RBP),%RSP
	add $-872, %RSP
	subq $96, %rsp
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
index_SB_typedefs_CL_ArrowNilAST:
uuid_0000000000079a1e:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a1f
	jmp uuid_0000000000079a20
uuid_0000000000079a1f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a08
	jmp uuid_0000000000079a0a
uuid_0000000000079a08:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799ff
	jmp uuid_0000000000079a01
uuid_00000000000799ff:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799fc
	jmp uuid_00000000000799fe
uuid_00000000000799fc:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799f9
	jmp uuid_00000000000799fb
uuid_00000000000799f9:
	movb $1, -336(%rbp)
uuid_00000000000799fb:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_00000000000799fe:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_0000000000079a01:
	mov -344(%RBP),%RSP
	add $-504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a05
	jmp uuid_0000000000079a07
uuid_0000000000079a05:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a02
	jmp uuid_0000000000079a04
uuid_0000000000079a02:
	movb $1, -240(%rbp)
uuid_0000000000079a04:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000079a07:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_0000000000079a0a:
	mov -248(%RBP),%RSP
	add $-584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a1b
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a11
	jmp uuid_0000000000079a13
uuid_0000000000079a11:
	push %RBP
	jmp uuid_0000000000079a0e
	jmp uuid_0000000000079a10
uuid_0000000000079a0e:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a0b
	jmp uuid_0000000000079a0d
uuid_0000000000079a0b:
	movb $1, -672(%rbp)
uuid_0000000000079a0d:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000079a10:
	mov -688(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000079a13:
	mov -680(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a18
	push %RBP
	jmp uuid_0000000000079a15
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079a14
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079a17
uuid_0000000000079a15:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079a17:
	mov -776(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_0000000000079a1a
uuid_0000000000079a18:
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000079a1a:
	mov -592(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_0000000000079a1d
uuid_0000000000079a1b:
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -584(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000079a1d:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079a1e
uuid_0000000000079a20:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
index_SB_typedefs_CL_ArrowNilConsU64AST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a42
	jmp uuid_0000000000079a44
uuid_0000000000079a42:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a27
	jmp uuid_0000000000079a29
uuid_0000000000079a27:
	push %RBP
	jmp uuid_0000000000079a24
	jmp uuid_0000000000079a26
uuid_0000000000079a24:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a21
	jmp uuid_0000000000079a23
uuid_0000000000079a21:
	movb $1, -344(%rbp)
uuid_0000000000079a23:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000079a26:
	mov -360(%RBP),%RSP
	add $-376, %RSP
uuid_0000000000079a29:
	mov -352(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a3f
	jmp uuid_0000000000079a41
uuid_0000000000079a3f:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a39
	jmp uuid_0000000000079a3b
uuid_0000000000079a39:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a30
	jmp uuid_0000000000079a32
uuid_0000000000079a30:
	push %RBP
	jmp uuid_0000000000079a2d
	jmp uuid_0000000000079a2f
uuid_0000000000079a2d:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_0000000000077afb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a2a
	jmp uuid_0000000000079a2c
uuid_0000000000079a2a:
	movb $1, -560(%rbp)
uuid_0000000000079a2c:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000079a2f:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000079a32:
	mov -568(%RBP),%RSP
	add $-592, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a36
	jmp uuid_0000000000079a38
uuid_0000000000079a36:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a33
	jmp uuid_0000000000079a35
uuid_0000000000079a33:
	movb $1, -464(%rbp)
uuid_0000000000079a35:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079a38:
	mov -480(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079a3b:
	mov -472(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a3c
	jmp uuid_0000000000079a3e
uuid_0000000000079a3c:
	movb $1, -248(%rbp)
uuid_0000000000079a3e:
	mov -384(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079a41:
	mov -264(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079a44:
	mov -256(%RBP),%RSP
	add $-672, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a9e
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a6f
	jmp uuid_0000000000079a71
uuid_0000000000079a6f:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a54
	jmp uuid_0000000000079a56
uuid_0000000000079a54:
	push %RBP
	jmp uuid_0000000000079a51
	jmp uuid_0000000000079a53
uuid_0000000000079a51:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a4b
	jmp uuid_0000000000079a4d
uuid_0000000000079a4b:
	push %RBP
	jmp uuid_0000000000079a48
	jmp uuid_0000000000079a4a
uuid_0000000000079a48:
	push %RBP
	mov -888(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a45
	jmp uuid_0000000000079a47
uuid_0000000000079a45:
	movb $1, -960(%rbp)
uuid_0000000000079a47:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000079a4a:
	mov -976(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000079a4d:
	mov -968(%RBP),%RSP
	add $-992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a4e
	jmp uuid_0000000000079a50
uuid_0000000000079a4e:
	movb $1, -856(%rbp)
uuid_0000000000079a50:
	mov -880(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000079a53:
	mov -872(%RBP),%RSP
	add $-992, %RSP
uuid_0000000000079a56:
	mov -864(%RBP),%RSP
	add $-992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a6c
	jmp uuid_0000000000079a6e
uuid_0000000000079a6c:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a66
	jmp uuid_0000000000079a68
uuid_0000000000079a66:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a5d
	jmp uuid_0000000000079a5f
uuid_0000000000079a5d:
	push %RBP
	jmp uuid_0000000000079a5a
	jmp uuid_0000000000079a5c
uuid_0000000000079a5a:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $uuid_0000000000077afb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a57
	jmp uuid_0000000000079a59
uuid_0000000000079a57:
	movb $1, -1176(%rbp)
uuid_0000000000079a59:
	mov -1200(%RBP),%RSP
	add $-1208, %RSP
uuid_0000000000079a5c:
	mov -1192(%RBP),%RSP
	add $-1208, %RSP
uuid_0000000000079a5f:
	mov -1184(%RBP),%RSP
	add $-1208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a63
	jmp uuid_0000000000079a65
uuid_0000000000079a63:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a60
	jmp uuid_0000000000079a62
uuid_0000000000079a60:
	movb $1, -1080(%rbp)
uuid_0000000000079a62:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000079a65:
	mov -1096(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000079a68:
	mov -1088(%RBP),%RSP
	add $-1288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a69
	jmp uuid_0000000000079a6b
uuid_0000000000079a69:
	movb $1, -760(%rbp)
uuid_0000000000079a6b:
	mov -1000(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000079a6e:
	mov -776(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000079a71:
	mov -768(%RBP),%RSP
	add $-1288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a9b
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a78
	jmp uuid_0000000000079a7a
uuid_0000000000079a78:
	push %RBP
	jmp uuid_0000000000079a75
	jmp uuid_0000000000079a77
uuid_0000000000079a75:
	push %RBP
	mov -1304(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a72
	jmp uuid_0000000000079a74
uuid_0000000000079a72:
	movb $1, -1376(%rbp)
uuid_0000000000079a74:
	mov -1400(%RBP),%RSP
	add $-1408, %RSP
uuid_0000000000079a77:
	mov -1392(%RBP),%RSP
	add $-1408, %RSP
uuid_0000000000079a7a:
	mov -1384(%RBP),%RSP
	add $-1408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a98
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a8a
	jmp uuid_0000000000079a8c
uuid_0000000000079a8a:
	push %RBP
	jmp uuid_0000000000079a87
	jmp uuid_0000000000079a89
uuid_0000000000079a87:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a81
	jmp uuid_0000000000079a83
uuid_0000000000079a81:
	push %RBP
	jmp uuid_0000000000079a7e
	jmp uuid_0000000000079a80
uuid_0000000000079a7e:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a7b
	jmp uuid_0000000000079a7d
uuid_0000000000079a7b:
	movb $1, -1600(%rbp)
uuid_0000000000079a7d:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079a80:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079a83:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a84
	jmp uuid_0000000000079a86
uuid_0000000000079a84:
	movb $1, -1496(%rbp)
uuid_0000000000079a86:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079a89:
	mov -1512(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079a8c:
	mov -1504(%RBP),%RSP
	add $-1632, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a95
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a92
	push %RBP
	jmp uuid_0000000000079a8f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079a8e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079a91
uuid_0000000000079a8f:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a8d
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a91:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_0000000000079a94
uuid_0000000000079a92:
uuid_0000000000079a94:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_0000000000079a97
uuid_0000000000079a95:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a97:
	mov -1416(%RBP),%RSP
	add $-1632, %RSP
	jmp uuid_0000000000079a9a
uuid_0000000000079a98:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a9a:
	mov -1296(%RBP),%RSP
	add $-1408, %RSP
	jmp uuid_0000000000079a9d
uuid_0000000000079a9b:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a9d:
	mov -680(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_0000000000079aa0
uuid_0000000000079a9e:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079aa0:
	mov -168(%RBP),%RSP
	add $-672, %RSP
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_macro_SB_head_CL_ArrowU64ConsU64String:
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_0000000000079b15:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b16
	jmp uuid_0000000000079b17
uuid_0000000000079b16:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ac2
	jmp uuid_0000000000079ac4
uuid_0000000000079ac2:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ab9
	jmp uuid_0000000000079abb
uuid_0000000000079ab9:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_0000000000079ab6
	jmp uuid_0000000000079ab8
uuid_0000000000079ab6:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ab0
	jmp uuid_0000000000079ab2
uuid_0000000000079ab0:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079aad
	jmp uuid_0000000000079aaf
uuid_0000000000079aad:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079aa7
	jmp uuid_0000000000079aa9
uuid_0000000000079aa7:
	push %RBP
	jmp uuid_0000000000079aa4
	jmp uuid_0000000000079aa6
uuid_0000000000079aa4:
	push %RBP
	mov -1008(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079aa1
	jmp uuid_0000000000079aa3
uuid_0000000000079aa1:
	movb $1, -1080(%rbp)
uuid_0000000000079aa3:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079aa6:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079aa9:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079aaa
	jmp uuid_0000000000079aac
uuid_0000000000079aaa:
	movb $1, -904(%rbp)
uuid_0000000000079aac:
	mov -1000(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079aaf:
	mov -920(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079ab2:
	mov -912(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ab3
	jmp uuid_0000000000079ab5
uuid_0000000000079ab3:
	movb $1, -728(%rbp)
uuid_0000000000079ab5:
	mov -824(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079ab8:
	mov -744(%RBP),%RSP
	add $-1112, %RSP
uuid_0000000000079abb:
	mov -736(%RBP),%RSP
	add $-1112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079abf
	jmp uuid_0000000000079ac1
uuid_0000000000079abf:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079abc
	jmp uuid_0000000000079abe
uuid_0000000000079abc:
	movb $1, -552(%rbp)
uuid_0000000000079abe:
	mov -1120(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000079ac1:
	mov -568(%RBP),%RSP
	add $-1288, %RSP
uuid_0000000000079ac4:
	mov -560(%RBP),%RSP
	add $-1288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b12
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079af2
	jmp uuid_0000000000079af4
uuid_0000000000079af2:
	push %RBP
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ae9
	jmp uuid_0000000000079aeb
uuid_0000000000079ae9:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	jmp uuid_0000000000079ae6
	jmp uuid_0000000000079ae8
uuid_0000000000079ae6:
	push %RBP
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ae0
	jmp uuid_0000000000079ae2
uuid_0000000000079ae0:
	push %RBP
	mov -1808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079add
	jmp uuid_0000000000079adf
uuid_0000000000079add:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ad7
	jmp uuid_0000000000079ad9
uuid_0000000000079ad7:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ad4
	jmp uuid_0000000000079ad6
uuid_0000000000079ad4:
	push %RBP
	mov -1976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ace
	jmp uuid_0000000000079ad0
uuid_0000000000079ace:
	push %RBP
	jmp uuid_0000000000079acb
	jmp uuid_0000000000079acd
uuid_0000000000079acb:
	push %RBP
	mov -2104(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ac8
	jmp uuid_0000000000079aca
uuid_0000000000079ac8:
	movb $1, -2176(%rbp)
uuid_0000000000079aca:
	mov -2200(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079acd:
	mov -2192(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079ad0:
	mov -2184(%RBP),%RSP
	add $-2208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ad1
	jmp uuid_0000000000079ad3
uuid_0000000000079ad1:
	movb $1, -2000(%rbp)
uuid_0000000000079ad3:
	mov -2096(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079ad6:
	mov -2016(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079ad9:
	mov -2008(%RBP),%RSP
	add $-2208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2000(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ada
	jmp uuid_0000000000079adc
uuid_0000000000079ada:
	movb $1, -1824(%rbp)
uuid_0000000000079adc:
	mov -1920(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079adf:
	mov -1840(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079ae2:
	mov -1832(%RBP),%RSP
	add $-2208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1824(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ae3
	jmp uuid_0000000000079ae5
uuid_0000000000079ae3:
	movb $1, -1648(%rbp)
uuid_0000000000079ae5:
	mov -1744(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079ae8:
	mov -1664(%RBP),%RSP
	add $-2208, %RSP
uuid_0000000000079aeb:
	mov -1656(%RBP),%RSP
	add $-2208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079aef
	jmp uuid_0000000000079af1
uuid_0000000000079aef:
	push %RBP
	mov -1304(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079aec
	jmp uuid_0000000000079aee
uuid_0000000000079aec:
	movb $1, -1472(%rbp)
uuid_0000000000079aee:
	mov -2216(%RBP),%RSP
	add $-2384, %RSP
uuid_0000000000079af1:
	mov -1488(%RBP),%RSP
	add $-2384, %RSP
uuid_0000000000079af4:
	mov -1480(%RBP),%RSP
	add $-2384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b0f
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b07
	jmp uuid_0000000000079b09
uuid_0000000000079b07:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079afe
	jmp uuid_0000000000079b00
uuid_0000000000079afe:
	push %RBP
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	jmp uuid_0000000000079afb
	jmp uuid_0000000000079afd
uuid_0000000000079afb:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	jmp uuid_0000000000079af8
	jmp uuid_0000000000079afa
uuid_0000000000079af8:
	movb $1, -2744(%rbp)
uuid_0000000000079afa:
	mov -2840(%RBP),%RSP
	add $-2912, %RSP
uuid_0000000000079afd:
	mov -2760(%RBP),%RSP
	add $-2912, %RSP
uuid_0000000000079b00:
	mov -2752(%RBP),%RSP
	add $-2912, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b04
	jmp uuid_0000000000079b06
uuid_0000000000079b04:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079b01
	jmp uuid_0000000000079b03
uuid_0000000000079b01:
	movb $1, -2568(%rbp)
uuid_0000000000079b03:
	mov -2920(%RBP),%RSP
	add $-3088, %RSP
uuid_0000000000079b06:
	mov -2584(%RBP),%RSP
	add $-3088, %RSP
uuid_0000000000079b09:
	mov -2576(%RBP),%RSP
	add $-3088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b0c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079b0b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b0e
uuid_0000000000079b0c:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079b0a
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079b0e:
	mov -2392(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_0000000000079b11
uuid_0000000000079b0f:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079af5
	jmp uuid_0000000000079af7
uuid_0000000000079af5:
	movq $1, -200(%rbp)
uuid_0000000000079af7:
	mov -2392(%RBP),%RSP
	add $-2392, %RSP
	movq -2384(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2264(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_0000000000079b11:
	mov -1296(%RBP),%RSP
	add $-2392, %RSP
	jmp uuid_0000000000079b14
uuid_0000000000079b12:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ac5
	jmp uuid_0000000000079ac7
uuid_0000000000079ac5:
	movq $1, -200(%rbp)
uuid_0000000000079ac7:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_0000000000079b14:
	mov -376(%RBP),%RSP
	add $-1296, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079b15
uuid_0000000000079b17:
	mov -200(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String:
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_0000000000079b78:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b79
	jmp uuid_0000000000079b7a
uuid_0000000000079b79:
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b27
	jmp uuid_0000000000079b29
uuid_0000000000079b27:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b1e
	jmp uuid_0000000000079b20
uuid_0000000000079b1e:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	jmp uuid_0000000000079b1b
	jmp uuid_0000000000079b1d
uuid_0000000000079b1b:
	push %RBP
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_0000000000079b18
	jmp uuid_0000000000079b1a
uuid_0000000000079b18:
	movb $1, -872(%rbp)
uuid_0000000000079b1a:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000079b1d:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_0000000000079b20:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b24
	jmp uuid_0000000000079b26
uuid_0000000000079b24:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079b21
	jmp uuid_0000000000079b23
uuid_0000000000079b21:
	movb $1, -696(%rbp)
uuid_0000000000079b23:
	mov -1048(%RBP),%RSP
	add $-1216, %RSP
uuid_0000000000079b26:
	mov -712(%RBP),%RSP
	add $-1216, %RSP
uuid_0000000000079b29:
	mov -704(%RBP),%RSP
	add $-1216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b75
	push %RBP
	jmp uuid_0000000000079b72
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079b71
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b74
uuid_0000000000079b72:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_0000000000079b74:
	mov -1224(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_0000000000079b77
uuid_0000000000079b75:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b39
	jmp uuid_0000000000079b3b
uuid_0000000000079b39:
	push %RBP
	jmp uuid_0000000000079b36
	jmp uuid_0000000000079b38
uuid_0000000000079b36:
	push %RBP
	mov -1360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b30
	jmp uuid_0000000000079b32
uuid_0000000000079b30:
	push %RBP
	jmp uuid_0000000000079b2d
	jmp uuid_0000000000079b2f
uuid_0000000000079b2d:
	push %RBP
	mov -1416(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b2a
	jmp uuid_0000000000079b2c
uuid_0000000000079b2a:
	movb $1, -1488(%rbp)
uuid_0000000000079b2c:
	mov -1512(%RBP),%RSP
	add $-1520, %RSP
uuid_0000000000079b2f:
	mov -1504(%RBP),%RSP
	add $-1520, %RSP
uuid_0000000000079b32:
	mov -1496(%RBP),%RSP
	add $-1520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b33
	jmp uuid_0000000000079b35
uuid_0000000000079b33:
	movb $1, -1384(%rbp)
uuid_0000000000079b35:
	mov -1408(%RBP),%RSP
	add $-1520, %RSP
uuid_0000000000079b38:
	mov -1400(%RBP),%RSP
	add $-1520, %RSP
uuid_0000000000079b3b:
	mov -1392(%RBP),%RSP
	add $-1520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b61
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b57
	jmp uuid_0000000000079b59
uuid_0000000000079b57:
	push %RBP
	jmp uuid_0000000000079b54
	jmp uuid_0000000000079b56
uuid_0000000000079b54:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b4e
	jmp uuid_0000000000079b50
uuid_0000000000079b4e:
	push %RBP
	jmp uuid_0000000000079b4b
	jmp uuid_0000000000079b4d
uuid_0000000000079b4b:
	push %RBP
	mov -1688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b45
	jmp uuid_0000000000079b47
uuid_0000000000079b45:
	push %RBP
	jmp uuid_0000000000079b42
	jmp uuid_0000000000079b44
uuid_0000000000079b42:
	push %RBP
	mov -1744(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b3f
	jmp uuid_0000000000079b41
uuid_0000000000079b3f:
	movb $1, -1816(%rbp)
uuid_0000000000079b41:
	mov -1840(%RBP),%RSP
	add $-1848, %RSP
uuid_0000000000079b44:
	mov -1832(%RBP),%RSP
	add $-1848, %RSP
uuid_0000000000079b47:
	mov -1824(%RBP),%RSP
	add $-1848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1816(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b48
	jmp uuid_0000000000079b4a
uuid_0000000000079b48:
	movb $1, -1712(%rbp)
uuid_0000000000079b4a:
	mov -1736(%RBP),%RSP
	add $-1848, %RSP
uuid_0000000000079b4d:
	mov -1728(%RBP),%RSP
	add $-1848, %RSP
uuid_0000000000079b50:
	mov -1720(%RBP),%RSP
	add $-1848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b51
	jmp uuid_0000000000079b53
uuid_0000000000079b51:
	movb $1, -1608(%rbp)
uuid_0000000000079b53:
	mov -1632(%RBP),%RSP
	add $-1848, %RSP
uuid_0000000000079b56:
	mov -1624(%RBP),%RSP
	add $-1848, %RSP
uuid_0000000000079b59:
	mov -1616(%RBP),%RSP
	add $-1848, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b5e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079b5d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b60
uuid_0000000000079b5e:
	push %RBP
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b5a
	jmp uuid_0000000000079b5c
uuid_0000000000079b5a:
	movb $1, -1224(%rbp)
uuid_0000000000079b5c:
	mov -1856(%RBP),%RSP
	add $-1856, %RSP
uuid_0000000000079b60:
	mov -1528(%RBP),%RSP
	add $-1856, %RSP
	jmp uuid_0000000000079b63
uuid_0000000000079b61:
	push %RBP
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b3c
	jmp uuid_0000000000079b3e
uuid_0000000000079b3c:
	movb $1, -1224(%rbp)
uuid_0000000000079b3e:
	mov -1528(%RBP),%RSP
	add $-1528, %RSP
uuid_0000000000079b63:
	mov -1304(%RBP),%RSP
	add $-1528, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b6e
	jmp uuid_0000000000079b70
uuid_0000000000079b6e:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b6b
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	jmp uuid_0000000000079b68
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079b67
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b6a
uuid_0000000000079b68:
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b64
	jmp uuid_0000000000079b66
uuid_0000000000079b64:
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
uuid_0000000000079b66:
	mov -2016(%RBP),%RSP
	add $-2016, %RSP
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movb $1, -344(%rbp)
uuid_0000000000079b6a:
	mov -1744(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_0000000000079b6d
uuid_0000000000079b6b:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
uuid_0000000000079b6d:
	mov -1640(%RBP),%RSP
	add $-1736, %RSP
uuid_0000000000079b70:
	mov -1536(%RBP),%RSP
	add $-1736, %RSP
uuid_0000000000079b77:
	mov -520(%RBP),%RSP
	add $-1736, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079b78
uuid_0000000000079b7a:
	push %RBP
#call function not : Arrow<U8,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call not_CL_ArrowU64U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b7c
	jmp uuid_0000000000079b7e
uuid_0000000000079b7c:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079b7b
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079b7e:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
preprocess_SB_apply_SB_literals_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ba0
	jmp uuid_0000000000079ba2
uuid_0000000000079ba0:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b85
	jmp uuid_0000000000079b87
uuid_0000000000079b85:
	push %RBP
	jmp uuid_0000000000079b82
	jmp uuid_0000000000079b84
uuid_0000000000079b82:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b7f
	jmp uuid_0000000000079b81
uuid_0000000000079b7f:
	movb $1, -408(%rbp)
uuid_0000000000079b81:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000079b84:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_0000000000079b87:
	mov -416(%RBP),%RSP
	add $-440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b9d
	jmp uuid_0000000000079b9f
uuid_0000000000079b9d:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b97
	jmp uuid_0000000000079b99
uuid_0000000000079b97:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079b94
	jmp uuid_0000000000079b96
uuid_0000000000079b94:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b8e
	jmp uuid_0000000000079b90
uuid_0000000000079b8e:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_0000000000079b8b
	jmp uuid_0000000000079b8d
uuid_0000000000079b8b:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b88
	jmp uuid_0000000000079b8a
uuid_0000000000079b88:
	movb $1, -704(%rbp)
uuid_0000000000079b8a:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079b8d:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079b90:
	mov -712(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b91
	jmp uuid_0000000000079b93
uuid_0000000000079b91:
	movb $1, -528(%rbp)
uuid_0000000000079b93:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079b96:
	mov -544(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079b99:
	mov -536(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b9a
	jmp uuid_0000000000079b9c
uuid_0000000000079b9a:
	movb $1, -312(%rbp)
uuid_0000000000079b9c:
	mov -448(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079b9f:
	mov -328(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079ba2:
	mov -320(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c2f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bc4
	jmp uuid_0000000000079bc6
uuid_0000000000079bc4:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ba9
	jmp uuid_0000000000079bab
uuid_0000000000079ba9:
	push %RBP
	jmp uuid_0000000000079ba6
	jmp uuid_0000000000079ba8
uuid_0000000000079ba6:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ba3
	jmp uuid_0000000000079ba5
uuid_0000000000079ba3:
	movb $1, -976(%rbp)
uuid_0000000000079ba5:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000079ba8:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_0000000000079bab:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079bc1
	jmp uuid_0000000000079bc3
uuid_0000000000079bc1:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bbb
	jmp uuid_0000000000079bbd
uuid_0000000000079bbb:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079bb8
	jmp uuid_0000000000079bba
uuid_0000000000079bb8:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bb2
	jmp uuid_0000000000079bb4
uuid_0000000000079bb2:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_0000000000079baf
	jmp uuid_0000000000079bb1
uuid_0000000000079baf:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079bac
	jmp uuid_0000000000079bae
uuid_0000000000079bac:
	movb $1, -1272(%rbp)
uuid_0000000000079bae:
	mov -1352(%RBP),%RSP
	add $-1360, %RSP
uuid_0000000000079bb1:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
uuid_0000000000079bb4:
	mov -1280(%RBP),%RSP
	add $-1360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079bb5
	jmp uuid_0000000000079bb7
uuid_0000000000079bb5:
	movb $1, -1096(%rbp)
uuid_0000000000079bb7:
	mov -1192(%RBP),%RSP
	add $-1360, %RSP
uuid_0000000000079bba:
	mov -1112(%RBP),%RSP
	add $-1360, %RSP
uuid_0000000000079bbd:
	mov -1104(%RBP),%RSP
	add $-1360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079bbe
	jmp uuid_0000000000079bc0
uuid_0000000000079bbe:
	movb $1, -880(%rbp)
uuid_0000000000079bc0:
	mov -1016(%RBP),%RSP
	add $-1360, %RSP
uuid_0000000000079bc3:
	mov -896(%RBP),%RSP
	add $-1360, %RSP
uuid_0000000000079bc6:
	mov -888(%RBP),%RSP
	add $-1360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c2c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bcd
	jmp uuid_0000000000079bcf
uuid_0000000000079bcd:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	jmp uuid_0000000000079bca
	jmp uuid_0000000000079bcc
uuid_0000000000079bca:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079bc7
	jmp uuid_0000000000079bc9
uuid_0000000000079bc7:
	movb $1, -1448(%rbp)
uuid_0000000000079bc9:
	mov -1528(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000079bcc:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_0000000000079bcf:
	mov -1456(%RBP),%RSP
	add $-1536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c29
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bdd
	jmp uuid_0000000000079bdf
uuid_0000000000079bdd:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_0000000000079bda
	jmp uuid_0000000000079bdc
uuid_0000000000079bda:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079bd7
	jmp uuid_0000000000079bd9
uuid_0000000000079bd7:
	movb $1, -1624(%rbp)
uuid_0000000000079bd9:
	mov -1704(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000079bdc:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000079bdf:
	mov -1632(%RBP),%RSP
	add $-1712, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c26
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079be9
	jmp uuid_0000000000079beb
uuid_0000000000079be9:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079be6
	jmp uuid_0000000000079be8
uuid_0000000000079be6:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079be3
	jmp uuid_0000000000079be5
uuid_0000000000079be3:
	movb $1, -1800(%rbp)
uuid_0000000000079be5:
	mov -1896(%RBP),%RSP
	add $-1968, %RSP
uuid_0000000000079be8:
	mov -1816(%RBP),%RSP
	add $-1968, %RSP
uuid_0000000000079beb:
	mov -1808(%RBP),%RSP
	add $-1968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c23
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bf2
	jmp uuid_0000000000079bf4
uuid_0000000000079bf2:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079bef
	jmp uuid_0000000000079bf1
uuid_0000000000079bef:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079bec
	jmp uuid_0000000000079bee
uuid_0000000000079bec:
	movb $1, -2056(%rbp)
uuid_0000000000079bee:
	mov -2152(%RBP),%RSP
	add $-2224, %RSP
uuid_0000000000079bf1:
	mov -2072(%RBP),%RSP
	add $-2224, %RSP
uuid_0000000000079bf4:
	mov -2064(%RBP),%RSP
	add $-2224, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c20
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bfb
	jmp uuid_0000000000079bfd
uuid_0000000000079bfb:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079bf8
	jmp uuid_0000000000079bfa
uuid_0000000000079bf8:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079bf5
	jmp uuid_0000000000079bf7
uuid_0000000000079bf5:
	movb $1, -2312(%rbp)
uuid_0000000000079bf7:
	mov -2408(%RBP),%RSP
	add $-2480, %RSP
uuid_0000000000079bfa:
	mov -2328(%RBP),%RSP
	add $-2480, %RSP
uuid_0000000000079bfd:
	mov -2320(%RBP),%RSP
	add $-2480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c1d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c07
	jmp uuid_0000000000079c09
uuid_0000000000079c07:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_0000000000079c04
	jmp uuid_0000000000079c06
uuid_0000000000079c04:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c01
	jmp uuid_0000000000079c03
uuid_0000000000079c01:
	push %RBP
	mov -2520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079bfe
	jmp uuid_0000000000079c00
uuid_0000000000079bfe:
	movb $1, -2568(%rbp)
uuid_0000000000079c00:
	mov -2696(%RBP),%RSP
	add $-2768, %RSP
uuid_0000000000079c03:
	mov -2616(%RBP),%RSP
	add $-2768, %RSP
uuid_0000000000079c06:
	mov -2584(%RBP),%RSP
	add $-2768, %RSP
uuid_0000000000079c09:
	mov -2576(%RBP),%RSP
	add $-2768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c1a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c10
	jmp uuid_0000000000079c12
uuid_0000000000079c10:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c0d
	jmp uuid_0000000000079c0f
uuid_0000000000079c0d:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	jmp uuid_0000000000079c0a
	jmp uuid_0000000000079c0c
uuid_0000000000079c0a:
	movb $1, -2856(%rbp)
uuid_0000000000079c0c:
	mov -2952(%RBP),%RSP
	add $-3008, %RSP
uuid_0000000000079c0f:
	mov -2872(%RBP),%RSP
	add $-3008, %RSP
uuid_0000000000079c12:
	mov -2864(%RBP),%RSP
	add $-3008, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c17
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_0000000000079c14
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079c13
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079c16
uuid_0000000000079c14:
	movq -3088(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3080(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3072(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3064(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3056(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3048(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3040(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3032(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3024(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_0000000000079c16:
	mov -3016(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_0000000000079c19
uuid_0000000000079c17:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c19:
	mov -2776(%RBP),%RSP
	add $-3008, %RSP
	jmp uuid_0000000000079c1c
uuid_0000000000079c1a:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c1c:
	mov -2488(%RBP),%RSP
	add $-2768, %RSP
	jmp uuid_0000000000079c1f
uuid_0000000000079c1d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c1f:
	mov -2232(%RBP),%RSP
	add $-2480, %RSP
	jmp uuid_0000000000079c22
uuid_0000000000079c20:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c22:
	mov -1976(%RBP),%RSP
	add $-2224, %RSP
	jmp uuid_0000000000079c25
uuid_0000000000079c23:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c25:
	mov -1720(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_0000000000079c28
uuid_0000000000079c26:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_0000000000079bd0
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079be0
	jmp uuid_0000000000079be2
uuid_0000000000079be0:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_0000000000079bd0
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd1
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_0000000000079bd1
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd3
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_0000000000079bd3
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd3
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_0000000000079bd3
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079be2:
	mov -1720(%RBP),%RSP
	add $-1728, %RSP
uuid_0000000000079c28:
	mov -1544(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_0000000000079c2b
uuid_0000000000079c29:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_0000000000079bd0
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079bd4
	jmp uuid_0000000000079bd6
uuid_0000000000079bd4:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_0000000000079bd0
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd1
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_0000000000079bd1
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1552(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd2
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd3
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_0000000000079bd3
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bd3
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_0000000000079bd3
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079bd6:
	mov -1544(%RBP),%RSP
	add $-1552, %RSP
uuid_0000000000079c2b:
	mov -1368(%RBP),%RSP
	add $-1552, %RSP
	jmp uuid_0000000000079c2e
uuid_0000000000079c2c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c2e:
	mov -800(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_0000000000079c31
uuid_0000000000079c2f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079c31:
	mov -232(%RBP),%RSP
	add $-792, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_SB_locations_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c4c
	jmp uuid_0000000000079c4e
uuid_0000000000079c4c:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c39
	jmp uuid_0000000000079c3b
uuid_0000000000079c39:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_0000000000079c36
	jmp uuid_0000000000079c38
uuid_0000000000079c36:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $uuid_0000000000079c32
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c33
	jmp uuid_0000000000079c35
uuid_0000000000079c33:
	movb $1, -408(%rbp)
uuid_0000000000079c35:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_0000000000079c38:
	mov -424(%RBP),%RSP
	add $-496, %RSP
uuid_0000000000079c3b:
	mov -416(%RBP),%RSP
	add $-496, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c49
	jmp uuid_0000000000079c4b
uuid_0000000000079c49:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c43
	jmp uuid_0000000000079c45
uuid_0000000000079c43:
	push %RBP
	jmp uuid_0000000000079c40
	jmp uuid_0000000000079c42
uuid_0000000000079c40:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_0000000000079c3c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c3d
	jmp uuid_0000000000079c3f
uuid_0000000000079c3d:
	movb $1, -584(%rbp)
uuid_0000000000079c3f:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000079c42:
	mov -600(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000079c45:
	mov -592(%RBP),%RSP
	add $-616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c46
	jmp uuid_0000000000079c48
uuid_0000000000079c46:
	movb $1, -312(%rbp)
uuid_0000000000079c48:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000079c4b:
	mov -328(%RBP),%RSP
	add $-616, %RSP
uuid_0000000000079c4e:
	mov -320(%RBP),%RSP
	add $-616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cbe
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c69
	jmp uuid_0000000000079c6b
uuid_0000000000079c69:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_0000000000079c66
	jmp uuid_0000000000079c68
uuid_0000000000079c66:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c63
	jmp uuid_0000000000079c65
uuid_0000000000079c63:
	movb $1, -704(%rbp)
uuid_0000000000079c65:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079c68:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079c6b:
	mov -712(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cbb
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c72
	jmp uuid_0000000000079c74
uuid_0000000000079c72:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	jmp uuid_0000000000079c6f
	jmp uuid_0000000000079c71
uuid_0000000000079c6f:
	push %RBP
	mov -808(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c6c
	jmp uuid_0000000000079c6e
uuid_0000000000079c6c:
	movb $1, -880(%rbp)
uuid_0000000000079c6e:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000079c71:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_0000000000079c74:
	mov -888(%RBP),%RSP
	add $-968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cb8
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c7b
	jmp uuid_0000000000079c7d
uuid_0000000000079c7b:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c78
	jmp uuid_0000000000079c7a
uuid_0000000000079c78:
	push %RBP
	mov -1032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c75
	jmp uuid_0000000000079c77
uuid_0000000000079c75:
	movb $1, -1056(%rbp)
uuid_0000000000079c77:
	mov -1152(%RBP),%RSP
	add $-1224, %RSP
uuid_0000000000079c7a:
	mov -1072(%RBP),%RSP
	add $-1224, %RSP
uuid_0000000000079c7d:
	mov -1064(%RBP),%RSP
	add $-1224, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cb5
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c84
	jmp uuid_0000000000079c86
uuid_0000000000079c84:
	push %RBP
	mov -1296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c81
	jmp uuid_0000000000079c83
uuid_0000000000079c81:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c7e
	jmp uuid_0000000000079c80
uuid_0000000000079c7e:
	movb $1, -1312(%rbp)
uuid_0000000000079c80:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000079c83:
	mov -1328(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000079c86:
	mov -1320(%RBP),%RSP
	add $-1480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cb2
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c8d
	jmp uuid_0000000000079c8f
uuid_0000000000079c8d:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c8a
	jmp uuid_0000000000079c8c
uuid_0000000000079c8a:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c87
	jmp uuid_0000000000079c89
uuid_0000000000079c87:
	movb $1, -1568(%rbp)
uuid_0000000000079c89:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_0000000000079c8c:
	mov -1584(%RBP),%RSP
	add $-1736, %RSP
uuid_0000000000079c8f:
	mov -1576(%RBP),%RSP
	add $-1736, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079caf
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c99
	jmp uuid_0000000000079c9b
uuid_0000000000079c99:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	jmp uuid_0000000000079c96
	jmp uuid_0000000000079c98
uuid_0000000000079c96:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c93
	jmp uuid_0000000000079c95
uuid_0000000000079c93:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c90
	jmp uuid_0000000000079c92
uuid_0000000000079c90:
	movb $1, -1824(%rbp)
uuid_0000000000079c92:
	mov -1952(%RBP),%RSP
	add $-2024, %RSP
uuid_0000000000079c95:
	mov -1872(%RBP),%RSP
	add $-2024, %RSP
uuid_0000000000079c98:
	mov -1840(%RBP),%RSP
	add $-2024, %RSP
uuid_0000000000079c9b:
	mov -1832(%RBP),%RSP
	add $-2024, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1824(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cac
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ca2
	jmp uuid_0000000000079ca4
uuid_0000000000079ca2:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079c9f
	jmp uuid_0000000000079ca1
uuid_0000000000079c9f:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	jmp uuid_0000000000079c9c
	jmp uuid_0000000000079c9e
uuid_0000000000079c9c:
	movb $1, -2112(%rbp)
uuid_0000000000079c9e:
	mov -2208(%RBP),%RSP
	add $-2264, %RSP
uuid_0000000000079ca1:
	mov -2128(%RBP),%RSP
	add $-2264, %RSP
uuid_0000000000079ca4:
	mov -2120(%RBP),%RSP
	add $-2264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ca9
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_0000000000079ca6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079ca5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079ca8
uuid_0000000000079ca6:
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_0000000000079ca8:
	mov -2272(%RBP),%RSP
	add $-2344, %RSP
	jmp uuid_0000000000079cab
uuid_0000000000079ca9:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cab:
	mov -2032(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_0000000000079cae
uuid_0000000000079cac:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cae:
	mov -1744(%RBP),%RSP
	add $-2024, %RSP
	jmp uuid_0000000000079cb1
uuid_0000000000079caf:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cb1:
	mov -1488(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_0000000000079cb4
uuid_0000000000079cb2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cb4:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
	jmp uuid_0000000000079cb7
uuid_0000000000079cb5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cb7:
	mov -976(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_0000000000079cba
uuid_0000000000079cb8:
	pushq -968(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cba:
	mov -800(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_0000000000079cbd
uuid_0000000000079cbb:
	pushq -792(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cbd:
	mov -624(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_0000000000079cc0
uuid_0000000000079cbe:
	pushq $uuid_0000000000079c4f
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c59
	jmp uuid_0000000000079c5b
uuid_0000000000079c59:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c56
	jmp uuid_0000000000079c58
uuid_0000000000079c56:
	push %RBP
	mov -680(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c53
	jmp uuid_0000000000079c55
uuid_0000000000079c53:
	push %RBP
	mov -672(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c50
	jmp uuid_0000000000079c52
uuid_0000000000079c50:
	movb $1, -704(%rbp)
uuid_0000000000079c52:
	mov -752(%RBP),%RSP
	add $-760, %RSP
uuid_0000000000079c55:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_0000000000079c58:
	mov -720(%RBP),%RSP
	add $-760, %RSP
uuid_0000000000079c5b:
	mov -712(%RBP),%RSP
	add $-760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c60
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079c5f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079c62
uuid_0000000000079c60:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079c5c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -760(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079c5d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079c5e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -624(%rbp)
uuid_0000000000079c62:
	mov -664(%RBP),%RSP
	add $-760, %RSP
	pushq -624(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079cc0:
	mov -232(%RBP),%RSP
	add $-760, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ce8
	jmp uuid_0000000000079cea
uuid_0000000000079ce8:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ce5
	jmp uuid_0000000000079ce7
uuid_0000000000079ce5:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cdf
	jmp uuid_0000000000079ce1
uuid_0000000000079cdf:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ccd
	jmp uuid_0000000000079ccf
uuid_0000000000079ccd:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cc4
	jmp uuid_0000000000079cc6
uuid_0000000000079cc4:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_0000000000079cc1
	jmp uuid_0000000000079cc3
uuid_0000000000079cc1:
	movb $1, -680(%rbp)
uuid_0000000000079cc3:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_0000000000079cc6:
	mov -688(%RBP),%RSP
	add $-720, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cca
	jmp uuid_0000000000079ccc
uuid_0000000000079cca:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079cc7
	jmp uuid_0000000000079cc9
uuid_0000000000079cc7:
	movb $1, -584(%rbp)
uuid_0000000000079cc9:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000079ccc:
	mov -600(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000079ccf:
	mov -592(%RBP),%RSP
	add $-800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cdc
	jmp uuid_0000000000079cde
uuid_0000000000079cdc:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cd6
	jmp uuid_0000000000079cd8
uuid_0000000000079cd6:
	push %RBP
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	jmp uuid_0000000000079cd3
	jmp uuid_0000000000079cd5
uuid_0000000000079cd3:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cd0
	jmp uuid_0000000000079cd2
uuid_0000000000079cd0:
	movb $1, -888(%rbp)
uuid_0000000000079cd2:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000079cd5:
	mov -904(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000079cd8:
	mov -896(%RBP),%RSP
	add $-976, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cd9
	jmp uuid_0000000000079cdb
uuid_0000000000079cd9:
	movb $1, -488(%rbp)
uuid_0000000000079cdb:
	mov -808(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000079cde:
	mov -504(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000079ce1:
	mov -496(%RBP),%RSP
	add $-976, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ce2
	jmp uuid_0000000000079ce4
uuid_0000000000079ce2:
	movb $1, -312(%rbp)
uuid_0000000000079ce4:
	mov -408(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000079ce7:
	mov -328(%RBP),%RSP
	add $-976, %RSP
uuid_0000000000079cea:
	mov -320(%RBP),%RSP
	add $-976, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ea4
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d0c
	jmp uuid_0000000000079d0e
uuid_0000000000079d0c:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cf1
	jmp uuid_0000000000079cf3
uuid_0000000000079cf1:
	push %RBP
	jmp uuid_0000000000079cee
	jmp uuid_0000000000079cf0
uuid_0000000000079cee:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ceb
	jmp uuid_0000000000079ced
uuid_0000000000079ceb:
	movb $1, -1160(%rbp)
uuid_0000000000079ced:
	mov -1184(%RBP),%RSP
	add $-1192, %RSP
uuid_0000000000079cf0:
	mov -1176(%RBP),%RSP
	add $-1192, %RSP
uuid_0000000000079cf3:
	mov -1168(%RBP),%RSP
	add $-1192, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d09
	jmp uuid_0000000000079d0b
uuid_0000000000079d09:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d03
	jmp uuid_0000000000079d05
uuid_0000000000079d03:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d00
	jmp uuid_0000000000079d02
uuid_0000000000079d00:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cfa
	jmp uuid_0000000000079cfc
uuid_0000000000079cfa:
	push %RBP
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	jmp uuid_0000000000079cf7
	jmp uuid_0000000000079cf9
uuid_0000000000079cf7:
	push %RBP
	mov -1384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cf4
	jmp uuid_0000000000079cf6
uuid_0000000000079cf4:
	movb $1, -1456(%rbp)
uuid_0000000000079cf6:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000079cf9:
	mov -1472(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000079cfc:
	mov -1464(%RBP),%RSP
	add $-1544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cfd
	jmp uuid_0000000000079cff
uuid_0000000000079cfd:
	movb $1, -1280(%rbp)
uuid_0000000000079cff:
	mov -1376(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000079d02:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000079d05:
	mov -1288(%RBP),%RSP
	add $-1544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d06
	jmp uuid_0000000000079d08
uuid_0000000000079d06:
	movb $1, -1064(%rbp)
uuid_0000000000079d08:
	mov -1200(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000079d0b:
	mov -1080(%RBP),%RSP
	add $-1544, %RSP
uuid_0000000000079d0e:
	mov -1072(%RBP),%RSP
	add $-1544, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ea1
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d30
	jmp uuid_0000000000079d32
uuid_0000000000079d30:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d15
	jmp uuid_0000000000079d17
uuid_0000000000079d15:
	push %RBP
	jmp uuid_0000000000079d12
	jmp uuid_0000000000079d14
uuid_0000000000079d12:
	push %RBP
	mov -1656(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079d0f
	jmp uuid_0000000000079d11
uuid_0000000000079d0f:
	movb $1, -1728(%rbp)
uuid_0000000000079d11:
	mov -1752(%RBP),%RSP
	add $-1760, %RSP
uuid_0000000000079d14:
	mov -1744(%RBP),%RSP
	add $-1760, %RSP
uuid_0000000000079d17:
	mov -1736(%RBP),%RSP
	add $-1760, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d2d
	jmp uuid_0000000000079d2f
uuid_0000000000079d2d:
	push %RBP
	mov -1608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d27
	jmp uuid_0000000000079d29
uuid_0000000000079d27:
	push %RBP
	mov -1832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d24
	jmp uuid_0000000000079d26
uuid_0000000000079d24:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d1e
	jmp uuid_0000000000079d20
uuid_0000000000079d1e:
	push %RBP
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	jmp uuid_0000000000079d1b
	jmp uuid_0000000000079d1d
uuid_0000000000079d1b:
	push %RBP
	mov -1952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d18
	jmp uuid_0000000000079d1a
uuid_0000000000079d18:
	movb $1, -2024(%rbp)
uuid_0000000000079d1a:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079d1d:
	mov -2040(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079d20:
	mov -2032(%RBP),%RSP
	add $-2112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2024(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d21
	jmp uuid_0000000000079d23
uuid_0000000000079d21:
	movb $1, -1848(%rbp)
uuid_0000000000079d23:
	mov -1944(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079d26:
	mov -1864(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079d29:
	mov -1856(%RBP),%RSP
	add $-2112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d2a
	jmp uuid_0000000000079d2c
uuid_0000000000079d2a:
	movb $1, -1632(%rbp)
uuid_0000000000079d2c:
	mov -1768(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079d2f:
	mov -1648(%RBP),%RSP
	add $-2112, %RSP
uuid_0000000000079d32:
	mov -1640(%RBP),%RSP
	add $-2112, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e9e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d5a
	jmp uuid_0000000000079d5c
uuid_0000000000079d5a:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d57
	jmp uuid_0000000000079d59
uuid_0000000000079d57:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d51
	jmp uuid_0000000000079d53
uuid_0000000000079d51:
	push %RBP
	mov -2360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d3f
	jmp uuid_0000000000079d41
uuid_0000000000079d3f:
	push %RBP
	mov -2456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d36
	jmp uuid_0000000000079d38
uuid_0000000000079d36:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_0000000000079d33
	jmp uuid_0000000000079d35
uuid_0000000000079d33:
	movb $1, -2568(%rbp)
uuid_0000000000079d35:
	mov -2584(%RBP),%RSP
	add $-2608, %RSP
uuid_0000000000079d38:
	mov -2576(%RBP),%RSP
	add $-2608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d3c
	jmp uuid_0000000000079d3e
uuid_0000000000079d3c:
	push %RBP
	mov -2448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d39
	jmp uuid_0000000000079d3b
uuid_0000000000079d39:
	movb $1, -2472(%rbp)
uuid_0000000000079d3b:
	mov -2616(%RBP),%RSP
	add $-2688, %RSP
uuid_0000000000079d3e:
	mov -2488(%RBP),%RSP
	add $-2688, %RSP
uuid_0000000000079d41:
	mov -2480(%RBP),%RSP
	add $-2688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d4e
	jmp uuid_0000000000079d50
uuid_0000000000079d4e:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d48
	jmp uuid_0000000000079d4a
uuid_0000000000079d48:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	jmp uuid_0000000000079d45
	jmp uuid_0000000000079d47
uuid_0000000000079d45:
	push %RBP
	mov -2704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d42
	jmp uuid_0000000000079d44
uuid_0000000000079d42:
	movb $1, -2776(%rbp)
uuid_0000000000079d44:
	mov -2856(%RBP),%RSP
	add $-2864, %RSP
uuid_0000000000079d47:
	mov -2792(%RBP),%RSP
	add $-2864, %RSP
uuid_0000000000079d4a:
	mov -2784(%RBP),%RSP
	add $-2864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d4b
	jmp uuid_0000000000079d4d
uuid_0000000000079d4b:
	movb $1, -2376(%rbp)
uuid_0000000000079d4d:
	mov -2696(%RBP),%RSP
	add $-2864, %RSP
uuid_0000000000079d50:
	mov -2392(%RBP),%RSP
	add $-2864, %RSP
uuid_0000000000079d53:
	mov -2384(%RBP),%RSP
	add $-2864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d54
	jmp uuid_0000000000079d56
uuid_0000000000079d54:
	movb $1, -2200(%rbp)
uuid_0000000000079d56:
	mov -2296(%RBP),%RSP
	add $-2864, %RSP
uuid_0000000000079d59:
	mov -2216(%RBP),%RSP
	add $-2864, %RSP
uuid_0000000000079d5c:
	mov -2208(%RBP),%RSP
	add $-2864, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e9b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2944(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d7e
	jmp uuid_0000000000079d80
uuid_0000000000079d7e:
	push %RBP
	mov -2936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3040(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d63
	jmp uuid_0000000000079d65
uuid_0000000000079d63:
	push %RBP
	jmp uuid_0000000000079d60
	jmp uuid_0000000000079d62
uuid_0000000000079d60:
	push %RBP
	mov -2976(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079d5d
	jmp uuid_0000000000079d5f
uuid_0000000000079d5d:
	movb $1, -3048(%rbp)
uuid_0000000000079d5f:
	mov -3072(%RBP),%RSP
	add $-3080, %RSP
uuid_0000000000079d62:
	mov -3064(%RBP),%RSP
	add $-3080, %RSP
uuid_0000000000079d65:
	mov -3056(%RBP),%RSP
	add $-3080, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d7b
	jmp uuid_0000000000079d7d
uuid_0000000000079d7b:
	push %RBP
	mov -2928(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d75
	jmp uuid_0000000000079d77
uuid_0000000000079d75:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d72
	jmp uuid_0000000000079d74
uuid_0000000000079d72:
	push %RBP
	mov -3144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3336(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d6c
	jmp uuid_0000000000079d6e
uuid_0000000000079d6c:
	push %RBP
	pushq -3280(%RBP)
	pushq -3288(%RBP)
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	pushq -3320(%RBP)
	pushq -3328(%RBP)
	jmp uuid_0000000000079d69
	jmp uuid_0000000000079d6b
uuid_0000000000079d69:
	push %RBP
	mov -3272(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3432(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d66
	jmp uuid_0000000000079d68
uuid_0000000000079d66:
	movb $1, -3344(%rbp)
uuid_0000000000079d68:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
uuid_0000000000079d6b:
	mov -3360(%RBP),%RSP
	add $-3432, %RSP
uuid_0000000000079d6e:
	mov -3352(%RBP),%RSP
	add $-3432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3344(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d6f
	jmp uuid_0000000000079d71
uuid_0000000000079d6f:
	movb $1, -3168(%rbp)
uuid_0000000000079d71:
	mov -3264(%RBP),%RSP
	add $-3432, %RSP
uuid_0000000000079d74:
	mov -3184(%RBP),%RSP
	add $-3432, %RSP
uuid_0000000000079d77:
	mov -3176(%RBP),%RSP
	add $-3432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3168(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d78
	jmp uuid_0000000000079d7a
uuid_0000000000079d78:
	movb $1, -2952(%rbp)
uuid_0000000000079d7a:
	mov -3088(%RBP),%RSP
	add $-3432, %RSP
uuid_0000000000079d7d:
	mov -2968(%RBP),%RSP
	add $-3432, %RSP
uuid_0000000000079d80:
	mov -2960(%RBP),%RSP
	add $-3432, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2952(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e98
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079da2
	jmp uuid_0000000000079da4
uuid_0000000000079da2:
	push %RBP
	mov -3504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d87
	jmp uuid_0000000000079d89
uuid_0000000000079d87:
	push %RBP
	jmp uuid_0000000000079d84
	jmp uuid_0000000000079d86
uuid_0000000000079d84:
	push %RBP
	mov -3544(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079d81
	jmp uuid_0000000000079d83
uuid_0000000000079d81:
	movb $1, -3616(%rbp)
uuid_0000000000079d83:
	mov -3640(%RBP),%RSP
	add $-3648, %RSP
uuid_0000000000079d86:
	mov -3632(%RBP),%RSP
	add $-3648, %RSP
uuid_0000000000079d89:
	mov -3624(%RBP),%RSP
	add $-3648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3616(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d9f
	jmp uuid_0000000000079da1
uuid_0000000000079d9f:
	push %RBP
	mov -3496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d99
	jmp uuid_0000000000079d9b
uuid_0000000000079d99:
	push %RBP
	mov -3720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d96
	jmp uuid_0000000000079d98
uuid_0000000000079d96:
	push %RBP
	mov -3712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d90
	jmp uuid_0000000000079d92
uuid_0000000000079d90:
	push %RBP
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	jmp uuid_0000000000079d8d
	jmp uuid_0000000000079d8f
uuid_0000000000079d8d:
	push %RBP
	mov -3840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq $uuid_0000000000076175
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d8a
	jmp uuid_0000000000079d8c
uuid_0000000000079d8a:
	movb $1, -3912(%rbp)
uuid_0000000000079d8c:
	mov -3992(%RBP),%RSP
	add $-4000, %RSP
uuid_0000000000079d8f:
	mov -3928(%RBP),%RSP
	add $-4000, %RSP
uuid_0000000000079d92:
	mov -3920(%RBP),%RSP
	add $-4000, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3912(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d93
	jmp uuid_0000000000079d95
uuid_0000000000079d93:
	movb $1, -3736(%rbp)
uuid_0000000000079d95:
	mov -3832(%RBP),%RSP
	add $-4000, %RSP
uuid_0000000000079d98:
	mov -3752(%RBP),%RSP
	add $-4000, %RSP
uuid_0000000000079d9b:
	mov -3744(%RBP),%RSP
	add $-4000, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d9c
	jmp uuid_0000000000079d9e
uuid_0000000000079d9c:
	movb $1, -3520(%rbp)
uuid_0000000000079d9e:
	mov -3656(%RBP),%RSP
	add $-4000, %RSP
uuid_0000000000079da1:
	mov -3536(%RBP),%RSP
	add $-4000, %RSP
uuid_0000000000079da4:
	mov -3528(%RBP),%RSP
	add $-4000, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3520(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e95
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dbd
	jmp uuid_0000000000079dbf
uuid_0000000000079dbd:
	push %RBP
	mov -4072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dab
	jmp uuid_0000000000079dad
uuid_0000000000079dab:
	push %RBP
	jmp uuid_0000000000079da8
	jmp uuid_0000000000079daa
uuid_0000000000079da8:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079da5
	jmp uuid_0000000000079da7
uuid_0000000000079da5:
	movb $1, -4184(%rbp)
uuid_0000000000079da7:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_0000000000079daa:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_0000000000079dad:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dba
	jmp uuid_0000000000079dbc
uuid_0000000000079dba:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079db4
	jmp uuid_0000000000079db6
uuid_0000000000079db4:
	push %RBP
	pushq -4240(%RBP)
	pushq -4248(%RBP)
	pushq -4256(%RBP)
	pushq -4264(%RBP)
	pushq -4272(%RBP)
	pushq -4280(%RBP)
	pushq -4288(%RBP)
	jmp uuid_0000000000079db1
	jmp uuid_0000000000079db3
uuid_0000000000079db1:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq $uuid_0000000000076491
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dae
	jmp uuid_0000000000079db0
uuid_0000000000079dae:
	movb $1, -4304(%rbp)
uuid_0000000000079db0:
	mov -4384(%RBP),%RSP
	add $-4392, %RSP
uuid_0000000000079db3:
	mov -4320(%RBP),%RSP
	add $-4392, %RSP
uuid_0000000000079db6:
	mov -4312(%RBP),%RSP
	add $-4392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079db7
	jmp uuid_0000000000079db9
uuid_0000000000079db7:
	movb $1, -4088(%rbp)
uuid_0000000000079db9:
	mov -4224(%RBP),%RSP
	add $-4392, %RSP
uuid_0000000000079dbc:
	mov -4104(%RBP),%RSP
	add $-4392, %RSP
uuid_0000000000079dbf:
	mov -4096(%RBP),%RSP
	add $-4392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4088(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e92
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dd8
	jmp uuid_0000000000079dda
uuid_0000000000079dd8:
	push %RBP
	mov -4464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dc6
	jmp uuid_0000000000079dc8
uuid_0000000000079dc6:
	push %RBP
	jmp uuid_0000000000079dc3
	jmp uuid_0000000000079dc5
uuid_0000000000079dc3:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079dc0
	jmp uuid_0000000000079dc2
uuid_0000000000079dc0:
	movb $1, -4576(%rbp)
uuid_0000000000079dc2:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_0000000000079dc5:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_0000000000079dc8:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dd5
	jmp uuid_0000000000079dd7
uuid_0000000000079dd5:
	push %RBP
	mov -4456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dcf
	jmp uuid_0000000000079dd1
uuid_0000000000079dcf:
	push %RBP
	pushq -4632(%RBP)
	pushq -4640(%RBP)
	pushq -4648(%RBP)
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	jmp uuid_0000000000079dcc
	jmp uuid_0000000000079dce
uuid_0000000000079dcc:
	push %RBP
	mov -4624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4784(%rbp)
	pushq $uuid_0000000000076491
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dc9
	jmp uuid_0000000000079dcb
uuid_0000000000079dc9:
	movb $1, -4696(%rbp)
uuid_0000000000079dcb:
	mov -4776(%RBP),%RSP
	add $-4784, %RSP
uuid_0000000000079dce:
	mov -4712(%RBP),%RSP
	add $-4784, %RSP
uuid_0000000000079dd1:
	mov -4704(%RBP),%RSP
	add $-4784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dd2
	jmp uuid_0000000000079dd4
uuid_0000000000079dd2:
	movb $1, -4480(%rbp)
uuid_0000000000079dd4:
	mov -4616(%RBP),%RSP
	add $-4784, %RSP
uuid_0000000000079dd7:
	mov -4496(%RBP),%RSP
	add $-4784, %RSP
uuid_0000000000079dda:
	mov -4488(%RBP),%RSP
	add $-4784, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e8f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079de1
	jmp uuid_0000000000079de3
uuid_0000000000079de1:
	push %RBP
	pushq -4808(%RBP)
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	pushq -4848(%RBP)
	pushq -4856(%RBP)
	jmp uuid_0000000000079dde
	jmp uuid_0000000000079de0
uuid_0000000000079dde:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ddb
	jmp uuid_0000000000079ddd
uuid_0000000000079ddb:
	movb $1, -4872(%rbp)
uuid_0000000000079ddd:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_0000000000079de0:
	mov -4888(%RBP),%RSP
	add $-4960, %RSP
uuid_0000000000079de3:
	mov -4880(%RBP),%RSP
	add $-4960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e8c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e00
	jmp uuid_0000000000079e02
uuid_0000000000079e00:
	push %RBP
	pushq -4984(%RBP)
	pushq -4992(%RBP)
	pushq -5000(%RBP)
	pushq -5008(%RBP)
	pushq -5016(%RBP)
	pushq -5024(%RBP)
	pushq -5032(%RBP)
	jmp uuid_0000000000079dfd
	jmp uuid_0000000000079dff
uuid_0000000000079dfd:
	push %RBP
	mov -4976(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079dfa
	jmp uuid_0000000000079dfc
uuid_0000000000079dfa:
	movb $1, -5048(%rbp)
uuid_0000000000079dfc:
	mov -5128(%RBP),%RSP
	add $-5136, %RSP
uuid_0000000000079dff:
	mov -5064(%RBP),%RSP
	add $-5136, %RSP
uuid_0000000000079e02:
	mov -5056(%RBP),%RSP
	add $-5136, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e89
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e28
	jmp uuid_0000000000079e2a
uuid_0000000000079e28:
	push %RBP
	mov -5208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e25
	jmp uuid_0000000000079e27
uuid_0000000000079e25:
	push %RBP
	mov -5200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e1f
	jmp uuid_0000000000079e21
uuid_0000000000079e1f:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	jmp uuid_0000000000079e1c
	jmp uuid_0000000000079e1e
uuid_0000000000079e1c:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079e19
	jmp uuid_0000000000079e1b
uuid_0000000000079e19:
	movb $1, -5400(%rbp)
uuid_0000000000079e1b:
	mov -5480(%RBP),%RSP
	add $-5488, %RSP
uuid_0000000000079e1e:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_0000000000079e21:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5400(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e22
	jmp uuid_0000000000079e24
uuid_0000000000079e22:
	movb $1, -5224(%rbp)
uuid_0000000000079e24:
	mov -5320(%RBP),%RSP
	add $-5488, %RSP
uuid_0000000000079e27:
	mov -5240(%RBP),%RSP
	add $-5488, %RSP
uuid_0000000000079e2a:
	mov -5232(%RBP),%RSP
	add $-5488, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e86
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e46
	jmp uuid_0000000000079e48
uuid_0000000000079e46:
	push %RBP
	mov -5560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e43
	jmp uuid_0000000000079e45
uuid_0000000000079e43:
	push %RBP
	mov -5552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e3d
	jmp uuid_0000000000079e3f
uuid_0000000000079e3d:
	push %RBP
	mov -5736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e3a
	jmp uuid_0000000000079e3c
uuid_0000000000079e3a:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5920(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e34
	jmp uuid_0000000000079e36
uuid_0000000000079e34:
	push %RBP
	pushq -5864(%RBP)
	pushq -5872(%RBP)
	pushq -5880(%RBP)
	pushq -5888(%RBP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	jmp uuid_0000000000079e31
	jmp uuid_0000000000079e33
uuid_0000000000079e31:
	push %RBP
	mov -5856(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079e2e
	jmp uuid_0000000000079e30
uuid_0000000000079e2e:
	movb $1, -5928(%rbp)
uuid_0000000000079e30:
	mov -6008(%RBP),%RSP
	add $-6016, %RSP
uuid_0000000000079e33:
	mov -5944(%RBP),%RSP
	add $-6016, %RSP
uuid_0000000000079e36:
	mov -5936(%RBP),%RSP
	add $-6016, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5928(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e37
	jmp uuid_0000000000079e39
uuid_0000000000079e37:
	movb $1, -5752(%rbp)
uuid_0000000000079e39:
	mov -5848(%RBP),%RSP
	add $-6016, %RSP
uuid_0000000000079e3c:
	mov -5768(%RBP),%RSP
	add $-6016, %RSP
uuid_0000000000079e3f:
	mov -5760(%RBP),%RSP
	add $-6016, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5752(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e40
	jmp uuid_0000000000079e42
uuid_0000000000079e40:
	movb $1, -5576(%rbp)
uuid_0000000000079e42:
	mov -5672(%RBP),%RSP
	add $-6016, %RSP
uuid_0000000000079e45:
	mov -5592(%RBP),%RSP
	add $-6016, %RSP
uuid_0000000000079e48:
	mov -5584(%RBP),%RSP
	add $-6016, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5576(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e83
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6096(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e52
	jmp uuid_0000000000079e54
uuid_0000000000079e52:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e4f
	jmp uuid_0000000000079e51
uuid_0000000000079e4f:
	push %RBP
	mov -6080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e4c
	jmp uuid_0000000000079e4e
uuid_0000000000079e4c:
	movb $1, -6104(%rbp)
uuid_0000000000079e4e:
	mov -6200(%RBP),%RSP
	add $-6272, %RSP
uuid_0000000000079e51:
	mov -6120(%RBP),%RSP
	add $-6272, %RSP
uuid_0000000000079e54:
	mov -6112(%RBP),%RSP
	add $-6272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e80
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e5b
	jmp uuid_0000000000079e5d
uuid_0000000000079e5b:
	push %RBP
	mov -6344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e58
	jmp uuid_0000000000079e5a
uuid_0000000000079e58:
	push %RBP
	mov -6336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e55
	jmp uuid_0000000000079e57
uuid_0000000000079e55:
	movb $1, -6360(%rbp)
uuid_0000000000079e57:
	mov -6456(%RBP),%RSP
	add $-6528, %RSP
uuid_0000000000079e5a:
	mov -6376(%RBP),%RSP
	add $-6528, %RSP
uuid_0000000000079e5d:
	mov -6368(%RBP),%RSP
	add $-6528, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e7d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6608(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e67
	jmp uuid_0000000000079e69
uuid_0000000000079e67:
	push %RBP
	pushq -6584(%RBP)
	pushq -6592(%RBP)
	pushq -6600(%RBP)
	jmp uuid_0000000000079e64
	jmp uuid_0000000000079e66
uuid_0000000000079e64:
	push %RBP
	mov -6576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e61
	jmp uuid_0000000000079e63
uuid_0000000000079e61:
	push %RBP
	mov -6568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e5e
	jmp uuid_0000000000079e60
uuid_0000000000079e5e:
	movb $1, -6616(%rbp)
uuid_0000000000079e60:
	mov -6744(%RBP),%RSP
	add $-6816, %RSP
uuid_0000000000079e63:
	mov -6664(%RBP),%RSP
	add $-6816, %RSP
uuid_0000000000079e66:
	mov -6632(%RBP),%RSP
	add $-6816, %RSP
uuid_0000000000079e69:
	mov -6624(%RBP),%RSP
	add $-6816, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6616(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e7a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6896(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e70
	jmp uuid_0000000000079e72
uuid_0000000000079e70:
	push %RBP
	mov -6888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e6d
	jmp uuid_0000000000079e6f
uuid_0000000000079e6d:
	push %RBP
	pushq -6832(%RBP)
	pushq -6840(%RBP)
	pushq -6848(%RBP)
	pushq -6856(%RBP)
	pushq -6864(%RBP)
	pushq -6872(%RBP)
	pushq -6880(%RBP)
	jmp uuid_0000000000079e6a
	jmp uuid_0000000000079e6c
uuid_0000000000079e6a:
	movb $1, -6904(%rbp)
uuid_0000000000079e6c:
	mov -7000(%RBP),%RSP
	add $-7056, %RSP
uuid_0000000000079e6f:
	mov -6920(%RBP),%RSP
	add $-7056, %RSP
uuid_0000000000079e72:
	mov -6912(%RBP),%RSP
	add $-7056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6904(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e77
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_0000000000079e74
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079e73
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079e76
uuid_0000000000079e74:
	movq -7136(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -7128(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -7120(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -7112(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -7104(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -7096(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -7088(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -7080(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -7072(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_0000000000079e76:
	mov -7064(%RBP),%RSP
	add $-7136, %RSP
	jmp uuid_0000000000079e79
uuid_0000000000079e77:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7008(%rbp)
	pushq -7016(%rbp)
	pushq -7024(%rbp)
	pushq -7032(%rbp)
	pushq -7040(%rbp)
	pushq -7048(%rbp)
	pushq -7056(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	pushq -6944(%rbp)
	pushq -6952(%rbp)
	pushq -6960(%rbp)
	pushq -6968(%rbp)
	pushq -6976(%rbp)
	pushq -6984(%rbp)
	pushq -6992(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e79:
	mov -6824(%RBP),%RSP
	add $-7056, %RSP
	jmp uuid_0000000000079e7c
uuid_0000000000079e7a:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -6784(%rbp)
	pushq -6792(%rbp)
	pushq -6800(%rbp)
	pushq -6808(%rbp)
	pushq -6816(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -6704(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e7c:
	mov -6536(%RBP),%RSP
	add $-6816, %RSP
	jmp uuid_0000000000079e7f
uuid_0000000000079e7d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6464(%rbp)
	pushq -6472(%rbp)
	pushq -6480(%rbp)
	pushq -6488(%rbp)
	pushq -6496(%rbp)
	pushq -6504(%rbp)
	pushq -6512(%rbp)
	pushq -6520(%rbp)
	pushq -6528(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq -6440(%rbp)
	pushq -6448(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e7f:
	mov -6280(%RBP),%RSP
	add $-6528, %RSP
	jmp uuid_0000000000079e82
uuid_0000000000079e80:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -6232(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6128(%rbp)
	pushq -6136(%rbp)
	pushq -6144(%rbp)
	pushq -6152(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e82:
	mov -6024(%RBP),%RSP
	add $-6272, %RSP
	jmp uuid_0000000000079e85
uuid_0000000000079e83:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e49
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_0000000000079e4b
uuid_0000000000079e49:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -6096(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -6088(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -6080(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -6072(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -6064(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -6056(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -6048(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -6040(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -6032(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_0000000000079e4b:
	mov -6024(%RBP),%RSP
	add $-6096, %RSP
uuid_0000000000079e85:
	mov -5496(%RBP),%RSP
	add $-6096, %RSP
	jmp uuid_0000000000079e88
uuid_0000000000079e86:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e2b
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_0000000000079e2d
uuid_0000000000079e2b:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -5568(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -5504(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_0000000000079e2d:
	mov -5496(%RBP),%RSP
	add $-5568, %RSP
uuid_0000000000079e88:
	mov -5144(%RBP),%RSP
	add $-5568, %RSP
	jmp uuid_0000000000079e8b
uuid_0000000000079e89:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000079e16:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e17
	jmp uuid_0000000000079e18
uuid_0000000000079e17:
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	push %RBP
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq $0
	push %RBP
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e0c
	jmp uuid_0000000000079e0e
uuid_0000000000079e0c:
	push %RBP
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	jmp uuid_0000000000079e09
	jmp uuid_0000000000079e0b
uuid_0000000000079e09:
	push %RBP
	mov -5256(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079e06
	jmp uuid_0000000000079e08
uuid_0000000000079e06:
	push %RBP
	mov -5248(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e03
	jmp uuid_0000000000079e05
uuid_0000000000079e03:
	movb $1, -5296(%rbp)
uuid_0000000000079e05:
	mov -5360(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000079e08:
	mov -5344(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000079e0b:
	mov -5312(%RBP),%RSP
	add $-5408, %RSP
uuid_0000000000079e0e:
	mov -5304(%RBP),%RSP
	add $-5408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5296(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e13
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079e12
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079e15
uuid_0000000000079e13:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e0f
	movq -5408(%rbp), %r15
	movq %r15, -5184(%rbp)
	movq -5400(%rbp), %r15
	movq %r15, -5176(%rbp)
	movq -5392(%rbp), %r15
	movq %r15, -5168(%rbp)
	movq -5384(%rbp), %r15
	movq %r15, -5160(%rbp)
	movq -5376(%rbp), %r15
	movq %r15, -5152(%rbp)
	movq -5368(%rbp), %r15
	movq %r15, -5144(%rbp)
	jmp uuid_0000000000079e11
uuid_0000000000079e0f:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5424(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5184(%RBP)
	popq -5176(%RBP)
	popq -5168(%RBP)
	popq -5160(%RBP)
	popq -5152(%RBP)
	popq -5144(%RBP)
uuid_0000000000079e11:
	mov -5416(%RBP),%RSP
	add $-5424, %RSP
uuid_0000000000079e15:
	mov -5240(%RBP),%RSP
	add $-5424, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079e16
uuid_0000000000079e18:
uuid_0000000000079e8b:
	mov -4968(%RBP),%RSP
	add $-5184, %RSP
	jmp uuid_0000000000079e8e
uuid_0000000000079e8c:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000079df7:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079df8
	jmp uuid_0000000000079df9
uuid_0000000000079df8:
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	push %RBP
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ded
	jmp uuid_0000000000079def
uuid_0000000000079ded:
	push %RBP
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	jmp uuid_0000000000079dea
	jmp uuid_0000000000079dec
uuid_0000000000079dea:
	push %RBP
	mov -5080(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079de7
	jmp uuid_0000000000079de9
uuid_0000000000079de7:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079de4
	jmp uuid_0000000000079de6
uuid_0000000000079de4:
	movb $1, -5120(%rbp)
uuid_0000000000079de6:
	mov -5184(%RBP),%RSP
	add $-5232, %RSP
uuid_0000000000079de9:
	mov -5168(%RBP),%RSP
	add $-5232, %RSP
uuid_0000000000079dec:
	mov -5136(%RBP),%RSP
	add $-5232, %RSP
uuid_0000000000079def:
	mov -5128(%RBP),%RSP
	add $-5232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079df4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079df3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079df6
uuid_0000000000079df4:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079df0
	movq -5232(%rbp), %r15
	movq %r15, -5008(%rbp)
	movq -5224(%rbp), %r15
	movq %r15, -5000(%rbp)
	movq -5216(%rbp), %r15
	movq %r15, -4992(%rbp)
	movq -5208(%rbp), %r15
	movq %r15, -4984(%rbp)
	movq -5200(%rbp), %r15
	movq %r15, -4976(%rbp)
	movq -5192(%rbp), %r15
	movq %r15, -4968(%rbp)
	jmp uuid_0000000000079df2
uuid_0000000000079df0:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -5248(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5008(%RBP)
	popq -5000(%RBP)
	popq -4992(%RBP)
	popq -4984(%RBP)
	popq -4976(%RBP)
	popq -4968(%RBP)
uuid_0000000000079df2:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_0000000000079df6:
	mov -5064(%RBP),%RSP
	add $-5248, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079df7
uuid_0000000000079df9:
uuid_0000000000079e8e:
	mov -4792(%RBP),%RSP
	add $-5008, %RSP
	jmp uuid_0000000000079e91
uuid_0000000000079e8f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076491
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e91:
	mov -4400(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_0000000000079e94
uuid_0000000000079e92:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076491
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e94:
	mov -4008(%RBP),%RSP
	add $-4392, %RSP
	jmp uuid_0000000000079e97
uuid_0000000000079e95:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076175
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3648(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e97:
	mov -3440(%RBP),%RSP
	add $-4000, %RSP
	jmp uuid_0000000000079e9a
uuid_0000000000079e98:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076175
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq -3376(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e9a:
	mov -2872(%RBP),%RSP
	add $-3432, %RSP
	jmp uuid_0000000000079e9d
uuid_0000000000079e9b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076175
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079e9d:
	mov -2120(%RBP),%RSP
	add $-2864, %RSP
	jmp uuid_0000000000079ea0
uuid_0000000000079e9e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079ea0:
	mov -1552(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_0000000000079ea3
uuid_0000000000079ea1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079ea3:
	mov -984(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_0000000000079ea6
uuid_0000000000079ea4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079ea6:
	mov -232(%RBP),%RSP
	add $-976, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_is_SB_suffixed_CL_ArrowU64String:
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000079eba:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ebb
	jmp uuid_0000000000079ebc
uuid_0000000000079ebb:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079eb0
	jmp uuid_0000000000079eb2
uuid_0000000000079eb0:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_0000000000079ead
	jmp uuid_0000000000079eaf
uuid_0000000000079ead:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079eaa
	jmp uuid_0000000000079eac
uuid_0000000000079eaa:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ea7
	jmp uuid_0000000000079ea9
uuid_0000000000079ea7:
	movb $1, -184(%rbp)
uuid_0000000000079ea9:
	mov -248(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000079eac:
	mov -232(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000079eaf:
	mov -200(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000079eb2:
	mov -192(%RBP),%RSP
	add $-296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eb7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079eb6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079eb9
uuid_0000000000079eb7:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eb3
	jmp uuid_0000000000079eb5
uuid_0000000000079eb3:
	movq $1, -24(%rbp)
uuid_0000000000079eb5:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	movq -296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_0000000000079eb9:
	mov -128(%RBP),%RSP
	add $-304, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079eba
uuid_0000000000079ebc:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
preprocess_CL_ArrowNilNil:
#call function index-typedefs : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_SB_uuids_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ed5
	jmp uuid_0000000000079ed7
uuid_0000000000079ed5:
	push %RBP
	mov -392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ec3
	jmp uuid_0000000000079ec5
uuid_0000000000079ec3:
	push %RBP
	jmp uuid_0000000000079ec0
	jmp uuid_0000000000079ec2
uuid_0000000000079ec0:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ebd
	jmp uuid_0000000000079ebf
uuid_0000000000079ebd:
	movb $1, -504(%rbp)
uuid_0000000000079ebf:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000079ec2:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000079ec5:
	mov -512(%RBP),%RSP
	add $-536, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ed2
	jmp uuid_0000000000079ed4
uuid_0000000000079ed2:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ecc
	jmp uuid_0000000000079ece
uuid_0000000000079ecc:
	push %RBP
	jmp uuid_0000000000079ec9
	jmp uuid_0000000000079ecb
uuid_0000000000079ec9:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $uuid_0000000000079774
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ec6
	jmp uuid_0000000000079ec8
uuid_0000000000079ec6:
	movb $1, -624(%rbp)
uuid_0000000000079ec8:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000079ecb:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000079ece:
	mov -632(%RBP),%RSP
	add $-656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ecf
	jmp uuid_0000000000079ed1
uuid_0000000000079ecf:
	movb $1, -408(%rbp)
uuid_0000000000079ed1:
	mov -544(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000079ed4:
	mov -424(%RBP),%RSP
	add $-656, %RSP
uuid_0000000000079ed7:
	mov -416(%RBP),%RSP
	add $-656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f58
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ef7
	jmp uuid_0000000000079ef9
uuid_0000000000079ef7:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ef4
	jmp uuid_0000000000079ef6
uuid_0000000000079ef4:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ef1
	jmp uuid_0000000000079ef3
uuid_0000000000079ef1:
	movb $1, -744(%rbp)
uuid_0000000000079ef3:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_0000000000079ef6:
	mov -760(%RBP),%RSP
	add $-912, %RSP
uuid_0000000000079ef9:
	mov -752(%RBP),%RSP
	add $-912, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f55
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f03
	jmp uuid_0000000000079f05
uuid_0000000000079f03:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_0000000000079f00
	jmp uuid_0000000000079f02
uuid_0000000000079f00:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079efd
	jmp uuid_0000000000079eff
uuid_0000000000079efd:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079efa
	jmp uuid_0000000000079efc
uuid_0000000000079efa:
	movb $1, -1000(%rbp)
uuid_0000000000079efc:
	mov -1128(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000079eff:
	mov -1048(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000079f02:
	mov -1016(%RBP),%RSP
	add $-1200, %RSP
uuid_0000000000079f05:
	mov -1008(%RBP),%RSP
	add $-1200, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f52
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f4f
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f4c
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f09
	jmp uuid_0000000000079f0b
uuid_0000000000079f09:
	push %RBP
	jmp uuid_0000000000079f06
	jmp uuid_0000000000079f08
uuid_0000000000079f06:
	movb $1, -1448(%rbp)
uuid_0000000000079f08:
	mov -1464(%RBP),%RSP
	add $-1464, %RSP
uuid_0000000000079f0b:
	mov -1456(%RBP),%RSP
	add $-1464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1448(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f49
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f12
	jmp uuid_0000000000079f14
uuid_0000000000079f12:
	push %RBP
	jmp uuid_0000000000079f0f
	jmp uuid_0000000000079f11
uuid_0000000000079f0f:
	push %RBP
	mov -1480(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079f0c
	jmp uuid_0000000000079f0e
uuid_0000000000079f0c:
	movb $1, -1552(%rbp)
uuid_0000000000079f0e:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000079f11:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_0000000000079f14:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f46
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f1b
	jmp uuid_0000000000079f1d
uuid_0000000000079f1b:
	push %RBP
	jmp uuid_0000000000079f18
	jmp uuid_0000000000079f1a
uuid_0000000000079f18:
	push %RBP
	mov -1600(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079f15
	jmp uuid_0000000000079f17
uuid_0000000000079f15:
	movb $1, -1672(%rbp)
uuid_0000000000079f17:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
uuid_0000000000079f1a:
	mov -1688(%RBP),%RSP
	add $-1704, %RSP
uuid_0000000000079f1d:
	mov -1680(%RBP),%RSP
	add $-1704, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f43
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f24
	jmp uuid_0000000000079f26
uuid_0000000000079f24:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f21
	jmp uuid_0000000000079f23
uuid_0000000000079f21:
	push %RBP
	mov -1768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f1e
	jmp uuid_0000000000079f20
uuid_0000000000079f1e:
	movb $1, -1792(%rbp)
uuid_0000000000079f20:
	mov -1888(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000079f23:
	mov -1808(%RBP),%RSP
	add $-1960, %RSP
uuid_0000000000079f26:
	mov -1800(%RBP),%RSP
	add $-1960, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1792(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f40
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f2d
	jmp uuid_0000000000079f2f
uuid_0000000000079f2d:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f2a
	jmp uuid_0000000000079f2c
uuid_0000000000079f2a:
	push %RBP
	mov -2024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f27
	jmp uuid_0000000000079f29
uuid_0000000000079f27:
	movb $1, -2048(%rbp)
uuid_0000000000079f29:
	mov -2144(%RBP),%RSP
	add $-2216, %RSP
uuid_0000000000079f2c:
	mov -2064(%RBP),%RSP
	add $-2216, %RSP
uuid_0000000000079f2f:
	mov -2056(%RBP),%RSP
	add $-2216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2048(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f3d
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f36
	jmp uuid_0000000000079f38
uuid_0000000000079f36:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f33
	jmp uuid_0000000000079f35
uuid_0000000000079f33:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	jmp uuid_0000000000079f30
	jmp uuid_0000000000079f32
uuid_0000000000079f30:
	movb $1, -2304(%rbp)
uuid_0000000000079f32:
	mov -2400(%RBP),%RSP
	add $-2456, %RSP
uuid_0000000000079f35:
	mov -2320(%RBP),%RSP
	add $-2456, %RSP
uuid_0000000000079f38:
	mov -2312(%RBP),%RSP
	add $-2456, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f3a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079f39
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079f3c
uuid_0000000000079f3a:
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000079f3c:
	mov -2224(%RBP),%RSP
	add $-2456, %RSP
	jmp uuid_0000000000079f3f
uuid_0000000000079f3d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000079f3f:
	mov -1968(%RBP),%RSP
	add $-2216, %RSP
	jmp uuid_0000000000079f42
uuid_0000000000079f40:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000079f42:
	mov -1712(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_0000000000079f45
uuid_0000000000079f43:
uuid_0000000000079f45:
	mov -1592(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_0000000000079f48
uuid_0000000000079f46:
uuid_0000000000079f48:
	mov -1472(%RBP),%RSP
	add $-1584, %RSP
	jmp uuid_0000000000079f4b
uuid_0000000000079f49:
uuid_0000000000079f4b:
	mov -1368(%RBP),%RSP
	add $-1464, %RSP
	jmp uuid_0000000000079f4e
uuid_0000000000079f4c:
uuid_0000000000079f4e:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_0000000000079f51
uuid_0000000000079f4f:
uuid_0000000000079f51:
	mov -1208(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_0000000000079f54
uuid_0000000000079f52:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000079f54:
	mov -920(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_0000000000079f57
uuid_0000000000079f55:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000079f57:
	mov -664(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_0000000000079f5a
uuid_0000000000079f58:
uuid_0000000000079eee:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eef
	jmp uuid_0000000000079ef0
uuid_0000000000079eef:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ee1
	jmp uuid_0000000000079ee3
uuid_0000000000079ee1:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_0000000000079ede
	jmp uuid_0000000000079ee0
uuid_0000000000079ede:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079edb
	jmp uuid_0000000000079edd
uuid_0000000000079edb:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ed8
	jmp uuid_0000000000079eda
uuid_0000000000079ed8:
	movb $1, -864(%rbp)
uuid_0000000000079eda:
	mov -976(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000079edd:
	mov -960(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000079ee0:
	mov -880(%RBP),%RSP
	add $-1072, %RSP
uuid_0000000000079ee3:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eeb
	push %RBP
	jmp uuid_0000000000079ee8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_0000000000079ee7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079eea
uuid_0000000000079ee8:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079eea:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_0000000000079eed
uuid_0000000000079eeb:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ee4
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000079ee6
uuid_0000000000079ee4:
	movq -952(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_0000000000079ee6:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000079eed:
	mov -760(%RBP),%RSP
	add $-1080, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079eee
uuid_0000000000079ef0:
uuid_0000000000079f5a:
	mov -328(%RBP),%RSP
	add $-656, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f61
	jmp uuid_0000000000079f63
uuid_0000000000079f61:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f5e
	jmp uuid_0000000000079f60
uuid_0000000000079f5e:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f5b
	jmp uuid_0000000000079f5d
uuid_0000000000079f5b:
	movb $1, -600(%rbp)
uuid_0000000000079f5d:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000079f60:
	mov -616(%RBP),%RSP
	add $-768, %RSP
uuid_0000000000079f63:
	mov -608(%RBP),%RSP
	add $-768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a20f
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fb2
	jmp uuid_0000000000079fb4
uuid_0000000000079fb2:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq $0
	push %RBP
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f7c
	jmp uuid_0000000000079f7e
uuid_0000000000079f7c:
	push %RBP
	jmp uuid_0000000000079f79
	jmp uuid_0000000000079f7b
uuid_0000000000079f79:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f73
	jmp uuid_0000000000079f75
uuid_0000000000079f73:
	push %RBP
	jmp uuid_0000000000079f70
	jmp uuid_0000000000079f72
uuid_0000000000079f70:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f6a
	jmp uuid_0000000000079f6c
uuid_0000000000079f6a:
	push %RBP
	jmp uuid_0000000000079f67
	jmp uuid_0000000000079f69
uuid_0000000000079f67:
	push %RBP
	mov -1168(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079f64
	jmp uuid_0000000000079f66
uuid_0000000000079f64:
	movb $1, -1240(%rbp)
uuid_0000000000079f66:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000079f69:
	mov -1256(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000079f6c:
	mov -1248(%RBP),%RSP
	add $-1272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f6d
	jmp uuid_0000000000079f6f
uuid_0000000000079f6d:
	movb $1, -1136(%rbp)
uuid_0000000000079f6f:
	mov -1160(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000079f72:
	mov -1152(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000079f75:
	mov -1144(%RBP),%RSP
	add $-1272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f76
	jmp uuid_0000000000079f78
uuid_0000000000079f76:
	movb $1, -1032(%rbp)
uuid_0000000000079f78:
	mov -1056(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000079f7b:
	mov -1048(%RBP),%RSP
	add $-1272, %RSP
uuid_0000000000079f7e:
	mov -1040(%RBP),%RSP
	add $-1272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079faf
	jmp uuid_0000000000079fb1
uuid_0000000000079faf:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fa9
	jmp uuid_0000000000079fab
uuid_0000000000079fa9:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f85
	jmp uuid_0000000000079f87
uuid_0000000000079f85:
	push %RBP
	jmp uuid_0000000000079f82
	jmp uuid_0000000000079f84
uuid_0000000000079f82:
	push %RBP
	jmp uuid_0000000000079f7f
	jmp uuid_0000000000079f81
uuid_0000000000079f7f:
	movb $1, -1456(%rbp)
uuid_0000000000079f81:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000079f84:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_0000000000079f87:
	mov -1464(%RBP),%RSP
	add $-1480, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fa6
	jmp uuid_0000000000079fa8
uuid_0000000000079fa6:
	push %RBP
	mov -1336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fa0
	jmp uuid_0000000000079fa2
uuid_0000000000079fa0:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f8e
	jmp uuid_0000000000079f90
uuid_0000000000079f8e:
	push %RBP
	jmp uuid_0000000000079f8b
	jmp uuid_0000000000079f8d
uuid_0000000000079f8b:
	push %RBP
	jmp uuid_0000000000079f88
	jmp uuid_0000000000079f8a
uuid_0000000000079f88:
	movb $1, -1664(%rbp)
uuid_0000000000079f8a:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000079f8d:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_0000000000079f90:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f9d
	jmp uuid_0000000000079f9f
uuid_0000000000079f9d:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f97
	jmp uuid_0000000000079f99
uuid_0000000000079f97:
	push %RBP
	jmp uuid_0000000000079f94
	jmp uuid_0000000000079f96
uuid_0000000000079f94:
	push %RBP
	jmp uuid_0000000000079f91
	jmp uuid_0000000000079f93
uuid_0000000000079f91:
	movb $1, -1776(%rbp)
uuid_0000000000079f93:
	mov -1800(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079f96:
	mov -1792(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079f99:
	mov -1784(%RBP),%RSP
	add $-1800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f9a
	jmp uuid_0000000000079f9c
uuid_0000000000079f9a:
	movb $1, -1568(%rbp)
uuid_0000000000079f9c:
	mov -1696(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079f9f:
	mov -1584(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079fa2:
	mov -1576(%RBP),%RSP
	add $-1800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fa3
	jmp uuid_0000000000079fa5
uuid_0000000000079fa3:
	movb $1, -1360(%rbp)
uuid_0000000000079fa5:
	mov -1488(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079fa8:
	mov -1376(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079fab:
	mov -1368(%RBP),%RSP
	add $-1800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fac
	jmp uuid_0000000000079fae
uuid_0000000000079fac:
	movb $1, -936(%rbp)
uuid_0000000000079fae:
	mov -1280(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079fb1:
	mov -952(%RBP),%RSP
	add $-1800, %RSP
uuid_0000000000079fb4:
	mov -944(%RBP),%RSP
	add $-1800, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -936(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a20c
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a001
	jmp uuid_000000000007a003
uuid_000000000007a001:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq $0
	push %RBP
	mov -2056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fdc
	jmp uuid_0000000000079fde
uuid_0000000000079fdc:
	push %RBP
	mov -2048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fca
	jmp uuid_0000000000079fcc
uuid_0000000000079fca:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2248(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fb8
	jmp uuid_0000000000079fba
uuid_0000000000079fb8:
	push %RBP
	jmp uuid_0000000000079fb5
	jmp uuid_0000000000079fb7
uuid_0000000000079fb5:
	movb $1, -2256(%rbp)
uuid_0000000000079fb7:
	mov -2272(%RBP),%RSP
	add $-2272, %RSP
uuid_0000000000079fba:
	mov -2264(%RBP),%RSP
	add $-2272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fc7
	jmp uuid_0000000000079fc9
uuid_0000000000079fc7:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2352(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fc1
	jmp uuid_0000000000079fc3
uuid_0000000000079fc1:
	push %RBP
	jmp uuid_0000000000079fbe
	jmp uuid_0000000000079fc0
uuid_0000000000079fbe:
	push %RBP
	jmp uuid_0000000000079fbb
	jmp uuid_0000000000079fbd
uuid_0000000000079fbb:
	movb $1, -2360(%rbp)
uuid_0000000000079fbd:
	mov -2384(%RBP),%RSP
	add $-2384, %RSP
uuid_0000000000079fc0:
	mov -2376(%RBP),%RSP
	add $-2384, %RSP
uuid_0000000000079fc3:
	mov -2368(%RBP),%RSP
	add $-2384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2360(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fc4
	jmp uuid_0000000000079fc6
uuid_0000000000079fc4:
	movb $1, -2160(%rbp)
uuid_0000000000079fc6:
	mov -2280(%RBP),%RSP
	add $-2384, %RSP
uuid_0000000000079fc9:
	mov -2176(%RBP),%RSP
	add $-2384, %RSP
uuid_0000000000079fcc:
	mov -2168(%RBP),%RSP
	add $-2384, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fd9
	jmp uuid_0000000000079fdb
uuid_0000000000079fd9:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fd3
	jmp uuid_0000000000079fd5
uuid_0000000000079fd3:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	jmp uuid_0000000000079fd0
	jmp uuid_0000000000079fd2
uuid_0000000000079fd0:
	push %RBP
	mov -2400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fcd
	jmp uuid_0000000000079fcf
uuid_0000000000079fcd:
	movb $1, -2472(%rbp)
uuid_0000000000079fcf:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000079fd2:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000079fd5:
	mov -2480(%RBP),%RSP
	add $-2560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fd6
	jmp uuid_0000000000079fd8
uuid_0000000000079fd6:
	movb $1, -2064(%rbp)
uuid_0000000000079fd8:
	mov -2392(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000079fdb:
	mov -2080(%RBP),%RSP
	add $-2560, %RSP
uuid_0000000000079fde:
	mov -2072(%RBP),%RSP
	add $-2560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ffe
	jmp uuid_000000000007a000
uuid_0000000000079ffe:
	push %RBP
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq $0
	push %RBP
	mov -2640(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ff8
	jmp uuid_0000000000079ffa
uuid_0000000000079ff8:
	push %RBP
	mov -2632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fe5
	jmp uuid_0000000000079fe7
uuid_0000000000079fe5:
	push %RBP
	jmp uuid_0000000000079fe2
	jmp uuid_0000000000079fe4
uuid_0000000000079fe2:
	push %RBP
	mov -2672(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079fdf
	jmp uuid_0000000000079fe1
uuid_0000000000079fdf:
	movb $1, -2744(%rbp)
uuid_0000000000079fe1:
	mov -2768(%RBP),%RSP
	add $-2776, %RSP
uuid_0000000000079fe4:
	mov -2760(%RBP),%RSP
	add $-2776, %RSP
uuid_0000000000079fe7:
	mov -2752(%RBP),%RSP
	add $-2776, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ff5
	jmp uuid_0000000000079ff7
uuid_0000000000079ff5:
	push %RBP
	mov -2624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fef
	jmp uuid_0000000000079ff1
uuid_0000000000079fef:
	push %RBP
	jmp uuid_0000000000079fec
	jmp uuid_0000000000079fee
uuid_0000000000079fec:
	push %RBP
	mov -2792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2896(%rbp)
	pushq $uuid_0000000000079fe8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fe9
	jmp uuid_0000000000079feb
uuid_0000000000079fe9:
	movb $1, -2864(%rbp)
uuid_0000000000079feb:
	mov -2888(%RBP),%RSP
	add $-2896, %RSP
uuid_0000000000079fee:
	mov -2880(%RBP),%RSP
	add $-2896, %RSP
uuid_0000000000079ff1:
	mov -2872(%RBP),%RSP
	add $-2896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ff2
	jmp uuid_0000000000079ff4
uuid_0000000000079ff2:
	movb $1, -2648(%rbp)
uuid_0000000000079ff4:
	mov -2784(%RBP),%RSP
	add $-2896, %RSP
uuid_0000000000079ff7:
	mov -2664(%RBP),%RSP
	add $-2896, %RSP
uuid_0000000000079ffa:
	mov -2656(%RBP),%RSP
	add $-2896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2648(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ffb
	jmp uuid_0000000000079ffd
uuid_0000000000079ffb:
	movb $1, -1968(%rbp)
uuid_0000000000079ffd:
	mov -2568(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007a000:
	mov -1984(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007a003:
	mov -1976(%RBP),%RSP
	add $-2896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a209
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a037
	jmp uuid_000000000007a039
uuid_000000000007a037:
	push %RBP
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq $0
	push %RBP
	mov -3152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a013
	jmp uuid_000000000007a015
uuid_000000000007a013:
	push %RBP
	jmp uuid_000000000007a010
	jmp uuid_000000000007a012
uuid_000000000007a010:
	push %RBP
	mov -3136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a00a
	jmp uuid_000000000007a00c
uuid_000000000007a00a:
	push %RBP
	jmp uuid_000000000007a007
	jmp uuid_000000000007a009
uuid_000000000007a007:
	push %RBP
	mov -3192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a004
	jmp uuid_000000000007a006
uuid_000000000007a004:
	movb $1, -3264(%rbp)
uuid_000000000007a006:
	mov -3288(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007a009:
	mov -3280(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007a00c:
	mov -3272(%RBP),%RSP
	add $-3296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a00d
	jmp uuid_000000000007a00f
uuid_000000000007a00d:
	movb $1, -3160(%rbp)
uuid_000000000007a00f:
	mov -3184(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007a012:
	mov -3176(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007a015:
	mov -3168(%RBP),%RSP
	add $-3296, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a034
	jmp uuid_000000000007a036
uuid_000000000007a034:
	push %RBP
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a02e
	jmp uuid_000000000007a030
uuid_000000000007a02e:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3472(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a01c
	jmp uuid_000000000007a01e
uuid_000000000007a01c:
	push %RBP
	jmp uuid_000000000007a019
	jmp uuid_000000000007a01b
uuid_000000000007a019:
	push %RBP
	jmp uuid_000000000007a016
	jmp uuid_000000000007a018
uuid_000000000007a016:
	movb $1, -3480(%rbp)
uuid_000000000007a018:
	mov -3504(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007a01b:
	mov -3496(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007a01e:
	mov -3488(%RBP),%RSP
	add $-3504, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a02b
	jmp uuid_000000000007a02d
uuid_000000000007a02b:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3584(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a025
	jmp uuid_000000000007a027
uuid_000000000007a025:
	push %RBP
	jmp uuid_000000000007a022
	jmp uuid_000000000007a024
uuid_000000000007a022:
	push %RBP
	jmp uuid_000000000007a01f
	jmp uuid_000000000007a021
uuid_000000000007a01f:
	movb $1, -3592(%rbp)
uuid_000000000007a021:
	mov -3616(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007a024:
	mov -3608(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007a027:
	mov -3600(%RBP),%RSP
	add $-3616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3592(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a028
	jmp uuid_000000000007a02a
uuid_000000000007a028:
	movb $1, -3384(%rbp)
uuid_000000000007a02a:
	mov -3512(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007a02d:
	mov -3400(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007a030:
	mov -3392(%RBP),%RSP
	add $-3616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3384(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a031
	jmp uuid_000000000007a033
uuid_000000000007a031:
	movb $1, -3064(%rbp)
uuid_000000000007a033:
	mov -3304(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007a036:
	mov -3080(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007a039:
	mov -3072(%RBP),%RSP
	add $-3616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3064(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a206
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a07a
	jmp uuid_000000000007a07c
uuid_000000000007a07a:
	push %RBP
	pushq -3704(%RBP)
	pushq -3712(%RBP)
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	pushq -3744(%RBP)
	pushq -3752(%RBP)
	pushq -3760(%RBP)
	pushq -3768(%RBP)
	pushq $0
	push %RBP
	mov -3872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a068
	jmp uuid_000000000007a06a
uuid_000000000007a068:
	push %RBP
	mov -3864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a065
	jmp uuid_000000000007a067
uuid_000000000007a065:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a062
	jmp uuid_000000000007a064
uuid_000000000007a062:
	movb $1, -3880(%rbp)
uuid_000000000007a064:
	mov -3976(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007a067:
	mov -3896(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007a06a:
	mov -3888(%RBP),%RSP
	add $-4048, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a077
	jmp uuid_000000000007a079
uuid_000000000007a077:
	push %RBP
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq -3656(%RBP)
	pushq -3664(%RBP)
	pushq -3672(%RBP)
	pushq -3680(%RBP)
	pushq -3688(%RBP)
	pushq -3696(%RBP)
	pushq $0
	push %RBP
	mov -4128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a071
	jmp uuid_000000000007a073
uuid_000000000007a071:
	push %RBP
	mov -4120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a06e
	jmp uuid_000000000007a070
uuid_000000000007a06e:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a06b
	jmp uuid_000000000007a06d
uuid_000000000007a06b:
	movb $1, -4136(%rbp)
uuid_000000000007a06d:
	mov -4232(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007a070:
	mov -4152(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007a073:
	mov -4144(%RBP),%RSP
	add $-4304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a074
	jmp uuid_000000000007a076
uuid_000000000007a074:
	movb $1, -3784(%rbp)
uuid_000000000007a076:
	mov -4056(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007a079:
	mov -3800(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007a07c:
	mov -3792(%RBP),%RSP
	add $-4304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a203
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -4464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0a1
	jmp uuid_000000000007a0a3
uuid_000000000007a0a1:
	push %RBP
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq -4408(%RBP)
	pushq -4416(%RBP)
	pushq -4424(%RBP)
	pushq -4432(%RBP)
	pushq -4440(%RBP)
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq $0
	push %RBP
	mov -4560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a08c
	jmp uuid_000000000007a08e
uuid_000000000007a08c:
	push %RBP
	pushq -4536(%RBP)
	pushq -4544(%RBP)
	pushq -4552(%RBP)
	jmp uuid_000000000007a089
	jmp uuid_000000000007a08b
uuid_000000000007a089:
	push %RBP
	mov -4528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a086
	jmp uuid_000000000007a088
uuid_000000000007a086:
	push %RBP
	mov -4520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a083
	jmp uuid_000000000007a085
uuid_000000000007a083:
	movb $1, -4568(%rbp)
uuid_000000000007a085:
	mov -4696(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007a088:
	mov -4616(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007a08b:
	mov -4584(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007a08e:
	mov -4576(%RBP),%RSP
	add $-4768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a09e
	jmp uuid_000000000007a0a0
uuid_000000000007a09e:
	push %RBP
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq -4384(%RBP)
	pushq $0
	push %RBP
	mov -4848(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a098
	jmp uuid_000000000007a09a
uuid_000000000007a098:
	push %RBP
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	jmp uuid_000000000007a095
	jmp uuid_000000000007a097
uuid_000000000007a095:
	push %RBP
	mov -4816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a092
	jmp uuid_000000000007a094
uuid_000000000007a092:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a08f
	jmp uuid_000000000007a091
uuid_000000000007a08f:
	movb $1, -4856(%rbp)
uuid_000000000007a091:
	mov -4984(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007a094:
	mov -4904(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007a097:
	mov -4872(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007a09a:
	mov -4864(%RBP),%RSP
	add $-5056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a09b
	jmp uuid_000000000007a09d
uuid_000000000007a09b:
	movb $1, -4472(%rbp)
uuid_000000000007a09d:
	mov -4776(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007a0a0:
	mov -4488(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007a0a3:
	mov -4480(%RBP),%RSP
	add $-5056, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a200
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0c3
	jmp uuid_000000000007a0c5
uuid_000000000007a0c3:
	push %RBP
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	pushq -5160(%RBP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
	pushq -5192(%RBP)
	pushq -5200(%RBP)
	pushq -5208(%RBP)
	pushq $0
	push %RBP
	mov -5312(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0b0
	jmp uuid_000000000007a0b2
uuid_000000000007a0b0:
	push %RBP
	jmp uuid_000000000007a0ad
	jmp uuid_000000000007a0af
uuid_000000000007a0ad:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5352(%rbp)
	pushq $uuid_0000000000079bd3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0aa
	jmp uuid_000000000007a0ac
uuid_000000000007a0aa:
	movb $1, -5320(%rbp)
uuid_000000000007a0ac:
	mov -5344(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007a0af:
	mov -5336(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007a0b2:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5320(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0c0
	jmp uuid_000000000007a0c2
uuid_000000000007a0c0:
	push %RBP
	pushq -5072(%RBP)
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	pushq -5112(%RBP)
	pushq -5120(%RBP)
	pushq -5128(%RBP)
	pushq -5136(%RBP)
	pushq $0
	push %RBP
	mov -5432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0ba
	jmp uuid_000000000007a0bc
uuid_000000000007a0ba:
	push %RBP
	jmp uuid_000000000007a0b7
	jmp uuid_000000000007a0b9
uuid_000000000007a0b7:
	push %RBP
	mov -5368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq $uuid_000000000007a0b3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0b4
	jmp uuid_000000000007a0b6
uuid_000000000007a0b4:
	movb $1, -5440(%rbp)
uuid_000000000007a0b6:
	mov -5464(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007a0b9:
	mov -5456(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007a0bc:
	mov -5448(%RBP),%RSP
	add $-5472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5440(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0bd
	jmp uuid_000000000007a0bf
uuid_000000000007a0bd:
	movb $1, -5224(%rbp)
uuid_000000000007a0bf:
	mov -5360(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007a0c2:
	mov -5240(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007a0c5:
	mov -5232(%RBP),%RSP
	add $-5472, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5224(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1fd
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0de
	jmp uuid_000000000007a0e0
uuid_000000000007a0de:
	push %RBP
	pushq -5560(%RBP)
	pushq -5568(%RBP)
	pushq -5576(%RBP)
	pushq -5584(%RBP)
	pushq -5592(%RBP)
	pushq -5600(%RBP)
	pushq -5608(%RBP)
	pushq -5616(%RBP)
	pushq -5624(%RBP)
	pushq $0
	push %RBP
	mov -5728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0cc
	jmp uuid_000000000007a0ce
uuid_000000000007a0cc:
	push %RBP
	jmp uuid_000000000007a0c9
	jmp uuid_000000000007a0cb
uuid_000000000007a0c9:
	push %RBP
	mov -5664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a0c6
	jmp uuid_000000000007a0c8
uuid_000000000007a0c6:
	movb $1, -5736(%rbp)
uuid_000000000007a0c8:
	mov -5760(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007a0cb:
	mov -5752(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007a0ce:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5736(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0db
	jmp uuid_000000000007a0dd
uuid_000000000007a0db:
	push %RBP
	pushq -5488(%RBP)
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	pushq -5520(%RBP)
	pushq -5528(%RBP)
	pushq -5536(%RBP)
	pushq -5544(%RBP)
	pushq -5552(%RBP)
	pushq $0
	push %RBP
	mov -5848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0d5
	jmp uuid_000000000007a0d7
uuid_000000000007a0d5:
	push %RBP
	jmp uuid_000000000007a0d2
	jmp uuid_000000000007a0d4
uuid_000000000007a0d2:
	push %RBP
	mov -5784(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a0cf
	jmp uuid_000000000007a0d1
uuid_000000000007a0cf:
	movb $1, -5856(%rbp)
uuid_000000000007a0d1:
	mov -5880(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007a0d4:
	mov -5872(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007a0d7:
	mov -5864(%RBP),%RSP
	add $-5888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5856(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0d8
	jmp uuid_000000000007a0da
uuid_000000000007a0d8:
	movb $1, -5640(%rbp)
uuid_000000000007a0da:
	mov -5776(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007a0dd:
	mov -5656(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007a0e0:
	mov -5648(%RBP),%RSP
	add $-5888, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1fa
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0fc
	jmp uuid_000000000007a0fe
uuid_000000000007a0fc:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	pushq -6032(%RBP)
	pushq -6040(%RBP)
	pushq $0
	push %RBP
	mov -6144(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0ea
	jmp uuid_000000000007a0ec
uuid_000000000007a0ea:
	push %RBP
	jmp uuid_000000000007a0e7
	jmp uuid_000000000007a0e9
uuid_000000000007a0e7:
	push %RBP
	mov -6080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a0e4
	jmp uuid_000000000007a0e6
uuid_000000000007a0e4:
	movb $1, -6152(%rbp)
uuid_000000000007a0e6:
	mov -6176(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007a0e9:
	mov -6168(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007a0ec:
	mov -6160(%RBP),%RSP
	add $-6184, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0f9
	jmp uuid_000000000007a0fb
uuid_000000000007a0f9:
	push %RBP
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
	pushq -5936(%RBP)
	pushq -5944(%RBP)
	pushq -5952(%RBP)
	pushq -5960(%RBP)
	pushq -5968(%RBP)
	pushq $0
	push %RBP
	mov -6264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0f3
	jmp uuid_000000000007a0f5
uuid_000000000007a0f3:
	push %RBP
	jmp uuid_000000000007a0f0
	jmp uuid_000000000007a0f2
uuid_000000000007a0f0:
	push %RBP
	mov -6200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a0ed
	jmp uuid_000000000007a0ef
uuid_000000000007a0ed:
	movb $1, -6272(%rbp)
uuid_000000000007a0ef:
	mov -6296(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007a0f2:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007a0f5:
	mov -6280(%RBP),%RSP
	add $-6304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0f6
	jmp uuid_000000000007a0f8
uuid_000000000007a0f6:
	movb $1, -6056(%rbp)
uuid_000000000007a0f8:
	mov -6192(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007a0fb:
	mov -6072(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007a0fe:
	mov -6064(%RBP),%RSP
	add $-6304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1f7
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a12c
	jmp uuid_000000000007a12e
uuid_000000000007a12c:
	push %RBP
	pushq -6392(%RBP)
	pushq -6400(%RBP)
	pushq -6408(%RBP)
	pushq -6416(%RBP)
	pushq -6424(%RBP)
	pushq -6432(%RBP)
	pushq -6440(%RBP)
	pushq -6448(%RBP)
	pushq -6456(%RBP)
	pushq $0
	push %RBP
	mov -6560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a108
	jmp uuid_000000000007a10a
uuid_000000000007a108:
	push %RBP
	pushq -6504(%RBP)
	pushq -6512(%RBP)
	pushq -6520(%RBP)
	pushq -6528(%RBP)
	pushq -6536(%RBP)
	pushq -6544(%RBP)
	pushq -6552(%RBP)
	jmp uuid_000000000007a105
	jmp uuid_000000000007a107
uuid_000000000007a105:
	push %RBP
	mov -6496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a102
	jmp uuid_000000000007a104
uuid_000000000007a102:
	movb $1, -6568(%rbp)
uuid_000000000007a104:
	mov -6648(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007a107:
	mov -6584(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007a10a:
	mov -6576(%RBP),%RSP
	add $-6656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a129
	jmp uuid_000000000007a12b
uuid_000000000007a129:
	push %RBP
	pushq -6320(%RBP)
	pushq -6328(%RBP)
	pushq -6336(%RBP)
	pushq -6344(%RBP)
	pushq -6352(%RBP)
	pushq -6360(%RBP)
	pushq -6368(%RBP)
	pushq -6376(%RBP)
	pushq -6384(%RBP)
	pushq $0
	push %RBP
	mov -6736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a123
	jmp uuid_000000000007a125
uuid_000000000007a123:
	push %RBP
	mov -6728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a111
	jmp uuid_000000000007a113
uuid_000000000007a111:
	push %RBP
	jmp uuid_000000000007a10e
	jmp uuid_000000000007a110
uuid_000000000007a10e:
	push %RBP
	mov -6768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a10b
	jmp uuid_000000000007a10d
uuid_000000000007a10b:
	movb $1, -6840(%rbp)
uuid_000000000007a10d:
	mov -6864(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007a110:
	mov -6856(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007a113:
	mov -6848(%RBP),%RSP
	add $-6872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a120
	jmp uuid_000000000007a122
uuid_000000000007a120:
	push %RBP
	mov -6720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a11a
	jmp uuid_000000000007a11c
uuid_000000000007a11a:
	push %RBP
	jmp uuid_000000000007a117
	jmp uuid_000000000007a119
uuid_000000000007a117:
	push %RBP
	mov -6888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6992(%rbp)
	pushq $uuid_0000000000079fe8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a114
	jmp uuid_000000000007a116
uuid_000000000007a114:
	movb $1, -6960(%rbp)
uuid_000000000007a116:
	mov -6984(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007a119:
	mov -6976(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007a11c:
	mov -6968(%RBP),%RSP
	add $-6992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a11d
	jmp uuid_000000000007a11f
uuid_000000000007a11d:
	movb $1, -6744(%rbp)
uuid_000000000007a11f:
	mov -6880(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007a122:
	mov -6760(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007a125:
	mov -6752(%RBP),%RSP
	add $-6992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a126
	jmp uuid_000000000007a128
uuid_000000000007a126:
	movb $1, -6472(%rbp)
uuid_000000000007a128:
	mov -6664(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007a12b:
	mov -6488(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007a12e:
	mov -6480(%RBP),%RSP
	add $-6992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1f4
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a15d
	jmp uuid_000000000007a15f
uuid_000000000007a15d:
	push %RBP
	pushq -7080(%RBP)
	pushq -7088(%RBP)
	pushq -7096(%RBP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
	pushq -7128(%RBP)
	pushq -7136(%RBP)
	pushq -7144(%RBP)
	pushq $0
	push %RBP
	mov -7248(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a138
	jmp uuid_000000000007a13a
uuid_000000000007a138:
	push %RBP
	jmp uuid_000000000007a135
	jmp uuid_000000000007a137
uuid_000000000007a135:
	push %RBP
	mov -7184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7288(%rbp)
	pushq $uuid_0000000000079bd3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a132
	jmp uuid_000000000007a134
uuid_000000000007a132:
	movb $1, -7256(%rbp)
uuid_000000000007a134:
	mov -7280(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007a137:
	mov -7272(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007a13a:
	mov -7264(%RBP),%RSP
	add $-7288, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7256(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a15a
	jmp uuid_000000000007a15c
uuid_000000000007a15a:
	push %RBP
	pushq -7008(%RBP)
	pushq -7016(%RBP)
	pushq -7024(%RBP)
	pushq -7032(%RBP)
	pushq -7040(%RBP)
	pushq -7048(%RBP)
	pushq -7056(%RBP)
	pushq -7064(%RBP)
	pushq -7072(%RBP)
	pushq $0
	push %RBP
	mov -7368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a154
	jmp uuid_000000000007a156
uuid_000000000007a154:
	push %RBP
	mov -7360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a141
	jmp uuid_000000000007a143
uuid_000000000007a141:
	push %RBP
	jmp uuid_000000000007a13e
	jmp uuid_000000000007a140
uuid_000000000007a13e:
	push %RBP
	jmp uuid_000000000007a13b
	jmp uuid_000000000007a13d
uuid_000000000007a13b:
	movb $1, -7472(%rbp)
uuid_000000000007a13d:
	mov -7496(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007a140:
	mov -7488(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007a143:
	mov -7480(%RBP),%RSP
	add $-7496, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a151
	jmp uuid_000000000007a153
uuid_000000000007a151:
	push %RBP
	mov -7352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7576(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a14b
	jmp uuid_000000000007a14d
uuid_000000000007a14b:
	push %RBP
	jmp uuid_000000000007a148
	jmp uuid_000000000007a14a
uuid_000000000007a148:
	push %RBP
	mov -7512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7616(%rbp)
	pushq $uuid_000000000007a144
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a145
	jmp uuid_000000000007a147
uuid_000000000007a145:
	movb $1, -7584(%rbp)
uuid_000000000007a147:
	mov -7608(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007a14a:
	mov -7600(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007a14d:
	mov -7592(%RBP),%RSP
	add $-7616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7584(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a14e
	jmp uuid_000000000007a150
uuid_000000000007a14e:
	movb $1, -7376(%rbp)
uuid_000000000007a150:
	mov -7504(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007a153:
	mov -7392(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007a156:
	mov -7384(%RBP),%RSP
	add $-7616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a157
	jmp uuid_000000000007a159
uuid_000000000007a157:
	movb $1, -7160(%rbp)
uuid_000000000007a159:
	mov -7296(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007a15c:
	mov -7176(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007a15f:
	mov -7168(%RBP),%RSP
	add $-7616, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1f1
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a18a
	jmp uuid_000000000007a18c
uuid_000000000007a18a:
	push %RBP
	pushq -7704(%RBP)
	pushq -7712(%RBP)
	pushq -7720(%RBP)
	pushq -7728(%RBP)
	pushq -7736(%RBP)
	pushq -7744(%RBP)
	pushq -7752(%RBP)
	pushq -7760(%RBP)
	pushq -7768(%RBP)
	pushq $0
	push %RBP
	mov -7872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a166
	jmp uuid_000000000007a168
uuid_000000000007a166:
	push %RBP
	pushq -7816(%RBP)
	pushq -7824(%RBP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
	pushq -7856(%RBP)
	pushq -7864(%RBP)
	jmp uuid_000000000007a163
	jmp uuid_000000000007a165
uuid_000000000007a163:
	push %RBP
	mov -7808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a160
	jmp uuid_000000000007a162
uuid_000000000007a160:
	movb $1, -7880(%rbp)
uuid_000000000007a162:
	mov -7960(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007a165:
	mov -7896(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007a168:
	mov -7888(%RBP),%RSP
	add $-7968, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7880(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a187
	jmp uuid_000000000007a189
uuid_000000000007a187:
	push %RBP
	pushq -7632(%RBP)
	pushq -7640(%RBP)
	pushq -7648(%RBP)
	pushq -7656(%RBP)
	pushq -7664(%RBP)
	pushq -7672(%RBP)
	pushq -7680(%RBP)
	pushq -7688(%RBP)
	pushq -7696(%RBP)
	pushq $0
	push %RBP
	mov -8048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a181
	jmp uuid_000000000007a183
uuid_000000000007a181:
	push %RBP
	mov -8040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8144(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a16f
	jmp uuid_000000000007a171
uuid_000000000007a16f:
	push %RBP
	jmp uuid_000000000007a16c
	jmp uuid_000000000007a16e
uuid_000000000007a16c:
	push %RBP
	mov -8080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a169
	jmp uuid_000000000007a16b
uuid_000000000007a169:
	movb $1, -8152(%rbp)
uuid_000000000007a16b:
	mov -8176(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007a16e:
	mov -8168(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007a171:
	mov -8160(%RBP),%RSP
	add $-8184, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a17e
	jmp uuid_000000000007a180
uuid_000000000007a17e:
	push %RBP
	mov -8032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a178
	jmp uuid_000000000007a17a
uuid_000000000007a178:
	push %RBP
	jmp uuid_000000000007a175
	jmp uuid_000000000007a177
uuid_000000000007a175:
	push %RBP
	mov -8200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8304(%rbp)
	pushq $uuid_000000000007a144
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a172
	jmp uuid_000000000007a174
uuid_000000000007a172:
	movb $1, -8272(%rbp)
uuid_000000000007a174:
	mov -8296(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007a177:
	mov -8288(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007a17a:
	mov -8280(%RBP),%RSP
	add $-8304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a17b
	jmp uuid_000000000007a17d
uuid_000000000007a17b:
	movb $1, -8056(%rbp)
uuid_000000000007a17d:
	mov -8192(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007a180:
	mov -8072(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007a183:
	mov -8064(%RBP),%RSP
	add $-8304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a184
	jmp uuid_000000000007a186
uuid_000000000007a184:
	movb $1, -7784(%rbp)
uuid_000000000007a186:
	mov -7976(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007a189:
	mov -7800(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007a18c:
	mov -7792(%RBP),%RSP
	add $-8304, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7784(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1ee
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -8464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1ca
	jmp uuid_000000000007a1cc
uuid_000000000007a1ca:
	push %RBP
	pushq -8392(%RBP)
	pushq -8400(%RBP)
	pushq -8408(%RBP)
	pushq -8416(%RBP)
	pushq -8424(%RBP)
	pushq -8432(%RBP)
	pushq -8440(%RBP)
	pushq -8448(%RBP)
	pushq -8456(%RBP)
	pushq $0
	push %RBP
	mov -8560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a193
	jmp uuid_000000000007a195
uuid_000000000007a193:
	push %RBP
	pushq -8504(%RBP)
	pushq -8512(%RBP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
	pushq -8544(%RBP)
	pushq -8552(%RBP)
	jmp uuid_000000000007a190
	jmp uuid_000000000007a192
uuid_000000000007a190:
	push %RBP
	mov -8496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a18d
	jmp uuid_000000000007a18f
uuid_000000000007a18d:
	movb $1, -8568(%rbp)
uuid_000000000007a18f:
	mov -8648(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007a192:
	mov -8584(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007a195:
	mov -8576(%RBP),%RSP
	add $-8656, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8568(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1c7
	jmp uuid_000000000007a1c9
uuid_000000000007a1c7:
	push %RBP
	pushq -8320(%RBP)
	pushq -8328(%RBP)
	pushq -8336(%RBP)
	pushq -8344(%RBP)
	pushq -8352(%RBP)
	pushq -8360(%RBP)
	pushq -8368(%RBP)
	pushq -8376(%RBP)
	pushq -8384(%RBP)
	pushq $0
	push %RBP
	mov -8736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1c1
	jmp uuid_000000000007a1c3
uuid_000000000007a1c1:
	push %RBP
	mov -8728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a19c
	jmp uuid_000000000007a19e
uuid_000000000007a19c:
	push %RBP
	jmp uuid_000000000007a199
	jmp uuid_000000000007a19b
uuid_000000000007a199:
	push %RBP
	mov -8768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a196
	jmp uuid_000000000007a198
uuid_000000000007a196:
	movb $1, -8840(%rbp)
uuid_000000000007a198:
	mov -8864(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007a19b:
	mov -8856(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007a19e:
	mov -8848(%RBP),%RSP
	add $-8872, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1be
	jmp uuid_000000000007a1c0
uuid_000000000007a1be:
	push %RBP
	mov -8720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1b8
	jmp uuid_000000000007a1ba
uuid_000000000007a1b8:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9048(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1a5
	jmp uuid_000000000007a1a7
uuid_000000000007a1a5:
	push %RBP
	jmp uuid_000000000007a1a2
	jmp uuid_000000000007a1a4
uuid_000000000007a1a2:
	push %RBP
	mov -8984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a19f
	jmp uuid_000000000007a1a1
uuid_000000000007a19f:
	movb $1, -9056(%rbp)
uuid_000000000007a1a1:
	mov -9080(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007a1a4:
	mov -9072(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007a1a7:
	mov -9064(%RBP),%RSP
	add $-9088, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1b5
	jmp uuid_000000000007a1b7
uuid_000000000007a1b5:
	push %RBP
	mov -8936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1af
	jmp uuid_000000000007a1b1
uuid_000000000007a1af:
	push %RBP
	jmp uuid_000000000007a1ac
	jmp uuid_000000000007a1ae
uuid_000000000007a1ac:
	push %RBP
	mov -9104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9208(%rbp)
	pushq $uuid_000000000007a1a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1a9
	jmp uuid_000000000007a1ab
uuid_000000000007a1a9:
	movb $1, -9176(%rbp)
uuid_000000000007a1ab:
	mov -9200(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1ae:
	mov -9192(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1b1:
	mov -9184(%RBP),%RSP
	add $-9208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1b2
	jmp uuid_000000000007a1b4
uuid_000000000007a1b2:
	movb $1, -8960(%rbp)
uuid_000000000007a1b4:
	mov -9096(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1b7:
	mov -8976(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1ba:
	mov -8968(%RBP),%RSP
	add $-9208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1bb
	jmp uuid_000000000007a1bd
uuid_000000000007a1bb:
	movb $1, -8744(%rbp)
uuid_000000000007a1bd:
	mov -8880(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1c0:
	mov -8760(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1c3:
	mov -8752(%RBP),%RSP
	add $-9208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8744(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1c4
	jmp uuid_000000000007a1c6
uuid_000000000007a1c4:
	movb $1, -8472(%rbp)
uuid_000000000007a1c6:
	mov -8664(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1c9:
	mov -8488(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007a1cc:
	mov -8480(%RBP),%RSP
	add $-9208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8472(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1eb
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -9368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1e1
	jmp uuid_000000000007a1e3
uuid_000000000007a1e1:
	push %RBP
	pushq -9296(%RBP)
	pushq -9304(%RBP)
	pushq -9312(%RBP)
	pushq -9320(%RBP)
	pushq -9328(%RBP)
	pushq -9336(%RBP)
	pushq -9344(%RBP)
	pushq -9352(%RBP)
	pushq -9360(%RBP)
	jmp uuid_000000000007a1de
	jmp uuid_000000000007a1e0
uuid_000000000007a1de:
	push %RBP
	pushq -9224(%RBP)
	pushq -9232(%RBP)
	pushq -9240(%RBP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
	pushq -9272(%RBP)
	pushq -9280(%RBP)
	pushq -9288(%RBP)
	pushq $0
	push %RBP
	mov -9544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1d8
	jmp uuid_000000000007a1da
uuid_000000000007a1d8:
	push %RBP
	jmp uuid_000000000007a1d5
	jmp uuid_000000000007a1d7
uuid_000000000007a1d5:
	push %RBP
	mov -9480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a1d2
	jmp uuid_000000000007a1d4
uuid_000000000007a1d2:
	movb $1, -9552(%rbp)
uuid_000000000007a1d4:
	mov -9576(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007a1d7:
	mov -9568(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007a1da:
	mov -9560(%RBP),%RSP
	add $-9584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1db
	jmp uuid_000000000007a1dd
uuid_000000000007a1db:
	movb $1, -9376(%rbp)
uuid_000000000007a1dd:
	mov -9472(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007a1e0:
	mov -9392(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007a1e3:
	mov -9384(%RBP),%RSP
	add $-9584, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9376(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1e8
	push %RBP
	jmp uuid_000000000007a1e5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a1e4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a1e7
uuid_000000000007a1e5:
uuid_000000000007a1e7:
	mov -9592(%RBP),%RSP
	add $-9592, %RSP
	jmp uuid_000000000007a1ea
uuid_000000000007a1e8:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9584(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -9440(%rbp)
	pushq -9448(%rbp)
	pushq -9456(%rbp)
	pushq -9464(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a1ea:
	mov -9216(%RBP),%RSP
	add $-9584, %RSP
	jmp uuid_000000000007a1ed
uuid_000000000007a1eb:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1cf
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9088(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000076379
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq $uuid_0000000000076379
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9224(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9224(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a1cd
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a1ce
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8656(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000762ac
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8872(%rbp)
	pushq -9232(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9232(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	jmp uuid_000000000007a1d1
uuid_000000000007a1cf:
uuid_000000000007a1d1:
	mov -9216(%RBP),%RSP
	add $-9216, %RSP
uuid_000000000007a1ed:
	mov -8312(%RBP),%RSP
	add $-9216, %RSP
	jmp uuid_000000000007a1f0
uuid_000000000007a1ee:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8184(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -7920(%RBP)
	pushq -7928(%RBP)
	pushq -7936(%RBP)
	pushq -7944(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a1f0:
	mov -7624(%RBP),%RSP
	add $-8304, %RSP
	jmp uuid_000000000007a1f3
uuid_000000000007a1f1:
uuid_000000000007a1f3:
	mov -7000(%RBP),%RSP
	add $-7616, %RSP
	jmp uuid_000000000007a1f6
uuid_000000000007a1f4:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a12f
	jmp uuid_000000000007a131
uuid_000000000007a12f:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6872(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -6608(%RBP)
	pushq -6616(%RBP)
	pushq -6624(%RBP)
	pushq -6632(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a131:
	mov -7000(%RBP),%RSP
	add $-7000, %RSP
uuid_000000000007a1f6:
	mov -6312(%RBP),%RSP
	add $-7000, %RSP
	jmp uuid_000000000007a1f9
uuid_000000000007a1f7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6304(%rbp)
	pushq -6184(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0ff
	jmp uuid_000000000007a101
uuid_000000000007a0ff:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a101:
	mov -6312(%RBP),%RSP
	add $-6312, %RSP
uuid_000000000007a1f9:
	mov -5896(%RBP),%RSP
	add $-6312, %RSP
	jmp uuid_000000000007a1fc
uuid_000000000007a1fa:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5768(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0e1
	jmp uuid_000000000007a0e3
uuid_000000000007a0e1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a0e3:
	mov -5896(%RBP),%RSP
	add $-5896, %RSP
uuid_000000000007a1fc:
	mov -5480(%RBP),%RSP
	add $-5896, %RSP
	jmp uuid_000000000007a1ff
uuid_000000000007a1fd:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a1ff:
	mov -5064(%RBP),%RSP
	add $-5472, %RSP
	jmp uuid_000000000007a202
uuid_000000000007a200:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0a7
	jmp uuid_000000000007a0a9
uuid_000000000007a0a7:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0a4
	jmp uuid_000000000007a0a6
uuid_000000000007a0a4:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a0a6:
	mov -5264(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007a0a9:
	mov -5160(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007a202:
	mov -4312(%RBP),%RSP
	add $-5264, %RSP
	jmp uuid_000000000007a205
uuid_000000000007a203:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a080
	jmp uuid_000000000007a082
uuid_000000000007a080:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a07d
	jmp uuid_000000000007a07f
uuid_000000000007a07d:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a07f:
	mov -4512(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007a082:
	mov -4408(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007a205:
	mov -3624(%RBP),%RSP
	add $-4512, %RSP
	jmp uuid_000000000007a208
uuid_000000000007a206:
	push %RBP
#call function preprocess-is-suffixed : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_is_SB_suffixed_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-lone-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call is_SB_lone_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a05f
	jmp uuid_000000000007a061
uuid_000000000007a05f:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -3632(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a052
	jmp uuid_000000000007a054
uuid_000000000007a052:
	push %RBP
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq -3928(%RBP)
	pushq $0
	push %RBP
	mov -4032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a040
	jmp uuid_000000000007a042
uuid_000000000007a040:
	push %RBP
	mov -4024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a03d
	jmp uuid_000000000007a03f
uuid_000000000007a03d:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a03a
	jmp uuid_000000000007a03c
uuid_000000000007a03a:
	movb $1, -4040(%rbp)
uuid_000000000007a03c:
	mov -4136(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007a03f:
	mov -4056(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007a042:
	mov -4048(%RBP),%RSP
	add $-4208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4040(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a04f
	jmp uuid_000000000007a051
uuid_000000000007a04f:
	push %RBP
	pushq -3792(%RBP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
	pushq -3824(%RBP)
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq $0
	push %RBP
	mov -4288(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a049
	jmp uuid_000000000007a04b
uuid_000000000007a049:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a046
	jmp uuid_000000000007a048
uuid_000000000007a046:
	push %RBP
	mov -4272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a043
	jmp uuid_000000000007a045
uuid_000000000007a043:
	movb $1, -4296(%rbp)
uuid_000000000007a045:
	mov -4392(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007a048:
	mov -4312(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007a04b:
	mov -4304(%RBP),%RSP
	add $-4464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a04c
	jmp uuid_000000000007a04e
uuid_000000000007a04c:
	movb $1, -3944(%rbp)
uuid_000000000007a04e:
	mov -4216(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007a051:
	mov -3960(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007a054:
	mov -3952(%RBP),%RSP
	add $-4464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3944(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a05c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a05b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a05e
uuid_000000000007a05c:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a058
	jmp uuid_000000000007a05a
uuid_000000000007a058:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a055
	jmp uuid_000000000007a057
uuid_000000000007a055:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a057:
	mov -4672(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007a05a:
	mov -4568(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007a05e:
	mov -3784(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007a061:
	mov -3624(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007a208:
	mov -2904(%RBP),%RSP
	add $-4672, %RSP
	jmp uuid_000000000007a20b
uuid_000000000007a209:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2776(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a20b:
	mov -1808(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007a20e
uuid_000000000007a20c:
uuid_000000000007a20e:
	mov -776(%RBP),%RSP
	add $-1800, %RSP
	jmp uuid_000000000007a211
uuid_000000000007a20f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007a211:
	mov -440(%RBP),%RSP
	add $-768, %RSP
	subq $96, %rsp
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a224
	jmp uuid_000000000007a226
uuid_000000000007a224:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a215
	jmp uuid_000000000007a217
uuid_000000000007a215:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a212
	jmp uuid_000000000007a214
uuid_000000000007a212:
	movb $1, -536(%rbp)
uuid_000000000007a214:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007a217:
	mov -544(%RBP),%RSP
	add $-560, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a221
	jmp uuid_000000000007a223
uuid_000000000007a221:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a21b
	jmp uuid_000000000007a21d
uuid_000000000007a21b:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_0000000000076a4f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a218
	jmp uuid_000000000007a21a
uuid_000000000007a218:
	movb $1, -600(%rbp)
uuid_000000000007a21a:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007a21d:
	mov -608(%RBP),%RSP
	add $-624, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a21e
	jmp uuid_000000000007a220
uuid_000000000007a21e:
	movb $1, -488(%rbp)
uuid_000000000007a220:
	mov -568(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007a223:
	mov -504(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007a226:
	mov -496(%RBP),%RSP
	add $-624, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a280
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a262
	jmp uuid_000000000007a264
uuid_000000000007a262:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a253
	jmp uuid_000000000007a255
uuid_000000000007a253:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a24a
	jmp uuid_000000000007a24c
uuid_000000000007a24a:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a23b
	jmp uuid_000000000007a23d
uuid_000000000007a23b:
	push %RBP
	mov -792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a238
	jmp uuid_000000000007a23a
uuid_000000000007a238:
	movb $1, -808(%rbp)
uuid_000000000007a23a:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007a23d:
	mov -816(%RBP),%RSP
	add $-832, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a247
	jmp uuid_000000000007a249
uuid_000000000007a247:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a241
	jmp uuid_000000000007a243
uuid_000000000007a241:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $uuid_0000000000076a4f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a23e
	jmp uuid_000000000007a240
uuid_000000000007a23e:
	movb $1, -872(%rbp)
uuid_000000000007a240:
	mov -888(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007a243:
	mov -880(%RBP),%RSP
	add $-896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a244
	jmp uuid_000000000007a246
uuid_000000000007a244:
	movb $1, -760(%rbp)
uuid_000000000007a246:
	mov -840(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007a249:
	mov -776(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007a24c:
	mov -768(%RBP),%RSP
	add $-896, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a250
	jmp uuid_000000000007a252
uuid_000000000007a250:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a24d
	jmp uuid_000000000007a24f
uuid_000000000007a24d:
	movb $1, -712(%rbp)
uuid_000000000007a24f:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007a252:
	mov -728(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007a255:
	mov -720(%RBP),%RSP
	add $-928, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a25f
	jmp uuid_000000000007a261
uuid_000000000007a25f:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a259
	jmp uuid_000000000007a25b
uuid_000000000007a259:
	push %RBP
	mov -952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $uuid_0000000000076aa5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a256
	jmp uuid_000000000007a258
uuid_000000000007a256:
	movb $1, -968(%rbp)
uuid_000000000007a258:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007a25b:
	mov -976(%RBP),%RSP
	add $-992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a25c
	jmp uuid_000000000007a25e
uuid_000000000007a25c:
	movb $1, -664(%rbp)
uuid_000000000007a25e:
	mov -936(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007a261:
	mov -680(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007a264:
	mov -672(%RBP),%RSP
	add $-992, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a27d
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a27a
	push %RBP
	jmp uuid_000000000007a277
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a276
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a279
uuid_000000000007a277:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a275
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a279:
	mov -1032(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007a27c
uuid_000000000007a27a:
uuid_000000000007a27c:
	mov -1000(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_000000000007a27f
uuid_000000000007a27d:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a26b
	jmp uuid_000000000007a26d
uuid_000000000007a26b:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	jmp uuid_000000000007a268
	jmp uuid_000000000007a26a
uuid_000000000007a268:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a265
	jmp uuid_000000000007a267
uuid_000000000007a265:
	movb $1, -1368(%rbp)
uuid_000000000007a267:
	mov -1544(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007a26a:
	mov -1384(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007a26d:
	mov -1376(%RBP),%RSP
	add $-1712, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1368(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a272
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a271
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a274
uuid_000000000007a272:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a26e
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a230
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a270
uuid_000000000007a26e:
uuid_000000000007a270:
	mov -1744(%RBP),%RSP
	add $-1744, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -832(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1712(%rbp), %r15
	movq %r15, -416(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -408(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -400(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -392(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -256(%rbp)
uuid_000000000007a274:
	mov -1192(%RBP),%RSP
	add $-1864, %RSP
#call function destructure-lhs : Arrow<Cons<Cons<Cons<FContext,Type>,S>,FragmentList>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a27f:
	mov -632(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007a282
uuid_000000000007a280:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a22d
	jmp uuid_000000000007a22f
uuid_000000000007a22d:
	push %RBP
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007a22a
	jmp uuid_000000000007a22c
uuid_000000000007a22a:
	push %RBP
	jmp uuid_000000000007a227
	jmp uuid_000000000007a229
uuid_000000000007a227:
	movb $1, -1000(%rbp)
uuid_000000000007a229:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007a22c:
	mov -1016(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007a22f:
	mov -1008(%RBP),%RSP
	add $-1176, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a235
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a234
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a237
uuid_000000000007a235:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a231
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a230
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a233
uuid_000000000007a231:
uuid_000000000007a233:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -560(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a237:
	mov -824(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007a282:
	mov -456(%RBP),%RSP
	add $-1328, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $424, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -272(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -240(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000078382
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_0000000000078382
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007943e
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007943e
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007943e
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007655d
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007655d
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007655d
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000079327
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000079327
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_0000000000079327
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000076b42
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000076b42
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_0000000000076b42
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragmentList:
uuid_000000000007a290:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a291
	jmp uuid_000000000007a292
uuid_000000000007a291:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a289
	jmp uuid_000000000007a28b
uuid_000000000007a289:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007a286
	jmp uuid_000000000007a288
uuid_000000000007a286:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a283
	jmp uuid_000000000007a285
uuid_000000000007a283:
	movb $1, -680(%rbp)
uuid_000000000007a285:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007a288:
	mov -696(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007a28b:
	mov -688(%RBP),%RSP
	add $-1024, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a28d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a28c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a28f
uuid_000000000007a28d:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movq -1024(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a28f:
	mov -504(%RBP),%RSP
	add $-1024, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a290
uuid_000000000007a292:
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentS:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $uuid_0000000000078382
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $152, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fragment_CL__CL_get_CL_ArrowSConsStringFragment:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2a5
	jmp uuid_000000000007a2a7
uuid_000000000007a2a5:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007a2a2
	jmp uuid_000000000007a2a4
uuid_000000000007a2a2:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a29f
	jmp uuid_000000000007a2a1
uuid_000000000007a29f:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007a29c
	jmp uuid_000000000007a29e
uuid_000000000007a29c:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a299
	jmp uuid_000000000007a29b
uuid_000000000007a299:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a296
	jmp uuid_000000000007a298
uuid_000000000007a296:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007a293
	jmp uuid_000000000007a295
uuid_000000000007a293:
	movb $1, -512(%rbp)
uuid_000000000007a295:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a298:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a29b:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a29e:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a2a1:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a2a4:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a2a7:
	mov -520(%RBP),%RSP
	add $-944, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2bf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a2be
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2c1
uuid_000000000007a2bf:
uuid_000000000007a2bb:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2bc
	jmp uuid_000000000007a2bd
uuid_000000000007a2bc:
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	push %RBP
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2b1
	jmp uuid_000000000007a2b3
uuid_000000000007a2b1:
	push %RBP
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	jmp uuid_000000000007a2ae
	jmp uuid_000000000007a2b0
uuid_000000000007a2ae:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a2ab
	jmp uuid_000000000007a2ad
uuid_000000000007a2ab:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2a8
	jmp uuid_000000000007a2aa
uuid_000000000007a2a8:
	movb $1, -1056(%rbp)
uuid_000000000007a2aa:
	mov -1120(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007a2ad:
	mov -1104(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007a2b0:
	mov -1072(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007a2b3:
	mov -1064(%RBP),%RSP
	add $-1168, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2b8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a2b7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2ba
uuid_000000000007a2b8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2b4
	movq -1168(%rbp), %r15
	movq %r15, -864(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -856(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -848(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -840(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	jmp uuid_000000000007a2b6
uuid_000000000007a2b4:
	movq -1096(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
uuid_000000000007a2b6:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007a2ba:
	mov -1000(%RBP),%RSP
	add $-1176, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a2bb
uuid_000000000007a2bd:
uuid_000000000007a2c1:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $24, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_label_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007831b
	pushq $0
	pushq $uuid_00000000000763f8
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000763f8
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_0000000000078382
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007831b
	pushq $0
	pushq $uuid_00000000000769e7
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	subq $152, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
fragment_CL__CL_new_CL_ArrowFragmentNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
#call function close : Arrow<FragmentKV+CaseNumber<1>,Array<FragmentKV+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment-context::new : Arrow<Nil,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_new_CL_ArrowFContextNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	subq $152, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2d4
	jmp uuid_000000000007a2d6
uuid_000000000007a2d4:
	push %RBP
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	jmp uuid_000000000007a2d1
	jmp uuid_000000000007a2d3
uuid_000000000007a2d1:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2ce
	jmp uuid_000000000007a2d0
uuid_000000000007a2ce:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007a2cb
	jmp uuid_000000000007a2cd
uuid_000000000007a2cb:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a2c8
	jmp uuid_000000000007a2ca
uuid_000000000007a2c8:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2c5
	jmp uuid_000000000007a2c7
uuid_000000000007a2c5:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007a2c2
	jmp uuid_000000000007a2c4
uuid_000000000007a2c2:
	movb $1, -832(%rbp)
uuid_000000000007a2c4:
	mov -1192(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007a2c7:
	mov -1136(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007a2ca:
	mov -1120(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007a2cd:
	mov -1088(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007a2d0:
	mov -880(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007a2d3:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007a2d6:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a2d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2da
uuid_000000000007a2d8:
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1128(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $0
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
uuid_000000000007a2da:
	mov -672(%RBP),%RSP
	add $-1264, %RSP
	subq $152, %rsp
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $360, %rsp
	ret
fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2ed
	jmp uuid_000000000007a2ef
uuid_000000000007a2ed:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007a2ea
	jmp uuid_000000000007a2ec
uuid_000000000007a2ea:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2e7
	jmp uuid_000000000007a2e9
uuid_000000000007a2e7:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007a2e4
	jmp uuid_000000000007a2e6
uuid_000000000007a2e4:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a2e1
	jmp uuid_000000000007a2e3
uuid_000000000007a2e1:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2de
	jmp uuid_000000000007a2e0
uuid_000000000007a2de:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007a2db
	jmp uuid_000000000007a2dd
uuid_000000000007a2db:
	movb $1, -640(%rbp)
uuid_000000000007a2dd:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007a2e0:
	mov -944(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007a2e3:
	mov -928(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007a2e6:
	mov -896(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007a2e9:
	mov -688(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007a2ec:
	mov -656(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007a2ef:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2f1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a2f0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2f3
uuid_000000000007a2f1:
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007a2f3:
	mov -480(%RBP),%RSP
	add $-1072, %RSP
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a306
	jmp uuid_000000000007a308
uuid_000000000007a306:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007a303
	jmp uuid_000000000007a305
uuid_000000000007a303:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a300
	jmp uuid_000000000007a302
uuid_000000000007a300:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007a2fd
	jmp uuid_000000000007a2ff
uuid_000000000007a2fd:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a2fa
	jmp uuid_000000000007a2fc
uuid_000000000007a2fa:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2f7
	jmp uuid_000000000007a2f9
uuid_000000000007a2f7:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007a2f4
	jmp uuid_000000000007a2f6
uuid_000000000007a2f4:
	movb $1, -552(%rbp)
uuid_000000000007a2f6:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a2f9:
	mov -856(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a2fc:
	mov -840(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a2ff:
	mov -808(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a302:
	mov -600(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a305:
	mov -568(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a308:
	mov -560(%RBP),%RSP
	add $-984, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a30a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a309
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a30c
uuid_000000000007a30a:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -848(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a30c:
	mov -392(%RBP),%RSP
	add $-984, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a31f
	jmp uuid_000000000007a321
uuid_000000000007a31f:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007a31c
	jmp uuid_000000000007a31e
uuid_000000000007a31c:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a319
	jmp uuid_000000000007a31b
uuid_000000000007a319:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007a316
	jmp uuid_000000000007a318
uuid_000000000007a316:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a313
	jmp uuid_000000000007a315
uuid_000000000007a313:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a310
	jmp uuid_000000000007a312
uuid_000000000007a310:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007a30d
	jmp uuid_000000000007a30f
uuid_000000000007a30d:
	movb $1, -504(%rbp)
uuid_000000000007a30f:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a312:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a315:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a318:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a31b:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a31e:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a321:
	mov -512(%RBP),%RSP
	add $-936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a323
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a322
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a325
uuid_000000000007a323:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a325:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a338
	jmp uuid_000000000007a33a
uuid_000000000007a338:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007a335
	jmp uuid_000000000007a337
uuid_000000000007a335:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a332
	jmp uuid_000000000007a334
uuid_000000000007a332:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007a32f
	jmp uuid_000000000007a331
uuid_000000000007a32f:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a32c
	jmp uuid_000000000007a32e
uuid_000000000007a32c:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a329
	jmp uuid_000000000007a32b
uuid_000000000007a329:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007a326
	jmp uuid_000000000007a328
uuid_000000000007a326:
	movb $1, -504(%rbp)
uuid_000000000007a328:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a32b:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a32e:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a331:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a334:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a337:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a33a:
	mov -512(%RBP),%RSP
	add $-936, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a33c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a33b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a33e
uuid_000000000007a33c:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a33e:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a351
	jmp uuid_000000000007a353
uuid_000000000007a351:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007a34e
	jmp uuid_000000000007a350
uuid_000000000007a34e:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a34b
	jmp uuid_000000000007a34d
uuid_000000000007a34b:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007a348
	jmp uuid_000000000007a34a
uuid_000000000007a348:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a345
	jmp uuid_000000000007a347
uuid_000000000007a345:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a342
	jmp uuid_000000000007a344
uuid_000000000007a342:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007a33f
	jmp uuid_000000000007a341
uuid_000000000007a33f:
	movb $1, -512(%rbp)
uuid_000000000007a341:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a344:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a347:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a34a:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a34d:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a350:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007a353:
	mov -520(%RBP),%RSP
	add $-944, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a355
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a354
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a357
uuid_000000000007a355:
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a357:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $192, %rsp
	ret
main:
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a390:
	movq -32(%RBP), %RAX
	movq -8(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a391
	jmp uuid_000000000007a392
uuid_000000000007a391:
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007a358
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a38d
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007a359
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a38a
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007a35a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a387
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007a35b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a384
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007a35c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a381
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007a35d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a37e
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007a35e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a37b
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007a35f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a378
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007a360
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a375
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007a361
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a372
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a362
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a36f
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007a363
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a36c
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007a364
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a369
	push %RBP
	pushq -64(%rbp)
	jmp uuid_000000000007a366
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a365
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a368
uuid_000000000007a366:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -288(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a368:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a36b
uuid_000000000007a369:
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %r15
	movq $config_SB_target_CL_String, %r14
	movq %r15, 0(%r14)
uuid_000000000007a36b:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a36e
uuid_000000000007a36c:
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007a36e:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a371
uuid_000000000007a36f:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007a371:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a374
uuid_000000000007a372:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007a374:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a377
uuid_000000000007a375:
	mov $config_SB_strict_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007a377:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a37a
uuid_000000000007a378:
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007a37a:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a37d
uuid_000000000007a37b:
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007a37d:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a380
uuid_000000000007a37e:
	pushq $1
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007a380:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a383
uuid_000000000007a381:
	pushq $2
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007a383:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a386
uuid_000000000007a384:
	pushq $3
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007a386:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a389
uuid_000000000007a387:
	pushq $4
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007a389:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a38c
uuid_000000000007a38a:
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007a38c:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a38f
uuid_000000000007a38d:
	pushq $0
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007a38f:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a390
uuid_000000000007a392:
	pushq $1
uuid_000000000007a3be:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3bf
	jmp uuid_000000000007a3c0
uuid_000000000007a3bf:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3bb
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a399
	jmp uuid_000000000007a39b
uuid_000000000007a399:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a396
	jmp uuid_000000000007a398
uuid_000000000007a396:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a393
	jmp uuid_000000000007a395
uuid_000000000007a393:
	movb $1, -160(%rbp)
uuid_000000000007a395:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a398:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a39b:
	mov -168(%RBP),%RSP
	add $-232, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3b8
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3a8
	jmp uuid_000000000007a3aa
uuid_000000000007a3a8:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a39f
	jmp uuid_000000000007a3a1
uuid_000000000007a39f:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a39c
	jmp uuid_000000000007a39e
uuid_000000000007a39c:
	movb $1, -320(%rbp)
uuid_000000000007a39e:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007a3a1:
	mov -328(%RBP),%RSP
	add $-344, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3a5
	jmp uuid_000000000007a3a7
uuid_000000000007a3a5:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a3a2
	jmp uuid_000000000007a3a4
uuid_000000000007a3a2:
	movb $1, -272(%rbp)
uuid_000000000007a3a4:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a3a7:
	mov -288(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a3aa:
	mov -280(%RBP),%RSP
	add $-376, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3b5
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3ae
	jmp uuid_000000000007a3b0
uuid_000000000007a3ae:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a3ab
	jmp uuid_000000000007a3ad
uuid_000000000007a3ab:
	movb $1, -416(%rbp)
uuid_000000000007a3ad:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007a3b0:
	mov -424(%RBP),%RSP
	add $-440, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3b2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a3b1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a3b4
uuid_000000000007a3b2:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $0, -64(%rbp)
uuid_000000000007a3b4:
	mov -384(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007a3b7
uuid_000000000007a3b5:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007a3b7:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007a3ba
uuid_000000000007a3b8:
	movq -232(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007a3ba:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007a3bd
uuid_000000000007a3bb:
	movb $0, -64(%rbp)
uuid_000000000007a3bd:
	mov -96(%RBP),%RSP
	add $-120, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007a3be
uuid_000000000007a3c0:
	mov $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %r15
	pushq 0(%r15)
	push %RBP
	pushq -72(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3d2
	push %RBP
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3cf
	push %RBP
	pushq -72(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3cc
	push %RBP
	pushq -72(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c9
	push %RBP
	pushq -72(%rbp)
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a3c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a3c8
uuid_000000000007a3c6:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3c8:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007a3cb
uuid_000000000007a3c9:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3cb:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007a3ce
uuid_000000000007a3cc:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3ce:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007a3d1
uuid_000000000007a3cf:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3d1:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007a3d4
uuid_000000000007a3d2:
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3d4:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $24, %rsp
	ret
print_CL_ArrowNilListToken:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075eff
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
uuid_000000000007a3e7:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3e8
	jmp uuid_000000000007a3e9
uuid_000000000007a3e8:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3dd
	jmp uuid_000000000007a3df
uuid_000000000007a3dd:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a3da
	jmp uuid_000000000007a3dc
uuid_000000000007a3da:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007a3d7
	jmp uuid_000000000007a3d9
uuid_000000000007a3d7:
	movb $1, -248(%rbp)
uuid_000000000007a3d9:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007a3dc:
	mov -264(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007a3df:
	mov -256(%RBP),%RSP
	add $-400, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3e4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a3e3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a3e6
uuid_000000000007a3e4:
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3e0
	jmp uuid_000000000007a3e2
uuid_000000000007a3e0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007626b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3e2:
	mov -408(%RBP),%RSP
	add $-408, %RSP
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $1, -88(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a3e6:
	mov -168(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a3e7
uuid_000000000007a3e9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075f00
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListToken:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_SS:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FContextFContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVFragmentKV:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ContextContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ASTAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListArray_QM_Fragment:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListFragment:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
is_CL_ArrowU64ConsSized8Sized8:
	pushq $0
	pushq $1
uuid_000000000007a3f1:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3f2
	jmp uuid_000000000007a3f3
uuid_000000000007a3f2:
	mov %RBP, %R15
	add $-8, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-16, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3ee
	movq $0, -40(%rbp)
	jmp uuid_000000000007a3f0
uuid_000000000007a3ee:
uuid_000000000007a3f0:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a3f1
uuid_000000000007a3f3:
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListFragmentList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TypeType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_StringStringListStringStringList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -32(%rbp), %r15
	movq %r15, 0(%r14)
	movq -24(%rbp), %r15
	movq %r15, 8(%r14)
	movq -16(%rbp), %r15
	movq %r15, 16(%r14)
	movq -8(%rbp), %r15
	movq %r15, 24(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
reverse_CL_ArrowListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007a405:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a406
	jmp uuid_000000000007a407
uuid_000000000007a406:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3fe
	jmp uuid_000000000007a400
uuid_000000000007a3fe:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a3fb
	jmp uuid_000000000007a3fd
uuid_000000000007a3fb:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007a3f8
	jmp uuid_000000000007a3fa
uuid_000000000007a3f8:
	movb $1, -312(%rbp)
uuid_000000000007a3fa:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007a3fd:
	mov -328(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007a400:
	mov -320(%RBP),%RSP
	add $-464, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a402
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a401
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a404
uuid_000000000007a402:
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a404:
	mov -232(%RBP),%RSP
	add $-464, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a405
uuid_000000000007a407:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListTokenListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTokenConsListTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
head_CL_ArrowTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a417
	push %RBP
	jmp uuid_000000000007a414
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a413
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a416
uuid_000000000007a414:
uuid_000000000007a416:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a419
uuid_000000000007a417:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a412
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a419:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	pushq -8(%RBP)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	subq $56, %rsp
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	pushq 120(%rsp)
	pushq 136(%rsp)
	pushq 152(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
cons_CL_ArrowListTypeConsListTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_SfxListSfxList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_MacroListMacroList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
max_CL_ArrowI64ConsI64I64:
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a425
	jmp uuid_000000000007a427
uuid_000000000007a425:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007a427:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListStringConsListStringString:
	pushq -8(%rbp)
#call function close : Arrow<List<String>,Array<List<String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStringListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListStringListString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListString:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment:
	pushq -8(%rbp)
#call function close : Arrow<List<Array<Fragment,?>>,Array<List<Array<Fragment,?>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $152
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -152(%rbp), %r15
	movq %r15, 0(%r14)
	movq -144(%rbp), %r15
	movq %r15, 8(%r14)
	movq -136(%rbp), %r15
	movq %r15, 16(%r14)
	movq -128(%rbp), %r15
	movq %r15, 24(%r14)
	movq -120(%rbp), %r15
	movq %r15, 32(%r14)
	movq -112(%rbp), %r15
	movq %r15, 40(%r14)
	movq -104(%rbp), %r15
	movq %r15, 48(%r14)
	movq -96(%rbp), %r15
	movq %r15, 56(%r14)
	movq -88(%rbp), %r15
	movq %r15, 64(%r14)
	movq -80(%rbp), %r15
	movq %r15, 72(%r14)
	movq -72(%rbp), %r15
	movq %r15, 80(%r14)
	movq -64(%rbp), %r15
	movq %r15, 88(%r14)
	movq -56(%rbp), %r15
	movq %r15, 96(%r14)
	movq -48(%rbp), %r15
	movq %r15, 104(%r14)
	movq -40(%rbp), %r15
	movq %r15, 112(%r14)
	movq -32(%rbp), %r15
	movq %r15, 120(%r14)
	movq -24(%rbp), %r15
	movq %r15, 128(%r14)
	movq -16(%rbp), %r15
	movq %r15, 136(%r14)
	movq -8(%rbp), %r15
	movq %r15, 144(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $160, %rsp
	ret
_DT_length_CL_ArrowU64ListFragment:
	pushq $0
uuid_000000000007a441:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a442
	jmp uuid_000000000007a443
uuid_000000000007a442:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a43a
	jmp uuid_000000000007a43c
uuid_000000000007a43a:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a437
	jmp uuid_000000000007a439
uuid_000000000007a437:
	push %RBP
	jmp uuid_000000000007a434
	jmp uuid_000000000007a436
uuid_000000000007a434:
	movb $1, -536(%rbp)
uuid_000000000007a436:
	mov -728(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a439:
	mov -552(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a43c:
	mov -544(%RBP),%RSP
	add $-728, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a43e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a43d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a440
uuid_000000000007a43e:
	movq -720(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -680(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -672(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a440:
	mov -360(%RBP),%RSP
	add $-728, %RSP
	movq -184(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -184(%rbp)
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a441
uuid_000000000007a443:
	mov -184(%rbp), %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
cons_CL_ArrowListFragmentConsListFragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
#call function close : Arrow<List<Fragment>,Array<List<Fragment>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListFragmentListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	subq $168, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
close_CL_ArrowArray_QM_ListFragmentListFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TContextTContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Type>,Array<BTreeEq<String,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a454:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a455
	jmp uuid_000000000007a456
uuid_000000000007a455:
	mov -8(%rbp), %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a451
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a44e
	mov -120(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a450
uuid_000000000007a44e:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -64(%rbp)
uuid_000000000007a450:
	mov -152(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007a453
uuid_000000000007a451:
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a44b
	mov -128(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a44d
uuid_000000000007a44b:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -64(%rbp)
uuid_000000000007a44d:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007a453:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	add $64, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a454
uuid_000000000007a456:
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $64
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -64(%rbp), %r15
	movq %r15, 0(%r14)
	movq -56(%rbp), %r15
	movq %r15, 8(%r14)
	movq -48(%rbp), %r15
	movq %r15, 16(%r14)
	movq -40(%rbp), %r15
	movq %r15, 24(%r14)
	movq -32(%rbp), %r15
	movq %r15, 32(%r14)
	movq -24(%rbp), %r15
	movq %r15, 40(%r14)
	movq -16(%rbp), %r15
	movq %r15, 48(%r14)
	movq -8(%rbp), %r15
	movq %r15, 56(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64ListStackToSpecialize:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
max_CL_ArrowU64ConsU64U64:
	push %RBP
	movq -8(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a45f
	jmp uuid_000000000007a461
uuid_000000000007a45f:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007a461:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
#call function close : Arrow<List<StackToSpecialize>,Array<List<StackToSpecialize>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	subq $200, %rsp
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64ListType:
	mov $1, %RAX
	pushq %RAX
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_AD__CL_ArrowListTypeConsListTypeListType:
#call function reverse : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a47b:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a47c
	jmp uuid_000000000007a47d
uuid_000000000007a47c:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a474
	jmp uuid_000000000007a476
uuid_000000000007a474:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a471
	jmp uuid_000000000007a473
uuid_000000000007a471:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007a46e
	jmp uuid_000000000007a470
uuid_000000000007a46e:
	movb $1, -184(%rbp)
uuid_000000000007a470:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007a473:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007a476:
	mov -192(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a478
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a477
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a47a
uuid_000000000007a478:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a47a:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a47b
uuid_000000000007a47d:
	subq $40, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
reverse_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007a48e:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a48f
	jmp uuid_000000000007a490
uuid_000000000007a48f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a488
	jmp uuid_000000000007a48a
uuid_000000000007a488:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a485
	jmp uuid_000000000007a487
uuid_000000000007a485:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007a482
	jmp uuid_000000000007a484
uuid_000000000007a482:
	movb $1, -184(%rbp)
uuid_000000000007a484:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007a487:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007a48a:
	mov -192(%RBP),%RSP
	add $-272, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a48b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a401
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a48d
uuid_000000000007a48b:
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a48d:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a48e
uuid_000000000007a490:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_length_CL_ArrowU64ListType:
	pushq $0
uuid_000000000007a49f:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4a0
	jmp uuid_000000000007a4a1
uuid_000000000007a4a0:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a499
	jmp uuid_000000000007a49b
uuid_000000000007a499:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a496
	jmp uuid_000000000007a498
uuid_000000000007a496:
	push %RBP
	jmp uuid_000000000007a493
	jmp uuid_000000000007a495
uuid_000000000007a493:
	movb $1, -152(%rbp)
uuid_000000000007a495:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007a498:
	mov -168(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007a49b:
	mov -160(%RBP),%RSP
	add $-216, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a49c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a43d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a49e
uuid_000000000007a49c:
	movq -208(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a49e:
	mov -104(%RBP),%RSP
	add $-216, %RSP
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a49f
uuid_000000000007a4a1:
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a4bc:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4bd
	jmp uuid_000000000007a4be
uuid_000000000007a4bd:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -112(%RBP), %RAX
	movq -128(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4ad
	jmp uuid_000000000007a4af
uuid_000000000007a4ad:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4aa
	jmp uuid_000000000007a4ac
uuid_000000000007a4aa:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	movb $0, -120(%rbp)
uuid_000000000007a4ac:
	mov -144(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007a4af:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4b9
	jmp uuid_000000000007a4bb
uuid_000000000007a4b9:
	push %RBP
	movq -128(%RBP), %RAX
	movq -112(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4b6
	push %RBP
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4b3
	mov -48(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a4b5
uuid_000000000007a4b3:
	movb $0, -120(%rbp)
uuid_000000000007a4b5:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007a4b8
uuid_000000000007a4b6:
	push %RBP
	mov -56(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4b0
	mov -56(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a4b2
uuid_000000000007a4b0:
	movb $0, -120(%rbp)
uuid_000000000007a4b2:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a4b8:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a4bb:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a4bc
uuid_000000000007a4be:
	subq $24, %rsp
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a4d9:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4da
	jmp uuid_000000000007a4db
uuid_000000000007a4da:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4ca
	jmp uuid_000000000007a4cc
uuid_000000000007a4ca:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4c7
	jmp uuid_000000000007a4c9
uuid_000000000007a4c7:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007a4c9:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007a4cc:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4d6
	jmp uuid_000000000007a4d8
uuid_000000000007a4d6:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4d3
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4d0
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a4d2
uuid_000000000007a4d0:
	movb $0, -88(%rbp)
uuid_000000000007a4d2:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007a4d5
uuid_000000000007a4d3:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4cd
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a4cf
uuid_000000000007a4cd:
	movb $0, -88(%rbp)
uuid_000000000007a4cf:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007a4d5:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007a4d8:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a4d9
uuid_000000000007a4db:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a500:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a501
	jmp uuid_000000000007a502
uuid_000000000007a501:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -176(%RBP), %RAX
	movq -192(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4f1
	jmp uuid_000000000007a4f3
uuid_000000000007a4f1:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4ee
	jmp uuid_000000000007a4f0
uuid_000000000007a4ee:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	movb $0, -184(%rbp)
uuid_000000000007a4f0:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007a4f3:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4fd
	jmp uuid_000000000007a4ff
uuid_000000000007a4fd:
	push %RBP
	movq -192(%RBP), %RAX
	movq -176(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4fa
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4f7
	mov -80(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a4f9
uuid_000000000007a4f7:
	movb $0, -184(%rbp)
uuid_000000000007a4f9:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007a4fc
uuid_000000000007a4fa:
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4f4
	mov -88(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a4f6
uuid_000000000007a4f4:
	movb $0, -184(%rbp)
uuid_000000000007a4f6:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a4fc:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a4ff:
	mov -216(%RBP),%RSP
	add $-232, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a500
uuid_000000000007a502:
	subq $56, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_nth_CL_ArrowTypeConsTypeConsU64ListType:
uuid_000000000007a517:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a518
	jmp uuid_000000000007a519
uuid_000000000007a518:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a50d
	jmp uuid_000000000007a50f
uuid_000000000007a50d:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a50a
	jmp uuid_000000000007a50c
uuid_000000000007a50a:
	push %RBP
	jmp uuid_000000000007a507
	jmp uuid_000000000007a509
uuid_000000000007a507:
	movb $1, -176(%rbp)
uuid_000000000007a509:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a50c:
	mov -192(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a50f:
	mov -184(%RBP),%RSP
	add $-240, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a514
	push %RBP
	jmp uuid_000000000007a511
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a510
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a513
uuid_000000000007a511:
uuid_000000000007a513:
	mov -248(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007a516
uuid_000000000007a514:
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a516:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a517
uuid_000000000007a519:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a520
	jmp uuid_000000000007a522
uuid_000000000007a520:
	push %RBP
	jmp uuid_000000000007a51d
	jmp uuid_000000000007a51f
uuid_000000000007a51d:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007a51a
	jmp uuid_000000000007a51c
uuid_000000000007a51a:
	movb $1, -176(%rbp)
uuid_000000000007a51c:
	mov -200(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007a51f:
	mov -192(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007a522:
	mov -184(%RBP),%RSP
	add $-224, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a527
	push %RBP
	jmp uuid_000000000007a524
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a523
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a526
uuid_000000000007a524:
uuid_000000000007a526:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007a529
uuid_000000000007a527:
	movq -224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007a529:
	mov -128(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Tuple<Type,Type>>,Array<BTreeEq<String,Tuple<Type,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a53c:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a53d
	jmp uuid_000000000007a53e
uuid_000000000007a53d:
	mov -8(%rbp), %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq -88(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a539
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a536
	mov -184(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a538
uuid_000000000007a536:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -96(%rbp)
uuid_000000000007a538:
	mov -216(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007a53b
uuid_000000000007a539:
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a533
	mov -192(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a535
uuid_000000000007a533:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -96(%rbp)
uuid_000000000007a535:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007a53b:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a53c
uuid_000000000007a53e:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,U64>,Array<BTreeEq<String,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a555:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a556
	jmp uuid_000000000007a557
uuid_000000000007a556:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a552
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a54f
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a551
uuid_000000000007a54f:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007a551:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007a554
uuid_000000000007a552:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a54c
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a54e
uuid_000000000007a54c:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007a54e:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007a554:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a555
uuid_000000000007a557:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a578:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a579
	jmp uuid_000000000007a57a
uuid_000000000007a579:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a569
	jmp uuid_000000000007a56b
uuid_000000000007a569:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a566
	jmp uuid_000000000007a568
uuid_000000000007a566:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007a568:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007a56b:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a575
	jmp uuid_000000000007a577
uuid_000000000007a575:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a572
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a56f
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a571
uuid_000000000007a56f:
	movb $0, -88(%rbp)
uuid_000000000007a571:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007a574
uuid_000000000007a572:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a56c
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a56e
uuid_000000000007a56c:
	movb $0, -88(%rbp)
uuid_000000000007a56e:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007a574:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007a577:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a578
uuid_000000000007a57a:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,String>,Array<BTreeEq<String,String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a586:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a587
	jmp uuid_000000000007a588
uuid_000000000007a587:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a583
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a580
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a582
uuid_000000000007a580:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007a582:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007a585
uuid_000000000007a583:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a57d
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a57f
uuid_000000000007a57d:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007a57f:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007a585:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a586
uuid_000000000007a588:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a5b5:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5b6
	jmp uuid_000000000007a5b7
uuid_000000000007a5b6:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5a6
	jmp uuid_000000000007a5a8
uuid_000000000007a5a6:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,Type>,Tuple<String,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5a3
	jmp uuid_000000000007a5a5
uuid_000000000007a5a3:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007a5a5:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a5a8:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5b2
	jmp uuid_000000000007a5b4
uuid_000000000007a5b2:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5af
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5ac
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a5ae
uuid_000000000007a5ac:
	movb $0, -152(%rbp)
uuid_000000000007a5ae:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007a5b1
uuid_000000000007a5af:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5a9
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a5ab
uuid_000000000007a5a9:
	movb $0, -152(%rbp)
uuid_000000000007a5ab:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007a5b1:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007a5b4:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a5b5
uuid_000000000007a5b7:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5da
	jmp uuid_000000000007a5dc
uuid_000000000007a5da:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5c8
	jmp uuid_000000000007a5ca
uuid_000000000007a5c8:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_000000000007a5c5
	jmp uuid_000000000007a5c7
uuid_000000000007a5c5:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a5c2
	jmp uuid_000000000007a5c4
uuid_000000000007a5c2:
	movb $1, -352(%rbp)
uuid_000000000007a5c4:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007a5c7:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007a5ca:
	mov -360(%RBP),%RSP
	add $-408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5d7
	jmp uuid_000000000007a5d9
uuid_000000000007a5d7:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5d1
	jmp uuid_000000000007a5d3
uuid_000000000007a5d1:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007a5ce
	jmp uuid_000000000007a5d0
uuid_000000000007a5ce:
	push %RBP
	mov -424(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a5cb
	jmp uuid_000000000007a5cd
uuid_000000000007a5cb:
	movb $1, -464(%rbp)
uuid_000000000007a5cd:
	mov -512(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a5d0:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a5d3:
	mov -472(%RBP),%RSP
	add $-520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5d4
	jmp uuid_000000000007a5d6
uuid_000000000007a5d4:
	movb $1, -288(%rbp)
uuid_000000000007a5d6:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a5d9:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a5dc:
	mov -296(%RBP),%RSP
	add $-520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5e4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a5e3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a5e6
uuid_000000000007a5e4:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5e0
	jmp uuid_000000000007a5e2
uuid_000000000007a5e0:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5dd
	jmp uuid_000000000007a5df
uuid_000000000007a5dd:
	movq $1, -96(%rbp)
uuid_000000000007a5df:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a5e2:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a5e6:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5f1
	jmp uuid_000000000007a5f3
uuid_000000000007a5f1:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007a5ee
	jmp uuid_000000000007a5f0
uuid_000000000007a5ee:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a5eb
	jmp uuid_000000000007a5ed
uuid_000000000007a5eb:
	movb $1, -152(%rbp)
uuid_000000000007a5ed:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007a5f0:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007a5f3:
	mov -160(%RBP),%RSP
	add $-208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5f5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a5f4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a5f7
uuid_000000000007a5f5:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007a5f7:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<String,Type>,U64>,Array<BTreeEq<Tuple<String,Type>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a60c:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a60d
	jmp uuid_000000000007a60e
uuid_000000000007a60d:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a609
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a606
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a608
uuid_000000000007a606:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007a608:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007a60b
uuid_000000000007a609:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a603
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a605
uuid_000000000007a603:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007a605:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007a60b:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a60c
uuid_000000000007a60e:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a64c:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a64d
	jmp uuid_000000000007a64e
uuid_000000000007a64d:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a63d
	jmp uuid_000000000007a63f
uuid_000000000007a63d:
	push %RBP
#call function == : Arrow<Cons<Tuple<Tuple<String,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a63a
	jmp uuid_000000000007a63c
uuid_000000000007a63a:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007a63c:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a63f:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a649
	jmp uuid_000000000007a64b
uuid_000000000007a649:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a646
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a643
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a645
uuid_000000000007a643:
	movb $0, -152(%rbp)
uuid_000000000007a645:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007a648
uuid_000000000007a646:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a640
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a642
uuid_000000000007a640:
	movb $0, -152(%rbp)
uuid_000000000007a642:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007a648:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007a64b:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a64c
uuid_000000000007a64e:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a67a
	jmp uuid_000000000007a67c
uuid_000000000007a67a:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a668
	jmp uuid_000000000007a66a
uuid_000000000007a668:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a665
	jmp uuid_000000000007a667
uuid_000000000007a665:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007a662
	jmp uuid_000000000007a664
uuid_000000000007a662:
	movb $1, -352(%rbp)
uuid_000000000007a664:
	mov -384(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007a667:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007a66a:
	mov -360(%RBP),%RSP
	add $-408, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a677
	jmp uuid_000000000007a679
uuid_000000000007a677:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a671
	jmp uuid_000000000007a673
uuid_000000000007a671:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a66e
	jmp uuid_000000000007a670
uuid_000000000007a66e:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007a66b
	jmp uuid_000000000007a66d
uuid_000000000007a66b:
	movb $1, -464(%rbp)
uuid_000000000007a66d:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a670:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a673:
	mov -472(%RBP),%RSP
	add $-520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a674
	jmp uuid_000000000007a676
uuid_000000000007a674:
	movb $1, -288(%rbp)
uuid_000000000007a676:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a679:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007a67c:
	mov -296(%RBP),%RSP
	add $-520, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a683
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a5e3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a685
uuid_000000000007a683:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,U64>,Tuple<String,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a680
	jmp uuid_000000000007a682
uuid_000000000007a680:
	push %RBP
	movq -488(%RBP), %RAX
	movq -376(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a67d
	jmp uuid_000000000007a67f
uuid_000000000007a67d:
	movq $1, -96(%rbp)
uuid_000000000007a67f:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a682:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a685:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6a8
	jmp uuid_000000000007a6aa
uuid_000000000007a6a8:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a696
	jmp uuid_000000000007a698
uuid_000000000007a696:
	push %RBP
	mov -224(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a693
	jmp uuid_000000000007a695
uuid_000000000007a693:
	push %RBP
	mov -216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a690
	jmp uuid_000000000007a692
uuid_000000000007a690:
	movb $1, -240(%rbp)
uuid_000000000007a692:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a695:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a698:
	mov -248(%RBP),%RSP
	add $-280, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6a5
	jmp uuid_000000000007a6a7
uuid_000000000007a6a5:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a69f
	jmp uuid_000000000007a6a1
uuid_000000000007a69f:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a69c
	jmp uuid_000000000007a69e
uuid_000000000007a69c:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a699
	jmp uuid_000000000007a69b
uuid_000000000007a699:
	movb $1, -320(%rbp)
uuid_000000000007a69b:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007a69e:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007a6a1:
	mov -328(%RBP),%RSP
	add $-360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6a2
	jmp uuid_000000000007a6a4
uuid_000000000007a6a2:
	movb $1, -192(%rbp)
uuid_000000000007a6a4:
	mov -288(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007a6a7:
	mov -208(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007a6aa:
	mov -200(%RBP),%RSP
	add $-360, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6b1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a5e3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a6b3
uuid_000000000007a6b1:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6ae
	jmp uuid_000000000007a6b0
uuid_000000000007a6ae:
	push %RBP
	movq -344(%RBP), %RAX
	movq -264(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6ab
	jmp uuid_000000000007a6ad
uuid_000000000007a6ab:
	movq $1, -64(%rbp)
uuid_000000000007a6ad:
	mov -376(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a6b0:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a6b3:
	mov -128(%RBP),%RSP
	add $-376, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6c2
	jmp uuid_000000000007a6c4
uuid_000000000007a6c2:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a6bf
	jmp uuid_000000000007a6c1
uuid_000000000007a6bf:
	push %RBP
	pushq -112(%RBP)
	pushq -120(%RBP)
	pushq -128(%RBP)
	jmp uuid_000000000007a6bc
	jmp uuid_000000000007a6be
uuid_000000000007a6bc:
	movb $1, -152(%rbp)
uuid_000000000007a6be:
	mov -184(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007a6c1:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007a6c4:
	mov -160(%RBP),%RSP
	add $-208, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6c5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a5f4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a6c7
uuid_000000000007a6c5:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Tuple<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007a6c7:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6d2
	jmp uuid_000000000007a6d4
uuid_000000000007a6d2:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a6cf
	jmp uuid_000000000007a6d1
uuid_000000000007a6cf:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a6cc
	jmp uuid_000000000007a6ce
uuid_000000000007a6cc:
	movb $1, -104(%rbp)
uuid_000000000007a6ce:
	mov -136(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007a6d1:
	mov -120(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007a6d4:
	mov -112(%RBP),%RSP
	add $-144, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6d5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a5f4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a6d7
uuid_000000000007a6d5:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a6d7:
	mov -72(%RBP),%RSP
	add $-144, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a6f5:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6f6
	jmp uuid_000000000007a6f7
uuid_000000000007a6f6:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6f2
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6ef
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a6f1
uuid_000000000007a6ef:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007a6f1:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007a6f4
uuid_000000000007a6f2:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6ec
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a6ee
uuid_000000000007a6ec:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007a6ee:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007a6f4:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a6f5
uuid_000000000007a6f7:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Tuple<Tuple<String,String>,Type>>,Array<List<Tuple<Tuple<String,String>,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeIs<AST,Type>,Array<BTreeIs<AST,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007a743:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a744
	jmp uuid_000000000007a745
uuid_000000000007a744:
	mov -8(%rbp), %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq -120(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a740
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a73d
	mov -248(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a73f
uuid_000000000007a73d:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -128(%rbp)
uuid_000000000007a73f:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007a742
uuid_000000000007a740:
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a73a
	mov -256(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a73c
uuid_000000000007a73a:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -128(%rbp)
uuid_000000000007a73c:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a742:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	add $128, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a743
uuid_000000000007a745:
	mov %rbp, %rsp
	sub $112, %rsp
	ret
close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $128
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -128(%rbp), %r15
	movq %r15, 0(%r14)
	movq -120(%rbp), %r15
	movq %r15, 8(%r14)
	movq -112(%rbp), %r15
	movq %r15, 16(%r14)
	movq -104(%rbp), %r15
	movq %r15, 24(%r14)
	movq -96(%rbp), %r15
	movq %r15, 32(%r14)
	movq -88(%rbp), %r15
	movq %r15, 40(%r14)
	movq -80(%rbp), %r15
	movq %r15, 48(%r14)
	movq -72(%rbp), %r15
	movq %r15, 56(%r14)
	movq -64(%rbp), %r15
	movq %r15, 64(%r14)
	movq -56(%rbp), %r15
	movq %r15, 72(%r14)
	movq -48(%rbp), %r15
	movq %r15, 80(%r14)
	movq -40(%rbp), %r15
	movq %r15, 88(%r14)
	movq -32(%rbp), %r15
	movq %r15, 96(%r14)
	movq -24(%rbp), %r15
	movq %r15, 104(%r14)
	movq -16(%rbp), %r15
	movq %r15, 112(%r14)
	movq -8(%rbp), %r15
	movq %r15, 120(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
hash_CL_ArrowU64Sized72:
	pushq $0
	pushq $0
uuid_000000000007a74c:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -88(%RBP), %RAX
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a74d
	jmp uuid_000000000007a74e
uuid_000000000007a74d:
	mov %RBP, %R15
	add $-72, %R15
	mov -88(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -88(%rbp)
	mov -96(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	jmp uuid_000000000007a74c
uuid_000000000007a74e:
	mov -96(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007a769:
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a76a
	jmp uuid_000000000007a76b
uuid_000000000007a76a:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -240(%RBP), %RAX
	movq -256(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a75a
	jmp uuid_000000000007a75c
uuid_000000000007a75a:
	push %RBP
#call function is : Arrow<Cons<Sized<72>,Sized<72>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	pushq -80(%RBP)
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized72Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a757
	jmp uuid_000000000007a759
uuid_000000000007a757:
	pushq -88(%RBP)
	pushq -96(%RBP)
	pushq -104(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	movb $0, -248(%rbp)
uuid_000000000007a759:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007a75c:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	push %RBP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a766
	jmp uuid_000000000007a768
uuid_000000000007a766:
	push %RBP
	movq -256(%RBP), %RAX
	movq -240(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a763
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a760
	mov -112(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a762
uuid_000000000007a760:
	movb $0, -248(%rbp)
uuid_000000000007a762:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a765
uuid_000000000007a763:
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a75d
	mov -120(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a75f
uuid_000000000007a75d:
	movb $0, -248(%rbp)
uuid_000000000007a75f:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007a765:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007a768:
	mov -280(%RBP),%RSP
	add $-296, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a769
uuid_000000000007a76b:
	subq $24, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
is_CL_ArrowU64ConsSized72Sized72:
	pushq $0
	pushq $1
uuid_000000000007a76f:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -160(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a770
	jmp uuid_000000000007a771
uuid_000000000007a770:
	mov %RBP, %R15
	add $-72, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-144, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -176(%RBP), %RAX
	movq -184(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a76c
	movq $0, -168(%rbp)
	jmp uuid_000000000007a76e
uuid_000000000007a76c:
uuid_000000000007a76e:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	movq -160(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -160(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a76f
uuid_000000000007a771:
	mov -168(%rbp), %RAX
	mov %rbp, %rsp
	sub $152, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a77d
	jmp uuid_000000000007a77f
uuid_000000000007a77d:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a77a
	jmp uuid_000000000007a77c
uuid_000000000007a77a:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a777
	jmp uuid_000000000007a779
uuid_000000000007a777:
	movb $1, -288(%rbp)
uuid_000000000007a779:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a77c:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a77f:
	mov -296(%RBP),%RSP
	add $-392, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7a8
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a798
	jmp uuid_000000000007a79a
uuid_000000000007a798:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a786
	jmp uuid_000000000007a788
uuid_000000000007a786:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a783
	jmp uuid_000000000007a785
uuid_000000000007a783:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007a780
	jmp uuid_000000000007a782
uuid_000000000007a780:
	movb $1, -560(%rbp)
uuid_000000000007a782:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a785:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a788:
	mov -568(%RBP),%RSP
	add $-648, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a795
	jmp uuid_000000000007a797
uuid_000000000007a795:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a78f
	jmp uuid_000000000007a791
uuid_000000000007a78f:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a78c
	jmp uuid_000000000007a78e
uuid_000000000007a78c:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007a789
	jmp uuid_000000000007a78b
uuid_000000000007a789:
	movb $1, -704(%rbp)
uuid_000000000007a78b:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a78e:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a791:
	mov -712(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a792
	jmp uuid_000000000007a794
uuid_000000000007a792:
	movb $1, -496(%rbp)
uuid_000000000007a794:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a797:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a79a:
	mov -504(%RBP),%RSP
	add $-792, %RSP
#call function == : Arrow<Cons<U8,U8>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsU8U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7a5
	push %RBP
	jmp uuid_000000000007a7a2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000075e74
	pushq $uuid_000000000007a7a1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a7a4
uuid_000000000007a7a2:
uuid_000000000007a7a4:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007a7a7
uuid_000000000007a7a5:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a79e
	jmp uuid_000000000007a7a0
uuid_000000000007a79e:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a79b
	jmp uuid_000000000007a79d
uuid_000000000007a79b:
	movq $1, -96(%rbp)
uuid_000000000007a79d:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007a7a0:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007a7a7:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007a7aa
uuid_000000000007a7a8:
	movq $1, -96(%rbp)
uuid_000000000007a7aa:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
.data
uuid_0000000000075e74:
	.ascii "Pattern Match Failure"
	.zero 1
uuid_0000000000075e75:
	.ascii "File: LIB/default-stdlib.lm Line: 74 Column: 5"
	.zero 1
uuid_0000000000075ed6:
	.ascii "File: LIB/default-stdlib.lm Line: 90 Column: 5"
	.zero 1
uuid_0000000000075ee6:
	.ascii "()"
	.zero 1
uuid_0000000000075ef6:
	.ascii "("
	.zero 1
uuid_0000000000075ef7:
	.ascii " "
	.zero 1
uuid_0000000000075ef8:
	.ascii ")"
	.zero 1
uuid_0000000000075eff:
	.ascii "["
	.zero 1
uuid_0000000000075f00:
	.ascii "]"
	.zero 1
uuid_0000000000075f01:
	.ascii "File: LIB/default-stdlib.lm Line: 112 Column: 5"
	.zero 1
uuid_0000000000075f0e:
	.ascii " at "
	.zero 1
uuid_0000000000075f1e:
	.ascii "Unable to open file: "
	.zero 1
uuid_0000000000075f1f:
	.ascii "\n"
	.zero 1
uuid_0000000000075f23:
	.ascii "File Read Error ["
	.zero 1
uuid_0000000000075f24:
	.ascii "]: "
	.zero 1
uuid_0000000000075f46:
	.ascii "File: LIB/default-stdlib.lm Line: 410 Column: 5"
	.zero 1
uuid_0000000000075f56:
	.ascii "0"
	.zero 1
uuid_0000000000075f5a:
	.ascii "-"
	.zero 1
uuid_0000000000075f6a:
	.ascii "File: LIB/default-stdlib.lm Line: 519 Column: 8"
	.zero 1
uuid_0000000000075f8f:
	.ascii "1"
	.zero 1
uuid_0000000000075f90:
	.ascii "2"
	.zero 1
uuid_0000000000075f91:
	.ascii "3"
	.zero 1
uuid_0000000000075f92:
	.ascii "4"
	.zero 1
uuid_0000000000075f93:
	.ascii "5"
	.zero 1
uuid_0000000000075f94:
	.ascii "6"
	.zero 1
uuid_0000000000075f95:
	.ascii "7"
	.zero 1
uuid_0000000000075f96:
	.ascii "8"
	.zero 1
uuid_0000000000075f97:
	.ascii "9"
	.zero 1
uuid_0000000000075f98:
	.ascii "a"
	.zero 1
uuid_0000000000075f99:
	.ascii "b"
	.zero 1
uuid_0000000000075f9a:
	.ascii "c"
	.zero 1
uuid_0000000000075f9b:
	.ascii "d"
	.zero 1
uuid_0000000000075f9c:
	.ascii "e"
	.zero 1
uuid_0000000000075f9d:
	.ascii "f"
	.zero 1
uuid_0000000000075f9e:
	.ascii "File: LIB/default-stdlib.lm Line: 552 Column: 8"
	.zero 1
uuid_0000000000075fd2:
	.ascii ""
	.zero 1
malloc_SB_block_SB_head_CL_U64:
.zero 8
malloc_SB_block_SB_tail_CL_U64:
.zero 8
malloc_SB_first_SB_free_CL_U64:
.zero 8
malloc_SB_page_SB_tail_CL_U64:
.zero 8
malloc_SB_large_SB_size_CL_U64:
.zero 8
point_SB_of_SB_interest_CL_U64:
.zero 8
rc_SB_magic_SB_number_CL_U64:
.zero 8
assemble_SB_text_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_init_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_data_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_profile_SB_onexit_CL_SSCaseNumber3:
.zero 24
assemble_SB_final_CL_String:
.zero 8
assemble_SB_argv_SB_referenced_CL_U8:
.zero 8
main_SB_with_SB_argv_CL_U8:
.zero 8
main_SB_with_CL_U8:
.zero 8
config_SB_profile_SB_invocations_CL_U8:
.zero 8
config_SB_strict_CL_U8:
.zero 8
config_SB_preprocess_CL_U8:
.zero 8
config_SB_target_CL_String:
.zero 8
uuid_0000000000076048:
	.ascii "tmp.s"
	.zero 1
config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1:
.zero 8
config_SB_mode_CL_CompileModeCompileModeCaseNumber0:
.zero 8
preprocess_SB_macros_CL_MacroListMacroListCaseNumber1:
.zero 168
ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1:
.zero 72
ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10:
.zero 72
global_SB_type_SB_context_CL_TContextTContextCaseNumber2:
.zero 120
global_SB_ctx_CL_FContextFContextCaseNumber1:
.zero 200
parse_SB_suffixes_CL_SfxListSfxListCaseNumber1:
.zero 48
stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1:
.zero 200
uuid_000000000007604d:
	.ascii "_EX_"
	.zero 1
uuid_000000000007604e:
	.ascii "_DL_"
	.zero 1
uuid_000000000007604f:
	.ascii "_MD_"
	.zero 1
uuid_0000000000076050:
	.ascii "_AM_"
	.zero 1
uuid_0000000000076051:
	.ascii "_ML_"
	.zero 1
uuid_0000000000076052:
	.ascii "_AD_"
	.zero 1
uuid_0000000000076053:
	.ascii "_SB_"
	.zero 1
uuid_0000000000076054:
	.ascii "_DT_"
	.zero 1
uuid_0000000000076055:
	.ascii "_DV_"
	.zero 1
uuid_0000000000076056:
	.ascii "_CL_"
	.zero 1
uuid_0000000000076057:
	.ascii "_SC_"
	.zero 1
uuid_0000000000076058:
	.ascii "_LT_"
	.zero 1
uuid_0000000000076059:
	.ascii "_EQ_"
	.zero 1
uuid_000000000007605a:
	.ascii "_GT_"
	.zero 1
uuid_000000000007605b:
	.ascii "_QM_"
	.zero 1
uuid_000000000007605c:
	.ascii "_AT_"
	.zero 1
uuid_000000000007605d:
	.ascii "_LB_"
	.zero 1
uuid_000000000007605e:
	.ascii "_RB_"
	.zero 1
uuid_000000000007605f:
	.ascii "_HT_"
	.zero 1
uuid_0000000000076060:
	.ascii "_US_"
	.zero 1
uuid_0000000000076061:
	.ascii "_TK_"
	.zero 1
uuid_0000000000076062:
	.ascii "_BR_"
	.zero 1
uuid_0000000000076063:
	.ascii "_TL_"
	.zero 1
uuid_0000000000076064:
	.ascii "File: SRC/mangle-identifier.lm Line: 10 Column: 8"
	.zero 1
uuid_00000000000760b0:
	.ascii "?"
	.zero 1
uuid_00000000000760c9:
	.ascii "File: SRC/mangle-identifier.lm Line: 55 Column: 32"
	.zero 1
uuid_00000000000760d9:
	.ascii "File: SRC/mangle-identifier.lm Line: 49 Column: 5"
	.zero 1
uuid_00000000000760e6:
	.ascii "\\"
	.zero 1
uuid_00000000000760e7:
	.ascii "Illegal Character: "
	.zero 1
uuid_00000000000760e8:
	.ascii "Illegal Escape Sequence In String "
	.zero 1
uuid_00000000000760e9:
	.ascii "File: SRC/escape-string.lm Line: 12 Column: 11"
	.zero 1
uuid_000000000007610e:
	.ascii "\\\\\""
	.zero 1
uuid_000000000007610f:
	.ascii ";"
	.zero 1
uuid_0000000000076110:
	.ascii "\\\\\\\\"
	.zero 1
uuid_0000000000076111:
	.ascii "'"
	.zero 1
uuid_0000000000076112:
	.ascii "λ"
	.zero 1
uuid_0000000000076113:
	.ascii "\\\\n"
	.zero 1
uuid_0000000000076114:
	.ascii "#"
	.zero 1
uuid_0000000000076115:
	.ascii "	"
	.zero 1
uuid_0000000000076116:
	.ascii "File: SRC/escape-string.lm Line: 50 Column: 14"
	.zero 1
uuid_0000000000076138:
	.ascii "\\\\"
	.zero 1
uuid_000000000007613c:
	.ascii "\\n"
	.zero 1
uuid_000000000007613d:
	.ascii "File: SRC/escape-string.lm Line: 45 Column: 8"
	.zero 1
uuid_000000000007615c:
	.ascii "File: SRC/escape-string.lm Line: 85 Column: 5"
	.zero 1
uuid_0000000000076175:
	.ascii "as"
	.zero 1
uuid_0000000000076188:
	.ascii "In Coercion\n"
	.zero 1
uuid_0000000000076189:
	.ascii ":\n"
	.zero 1
uuid_000000000007618a:
	.ascii "As: "
	.zero 1
uuid_0000000000076194:
	.ascii "In Function Application\n"
	.zero 1
uuid_0000000000076195:
	.ascii "Return:\n"
	.zero 1
uuid_0000000000076196:
	.ascii "File: SRC/error-formatting.lm Line: 12 Column: 5"
	.zero 1
uuid_00000000000761a0:
	.ascii "."
	.zero 1
uuid_00000000000761aa:
	.ascii "File: SRC/is-variable.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007623e:
	.ascii "@"
	.zero 1
uuid_0000000000076242:
	.ascii "Used"
	.zero 1
uuid_0000000000076243:
	.ascii "Unused"
	.zero 1
uuid_0000000000076244:
	.ascii "Return"
	.zero 1
uuid_0000000000076245:
	.ascii "Tail"
	.zero 1
uuid_0000000000076246:
	.ascii "Call"
	.zero 1
uuid_0000000000076247:
	.ascii "File: SRC/to-string.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007626b:
	.ascii ","
	.zero 1
uuid_000000000007626c:
	.ascii "File: SRC/to-string.lm Line: 27 Column: 5"
	.zero 1
uuid_0000000000076285:
	.ascii "+"
	.zero 1
uuid_0000000000076298:
	.ascii "..."
	.zero 1
uuid_00000000000762ab:
	.ascii "<"
	.zero 1
uuid_00000000000762ac:
	.ascii ">"
	.zero 1
uuid_00000000000762ad:
	.ascii "File: SRC/to-string.lm Line: 46 Column: 5"
	.zero 1
uuid_0000000000076320:
	.ascii "File: SRC/is-equal.lm Line: 4 Column: 5"
	.zero 1
type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0:
.zero 128
uuid_000000000007633c:
	.ascii "Nil"
	.zero 1
uuid_0000000000076358:
	.ascii "GlobalVariable"
	.zero 1
uuid_0000000000076359:
	.ascii "mov"
	.zero 1
uuid_000000000007635a:
	.ascii "Cons"
	.zero 1
uuid_0000000000076379:
	.ascii ":"
	.zero 1
uuid_00000000000763a4:
	.ascii "File: SRC/infer-expr.lm Line: 28 Column: 11"
	.zero 1
uuid_00000000000763d5:
	.ascii "File: SRC/infer-expr.lm Line: 57 Column: 14"
	.zero 1
uuid_00000000000763e5:
	.ascii "gensym-label"
	.zero 1
uuid_00000000000763f8:
	.ascii "Label"
	.zero 1
uuid_0000000000076402:
	.ascii "label"
	.zero 1
uuid_0000000000076415:
	.ascii "if"
	.zero 1
uuid_0000000000076467:
	.ascii "Reg8"
	.zero 1
uuid_000000000007646b:
	.ascii "Reg16"
	.zero 1
uuid_000000000007646f:
	.ascii "Reg32"
	.zero 1
uuid_0000000000076473:
	.ascii "Reg64"
	.zero 1
uuid_0000000000076477:
	.ascii "File: SRC/infer-expr.lm Line: 89 Column: 11"
	.zero 1
uuid_0000000000076481:
	.ascii "AsOnly"
	.zero 1
uuid_0000000000076491:
	.ascii "sizeof"
	.zero 1
uuid_00000000000764a4:
	.ascii "U64"
	.zero 1
uuid_00000000000764ae:
	.ascii "File: SRC/infer-expr.lm Line: 117 Column: 11"
	.zero 1
uuid_00000000000764b2:
	.ascii "scope"
	.zero 1
uuid_00000000000764c5:
	.ascii "open"
	.zero 1
uuid_00000000000764d8:
	.ascii "Array"
	.zero 1
uuid_000000000007650f:
	.ascii "push-deref"
	.zero 1
uuid_0000000000076510:
	.ascii "StackVariable"
	.zero 1
uuid_0000000000076511:
	.ascii "File: SRC/infer-expr.lm Line: 129 Column: 11"
	.zero 1
uuid_0000000000076539:
	.ascii "Variable Name Is Already Bound In Outer Scope"
	.zero 1
uuid_0000000000076540:
	.ascii "Unable to infer type of expression"
	.zero 1
uuid_0000000000076559:
	.ascii "File: SRC/infer-expr.lm Line: 153 Column: 11"
	.zero 1
uuid_000000000007655d:
	.ascii "del"
	.zero 1
uuid_0000000000076573:
	.ascii "Rc"
	.zero 1
uuid_0000000000076574:
	.ascii "inc"
	.zero 1
uuid_0000000000076575:
	.ascii "Tuple"
	.zero 1
uuid_0000000000076582:
	.ascii "Constructor"
	.zero 1
uuid_0000000000076583:
	.ascii "CaseNumber"
	.zero 1
uuid_0000000000076584:
	.ascii "Sized"
	.zero 1
uuid_0000000000076585:
	.ascii "FieldsSized"
	.zero 1
uuid_0000000000076586:
	.ascii "push"
	.zero 1
uuid_0000000000076587:
	.ascii "File: SRC/infer-expr.lm Line: 193 Column: 14"
	.zero 1
uuid_00000000000765be:
	.ascii "File: SRC/infer-expr.lm Line: 211 Column: 14"
	.zero 1
uuid_00000000000765c5:
	.ascii "Arrow"
	.zero 1
uuid_00000000000765c6:
	.ascii "cdecl::return"
	.zero 1
uuid_00000000000765ee:
	.ascii "Unknown Term In Type Inference\n"
	.zero 1
uuid_00000000000765ef:
	.ascii "File: SRC/infer-expr.lm Line: 8 Column: 5"
	.zero 1
alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1:
.zero 72
uuid_0000000000076689:
	.ascii "File: SRC/alias.lm Line: 11 Column: 8"
	.zero 1
uuid_000000000007668d:
	.ascii "File: SRC/alias.lm Line: 10 Column: 5"
	.zero 1
uuid_00000000000766c1:
	.ascii "File: SRC/alias.lm Line: 29 Column: 8"
	.zero 1
uuid_00000000000766c5:
	.ascii "File: SRC/alias.lm Line: 28 Column: 5"
	.zero 1
class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0:
.zero 80
is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
uuid_0000000000076718:
	.ascii "Hook"
	.zero 1
uuid_0000000000076719:
	.ascii "Duplicate Global Symbol "
	.zero 1
uuid_000000000007671a:
	.ascii " : "
	.zero 1
class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0:
.zero 48
tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
unknown_SB_index_SB_of_SB_tag_CL_U64:
.zero 8
class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
uuid_000000000007675b:
	.ascii "Unexpected Class In index-class-of-tag: "
	.zero 1
uuid_000000000007675c:
	.ascii "File: SRC/class-of-tag.lm Line: 6 Column: 5"
	.zero 1
class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_000000000007679b:
	.ascii "Tag"
	.zero 1
uuid_00000000000767b7:
	.ascii "File: SRC/fields-of-tag.lm Line: 17 Column: 64"
	.zero 1
uuid_00000000000767be:
	.ascii "Invalid Tag In fields-of-tag "
	.zero 1
uuid_00000000000767bf:
	.ascii "File: SRC/fields-of-tag.lm Line: 15 Column: 5"
	.zero 1
uuid_00000000000767c6:
	.ascii "Fields"
	.zero 1
type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_00000000000767de:
	.ascii "ERROR: set-type-fields\n"
	.zero 1
uuid_00000000000767df:
	.ascii "File: SRC/type-complex-fields.lm Line: 6 Column: 5"
	.zero 1
uuid_0000000000076807:
	.ascii "File: SRC/get-vararg-inner.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076835:
	.ascii "File: SRC/is-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076857:
	.ascii "File: SRC/is-constructor.lm Line: 17 Column: 5"
	.zero 1
uuid_0000000000076873:
	.ascii "File: SRC/is-constructor.lm Line: 28 Column: 5"
	.zero 1
uuid_00000000000768da:
	.ascii "Field"
	.zero 1
uuid_00000000000768f9:
	.ascii "File: SRC/is-open.lm Line: 16 Column: 11"
	.zero 1
uuid_0000000000076900:
	.ascii "File: SRC/is-open.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076937:
	.ascii "File: SRC/is-parameterized.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076965:
	.ascii "File: SRC/is-sized.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076981:
	.ascii "Constant"
	.zero 1
uuid_00000000000769b8:
	.ascii "File: SRC/has-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000769d1:
	.ascii "File: SRC/guess-representation.lm Line: 5 Column: 8"
	.zero 1
uuid_00000000000769e7:
	.ascii "LocalVariable"
	.zero 1
uuid_0000000000076a06:
	.ascii "File: SRC/deep-hash.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076a1e:
	.ascii "File: SRC/deep-hash.lm Line: 26 Column: 5"
	.zero 1
uuid_0000000000076a25:
	.ascii " != "
	.zero 1
uuid_0000000000076a26:
	.ascii "Type Ascription Inequality"
	.zero 1
uuid_0000000000076a3f:
	.ascii "File: SRC/typeof.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076a4f:
	.ascii "Var"
	.zero 1
uuid_0000000000076a59:
	.ascii "Lit"
	.zero 1
uuid_0000000000076aa5:
	.ascii "App"
	.zero 1
uuid_0000000000076ab2:
	.ascii "Abs"
	.zero 1
uuid_0000000000076ab3:
	.ascii "File: SRC/to-s.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076ade:
	.ascii "File: SRC/p.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000076af7:
	.ascii "File: SRC/and.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076b10:
	.ascii "File: SRC/union.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076b29:
	.ascii "File: SRC/union.lm Line: 21 Column: 8"
	.zero 1
uuid_0000000000076b42:
	.ascii "program"
	.zero 1
uuid_0000000000076b43:
	.ascii "File: SRC/union.lm Line: 36 Column: 28"
	.zero 1
uuid_0000000000076b56:
	.ascii "File: SRC/tag-of.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076b8c:
	.ascii "File: SRC/can-unify.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000076ba8:
	.ascii "Meta"
	.zero 1
uuid_0000000000076d1a:
	.ascii "GT"
	.zero 1
uuid_0000000000076d51:
	.ascii "File: SRC/can-unify.lm Line: 21 Column: 5"
	.zero 1
uuid_0000000000076df4:
	.ascii "File: SRC/unify.lm Line: 37 Column: 11"
	.zero 1
uuid_0000000000076e34:
	.ascii "File: SRC/unify.lm Line: 47 Column: 11"
	.zero 1
uuid_0000000000076f94:
	.ascii "File: SRC/unify.lm Line: 12 Column: 5"
	.zero 1
uuid_0000000000076feb:
	.ascii "File: SRC/unify.lm Line: 130 Column: 5"
	.zero 1
uuid_0000000000077018:
	.ascii "File: SRC/fields-of-type.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000770cd:
	.ascii "File: SRC/sizeof-type.lm Line: 25 Column: 11"
	.zero 1
uuid_00000000000770e0:
	.ascii "Unexpected Type sizeof-type "
	.zero 1
uuid_00000000000770e1:
	.ascii "File: SRC/sizeof-type.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077115:
	.ascii "File: SRC/has-infinite.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007716d:
	.ascii "File: SRC/has-infinite.lm Line: 26 Column: 5"
	.zero 1
uuid_000000000007718e:
	.ascii "File: SRC/has-forward.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000771df:
	.ascii "File: SRC/has-forward.lm Line: 19 Column: 5"
	.zero 1
uuid_00000000000771f2:
	.ascii "AL"
	.zero 1
uuid_00000000000771f3:
	.ascii "BL"
	.zero 1
uuid_00000000000771f4:
	.ascii "CL"
	.zero 1
uuid_00000000000771f5:
	.ascii "DL"
	.zero 1
uuid_00000000000771f6:
	.ascii "SIL"
	.zero 1
uuid_00000000000771f7:
	.ascii "DIL"
	.zero 1
uuid_00000000000771f8:
	.ascii "BPL"
	.zero 1
uuid_00000000000771f9:
	.ascii "SPL"
	.zero 1
uuid_00000000000771fa:
	.ascii "R8B"
	.zero 1
uuid_00000000000771fb:
	.ascii "R9B"
	.zero 1
uuid_00000000000771fc:
	.ascii "R10B"
	.zero 1
uuid_00000000000771fd:
	.ascii "R11B"
	.zero 1
uuid_00000000000771fe:
	.ascii "R12B"
	.zero 1
uuid_00000000000771ff:
	.ascii "R13B"
	.zero 1
uuid_0000000000077200:
	.ascii "R14B"
	.zero 1
uuid_0000000000077201:
	.ascii "R15B"
	.zero 1
uuid_0000000000077202:
	.ascii "File: SRC/is-reg8.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077248:
	.ascii "File: SRC/is-reg8.lm Line: 29 Column: 5"
	.zero 1
uuid_0000000000077252:
	.ascii "AX"
	.zero 1
uuid_0000000000077253:
	.ascii "BX"
	.zero 1
uuid_0000000000077254:
	.ascii "CX"
	.zero 1
uuid_0000000000077255:
	.ascii "DX"
	.zero 1
uuid_0000000000077256:
	.ascii "SI"
	.zero 1
uuid_0000000000077257:
	.ascii "DI"
	.zero 1
uuid_0000000000077258:
	.ascii "BP"
	.zero 1
uuid_0000000000077259:
	.ascii "SP"
	.zero 1
uuid_000000000007725a:
	.ascii "R8W"
	.zero 1
uuid_000000000007725b:
	.ascii "R9W"
	.zero 1
uuid_000000000007725c:
	.ascii "R10W"
	.zero 1
uuid_000000000007725d:
	.ascii "R11W"
	.zero 1
uuid_000000000007725e:
	.ascii "R12W"
	.zero 1
uuid_000000000007725f:
	.ascii "R13W"
	.zero 1
uuid_0000000000077260:
	.ascii "R14W"
	.zero 1
uuid_0000000000077261:
	.ascii "R15W"
	.zero 1
uuid_0000000000077262:
	.ascii "File: SRC/is-reg16.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000772a8:
	.ascii "File: SRC/is-reg16.lm Line: 29 Column: 5"
	.zero 1
uuid_00000000000772b2:
	.ascii "EAX"
	.zero 1
uuid_00000000000772b3:
	.ascii "EBX"
	.zero 1
uuid_00000000000772b4:
	.ascii "ECX"
	.zero 1
uuid_00000000000772b5:
	.ascii "EDX"
	.zero 1
uuid_00000000000772b6:
	.ascii "ESI"
	.zero 1
uuid_00000000000772b7:
	.ascii "EDI"
	.zero 1
uuid_00000000000772b8:
	.ascii "EBP"
	.zero 1
uuid_00000000000772b9:
	.ascii "ESP"
	.zero 1
uuid_00000000000772ba:
	.ascii "R8D"
	.zero 1
uuid_00000000000772bb:
	.ascii "R9D"
	.zero 1
uuid_00000000000772bc:
	.ascii "R10D"
	.zero 1
uuid_00000000000772bd:
	.ascii "R11D"
	.zero 1
uuid_00000000000772be:
	.ascii "R12D"
	.zero 1
uuid_00000000000772bf:
	.ascii "R13D"
	.zero 1
uuid_00000000000772c0:
	.ascii "R14D"
	.zero 1
uuid_00000000000772c1:
	.ascii "R15D"
	.zero 1
uuid_00000000000772c2:
	.ascii "File: SRC/is-reg32.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077308:
	.ascii "File: SRC/is-reg32.lm Line: 29 Column: 5"
	.zero 1
uuid_0000000000077312:
	.ascii "RAX"
	.zero 1
uuid_0000000000077313:
	.ascii "RBX"
	.zero 1
uuid_0000000000077314:
	.ascii "RCX"
	.zero 1
uuid_0000000000077315:
	.ascii "RDX"
	.zero 1
uuid_0000000000077316:
	.ascii "RSI"
	.zero 1
uuid_0000000000077317:
	.ascii "RDI"
	.zero 1
uuid_0000000000077318:
	.ascii "RBP"
	.zero 1
uuid_0000000000077319:
	.ascii "RSP"
	.zero 1
uuid_000000000007731a:
	.ascii "R8"
	.zero 1
uuid_000000000007731b:
	.ascii "R9"
	.zero 1
uuid_000000000007731c:
	.ascii "R10"
	.zero 1
uuid_000000000007731d:
	.ascii "R11"
	.zero 1
uuid_000000000007731e:
	.ascii "R12"
	.zero 1
uuid_000000000007731f:
	.ascii "R13"
	.zero 1
uuid_0000000000077320:
	.ascii "R14"
	.zero 1
uuid_0000000000077321:
	.ascii "R15"
	.zero 1
uuid_0000000000077322:
	.ascii "File: SRC/is-reg64.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077368:
	.ascii "File: SRC/is-reg64.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007737e:
	.ascii "File: SRC/with-tag.lm Line: 5 Column: 8"
	.zero 1
uuid_00000000000773a6:
	.ascii "File: SRC/with-size.lm Line: 8 Column: 5"
	.zero 1
uuid_00000000000773b8:
	.ascii "File: SRC/with-size.lm Line: 19 Column: 5"
	.zero 1
uuid_00000000000773fe:
	.ascii "File: SRC/with-size.lm Line: 30 Column: 5"
	.zero 1
uuid_0000000000077423:
	.ascii "File: SRC/with-fields.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007744e:
	.ascii "File: SRC/without-tag.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007747c:
	.ascii "File: SRC/without-tag.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007749a:
	.ascii "File: SRC/without-tag.lm Line: 27 Column: 5"
	.zero 1
uuid_00000000000774c2:
	.ascii "File: SRC/without-constructor.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000774da:
	.ascii "File: SRC/without-representation.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000774fc:
	.ascii "Literal"
	.zero 1
uuid_0000000000077554:
	.ascii "File: SRC/without-representation.lm Line: 17 Column: 5"
	.zero 1
uuid_0000000000077587:
	.ascii "File: SRC/without-size-unless-class.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000775af:
	.ascii "File: SRC/without-size-unless-class.lm Line: 17 Column: 5"
	.zero 1
uuid_00000000000775ef:
	.ascii "File: SRC/without-size-unless-class.lm Line: 46 Column: 5"
	.zero 1
uuid_000000000007760d:
	.ascii "File: SRC/without-size.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000077647:
	.ascii "File: SRC/without-size.lm Line: 17 Column: 5"
	.zero 1
uuid_0000000000077672:
	.ascii "File: SRC/with-only-tag.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007769a:
	.ascii "File: SRC/with-only-class.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000776af:
	.ascii "File: SRC/with-only-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077728:
	.ascii "File: SRC/with-only-representation.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007775f:
	.ascii "File: SRC/normalize.lm Line: 12 Column: 5"
	.zero 1
uuid_0000000000077799:
	.ascii "Malformed Type Definition"
	.zero 1
uuid_000000000007779a:
	.ascii "File: SRC/type-of-s.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000777c2:
	.ascii "Mark Field "
	.zero 1
uuid_00000000000777c3:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 8 Column: 11"
	.zero 1
uuid_00000000000777e5:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 25 Column: 11"
	.zero 1
uuid_0000000000077807:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007785f:
	.ascii "Unknown LHS"
	.zero 1
uuid_0000000000077860:
	.ascii "File: SRC/typeof-lhs.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077890:
	.ascii "File: SRC/cons-head.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000778b2:
	.ascii "File: SRC/cons-tail.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000778c2:
	.ascii "File: SRC/parameter-number.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000778df:
	.ascii "File: SRC/parameter-number.lm Line: 16 Column: 5"
	.zero 1
uuid_00000000000778e9:
	.ascii "Function Application Yielded No Matches\n"
	.zero 1
uuid_00000000000778ea:
	.ascii "\nWith Argument : "
	.zero 1
uuid_00000000000778eb:
	.ascii "Options: "
	.zero 1
uuid_00000000000778ef:
	.ascii "Function Application Yielded An Irreducible Plurality Of Matches\n"
	.zero 1
uuid_00000000000778f0:
	.ascii "With Argument "
	.zero 1
uuid_00000000000778f1:
	.ascii "Matched "
	.zero 1
uuid_00000000000778fb:
	.ascii "File: SRC/apply.lm Line: 31 Column: 11"
	.zero 1
uuid_0000000000077929:
	.ascii "Application Did Not Close Before Specialization:\n"
	.zero 1
uuid_000000000007792a:
	.ascii "Function "
	.zero 1
uuid_000000000007792b:
	.ascii "Argument "
	.zero 1
uuid_0000000000077932:
	.ascii "Function Not Simple Arrow: "
	.zero 1
uuid_0000000000077933:
	.ascii "File: SRC/apply.lm Line: 43 Column: 8"
	.zero 1
uuid_000000000007793a:
	.ascii "File: SRC/apply.lm Line: 42 Column: 5"
	.zero 1
uuid_0000000000077968:
	.ascii "File: SRC/apply.lm Line: 81 Column: 33"
	.zero 1
uuid_00000000000779a2:
	.ascii "File: SRC/apply.lm Line: 72 Column: 5"
	.zero 1
uuid_00000000000779ea:
	.ascii "File: SRC/apply-plural.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077a04:
	.ascii "File: SRC/reduce-plural.lm Line: 5 Column: 41"
	.zero 1
uuid_0000000000077a26:
	.ascii "File: SRC/reduce-plural.lm Line: 19 Column: 11"
	.zero 1
uuid_0000000000077a30:
	.ascii "File: SRC/reduce-plural.lm Line: 15 Column: 27"
	.zero 1
uuid_0000000000077a4f:
	.ascii "File: SRC/reduce-plural.lm Line: 37 Column: 11"
	.zero 1
uuid_0000000000077a59:
	.ascii "File: SRC/reduce-plural.lm Line: 33 Column: 27"
	.zero 1
uuid_0000000000077a75:
	.ascii "Blob"
	.zero 1
uuid_0000000000077a92:
	.ascii "File: SRC/try-specialize.lm Line: 17 Column: 20"
	.zero 1
uuid_0000000000077aa2:
	.ascii "File: SRC/try-specialize.lm Line: 5 Column: 35"
	.zero 1
uuid_0000000000077adc:
	.ascii "File: SRC/unify-hint.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000077af1:
	.ascii "File: SRC/unify-hint.lm Line: 24 Column: 5"
	.zero 1
uuid_0000000000077afb:
	.ascii "|"
	.zero 1
uuid_0000000000077b32:
	.ascii "File: SRC/infer-type-definition.lm Line: 18 Column: 14"
	.zero 1
uuid_0000000000077b45:
	.ascii "File: SRC/infer-type-definition.lm Line: 25 Column: 17"
	.zero 1
uuid_0000000000077b4f:
	.ascii "File: SRC/infer-type-definition.lm Line: 7 Column: 5"
	.zero 1
uuid_0000000000077b61:
	.ascii "File: SRC/arity.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077b71:
	.ascii "File: SRC/arity.lm Line: 16 Column: 5"
	.zero 1
uuid_0000000000077b93:
	.ascii "File: SRC/cons-arity.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077bbb:
	.ascii "File: SRC/implicit-tail.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000077bc2:
	.ascii "Unknown Referenced Variable"
	.zero 1
uuid_0000000000077be1:
	.ascii "File: SRC/typeof-var-raw.lm Line: 4 Column: 28"
	.zero 1
types_SB_have_SB_changed_CL_U8:
.zero 8
uuid_0000000000077bf4:
	.ascii "File: SRC/typecheck.lm Line: 7 Column: 25"
	.zero 1
uuid_0000000000077c04:
	.ascii "File: SRC/typecheck.lm Line: 14 Column: 42"
	.zero 1
uuid_0000000000077c2b:
	.ascii "File: SRC/typecheck.lm Line: 22 Column: 43"
	.zero 1
uuid_0000000000077c6e:
	.ascii "File: SRC/substitute.lm Line: 4 Column: 27"
	.zero 1
uuid_0000000000077c89:
	.ascii "File: SRC/substitute.lm Line: 27 Column: 5"
	.zero 1
uuid_0000000000077ca8:
	.ascii "File: SRC/substitute.lm Line: 44 Column: 34"
	.zero 1
uuid_0000000000077cc4:
	.ascii "File: SRC/substitute.lm Line: 41 Column: 5"
	.zero 1
uuid_0000000000077cdc:
	.ascii "File: SRC/substitute.lm Line: 73 Column: 5"
	.zero 1
uuid_0000000000077d25:
	.ascii "File: SRC/substitute.lm Line: 90 Column: 34"
	.zero 1
uuid_0000000000077d47:
	.ascii "File: SRC/substitute.lm Line: 87 Column: 5"
	.zero 1
uuid_0000000000077dcc:
	.ascii "Unexpected Substitute LHS"
	.zero 1
uuid_0000000000077dcd:
	.ascii "File: SRC/substitute.lm Line: 128 Column: 5"
	.zero 1
uuid_0000000000077e1c:
	.ascii "File: SRC/substitute.lm Line: 168 Column: 34"
	.zero 1
uuid_0000000000077e62:
	.ascii "File: SRC/substitute.lm Line: 187 Column: 34"
	.zero 1
uuid_0000000000077eb4:
	.ascii "Unexpected Substitution Term:"
	.zero 1
uuid_0000000000077eb5:
	.ascii "File: SRC/substitute.lm Line: 159 Column: 5"
	.zero 1
uuid_0000000000077ef2:
	.ascii "File: SRC/substitute.lm Line: 247 Column: 34"
	.zero 1
uuid_0000000000077f02:
	.ascii "File: SRC/substitute.lm Line: 243 Column: 5"
	.zero 1
uuid_0000000000077f30:
	.ascii "File: SRC/specialize.lm Line: 14 Column: 20"
	.zero 1
uuid_0000000000077f3d:
	.ascii "File: SRC/specialize.lm Line: 7 Column: 38"
	.zero 1
uuid_0000000000077f5c:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000077f8d:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 16 Column: 5"
	.zero 1
uuid_0000000000077fb5:
	.ascii "Size Of Type Cannot Be Determined Due To Forward Reference: "
	.zero 1
uuid_0000000000077fb9:
	.ascii "Size Of Type Is Infinite: "
	.zero 1
uuid_0000000000077fbd:
	.ascii "File: SRC/infer-type-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000077fe2:
	.ascii "File: SRC/infer-global-context.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007802e:
	.ascii "Hooks Must Not Return Values."
	.zero 1
uuid_0000000000078071:
	.ascii "Global Bindings Must Be Ascripted"
	.zero 1
uuid_0000000000078072:
	.ascii "File: SRC/infer-global-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007808b:
	.ascii "File: SRC/assert-well-typed.lm Line: 3 Column: 26"
	.zero 1
uuid_0000000000078158:
	.ascii "set"
	.zero 1
uuid_00000000000781d4:
	.ascii "Unknown Term In Assert Well Typed "
	.zero 1
uuid_00000000000781d5:
	.ascii "File: SRC/assert-well-typed.lm Line: 10 Column: 5"
	.zero 1
uuid_0000000000078275:
	.ascii "Invalid LHS"
	.zero 1
uuid_0000000000078276:
	.ascii "File: SRC/infer-ctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007828e:
	.ascii "File: SRC/infer-tctx.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000782ad:
	.ascii "File: SRC/infer-tctx.lm Line: 15 Column: 5"
	.zero 1
uuid_00000000000782ba:
	.ascii "	mov $60, %rax\n"
	.zero 1
uuid_00000000000782bb:
	.ascii "	mov $0, %rdi\n"
	.zero 1
uuid_00000000000782bc:
	.ascii "	syscall\n"
	.zero 1
uuid_00000000000782bd:
	.ascii ".data\n"
	.zero 1
uuid_00000000000782be:
	.ascii ".global _start\n"
	.zero 1
uuid_00000000000782bf:
	.ascii ".text\n"
	.zero 1
uuid_00000000000782c0:
	.ascii "_start:\n"
	.zero 1
uuid_00000000000782c1:
	.ascii "	mov %rsp,%rbp\n"
	.zero 1
uuid_00000000000782c2:
	.ascii "	mov %rbp,%rsp\n"
	.zero 1
uuid_00000000000782c6:
	.ascii "	popq %r8\n"
	.zero 1
uuid_00000000000782c7:
	.ascii "	movq %rsp, %r9\n"
	.zero 1
uuid_00000000000782cb:
	.ascii "	push %rbp\n"
	.zero 1
uuid_00000000000782cc:
	.ascii "	mov %rsp, %rbp\n"
	.zero 1
uuid_00000000000782cd:
	.ascii "	pushq %r8\n"
	.zero 1
uuid_00000000000782ce:
	.ascii "	pushq %r9\n"
	.zero 1
uuid_00000000000782d2:
	.ascii "	call main\n"
	.zero 1
uuid_00000000000782d3:
	.ascii "	mov %rbp, %rsp\n"
	.zero 1
uuid_00000000000782d4:
	.ascii "	pop %rbp\n"
	.zero 1
uuid_00000000000782d8:
	.ascii "File: SRC/compile.lm Line: 2 Column: 20"
	.zero 1
uuid_000000000007831b:
	.ascii "fragment-type"
	.zero 1
uuid_000000000007831c:
	.ascii "Function"
	.zero 1
uuid_000000000007831d:
	.ascii "File: SRC/compile-blob.lm Line: 10 Column: 11"
	.zero 1
uuid_000000000007832d:
	.ascii "File: SRC/compile-blob.lm Line: 4 Column: 39"
	.zero 1
uuid_0000000000078382:
	.ascii "expression"
	.zero 1
uuid_0000000000078383:
	.ascii "File: SRC/compile-blob.lm Line: 31 Column: 39"
	.zero 1
uuid_00000000000783b1:
	.ascii "main"
	.zero 1
uuid_00000000000783b5:
	.ascii "Global"
	.zero 1
uuid_00000000000783b6:
	.ascii "->"
	.zero 1
uuid_00000000000783c0:
	.ascii "File: SRC/compile-gnu.lm Line: 19 Column: 17"
	.zero 1
uuid_00000000000783e8:
	.ascii "File: SRC/compile-gnu.lm Line: 4 Column: 39"
	.zero 1
uuid_0000000000078404:
	.ascii "File: SRC/compile-program-ordered.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078435:
	.ascii "File: SRC/compile-program-ordered.lm Line: 11 Column: 5"
	.zero 1
uuid_0000000000078472:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 15 Column: 14"
	.zero 1
uuid_000000000007847c:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 11 Column: 27"
	.zero 1
uuid_0000000000078483:
	.ascii "Context::lookup "
	.zero 1
uuid_0000000000078484:
	.ascii "\nCandidates:\n"
	.zero 1
uuid_0000000000078497:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 45 Column: 30"
	.zero 1
uuid_000000000007849e:
	.ascii "Context::lookup Could Not Find Symbol"
	.zero 1
uuid_00000000000784ec:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 14 Column: 14"
	.zero 1
uuid_00000000000784f6:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 10 Column: 27"
	.zero 1
uuid_00000000000784fd:
	.ascii "Context::lookups "
	.zero 1
uuid_0000000000078513:
	.ascii "File: SRC/fragment-context::lookup-vararg.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007856b:
	.ascii "File: SRC/with-location.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078596:
	.ascii "File: SRC/with-location.lm Line: 57 Column: 5"
	.zero 1
uuid_00000000000785e2:
	.ascii "File: SRC/without-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007860d:
	.ascii "File: SRC/without-location.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007861d:
	.ascii "File: SRC/with-key.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000078621:
	.ascii "Unknown"
	.zero 1
uuid_0000000000078673:
	.ascii "File: SRC/location-of.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078698:
	.ascii "File: SRC/unique.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000786a8:
	.ascii "File: SRC/print-verbose.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000786bb:
	.ascii "File: SRC/non-zero.lm Line: 4 Column: 5"
	.zero 1
already_SB_tokenized_CL_ListStringListStringCaseNumber1:
.zero 24
uuid_00000000000786d1:
	.ascii "File: SRC/tokenize.lm Line: 5 Column: 5"
	.zero 1
uuid_00000000000786df:
	.ascii "File: SRC/tokenize.lm Line: 25 Column: 8"
	.zero 1
uuid_0000000000078744:
	.ascii "File: SRC/tokenize.lm Line: 35 Column: 8"
	.zero 1
uuid_000000000007876e:
	.ascii "Hanging Parentheses In File: "
	.zero 1
uuid_000000000007876f:
	.ascii " Count: "
	.zero 1
uuid_0000000000078785:
	.ascii "File: SRC/is-nil.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078798:
	.ascii "File: SRC/is-seq.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000787b1:
	.ascii "File: SRC/is-arrow.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000787cd:
	.ascii "File: SRC/is-hook.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000787e9:
	.ascii "File: SRC/is-blob.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078805:
	.ascii "File: SRC/is-cons.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078818:
	.ascii "ImpureCtx"
	.zero 1
uuid_0000000000078822:
	.ascii "File: SRC/is-impure-ctx.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078835:
	.ascii "String"
	.zero 1
uuid_000000000007883f:
	.ascii "File: SRC/is-string.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078852:
	.ascii "OntoStack"
	.zero 1
uuid_000000000007886e:
	.ascii "File: SRC/is-onto-stack.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078881:
	.ascii "ImpureOffset"
	.zero 1
uuid_000000000007889d:
	.ascii "File: SRC/is-impure-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000788b0:
	.ascii "BranchConditional"
	.zero 1
uuid_00000000000788ba:
	.ascii "File: SRC/is-branchconditional.lm Line: 4 Column: 5"
	.zero 1
uuid_00000000000788cd:
	.ascii "File: SRC/plus.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000788e3:
	.ascii "File: SRC/print.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000788f3:
	.ascii " = "
	.zero 1
uuid_00000000000788f4:
	.ascii ";\n"
	.zero 1
uuid_00000000000788f5:
	.ascii "File: SRC/print.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007890e:
	.ascii "File: SRC/print.lm Line: 25 Column: 5"
	.zero 1
uuid_0000000000078918:
	.ascii "EOF"
	.zero 1
uuid_0000000000078940:
	.ascii "type "
	.zero 1
uuid_000000000007894a:
	.ascii " := "
	.zero 1
uuid_0000000000078969:
	.ascii "File: SRC/print.lm Line: 40 Column: 5"
	.zero 1
uuid_000000000007898b:
	.ascii "Fragment Context:\n"
	.zero 1
uuid_000000000007899b:
	.ascii "File: SRC/print.lm Line: 84 Column: 27"
	.zero 1
uuid_00000000000789b7:
	.ascii "Fragment\n"
	.zero 1
uuid_00000000000789b8:
	.ascii "	Offset = "
	.zero 1
uuid_00000000000789c5:
	.ascii "File: SRC/print.lm Line: 99 Column: 33"
	.zero 1
uuid_00000000000789cc:
	.ascii "File: SRC/print.lm Line: 94 Column: 5"
	.zero 1
uuid_00000000000789d9:
	.ascii "File: SRC/print.lm Line: 111 Column: 5"
	.zero 1
uuid_00000000000789ec:
	.ascii "In File "
	.zero 1
uuid_00000000000789ed:
	.ascii " Line "
	.zero 1
uuid_00000000000789ee:
	.ascii " Column "
	.zero 1
uuid_00000000000789ef:
	.ascii "File: SRC/print.lm Line: 122 Column: 5"
	.zero 1
uuid_0000000000078a0b:
	.ascii " +\n"
	.zero 1
uuid_0000000000078a0c:
	.ascii " + "
	.zero 1
uuid_0000000000078a19:
	.ascii "File: SRC/print.lm Line: 135 Column: 29"
	.zero 1
uuid_0000000000078a3d:
	.ascii "File: SRC/print.lm Line: 159 Column: 35"
	.zero 1
uuid_0000000000078a50:
	.ascii "File: SRC/reverse.lm Line: 4 Column: 26"
	.zero 1
uuid_0000000000078a66:
	.ascii "(Variable "
	.zero 1
uuid_0000000000078a70:
	.ascii "(Literal "
	.zero 1
uuid_0000000000078a80:
	.ascii "(Type ("
	.zero 1
uuid_0000000000078a81:
	.ascii "))"
	.zero 1
uuid_0000000000078a8b:
	.ascii "(Global ("
	.zero 1
uuid_0000000000078a95:
	.ascii "(App ("
	.zero 1
uuid_0000000000078aa2:
	.ascii "(Lambda ("
	.zero 1
uuid_0000000000078ab5:
	.ascii "File: SRC/serialize-ast.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000078aee:
	.ascii "File: SRC/serialize-ast.lm Line: 59 Column: 43"
	.zero 1
uuid_0000000000078af8:
	.ascii "(Variable ?)"
	.zero 1
uuid_0000000000078b08:
	.ascii "(Literal And) "
	.zero 1
uuid_0000000000078b1b:
	.ascii ") "
	.zero 1
uuid_0000000000078b1c:
	.ascii "File: SRC/serialize-ast.lm Line: 72 Column: 37"
	.zero 1
uuid_0000000000078b44:
	.ascii "File: SRC/slot.lm Line: 5 Column: 5"
	.zero 1
uuid_0000000000078b63:
	.ascii "File: SRC/slot.lm Line: 30 Column: 14"
	.zero 1
uuid_0000000000078b79:
	.ascii "File: SRC/slot.lm Line: 26 Column: 5"
	.zero 1
uuid_SB_counter_CL_U64:
.zero 8
uuid_0000000000078b83:
	.ascii "uuid_"
	.zero 1
uuid_0000000000078b96:
	.ascii "File: SRC/var-name-if-var.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078bce:
	.ascii "File: SRC/parse-lambda.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000078bf2:
	.ascii "File: SRC/parse-lambda.lm Line: 16 Column: 38"
	.zero 1
uuid_0000000000078bff:
	.ascii "File: SRC/parse-lambda.lm Line: 14 Column: 5"
	.zero 1
uuid_0000000000078c21:
	.ascii "File: SRC/parse-lambda.lm Line: 33 Column: 14"
	.zero 1
uuid_0000000000078c2e:
	.ascii "Expected Dot For Lambda Body\n"
	.zero 1
uuid_0000000000078c38:
	.ascii "File: SRC/parse-lambda.lm Line: 30 Column: 8"
	.zero 1
uuid_0000000000078c82:
	.ascii "File: SRC/parse-many-expressions.lm Line: 18 Column: 14"
	.zero 1
uuid_0000000000078c86:
	.ascii "File: SRC/parse-many-expressions.lm Line: 6 Column: 8"
	.zero 1
uuid_0000000000078cb5:
	.ascii "File: SRC/parse-one-expression.lm Line: 12 Column: 11"
	.zero 1
uuid_0000000000078cce:
	.ascii "Unexpected Closing Parentheses"
	.zero 1
uuid_0000000000078ced:
	.ascii "File: SRC/parse-one-expression.lm Line: 24 Column: 11"
	.zero 1
uuid_0000000000078d1b:
	.ascii "File: SRC/parse-one-expression.lm Line: 5 Column: 5"
	.zero 1
uuid_0000000000078d45:
	.ascii "macro"
	.zero 1
uuid_0000000000078d76:
	.ascii "File: SRC/parse-toplevel.lm Line: 18 Column: 26"
	.zero 1
uuid_0000000000078d7d:
	.ascii "File: SRC/parse-toplevel.lm Line: 14 Column: 20"
	.zero 1
uuid_0000000000078d81:
	.ascii "File: SRC/parse-toplevel.lm Line: 11 Column: 14"
	.zero 1
uuid_0000000000078d85:
	.ascii "meta"
	.zero 1
uuid_0000000000078da4:
	.ascii "File: SRC/parse-toplevel.lm Line: 36 Column: 14"
	.zero 1
uuid_0000000000078da8:
	.ascii "type"
	.zero 1
uuid_0000000000078dbe:
	.ascii "fragment"
	.zero 1
uuid_0000000000078de6:
	.ascii "File: SRC/parse-toplevel.lm Line: 50 Column: 34"
	.zero 1
uuid_0000000000078dea:
	.ascii "File: SRC/parse-toplevel.lm Line: 48 Column: 14"
	.zero 1
uuid_0000000000078e15:
	.ascii "File: SRC/parse-toplevel.lm Line: 70 Column: 34"
	.zero 1
uuid_0000000000078e19:
	.ascii "File: SRC/parse-toplevel.lm Line: 68 Column: 14"
	.zero 1
uuid_0000000000078e47:
	.ascii "suffix"
	.zero 1
uuid_0000000000078e5d:
	.ascii "atom"
	.zero 1
uuid_0000000000078ea5:
	.ascii "size"
	.zero 1
uuid_0000000000078ed0:
	.ascii "import"
	.zero 1
uuid_0000000000078f04:
	.ascii "zero"
	.zero 1
uuid_0000000000078f1a:
	.ascii "non-zero"
	.zero 1
uuid_0000000000078f1b:
	.ascii "t"
	.zero 1
uuid_0000000000078f1c:
	.ascii "!="
	.zero 1
uuid_0000000000078f1d:
	.ascii ".0"
	.zero 1
uuid_0000000000078f1e:
	.ascii ":="
	.zero 1
uuid_0000000000078f46:
	.ascii "File: SRC/parse-toplevel.lm Line: 150 Column: 14"
	.zero 1
uuid_0000000000078f53:
	.ascii "File: SRC/parse-toplevel.lm Line: 162 Column: 14"
	.zero 1
uuid_0000000000078f57:
	.ascii "File: SRC/parse-toplevel.lm Line: 5 Column: 8"
	.zero 1
uuid_0000000000078f7e:
	.ascii "File: SRC/parse-type-comma-sep.lm Line: 7 Column: 8"
	.zero 1
uuid_0000000000078fb1:
	.ascii "File: SRC/parse-type-single.lm Line: 9 Column: 11"
	.zero 1
uuid_0000000000078fbb:
	.ascii "File: SRC/parse-type-single.lm Line: 59 Column: 11"
	.zero 1
uuid_0000000000078fdd:
	.ascii "Unexpected Parameterized Type: "
	.zero 1
uuid_0000000000078fde:
	.ascii "File: SRC/parse-type-single.lm Line: 86 Column: 25"
	.zero 1
uuid_0000000000078fe8:
	.ascii "File: SRC/parse-type-single.lm Line: 68 Column: 14"
	.zero 1
uuid_0000000000079008:
	.ascii "File: SRC/parse-type.lm Line: 12 Column: 8"
	.zero 1
uuid_0000000000079021:
	.ascii "File: SRC/parse-type.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007903a:
	.ascii "File: SRC/parse-type.lm Line: 51 Column: 8"
	.zero 1
uuid_0000000000079088:
	.ascii "File: SRC/remove-parens.lm Line: 7 Column: 33"
	.zero 1
uuid_0000000000079092:
	.ascii "File: SRC/remove-parens.lm Line: 3 Column: 5"
	.zero 1
uuid_00000000000790d5:
	.ascii "File: SRC/take-one-expr.lm Line: 19 Column: 11"
	.zero 1
uuid_00000000000790df:
	.ascii "File: SRC/take-one-expr.lm Line: 6 Column: 30"
	.zero 1
uuid_00000000000790e9:
	.ascii "src"
	.zero 1
cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1:
.zero 32
uuid_00000000000790f9:
	.ascii "File: SRC/compile-declare-cstring.lm Line: 10 Column: 32"
	.zero 1
uuid_0000000000079100:
	.ascii ":\n	.ascii \""
	.zero 1
uuid_0000000000079101:
	.ascii "\"\n	.zero 1\n"
	.zero 1
uuid_0000000000079168:
	.ascii "File: SRC/compile-destructure-args.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000079190:
	.ascii "True"
	.zero 1
uuid_0000000000079191:
	.ascii "False"
	.zero 1
uuid_0000000000079192:
	.ascii "\\t"
	.zero 1
uuid_0000000000079193:
	.ascii "10"
	.zero 1
uuid_0000000000079194:
	.ascii "\\s"
	.zero 1
uuid_0000000000079195:
	.ascii "32"
	.zero 1
uuid_0000000000079196:
	.ascii "\\o"
	.zero 1
uuid_0000000000079197:
	.ascii "35"
	.zero 1
uuid_0000000000079198:
	.ascii "\\`"
	.zero 1
uuid_0000000000079199:
	.ascii "39"
	.zero 1
uuid_000000000007919a:
	.ascii "\\["
	.zero 1
uuid_000000000007919b:
	.ascii "40"
	.zero 1
uuid_000000000007919c:
	.ascii "\\]"
	.zero 1
uuid_000000000007919d:
	.ascii "41"
	.zero 1
uuid_000000000007919e:
	.ascii "\\:"
	.zero 1
uuid_000000000007919f:
	.ascii "59"
	.zero 1
uuid_00000000000791a0:
	.ascii "File: SRC/compile-expr-direct.lm Line: 36 Column: 20"
	.zero 1
uuid_000000000007927c:
	.ascii "File: SRC/compile-expr-direct.lm Line: 81 Column: 11"
	.zero 1
uuid_00000000000792e3:
	.ascii "into-branch-conditional"
	.zero 1
uuid_00000000000792e4:
	.ascii "rsp-offset"
	.zero 1
uuid_00000000000792e5:
	.ascii "end-offset"
	.zero 1
uuid_00000000000792e6:
	.ascii "return-size"
	.zero 1
uuid_00000000000792e7:
	.ascii "ImplicitContext"
	.zero 1
uuid_00000000000792e8:
	.ascii "ictx"
	.zero 1
uuid_00000000000792e9:
	.ascii "primitive::if"
	.zero 1
uuid_0000000000079323:
	.ascii "File: SRC/compile-expr-direct.lm Line: 166 Column: 11"
	.zero 1
uuid_0000000000079327:
	.ascii "unframe"
	.zero 1
uuid_0000000000079328:
	.ascii "	add $"
	.zero 1
uuid_0000000000079329:
	.ascii ", %rsp\n"
	.zero 1
uuid_0000000000079399:
	.ascii "File: SRC/compile-expr-direct.lm Line: 196 Column: 14"
	.zero 1
uuid_00000000000793ac:
	.ascii "File: SRC/compile-expr-direct.lm Line: 6 Column: 5"
	.zero 1
uuid_00000000000793d7:
	.ascii "File: SRC/compile-expr.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007940b:
	.ascii "File: SRC/compile-fragment-args.lm Line: 7 Column: 11"
	.zero 1
uuid_0000000000079412:
	.ascii "File: SRC/compile-fragment-args.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079425:
	.ascii "cdecl::args-size"
	.zero 1
uuid_0000000000079426:
	.ascii "File: SRC/compile-global.lm Line: 22 Column: 14"
	.zero 1
uuid_0000000000079430:
	.ascii "_COUNTER"
	.zero 1
uuid_0000000000079431:
	.ascii ":\n.zero 8\n"
	.zero 1
uuid_0000000000079432:
	.ascii "_LABEL:\n	.ascii	\"\\\\t"
	.zero 1
uuid_0000000000079433:
	.ascii "\\\\n\"\n	.zero 1\n"
	.zero 1
uuid_0000000000079434:
	.ascii "	mov $"
	.zero 1
uuid_0000000000079435:
	.ascii ", %RBX\n	mov 0(%RBX), %RAX\n"
	.zero 1
uuid_0000000000079436:
	.ascii "	inc %RAX\n	mov %RAX, 0(%RBX)\n"
	.zero 1
uuid_0000000000079437:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push %RAX\n	call print_CL_ArrowNilU64\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_0000000000079438:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push $"
	.zero 1
uuid_0000000000079439:
	.ascii "_LABEL\n"
	.zero 1
uuid_000000000007943a:
	.ascii "	call print_CL_ArrowNilString\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007943e:
	.ascii "frame"
	.zero 1
uuid_000000000007943f:
	.ascii "	sub $"
	.zero 1
uuid_0000000000079440:
	.ascii "	ret\n"
	.zero 1
uuid_0000000000079465:
	.ascii ":\n.zero "
	.zero 1
uuid_0000000000079466:
	.ascii "File: SRC/compile-global.lm Line: 5 Column: 5"
	.zero 1
uuid_0000000000079479:
	.ascii "File: SRC/compile-maybe-push-stack.lm Line: 5 Column: 5"
	.zero 1
uuid_00000000000794aa:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 11 Column: 11"
	.zero 1
uuid_00000000000794b7:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 8 Column: 5"
	.zero 1
uuid_00000000000794c4:
	.ascii "FunctionArguments"
	.zero 1
uuid_00000000000794c5:
	.ascii "function-id"
	.zero 1
uuid_00000000000794c6:
	.ascii "function-name"
	.zero 1
uuid_00000000000794c7:
	.ascii "function-type"
	.zero 1
uuid_00000000000794c8:
	.ascii "args-size"
	.zero 1
uuid_00000000000794c9:
	.ascii "used"
	.zero 1
uuid_00000000000794ca:
	.ascii "args"
	.zero 1
uuid_00000000000794cb:
	.ascii "primitive::call"
	.zero 1
uuid_00000000000794de:
	.ascii "File: SRC/compile-stack-calls.lm Line: 7 Column: 5"
	.zero 1
uuid_0000000000079500:
	.ascii "File: SRC/translate-local-variables.lm Line: 11 Column: 17"
	.zero 1
uuid_0000000000079504:
	.ascii "File: SRC/translate-local-variables.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007950b:
	.ascii "File: SRC/translate-local-variables.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007951e:
	.ascii "L"
	.zero 1
uuid_0000000000079522:
	.ascii "File: SRC/cc-blob.lm Line: 7 Column: 5"
	.zero 1
uuid_0000000000079532:
	.ascii "File: SRC/cc-blob.lm Line: 30 Column: 5"
	.zero 1
uuid_0000000000079587:
	.ascii "File: SRC/cc-args.lm Line: 9 Column: 14"
	.zero 1
uuid_00000000000795d9:
	.ascii "Codegen Unexpected RHS"
	.zero 1
uuid_00000000000795dd:
	.ascii "File: SRC/cc-args.lm Line: 75 Column: 14"
	.zero 1
uuid_00000000000795f0:
	.ascii "File: SRC/cc-args.lm Line: 5 Column: 5"
	.zero 1
uuid_0000000000079669:
	.ascii "for-arg-i"
	.zero 1
uuid_00000000000796a9:
	.ascii "for-arg"
	.zero 1
uuid_00000000000796e0:
	.ascii "File: SRC/blob-render.lm Line: 37 Column: 11"
	.zero 1
uuid_0000000000079714:
	.ascii "for-atom"
	.zero 1
uuid_000000000007974b:
	.ascii "File: SRC/blob-render.lm Line: 53 Column: 34"
	.zero 1
uuid_000000000007975e:
	.ascii "range"
	.zero 1
uuid_0000000000079774:
	.ascii "uuid"
	.zero 1
uuid_0000000000079787:
	.ascii "align"
	.zero 1
uuid_00000000000797a3:
	.ascii "=="
	.zero 1
uuid_00000000000797e0:
	.ascii "/"
	.zero 1
uuid_00000000000797fc:
	.ascii "*"
	.zero 1
uuid_0000000000079818:
	.ascii "%"
	.zero 1
uuid_000000000007988b:
	.ascii "File: SRC/blob-render.lm Line: 151 Column: 11"
	.zero 1
uuid_00000000000798c5:
	.ascii "File: SRC/blob-render.lm Line: 175 Column: 14"
	.zero 1
uuid_00000000000798cc:
	.ascii "Unknown Render Term "
	.zero 1
uuid_00000000000798cd:
	.ascii "File: SRC/blob-render.lm Line: 5 Column: 5"
	.zero 1
uuid_0000000000079967:
	.ascii "File: SRC/blob-render.lm Line: 205 Column: 5"
	.zero 1
uuid_00000000000799d7:
	.ascii "File: SRC/extract-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079a14:
	.ascii "File: SRC/index-typedefs.lm Line: 3 Column: 31"
	.zero 1
uuid_0000000000079a8d:
	.ascii "Invalid Typedef"
	.zero 1
uuid_0000000000079a8e:
	.ascii "File: SRC/index-typedefs.lm Line: 17 Column: 5"
	.zero 1
uuid_0000000000079b0a:
	.ascii "Unrecognized Macro Pattern\n"
	.zero 1
uuid_0000000000079b0b:
	.ascii "File: SRC/is-macro-head.lm Line: 5 Column: 30"
	.zero 1
uuid_0000000000079b5d:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 11 Column: 11"
	.zero 1
uuid_0000000000079b67:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 25 Column: 14"
	.zero 1
uuid_0000000000079b71:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 6 Column: 30"
	.zero 1
uuid_0000000000079b7b:
	.ascii "Invalid Macro Application\n"
	.zero 1
uuid_0000000000079bd0:
	.ascii "_t"
	.zero 1
uuid_0000000000079bd1:
	.ascii "Token"
	.zero 1
uuid_0000000000079bd2:
	.ascii "Literal+Constant+String"
	.zero 1
uuid_0000000000079bd3:
	.ascii "_"
	.zero 1
uuid_0000000000079c13:
	.ascii "File: SRC/preprocess-apply-literals.lm Line: 5 Column: 5"
	.zero 1
uuid_0000000000079c32:
	.ascii ":Location:"
	.zero 1
uuid_0000000000079c3c:
	.ascii "p"
	.zero 1
uuid_0000000000079c4f:
	.ascii "Location Unknown"
	.zero 1
uuid_0000000000079c5c:
	.ascii "File: "
	.zero 1
uuid_0000000000079c5d:
	.ascii " Line: "
	.zero 1
uuid_0000000000079c5e:
	.ascii " Column: "
	.zero 1
uuid_0000000000079c5f:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 8 Column: 11"
	.zero 1
uuid_0000000000079ca5:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079df3:
	.ascii "File: SRC/preprocess-apply.lm Line: 38 Column: 38"
	.zero 1
uuid_0000000000079e12:
	.ascii "File: SRC/preprocess-apply.lm Line: 56 Column: 38"
	.zero 1
uuid_0000000000079e73:
	.ascii "File: SRC/preprocess-apply.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079eb6:
	.ascii "File: SRC/preprocess-is-suffixed.lm Line: 5 Column: 32"
	.zero 1
uuid_0000000000079ee7:
	.ascii "File: SRC/substitute-uuids.lm Line: 7 Column: 33"
	.zero 1
uuid_0000000000079f39:
	.ascii "File: SRC/substitute-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079fe8:
	.ascii ":Literal:"
	.zero 1
uuid_000000000007a05b:
	.ascii "File: SRC/try-destructure-macro.lm Line: 13 Column: 14"
	.zero 1
uuid_000000000007a0b3:
	.ascii ":Any:"
	.zero 1
uuid_000000000007a144:
	.ascii ":Variable:"
	.zero 1
uuid_000000000007a1a8:
	.ascii ":Tag:"
	.zero 1
uuid_000000000007a1cd:
	.ascii "Constant+Literal+U64"
	.zero 1
uuid_000000000007a1ce:
	.ascii "Tag<"
	.zero 1
uuid_000000000007a1e4:
	.ascii "File: SRC/try-destructure-macro.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a230:
	.ascii "Fragment Has No Type:\n"
	.zero 1
uuid_000000000007a234:
	.ascii "File: SRC/destructure-lhs.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007a271:
	.ascii "File: SRC/destructure-lhs.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007a275:
	.ascii "Unexpected Destructure LHS: "
	.zero 1
uuid_000000000007a276:
	.ascii "File: SRC/destructure-lhs.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a28c:
	.ascii "File: SRC/fragment::chain.lm Line: 27 Column: 36"
	.zero 1
uuid_000000000007a2b7:
	.ascii "File: SRC/fragment::get.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007a2be:
	.ascii "File: SRC/fragment::get.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a2d7:
	.ascii "File: SRC/fragment::set-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a2f0:
	.ascii "File: SRC/fragment::set-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a309:
	.ascii "File: SRC/fragment::set-term.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a322:
	.ascii "File: SRC/fragment::set-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a33b:
	.ascii "File: SRC/fragment::set-vararg.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a354:
	.ascii "File: SRC/fragment::set.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a358:
	.ascii "--blob"
	.zero 1
uuid_000000000007a359:
	.ascii "--gnu"
	.zero 1
uuid_000000000007a35a:
	.ascii "--tokenize"
	.zero 1
uuid_000000000007a35b:
	.ascii "--parse"
	.zero 1
uuid_000000000007a35c:
	.ascii "--preprocess"
	.zero 1
uuid_000000000007a35d:
	.ascii "--typecheck"
	.zero 1
uuid_000000000007a35e:
	.ascii "--compile"
	.zero 1
uuid_000000000007a35f:
	.ascii "--strict"
	.zero 1
uuid_000000000007a360:
	.ascii "--gradual"
	.zero 1
uuid_000000000007a361:
	.ascii "--macro"
	.zero 1
uuid_000000000007a362:
	.ascii "--nomacro"
	.zero 1
uuid_000000000007a363:
	.ascii "--profile-invocations"
	.zero 1
uuid_000000000007a364:
	.ascii "-o"
	.zero 1
uuid_000000000007a365:
	.ascii "File: SRC/main.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007a3b1:
	.ascii "File: SRC/main.lm Line: 35 Column: 37"
	.zero 1
uuid_000000000007a3c5:
	.ascii "File: SRC/main.lm Line: 43 Column: 5"
	.zero 1
uuid_000000000007a3e3:
	.ascii "File: LIB/default-list.lm Line: 57 Column: 25"
	.zero 1
uuid_000000000007a401:
	.ascii "File: LIB/default-list.lm Line: 44 Column: 25"
	.zero 1
uuid_000000000007a412:
	.ascii "List::head is fallible\n"
	.zero 1
uuid_000000000007a413:
	.ascii "File: LIB/default-list.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007a43d:
	.ascii "File: LIB/default-list.lm Line: 33 Column: 8"
	.zero 1
uuid_000000000007a477:
	.ascii "File: LIB/default-list.lm Line: 20 Column: 26"
	.zero 1
uuid_000000000007a510:
	.ascii "File: LIB/default-list.lm Line: 71 Column: 8"
	.zero 1
uuid_000000000007a523:
	.ascii "File: LIB/default-list.lm Line: 78 Column: 5"
	.zero 1
uuid_000000000007a5e3:
	.ascii "File: LIB/default-stdlib.lm Line: 20 Column: 5"
	.zero 1
uuid_000000000007a5f4:
	.ascii "File: LIB/default-stdlib.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007a7a1:
	.ascii "File: LIB/default-stdlib.lm Line: 35 Column: 5"
	.zero 1
