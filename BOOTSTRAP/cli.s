.global _start
.text
_start:
	mov %rsp,%rbp
	mov $malloc_SB_block_SB_head_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_page_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_large_SB_size_CL_U64, %r15
	movq $1024, 0(%r15)
	mov $point_SB_of_SB_interest_CL_U64, %r15
	movq $0, 0(%r15)
	mov $rc_SB_magic_SB_number_CL_U64, %r15
	movq $423809104, 0(%r15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_text_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_init_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_data_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $assemble_SB_final_CL_String, %r15
	movq $uuid_000000000007a365, 0(%r15)
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_target_CL_String, %r15
	movq $uuid_000000000007a3db, 0(%r15)
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	movq $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	movq $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $global_SB_ctx_CL_FContextFContextCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	movq $99999, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	pushq $0
	pushq $0
	pushq $1
	movq $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $uuid_SB_counter_CL_U64, %r15
	movq $0, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	mov %rbp,%rsp
	popq %r8
	movq %rsp, %r9
	push %rbp
	mov %rsp, %rbp
	pushq %r8
	pushq %r9
	call main
	mov %rbp, %rsp
	pop %rbp
	mov $60, %rax
	mov $0, %rdi
	syscall
_EQ__EQ__CL_ArrowU64ConsStringString:
	pushq $0
	pushq $0
	pushq $0
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp $0,%R8
	je uuid_000000000007a20b
	cmp $0,%R8
	je uuid_000000000007a20c
	cmp $0,%R9
	je uuid_000000000007a20c
uuid_000000000007a20a:
	mov %R8, %r14
	movb 0(%r14), %r15b
	movb %r15b, -32(%rbp)
	mov %R9, %r14
	movb 0(%r14), %r15b
	movb %r15b, -40(%rbp)
	mov -32(%RBP), %R13B
	mov -40(%RBP), %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	movq %R13, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	je uuid_000000000007a20c
	mov -32(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	movq %R13, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	jne uuid_000000000007a20b
	inc %R8
	inc %R9
	jmp uuid_000000000007a20a
uuid_000000000007a20b:
	mov $1, %RAX
	jmp uuid_000000000007a20d
uuid_000000000007a20c:
	mov $0, %RAX
	jmp uuid_000000000007a20d
uuid_000000000007a20d:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsStringString:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowSConsSS:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a211
	jmp uuid_000000000007a213
uuid_000000000007a211:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a20e
	movq -48(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007a210
uuid_000000000007a20e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a210:
	mov -72(%RBP),%RSP
	add $-72, %RSP
uuid_000000000007a213:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64U64:
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
non_SB_zero_CL_ArrowU64S:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a219
	push %RBP
	jmp uuid_000000000007a216
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a215
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a218
uuid_000000000007a216:
uuid_000000000007a218:
	mov -104(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007a21b
uuid_000000000007a219:
	movq $0, -40(%rbp)
uuid_000000000007a21b:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64String:
	pushq $0
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a21c
	jmp uuid_000000000007a21e
uuid_000000000007a21c:
	movq $1, -24(%rbp)
uuid_000000000007a21e:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsSS:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a225
	jmp uuid_000000000007a227
uuid_000000000007a225:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a222
	jmp uuid_000000000007a224
uuid_000000000007a222:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a21f
	jmp uuid_000000000007a221
uuid_000000000007a21f:
	movb $1, -192(%rbp)
uuid_000000000007a221:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a224:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a227:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a283
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a23a
	jmp uuid_000000000007a23c
uuid_000000000007a23a:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a22b
	jmp uuid_000000000007a22d
uuid_000000000007a22b:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a228
	jmp uuid_000000000007a22a
uuid_000000000007a228:
	movb $1, -384(%rbp)
uuid_000000000007a22a:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007a22d:
	mov -392(%RBP),%RSP
	add $-408, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a237
	jmp uuid_000000000007a239
uuid_000000000007a237:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a231
	jmp uuid_000000000007a233
uuid_000000000007a231:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a22e
	jmp uuid_000000000007a230
uuid_000000000007a22e:
	movb $1, -448(%rbp)
uuid_000000000007a230:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a233:
	mov -456(%RBP),%RSP
	add $-472, %RSP
	mov -448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a234
	jmp uuid_000000000007a236
uuid_000000000007a234:
	movb $1, -336(%rbp)
uuid_000000000007a236:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a239:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a23c:
	mov -344(%RBP),%RSP
	add $-472, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a280
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a255
	jmp uuid_000000000007a257
uuid_000000000007a255:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a243
	jmp uuid_000000000007a245
uuid_000000000007a243:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a240
	jmp uuid_000000000007a242
uuid_000000000007a240:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a23d
	jmp uuid_000000000007a23f
uuid_000000000007a23d:
	movb $1, -592(%rbp)
uuid_000000000007a23f:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007a242:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007a245:
	mov -600(%RBP),%RSP
	add $-664, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a252
	jmp uuid_000000000007a254
uuid_000000000007a252:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a24c
	jmp uuid_000000000007a24e
uuid_000000000007a24c:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a249
	jmp uuid_000000000007a24b
uuid_000000000007a249:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a246
	jmp uuid_000000000007a248
uuid_000000000007a246:
	movb $1, -704(%rbp)
uuid_000000000007a248:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a24b:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a24e:
	mov -712(%RBP),%RSP
	add $-776, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a24f
	jmp uuid_000000000007a251
uuid_000000000007a24f:
	movb $1, -544(%rbp)
uuid_000000000007a251:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a254:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a257:
	mov -552(%RBP),%RSP
	add $-776, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a27d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a270
	jmp uuid_000000000007a272
uuid_000000000007a270:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a261
	jmp uuid_000000000007a263
uuid_000000000007a261:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a25e
	jmp uuid_000000000007a260
uuid_000000000007a25e:
	movb $1, -896(%rbp)
uuid_000000000007a260:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007a263:
	mov -904(%RBP),%RSP
	add $-920, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a26d
	jmp uuid_000000000007a26f
uuid_000000000007a26d:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a267
	jmp uuid_000000000007a269
uuid_000000000007a267:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a264
	jmp uuid_000000000007a266
uuid_000000000007a264:
	movb $1, -960(%rbp)
uuid_000000000007a266:
	mov -976(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a269:
	mov -968(%RBP),%RSP
	add $-984, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a26a
	jmp uuid_000000000007a26c
uuid_000000000007a26a:
	movb $1, -848(%rbp)
uuid_000000000007a26c:
	mov -928(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a26f:
	mov -864(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007a272:
	mov -856(%RBP),%RSP
	add $-984, %RSP
	mov -848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a27a
	push %RBP
	jmp uuid_000000000007a277
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a276
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a279
uuid_000000000007a277:
uuid_000000000007a279:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_000000000007a27c
uuid_000000000007a27a:
	push %RBP
	movq -984(%RBP), %RAX
	movq -920(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a273
	jmp uuid_000000000007a275
uuid_000000000007a273:
	movq $1, -64(%rbp)
uuid_000000000007a275:
	mov -992(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007a27c:
	mov -784(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_000000000007a27f
uuid_000000000007a27d:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a25b
	jmp uuid_000000000007a25d
uuid_000000000007a25b:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a258
	jmp uuid_000000000007a25a
uuid_000000000007a258:
	movq $1, -64(%rbp)
uuid_000000000007a25a:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a25d:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a27f:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007a282
uuid_000000000007a280:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a282:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007a285
uuid_000000000007a283:
	movq $1, -64(%rbp)
uuid_000000000007a285:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsSS:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
print_CL_ArrowNilS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2ab
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a28a
	jmp uuid_000000000007a28c
uuid_000000000007a28a:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a287
	jmp uuid_000000000007a289
uuid_000000000007a287:
	movb $1, -128(%rbp)
uuid_000000000007a289:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007a28c:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2a8
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a293
	jmp uuid_000000000007a295
uuid_000000000007a293:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a290
	jmp uuid_000000000007a292
uuid_000000000007a290:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a28d
	jmp uuid_000000000007a28f
uuid_000000000007a28d:
	movb $1, -192(%rbp)
uuid_000000000007a28f:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a292:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a295:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2a5
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a29c
	jmp uuid_000000000007a29e
uuid_000000000007a29c:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a299
	jmp uuid_000000000007a29b
uuid_000000000007a299:
	movb $1, -304(%rbp)
uuid_000000000007a29b:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007a29e:
	mov -312(%RBP),%RSP
	add $-328, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2a2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a2a1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2a4
uuid_000000000007a2a2:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a29f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2a0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2a4:
	mov -272(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007a2a7
uuid_000000000007a2a5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a296
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2a7:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007a2aa
uuid_000000000007a2a8:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2aa:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007a2ad
uuid_000000000007a2ab:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a286
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2ad:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fail_CL_ArrowNilString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fail_CL_ArrowNilConsStringString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2ae
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
exit_CL_ArrowNilU64:
	mov $60, %RAX
	mov -8(%rbp), %RDI
	syscall
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_000000000007a2af:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_000000000007a2b0
	inc %RDX
	inc %R15
	jmp uuid_000000000007a2af
uuid_000000000007a2b0:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
eprint_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_000000000007a2b1:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_000000000007a2b2
	inc %RDX
	inc %R15
	jmp uuid_000000000007a2b1
uuid_000000000007a2b2:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $2
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
uuid_000000000007a2b3:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_000000000007a2b3
uuid_000000000007a2b4:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_000000000007a2b4
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilASCII:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $0, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
print_CL_ArrowNilI64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
	cmp $0,%R15
	jge uuid_000000000007a2b5
	neg %R15
	movb $45, -24(%rbp)
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $-24, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2b5:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_000000000007a2b5
uuid_000000000007a2b6:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_000000000007a2b6
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU32:
	mov $0, %R15
	mov -8(%rbp), %R15D
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU16:
	mov $0, %R15
	mov -8(%rbp), %R15W
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU8:
	mov $0, %R15
	mov -8(%rbp), %R15B
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI32:
	mov $0, %R15
	mov -8(%rbp), %R15D
	movsx %R15D,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI16:
	mov $0, %R15
	mov -8(%rbp), %R15W
	movsx %R15W,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI8:
	mov $0, %R15
	mov -8(%rbp), %R15B
	movsx %R15B,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64:
	mov -8(%rbp), %RAX
	mov -16(%rbp), %RDI
	mov -24(%rbp), %RSI
	mov -32(%rbp), %RDX
	syscall
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
read_SB_file_CL_ArrowStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2bc
	jmp uuid_000000000007a2be
uuid_000000000007a2bc:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2ba
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2be:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1025
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $1024
uuid_000000000007a2c4:
	movq -56(%RBP), %RAX
	movq $1024, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2c5
	jmp uuid_000000000007a2c6
uuid_000000000007a2c5:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	movq -40(%RBP), %RAX
	movq -48(%RBP), %R14
	addq %R14, %RAX
	push %RAX
	pushq $1024
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2c1
	jmp uuid_000000000007a2c3
uuid_000000000007a2c1:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bf
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2c0
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a2c3:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1025, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	add $8, %RSP
	jmp uuid_000000000007a2c4
uuid_000000000007a2c6:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
clone_SB_rope_CL_ArrowStringS:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $1024
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2e0
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2cd
	jmp uuid_000000000007a2cf
uuid_000000000007a2cd:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2ca
	jmp uuid_000000000007a2cc
uuid_000000000007a2ca:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2c7
	jmp uuid_000000000007a2c9
uuid_000000000007a2c7:
	movb $1, -144(%rbp)
uuid_000000000007a2c9:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007a2cc:
	mov -160(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007a2cf:
	mov -152(%RBP),%RSP
	add $-216, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2dd
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2d3
	jmp uuid_000000000007a2d5
uuid_000000000007a2d3:
	push %RBP
	mov -240(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a2d0
	jmp uuid_000000000007a2d2
uuid_000000000007a2d0:
	movb $1, -256(%rbp)
uuid_000000000007a2d2:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a2d5:
	mov -264(%RBP),%RSP
	add $-280, %RSP
	mov -256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a2d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2dc
uuid_000000000007a2da:
	pushq $0
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	mov %R15B, %AL
	push %RAX
uuid_000000000007a2d6:
	mov -296(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B,%R13B
	setne %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2d7
	jmp uuid_000000000007a2d8
uuid_000000000007a2d7:
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -296(%RBP), %R14B
	mov -40(%RBP), %R13
	mov -8(%RBP), %R15
	add %R13, %R15
	movb %R14B, 0(%R15)
	movq -288(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -288(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	movb %R15B, -296(%rbp)
	jmp uuid_000000000007a2d6
uuid_000000000007a2d8:
uuid_000000000007a2dc:
	mov -224(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a2df
uuid_000000000007a2dd:
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a2df:
	mov -112(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007a2e2
uuid_000000000007a2e0:
uuid_000000000007a2e2:
	mov -80(%RBP),%RSP
	add $-104, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
clone_SB_rope_CL_ArrowStringU8:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %r14
	mov -8(%rbp),%r15b
	mov %r15b, 0(%r14)
	mov -24(%rbp), %r15
	movb $0, 1(%r15)
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
length_CL_ArrowU64String:
	pushq $0
uuid_000000000007a2e3:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a2e4
	jmp uuid_000000000007a2e5
uuid_000000000007a2e4:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a2e3
uuid_000000000007a2e5:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
write_SB_file_CL_ArrowNilConsStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $577
	pushq $420
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq -32(%rbp)
	pushq -16(%rbp)
#call function length : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call length_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
to_SB_string_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
uuid_000000000007a2e6:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2e7
	jmp uuid_000000000007a2e8
uuid_000000000007a2e7:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $48, %R14
	addq %R14, %RAX
	push %RAX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -56(%rbp), %R8
	movb %R8B, -48(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	add $8, %rsp
	jmp uuid_000000000007a2e6
uuid_000000000007a2e8:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2ea
	pushq $0
	pushq $uuid_000000000007a2e9
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007a2ec
uuid_000000000007a2ea:
uuid_000000000007a2ec:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringI64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2ee
	jmp uuid_000000000007a2f0
uuid_000000000007a2ee:
	pushq $0
	pushq $uuid_000000000007a2ed
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007a2f0:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	pushq $0
uuid_000000000007a2f1:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2f2
	jmp uuid_000000000007a2f3
uuid_000000000007a2f2:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $48
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -88(%rbp), %R8
	movb %R8B, -80(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	add $8, %rsp
	jmp uuid_000000000007a2f1
uuid_000000000007a2f3:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a2f4
	pushq $0
	pushq $uuid_000000000007a2e9
	pushq $2
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007a2f6
uuid_000000000007a2f4:
uuid_000000000007a2f6:
	mov -88(%RBP),%RSP
	add $-88, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_i64_CL_ArrowI64String:
	pushq $0
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $45, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2f7
	jmp uuid_000000000007a2f9
uuid_000000000007a2f7:
	movb $1, -24(%rbp)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
uuid_000000000007a2f9:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	mov -24(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a2fa
	jmp uuid_000000000007a2fc
uuid_000000000007a2fa:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a2fc:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_u64_CL_ArrowU64String:
	pushq $0
uuid_000000000007a31f:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a320
	jmp uuid_000000000007a321
uuid_000000000007a320:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %R13B
	mov $48, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a31c
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %R13B
	mov $49, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a319
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %R13B
	mov $50, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a316
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %R13B
	mov $51, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a313
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %R13B
	mov $52, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a310
	push %RBP
	pushq -32(%rbp)
	mov -128(%RBP), %R13B
	mov $53, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a30d
	push %RBP
	pushq -32(%rbp)
	mov -144(%RBP), %R13B
	mov $54, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a30a
	push %RBP
	pushq -32(%rbp)
	mov -160(%RBP), %R13B
	mov $55, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a307
	push %RBP
	pushq -32(%rbp)
	mov -176(%RBP), %R13B
	mov $56, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a304
	push %RBP
	pushq -32(%rbp)
	mov -192(%RBP), %R13B
	mov $57, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a301
	push %RBP
	jmp uuid_000000000007a2fe
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a2fd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a300
uuid_000000000007a2fe:
uuid_000000000007a300:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007a303
uuid_000000000007a301:
	movq -24(%RBP), %RAX
	movq $9, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a303:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a306
uuid_000000000007a304:
	movq -24(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a306:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a309
uuid_000000000007a307:
	movq -24(%RBP), %RAX
	movq $7, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a309:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a30c
uuid_000000000007a30a:
	movq -24(%RBP), %RAX
	movq $6, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a30c:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a30f
uuid_000000000007a30d:
	movq -24(%RBP), %RAX
	movq $5, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a30f:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a312
uuid_000000000007a310:
	movq -24(%RBP), %RAX
	movq $4, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a312:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a315
uuid_000000000007a313:
	movq -24(%RBP), %RAX
	movq $3, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a315:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a318
uuid_000000000007a316:
	movq -24(%RBP), %RAX
	movq $2, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a318:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a31b
uuid_000000000007a319:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007a31b:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a31e
uuid_000000000007a31c:
uuid_000000000007a31e:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a31f
uuid_000000000007a321:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_hex_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $16
uuid_000000000007a362:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a363
	jmp uuid_000000000007a364
uuid_000000000007a363:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a35f
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a35c
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a359
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a356
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a353
	push %RBP
	pushq -56(%rbp)
	movq -152(%RBP), %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a350
	push %RBP
	pushq -56(%rbp)
	movq -168(%RBP), %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a34d
	push %RBP
	pushq -56(%rbp)
	movq -184(%RBP), %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a34a
	push %RBP
	pushq -56(%rbp)
	movq -200(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a347
	push %RBP
	pushq -56(%rbp)
	movq -216(%RBP), %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a344
	push %RBP
	pushq -56(%rbp)
	movq -232(%RBP), %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a341
	push %RBP
	pushq -56(%rbp)
	movq -248(%RBP), %RAX
	movq $11, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a33e
	push %RBP
	pushq -56(%rbp)
	movq -264(%RBP), %RAX
	movq $12, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a33b
	push %RBP
	pushq -56(%rbp)
	movq -280(%RBP), %RAX
	movq $13, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a338
	push %RBP
	pushq -56(%rbp)
	movq -296(%RBP), %RAX
	movq $14, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a335
	push %RBP
	pushq -56(%rbp)
	movq -312(%RBP), %RAX
	movq $15, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a332
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a331
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a334
uuid_000000000007a332:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a330
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a334:
	mov -304(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007a337
uuid_000000000007a335:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a32f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a337:
	mov -288(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a33a
uuid_000000000007a338:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a32e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a33a:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007a33d
uuid_000000000007a33b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a32d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a33d:
	mov -256(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007a340
uuid_000000000007a33e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a32c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a340:
	mov -240(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007a343
uuid_000000000007a341:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a32b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a343:
	mov -224(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007a346
uuid_000000000007a344:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a32a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a346:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007a349
uuid_000000000007a347:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a329
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a349:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007a34c
uuid_000000000007a34a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a328
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a34c:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007a34f
uuid_000000000007a34d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a327
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a34f:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007a352
uuid_000000000007a350:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a326
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a352:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007a355
uuid_000000000007a353:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a325
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a355:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007a358
uuid_000000000007a356:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a324
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a358:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007a35b
uuid_000000000007a359:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a323
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a35b:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007a35e
uuid_000000000007a35c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a322
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a35e:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_000000000007a361
uuid_000000000007a35f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a2e9
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a361:
	mov -64(%RBP),%RSP
	add $-72, %RSP
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a362
uuid_000000000007a364:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
has_SB_prefix_CL_ArrowU64ConsStringString:
	pushq $1
uuid_000000000007a36c:
	mov -16(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a36d
	jmp uuid_000000000007a36e
uuid_000000000007a36d:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a369
	movq $0, -32(%rbp)
	movq $uuid_000000000007a365, -16(%rbp)
	jmp uuid_000000000007a36b
uuid_000000000007a369:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov -16(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	mov -48(%RBP), %R13B
	mov -56(%RBP), %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a366
	movq $0, -32(%rbp)
	movq $uuid_000000000007a365, -16(%rbp)
	jmp uuid_000000000007a368
uuid_000000000007a366:
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -16(%RBP), %RAX
	inc %RAX
	movq %RAX, -16(%rbp)
uuid_000000000007a368:
	mov -64(%RBP),%RSP
	add $-64, %RSP
uuid_000000000007a36b:
	mov -40(%RBP),%RSP
	add $-64, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a36c
uuid_000000000007a36e:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_prefix_CL_ArrowStringConsStringString:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a372
	jmp uuid_000000000007a374
uuid_000000000007a372:
uuid_000000000007a36f:
	mov -16(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a370
	jmp uuid_000000000007a371
uuid_000000000007a370:
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -16(%RBP), %RAX
	inc %RAX
	movq %RAX, -16(%rbp)
	jmp uuid_000000000007a36f
uuid_000000000007a371:
uuid_000000000007a374:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
replace_CL_ArrowStringConsStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a378:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a379
	jmp uuid_000000000007a37a
uuid_000000000007a379:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a375
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a377
uuid_000000000007a375:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function remove-prefix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call remove_SB_prefix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007a377:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_000000000007a378
uuid_000000000007a37a:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_suffix_CL_ArrowU64ConsStringString:
	pushq $0
uuid_000000000007a37e:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a37f
	jmp uuid_000000000007a380
uuid_000000000007a37f:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a37b
	jmp uuid_000000000007a37d
uuid_000000000007a37b:
	movq $1, -32(%rbp)
uuid_000000000007a37d:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_000000000007a37e
uuid_000000000007a380:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_suffix_CL_ArrowStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a384:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a385
	jmp uuid_000000000007a386
uuid_000000000007a385:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a381
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_000000000007a383
uuid_000000000007a381:
	movq $uuid_000000000007a2e9, -8(%rbp)
uuid_000000000007a383:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_000000000007a384
uuid_000000000007a386:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
deep_SB_hash_CL_ArrowU64String:
	pushq $0
	pushq $0
uuid_000000000007a387:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a388
	jmp uuid_000000000007a389
uuid_000000000007a388:
	mov $0, %R14
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov -40(%rbp), %R14B
	movq %R14, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -32(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	jmp uuid_000000000007a387
uuid_000000000007a389:
	mov -32(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_ML__CL_ArrowStringConsU64String:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a38a:
	movq -16(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a38b
	jmp uuid_000000000007a38c
uuid_000000000007a38b:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	movq -16(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -16(%rbp)
	jmp uuid_000000000007a38a
uuid_000000000007a38c:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jb uuid_000000000007a38d
	mov $0, %RAX
uuid_000000000007a38d:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jl uuid_000000000007a38e
	mov $0, %RAX
uuid_000000000007a38e:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jbe uuid_000000000007a38f
	mov $0, %RAX
uuid_000000000007a38f:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jle uuid_000000000007a390
	mov $0, %RAX
uuid_000000000007a390:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	ja uuid_000000000007a391
	mov $0, %RAX
uuid_000000000007a391:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jg uuid_000000000007a392
	mov $0, %RAX
uuid_000000000007a392:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jae uuid_000000000007a393
	mov $0, %RAX
uuid_000000000007a393:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jge uuid_000000000007a394
	mov $0, %RAX
uuid_000000000007a394:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_000000000007a395
	mov $0, %RAX
uuid_000000000007a395:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_000000000007a396
	mov $0, %RAX
uuid_000000000007a396:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_000000000007a397
	mov $0, %RAX
uuid_000000000007a397:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AM__AM__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	je uuid_000000000007a398
	mov -16(%rbp), %R8
	cmp $0,%R8
	je uuid_000000000007a398
	mov $1, %RAX
uuid_000000000007a398:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_BR__BR__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	jne uuid_000000000007a39a
	mov -16(%rbp), %R8
	cmp $0,%R8
	jne uuid_000000000007a39a
	jmp uuid_000000000007a399
uuid_000000000007a39a:
	mov $1, %RAX
uuid_000000000007a399:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_000000000007a39b
	mov $0, %RAX
uuid_000000000007a39b:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowU64ConsU64U64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowI64ConsI64I64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_SB__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	subq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_HT__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	xor %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	mul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	imul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007a39d
	jmp uuid_000000000007a39c
uuid_000000000007a39c:
	mov $1, %RAX
	jmp uuid_000000000007a39e
uuid_000000000007a39d:
	mov $0, %RAX
	jmp uuid_000000000007a39e
uuid_000000000007a39e:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007a39f
	jmp uuid_000000000007a3a0
uuid_000000000007a39f:
	mov $1, %RAX
	jmp uuid_000000000007a3a1
uuid_000000000007a3a0:
	mov $0, %RAX
	jmp uuid_000000000007a3a1
uuid_000000000007a3a1:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU16U16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_000000000007a3a2
	jmp uuid_000000000007a3a3
uuid_000000000007a3a2:
	mov $1, %RAX
	jmp uuid_000000000007a3a4
uuid_000000000007a3a3:
	mov $0, %RAX
	jmp uuid_000000000007a3a4
uuid_000000000007a3a4:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU32U32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_000000000007a3a5
	jmp uuid_000000000007a3a6
uuid_000000000007a3a5:
	mov $1, %RAX
	jmp uuid_000000000007a3a7
uuid_000000000007a3a6:
	mov $0, %RAX
	jmp uuid_000000000007a3a7
uuid_000000000007a3a7:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
not_CL_ArrowU64U64:
	pushq $0
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3a8
	jmp uuid_000000000007a3aa
uuid_000000000007a3a8:
	movq $1, -24(%rbp)
uuid_000000000007a3aa:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
not_CL_ArrowU64U8:
	pushq $0
	push %RBP
	mov -8(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a3ab
	jmp uuid_000000000007a3ad
uuid_000000000007a3ab:
	movq $1, -24(%rbp)
uuid_000000000007a3ad:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI8I8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007a3ae
	jmp uuid_000000000007a3af
uuid_000000000007a3ae:
	mov $1, %RAX
	jmp uuid_000000000007a3b0
uuid_000000000007a3af:
	mov $0, %RAX
	jmp uuid_000000000007a3b0
uuid_000000000007a3b0:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI16I16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_000000000007a3b1
	jmp uuid_000000000007a3b2
uuid_000000000007a3b1:
	mov $1, %RAX
	jmp uuid_000000000007a3b3
uuid_000000000007a3b2:
	mov $0, %RAX
	jmp uuid_000000000007a3b3
uuid_000000000007a3b3:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI32I32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_000000000007a3b4
	jmp uuid_000000000007a3b5
uuid_000000000007a3b4:
	mov $1, %RAX
	jmp uuid_000000000007a3b6
uuid_000000000007a3b5:
	mov $0, %RAX
	jmp uuid_000000000007a3b6
uuid_000000000007a3b6:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $0, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $8, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $16, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock:
	movq -8(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 0(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 8(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 16(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
malloc_SB_new_SB_page_CL_ArrowNilNil:
	mov $12, %RAX
	mov $0, %RDI
	syscall
	mov	%RAX, %R8
	movq %R8, %r15
	movq $malloc_SB_block_SB_head_CL_U64, %r14
	movq %r15, 0(%r14)
	movq %R8, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	mov $12, %RAX
	mov	%R8, %RDI
	syscall
	movq %R8, %r15
	movq $malloc_SB_page_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function <= : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _LT__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3bd
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq -56(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
	pushq $0
uuid_000000000007a3ba:
	movq -72(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3bb
	jmp uuid_000000000007a3bc
uuid_000000000007a3bb:
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %R15B, %R14B
	mov -72(%RBP), %R13
	mov -80(%RBP), %R15
	add %R13, %R15
	mov %R14B, 0(%R15)
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	add $8, %rsp
	add $8, %rsp
	jmp uuid_000000000007a3ba
uuid_000000000007a3bc:
#call function free : Arrow<Array<?,?>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call free_CL_ArrowNilArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -64(%rbp), %r15
	movq %r15, -32(%rbp)
	mov -64(%rbp), %r15
	mov %r15, -32(%rbp)
	jmp uuid_000000000007a3bf
uuid_000000000007a3bd:
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3b7
	jmp uuid_000000000007a3b9
uuid_000000000007a3b7:
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -40(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
uuid_000000000007a3b9:
	mov -56(%RBP),%RSP
	add $-56, %RSP
uuid_000000000007a3bf:
	mov -48(%RBP),%RSP
	add $-56, %RSP
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock:
	pushq $0
	push %RBP
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c0
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $24, %RAX
	addq %R14, %RAX
	movq %RAX, %R14
	movq -8(%RBP), %RAX
	addq %R14, %RAX
	pushq %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
	jmp uuid_000000000007a3c2
uuid_000000000007a3c0:
	movq $1073741824, -24(%rbp)
uuid_000000000007a3c2:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
free_CL_ArrowNilArray_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function .block-prev : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -32(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c3
	jmp uuid_000000000007a3c5
uuid_000000000007a3c3:
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3c5:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c6
	jmp uuid_000000000007a3c8
uuid_000000000007a3c6:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3c8:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_U64:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_ConsU64U64:
	push %RBP
	movq $malloc_SB_block_SB_head_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c9
	jmp uuid_000000000007a3cb
uuid_000000000007a3c9:
#call function malloc-new-page : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call malloc_SB_new_SB_page_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3cb:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	pushq 0(%r15)
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3cc
	jmp uuid_000000000007a3ce
uuid_000000000007a3cc:
	mov $malloc_SB_block_SB_head_CL_U64, %r14
	movq 0(%r14), %r15
	movq %r15, -40(%rbp)
	mov 0(%r14), %r15
	mov %r15, -40(%rbp)
uuid_000000000007a3ce:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	pushq $0
uuid_000000000007a3d2:
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3d3
	jmp uuid_000000000007a3d4
uuid_000000000007a3d3:
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov $malloc_SB_first_SB_free_CL_U64, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	mov -40(%rbp), %r15
	mov %r15, 0(%r14)
	push %RBP
	movq -16(%RBP), %RAX
	movq $malloc_SB_large_SB_size_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3cf
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	jmp uuid_000000000007a3d1
uuid_000000000007a3cf:
uuid_000000000007a3d1:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_000000000007a3d2
uuid_000000000007a3d4:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq $8, %RAX
	movq -64(%RBP), %R14
	subq %R14, %RAX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -72(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	movq -80(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	push %RAX
	movq -88(%RBP), %RAX
	movq -8(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -96(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3d5
	jmp uuid_000000000007a3d7
uuid_000000000007a3d5:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3d7:
	mov -104(%RBP),%RSP
	add $-104, %RSP
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	movq -80(%RBP), %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3d8
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a3da
uuid_000000000007a3d8:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a3da:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
non_SB_zero_CL_ArrowU64Type:
	mov $3, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64AST:
	mov $10, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentKV:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64Context:
	mov $2, %RAX
	pushq %RAX
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
non_SB_zero_CL_ArrowU64TContext:
	mov $2, %RAX
	pushq %RAX
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
non_SB_zero_CL_ArrowU64FContext:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64STypeList:
	mov $1, %RAX
	pushq %RAX
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64StringTypeList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64StringList:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64StringU64List:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringStringList:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringSList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64MacroList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64SfxList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
mangle_SB_identifier_CL_ArrowSString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a440:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a441
	jmp uuid_000000000007a442
uuid_000000000007a441:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
	mov -64(%RBP), %R13B
	mov $33, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a43d
	push %RBP
	pushq -48(%rbp)
	mov -80(%RBP), %R13B
	mov $36, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a43a
	push %RBP
	pushq -48(%rbp)
	mov -96(%RBP), %R13B
	mov $37, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a437
	push %RBP
	pushq -48(%rbp)
	mov -112(%RBP), %R13B
	mov $38, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a434
	push %RBP
	pushq -48(%rbp)
	mov -128(%RBP), %R13B
	mov $42, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a431
	push %RBP
	pushq -48(%rbp)
	mov -144(%RBP), %R13B
	mov $43, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a42e
	push %RBP
	pushq -48(%rbp)
	mov -160(%RBP), %R13B
	mov $45, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a42b
	push %RBP
	pushq -48(%rbp)
	mov -176(%RBP), %R13B
	mov $46, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a428
	push %RBP
	pushq -48(%rbp)
	mov -192(%RBP), %R13B
	mov $47, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a425
	push %RBP
	pushq -48(%rbp)
	mov -208(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a422
	push %RBP
	pushq -48(%rbp)
	mov -224(%RBP), %R13B
	mov $59, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a41f
	push %RBP
	pushq -48(%rbp)
	mov -240(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a41c
	push %RBP
	pushq -48(%rbp)
	mov -256(%RBP), %R13B
	mov $61, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a419
	push %RBP
	pushq -48(%rbp)
	mov -272(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a416
	push %RBP
	pushq -48(%rbp)
	mov -288(%RBP), %R13B
	mov $63, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a413
	push %RBP
	pushq -48(%rbp)
	mov -304(%RBP), %R13B
	mov $64, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a410
	push %RBP
	pushq -48(%rbp)
	mov -320(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a40d
	push %RBP
	pushq -48(%rbp)
	mov -336(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a40a
	push %RBP
	pushq -48(%rbp)
	mov -352(%RBP), %R13B
	mov $94, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a407
	push %RBP
	pushq -48(%rbp)
	mov -368(%RBP), %R13B
	mov $95, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a404
	push %RBP
	pushq -48(%rbp)
	mov -384(%RBP), %R13B
	mov $96, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a401
	push %RBP
	pushq -48(%rbp)
	mov -400(%RBP), %R13B
	mov $124, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a3fe
	push %RBP
	pushq -48(%rbp)
	mov -416(%RBP), %R13B
	mov $126, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a3fb
	push %RBP
	pushq -48(%rbp)
	jmp uuid_000000000007a3f8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a3f7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a3fa
uuid_000000000007a3f8:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a3fa:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007a3fd
uuid_000000000007a3fb:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f6
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a3fd:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007a400
uuid_000000000007a3fe:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f5
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a400:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007a403
uuid_000000000007a401:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f4
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a403:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007a406
uuid_000000000007a404:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a406:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007a409
uuid_000000000007a407:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a409:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007a40c
uuid_000000000007a40a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a40c:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007a40f
uuid_000000000007a40d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3f0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a40f:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007a412
uuid_000000000007a410:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3ef
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a412:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007a415
uuid_000000000007a413:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3ee
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a415:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a418
uuid_000000000007a416:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3ed
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a418:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a41b
uuid_000000000007a419:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3ec
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a41b:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a41e
uuid_000000000007a41c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3eb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a41e:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a421
uuid_000000000007a41f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3ea
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a421:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a424
uuid_000000000007a422:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e9
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a424:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a427
uuid_000000000007a425:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e8
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a427:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a42a
uuid_000000000007a428:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e7
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a42a:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a42d
uuid_000000000007a42b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e6
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a42d:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a430
uuid_000000000007a42e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e5
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a430:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a433
uuid_000000000007a431:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e4
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a433:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a436
uuid_000000000007a434:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a436:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a439
uuid_000000000007a437:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a439:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a43c
uuid_000000000007a43a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a43c:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a43f
uuid_000000000007a43d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a43f:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a440
uuid_000000000007a442:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mangle_SB_identifier_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a476
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a447
	jmp uuid_000000000007a449
uuid_000000000007a447:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a444
	jmp uuid_000000000007a446
uuid_000000000007a444:
	movb $1, -152(%rbp)
uuid_000000000007a446:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a449:
	mov -160(%RBP),%RSP
	add $-176, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a473
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a450
	jmp uuid_000000000007a452
uuid_000000000007a450:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a44d
	jmp uuid_000000000007a44f
uuid_000000000007a44d:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a44a
	jmp uuid_000000000007a44c
uuid_000000000007a44a:
	movb $1, -216(%rbp)
uuid_000000000007a44c:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a44f:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a452:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a470
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a469
	jmp uuid_000000000007a46b
uuid_000000000007a469:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a466
	jmp uuid_000000000007a468
uuid_000000000007a466:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a463
	jmp uuid_000000000007a465
uuid_000000000007a463:
	movb $1, -328(%rbp)
uuid_000000000007a465:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007a468:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007a46b:
	mov -336(%RBP),%RSP
	add $-400, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a46d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a46c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a46f
uuid_000000000007a46d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a46f:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007a472
uuid_000000000007a470:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a460:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a461
	jmp uuid_000000000007a462
uuid_000000000007a461:
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a459
	jmp uuid_000000000007a45b
uuid_000000000007a459:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a456
	jmp uuid_000000000007a458
uuid_000000000007a456:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	jmp uuid_000000000007a453
	jmp uuid_000000000007a455
uuid_000000000007a453:
	movb $1, -384(%rbp)
uuid_000000000007a455:
	mov -448(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a458:
	mov -400(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a45b:
	mov -392(%RBP),%RSP
	add $-472, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a45d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a45c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a45f
uuid_000000000007a45d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	movq -440(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -240(%rbp)
uuid_000000000007a45f:
	mov -336(%RBP),%RSP
	add $-472, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a460
uuid_000000000007a462:
uuid_000000000007a472:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a475
uuid_000000000007a473:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a475:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a478
uuid_000000000007a476:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a443
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a478:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mangle_SB_identifier_CL_ArrowStringConsTypeString:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a3e9
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
escape_SB_string_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a49e:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a49f
	jmp uuid_000000000007a4a0
uuid_000000000007a49f:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $92, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a49b
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007a49d
uuid_000000000007a49b:
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -56(%rbp)
	mov -72(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a498
	push %RBP
	pushq -56(%rbp)
	mov -88(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a495
	push %RBP
	pushq -56(%rbp)
	mov -104(%RBP), %R13B
	mov $92, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a492
	push %RBP
	pushq -56(%rbp)
	mov -120(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a48f
	push %RBP
	pushq -56(%rbp)
	mov -136(%RBP), %R13B
	mov $96, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a48c
	push %RBP
	pushq -56(%rbp)
	mov -152(%RBP), %R13B
	mov $110, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a489
	push %RBP
	pushq -56(%rbp)
	mov -168(%RBP), %R13B
	mov $111, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a486
	push %RBP
	pushq -56(%rbp)
	mov -184(%RBP), %R13B
	mov $116, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a483
	push %RBP
	pushq -56(%rbp)
	mov -200(%RBP), %R13B
	mov $115, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a480
	push %RBP
	pushq -56(%rbp)
	jmp uuid_000000000007a47d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a47c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a47f
uuid_000000000007a47d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a47a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U8,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a47b
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a47f:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007a482
uuid_000000000007a480:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a482:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007a485
uuid_000000000007a483:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $9
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a485:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007a488
uuid_000000000007a486:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $35
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a488:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007a48b
uuid_000000000007a489:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $10
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a48b:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007a48e
uuid_000000000007a48c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $39
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a48e:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007a491
uuid_000000000007a48f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $41
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a491:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007a494
uuid_000000000007a492:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a479
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a494:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007a497
uuid_000000000007a495:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a497:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_000000000007a49a
uuid_000000000007a498:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $59
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a49a:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
uuid_000000000007a49d:
	mov -48(%RBP),%RSP
	add $-72, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007a49e
uuid_000000000007a4a0:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_literal_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007a4dd:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a4de
	jmp uuid_000000000007a4df
uuid_000000000007a4de:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
	mov -64(%RBP), %R13B
	mov $34, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4da
	push %RBP
	pushq -48(%rbp)
	mov -80(%RBP), %R13B
	mov $92, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4d7
	push %RBP
	pushq -48(%rbp)
	mov -96(%RBP), %R13B
	mov $10, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4d4
	push %RBP
	pushq -48(%rbp)
	jmp uuid_000000000007a4d1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a4d0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a4d3
uuid_000000000007a4d1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a4d3:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a4d6
uuid_000000000007a4d4:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a4cf
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a4d6:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a4d9
uuid_000000000007a4d7:
	pushq $uuid_000000000007a365
	mov -8(%RBP), %RAX
	inc %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4c8
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4c5
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $92, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4c2
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4bf
	push %RBP
	pushq -96(%rbp)
	mov -176(%RBP), %R13B
	mov $96, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4bc
	push %RBP
	pushq -96(%rbp)
	mov -192(%RBP), %R13B
	mov $108, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4b9
	push %RBP
	pushq -96(%rbp)
	mov -208(%RBP), %R13B
	mov $110, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4b6
	push %RBP
	pushq -96(%rbp)
	mov -224(%RBP), %R13B
	mov $111, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4b3
	push %RBP
	pushq -96(%rbp)
	mov -240(%RBP), %R13B
	mov $115, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4b0
	push %RBP
	pushq -96(%rbp)
	mov -256(%RBP), %R13B
	mov $116, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4ad
	push %RBP
	jmp uuid_000000000007a4aa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a4a9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a4ac
uuid_000000000007a4aa:
uuid_000000000007a4ac:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007a4af
uuid_000000000007a4ad:
	movq $uuid_000000000007a4a8, -88(%rbp)
uuid_000000000007a4af:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a4b2
uuid_000000000007a4b0:
	movq $uuid_000000000007a297, -88(%rbp)
uuid_000000000007a4b2:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a4b5
uuid_000000000007a4b3:
	movq $uuid_000000000007a4a7, -88(%rbp)
uuid_000000000007a4b5:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a4b8
uuid_000000000007a4b6:
	movq $uuid_000000000007a4a6, -88(%rbp)
uuid_000000000007a4b8:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a4bb
uuid_000000000007a4b9:
	movq $uuid_000000000007a4a5, -88(%rbp)
uuid_000000000007a4bb:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a4be
uuid_000000000007a4bc:
	movq $uuid_000000000007a4a4, -88(%rbp)
uuid_000000000007a4be:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a4c1
uuid_000000000007a4bf:
	movq $uuid_000000000007a298, -88(%rbp)
uuid_000000000007a4c1:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a4c4
uuid_000000000007a4c2:
	movq $uuid_000000000007a4a3, -88(%rbp)
uuid_000000000007a4c4:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a4c7
uuid_000000000007a4c5:
	movq $uuid_000000000007a296, -88(%rbp)
uuid_000000000007a4c7:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a4ca
uuid_000000000007a4c8:
	movq $uuid_000000000007a4a2, -88(%rbp)
uuid_000000000007a4ca:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007a4cc
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a4cb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007a4ce
uuid_000000000007a4cc:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -88(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
uuid_000000000007a4ce:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007a4d9:
	mov -72(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007a4dc
uuid_000000000007a4da:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a4a1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007a4dc:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007a4dd
uuid_000000000007a4df:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_string_CL_ArrowSS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4e3
	jmp uuid_000000000007a4e5
uuid_000000000007a4e3:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a4e0
	jmp uuid_000000000007a4e2
uuid_000000000007a4e0:
	movb $1, -96(%rbp)
uuid_000000000007a4e2:
	mov -112(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007a4e5:
	mov -104(%RBP),%RSP
	add $-120, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4f6
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4ec
	jmp uuid_000000000007a4ee
uuid_000000000007a4ec:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a4e9
	jmp uuid_000000000007a4eb
uuid_000000000007a4e9:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a4e6
	jmp uuid_000000000007a4e8
uuid_000000000007a4e6:
	movb $1, -160(%rbp)
uuid_000000000007a4e8:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a4eb:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a4ee:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a4f3
	push %RBP
	jmp uuid_000000000007a4f0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a4ef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a4f2
uuid_000000000007a4f0:
uuid_000000000007a4f2:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a4f5
uuid_000000000007a4f3:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a4f5:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007a4f8
uuid_000000000007a4f6:
	pushq $0
#call function escape-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a4f8:
	mov -64(%RBP),%RSP
	add $-120, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
exit_SB_error_CL_ArrowNilConsASTString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a518
	jmp uuid_000000000007a51a
uuid_000000000007a518:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a505
	jmp uuid_000000000007a507
uuid_000000000007a505:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4fc
	jmp uuid_000000000007a4fe
uuid_000000000007a4fc:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007a4f9
	jmp uuid_000000000007a4fb
uuid_000000000007a4f9:
	movb $1, -440(%rbp)
uuid_000000000007a4fb:
	mov -456(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007a4fe:
	mov -448(%RBP),%RSP
	add $-480, %RSP
	mov -440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a502
	jmp uuid_000000000007a504
uuid_000000000007a502:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a4ff
	jmp uuid_000000000007a501
uuid_000000000007a4ff:
	movb $1, -344(%rbp)
uuid_000000000007a501:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007a504:
	mov -360(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007a507:
	mov -352(%RBP),%RSP
	add $-560, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a515
	jmp uuid_000000000007a517
uuid_000000000007a515:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a50f
	jmp uuid_000000000007a511
uuid_000000000007a50f:
	push %RBP
	jmp uuid_000000000007a50c
	jmp uuid_000000000007a50e
uuid_000000000007a50c:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a509
	jmp uuid_000000000007a50b
uuid_000000000007a509:
	movb $1, -648(%rbp)
uuid_000000000007a50b:
	mov -672(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007a50e:
	mov -664(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007a511:
	mov -656(%RBP),%RSP
	add $-680, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a512
	jmp uuid_000000000007a514
uuid_000000000007a512:
	movb $1, -248(%rbp)
uuid_000000000007a514:
	mov -568(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007a517:
	mov -264(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007a51a:
	mov -256(%RBP),%RSP
	add $-680, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a530
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a524
	jmp uuid_000000000007a526
uuid_000000000007a524:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a521
	jmp uuid_000000000007a523
uuid_000000000007a521:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a51e
	jmp uuid_000000000007a520
uuid_000000000007a51e:
	movb $1, -768(%rbp)
uuid_000000000007a520:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a523:
	mov -784(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007a526:
	mov -776(%RBP),%RSP
	add $-936, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a52d
	push %RBP
	jmp uuid_000000000007a52a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a529
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a52c
uuid_000000000007a52a:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a52c:
	mov -944(%RBP),%RSP
	add $-944, %RSP
	jmp uuid_000000000007a52f
uuid_000000000007a52d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a527
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a51c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a51c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a528
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a52f:
	mov -688(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007a532
uuid_000000000007a530:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a51b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a51c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a51d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a532:
	mov -168(%RBP),%RSP
	add $-680, %RSP
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_variable_CL_ArrowU64String:
	pushq $0
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %R13B
	mov $33, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5ce
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %R13B
	mov $36, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5cb
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %R13B
	mov $37, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5c8
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %R13B
	mov $38, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5c5
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %R13B
	mov $42, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5c2
	push %RBP
	pushq -32(%rbp)
	mov -128(%RBP), %R13B
	mov $43, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5bf
	push %RBP
	pushq -32(%rbp)
	mov -144(%RBP), %R13B
	mov $45, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5bc
	push %RBP
	pushq -32(%rbp)
	mov -160(%RBP), %R13B
	mov $46, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5b9
	push %RBP
	pushq -32(%rbp)
	mov -176(%RBP), %R13B
	mov $47, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5b6
	push %RBP
	pushq -32(%rbp)
	mov -192(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5b3
	push %RBP
	pushq -32(%rbp)
	mov -208(%RBP), %R13B
	mov $59, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5b0
	push %RBP
	pushq -32(%rbp)
	mov -224(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5ad
	push %RBP
	pushq -32(%rbp)
	mov -240(%RBP), %R13B
	mov $61, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5aa
	push %RBP
	pushq -32(%rbp)
	mov -256(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5a7
	push %RBP
	pushq -32(%rbp)
	mov -272(%RBP), %R13B
	mov $63, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5a4
	push %RBP
	pushq -32(%rbp)
	mov -288(%RBP), %R13B
	mov $64, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a5a1
	push %RBP
	pushq -32(%rbp)
	mov -304(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a59e
	push %RBP
	pushq -32(%rbp)
	mov -320(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a59b
	push %RBP
	pushq -32(%rbp)
	mov -336(%RBP), %R13B
	mov $94, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a598
	push %RBP
	pushq -32(%rbp)
	mov -352(%RBP), %R13B
	mov $95, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a595
	push %RBP
	pushq -32(%rbp)
	mov -368(%RBP), %R13B
	mov $97, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a592
	push %RBP
	pushq -32(%rbp)
	mov -384(%RBP), %R13B
	mov $98, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a58f
	push %RBP
	pushq -32(%rbp)
	mov -400(%RBP), %R13B
	mov $99, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a58c
	push %RBP
	pushq -32(%rbp)
	mov -416(%RBP), %R13B
	mov $100, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a589
	push %RBP
	pushq -32(%rbp)
	mov -432(%RBP), %R13B
	mov $101, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a586
	push %RBP
	pushq -32(%rbp)
	mov -448(%RBP), %R13B
	mov $102, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a583
	push %RBP
	pushq -32(%rbp)
	mov -464(%RBP), %R13B
	mov $103, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a580
	push %RBP
	pushq -32(%rbp)
	mov -480(%RBP), %R13B
	mov $104, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a57d
	push %RBP
	pushq -32(%rbp)
	mov -496(%RBP), %R13B
	mov $105, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a57a
	push %RBP
	pushq -32(%rbp)
	mov -512(%RBP), %R13B
	mov $106, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a577
	push %RBP
	pushq -32(%rbp)
	mov -528(%RBP), %R13B
	mov $107, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a574
	push %RBP
	pushq -32(%rbp)
	mov -544(%RBP), %R13B
	mov $108, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a571
	push %RBP
	pushq -32(%rbp)
	mov -560(%RBP), %R13B
	mov $109, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a56e
	push %RBP
	pushq -32(%rbp)
	mov -576(%RBP), %R13B
	mov $110, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a56b
	push %RBP
	pushq -32(%rbp)
	mov -592(%RBP), %R13B
	mov $111, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a568
	push %RBP
	pushq -32(%rbp)
	mov -608(%RBP), %R13B
	mov $112, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a565
	push %RBP
	pushq -32(%rbp)
	mov -624(%RBP), %R13B
	mov $113, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a562
	push %RBP
	pushq -32(%rbp)
	mov -640(%RBP), %R13B
	mov $114, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a55f
	push %RBP
	pushq -32(%rbp)
	mov -656(%RBP), %R13B
	mov $115, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a55c
	push %RBP
	pushq -32(%rbp)
	mov -672(%RBP), %R13B
	mov $116, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a559
	push %RBP
	pushq -32(%rbp)
	mov -688(%RBP), %R13B
	mov $117, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a556
	push %RBP
	pushq -32(%rbp)
	mov -704(%RBP), %R13B
	mov $118, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a553
	push %RBP
	pushq -32(%rbp)
	mov -720(%RBP), %R13B
	mov $119, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a550
	push %RBP
	pushq -32(%rbp)
	mov -736(%RBP), %R13B
	mov $120, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a54d
	push %RBP
	pushq -32(%rbp)
	mov -752(%RBP), %R13B
	mov $121, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a54a
	push %RBP
	pushq -32(%rbp)
	mov -768(%RBP), %R13B
	mov $122, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a547
	push %RBP
	pushq -32(%rbp)
	mov -784(%RBP), %R13B
	mov $124, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a544
	push %RBP
	pushq -32(%rbp)
	mov -800(%RBP), %R13B
	mov $126, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a541
	push %RBP
	jmp uuid_000000000007a53e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a53d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a540
uuid_000000000007a53e:
uuid_000000000007a540:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007a543
uuid_000000000007a541:
	movb $1, -24(%rbp)
uuid_000000000007a543:
	mov -792(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007a546
uuid_000000000007a544:
	movb $1, -24(%rbp)
uuid_000000000007a546:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007a549
uuid_000000000007a547:
	movb $1, -24(%rbp)
uuid_000000000007a549:
	mov -760(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_000000000007a54c
uuid_000000000007a54a:
	movb $1, -24(%rbp)
uuid_000000000007a54c:
	mov -744(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_000000000007a54f
uuid_000000000007a54d:
	movb $1, -24(%rbp)
uuid_000000000007a54f:
	mov -728(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007a552
uuid_000000000007a550:
	movb $1, -24(%rbp)
uuid_000000000007a552:
	mov -712(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007a555
uuid_000000000007a553:
	movb $1, -24(%rbp)
uuid_000000000007a555:
	mov -696(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_000000000007a558
uuid_000000000007a556:
	movb $1, -24(%rbp)
uuid_000000000007a558:
	mov -680(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_000000000007a55b
uuid_000000000007a559:
	movb $1, -24(%rbp)
uuid_000000000007a55b:
	mov -664(%RBP),%RSP
	add $-672, %RSP
	jmp uuid_000000000007a55e
uuid_000000000007a55c:
	movb $1, -24(%rbp)
uuid_000000000007a55e:
	mov -648(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_000000000007a561
uuid_000000000007a55f:
	movb $1, -24(%rbp)
uuid_000000000007a561:
	mov -632(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007a564
uuid_000000000007a562:
	movb $1, -24(%rbp)
uuid_000000000007a564:
	mov -616(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007a567
uuid_000000000007a565:
	movb $1, -24(%rbp)
uuid_000000000007a567:
	mov -600(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007a56a
uuid_000000000007a568:
	movb $1, -24(%rbp)
uuid_000000000007a56a:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007a56d
uuid_000000000007a56b:
	movb $1, -24(%rbp)
uuid_000000000007a56d:
	mov -568(%RBP),%RSP
	add $-576, %RSP
	jmp uuid_000000000007a570
uuid_000000000007a56e:
	movb $1, -24(%rbp)
uuid_000000000007a570:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007a573
uuid_000000000007a571:
	movb $1, -24(%rbp)
uuid_000000000007a573:
	mov -536(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_000000000007a576
uuid_000000000007a574:
	movb $1, -24(%rbp)
uuid_000000000007a576:
	mov -520(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007a579
uuid_000000000007a577:
	movb $1, -24(%rbp)
uuid_000000000007a579:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_000000000007a57c
uuid_000000000007a57a:
	movb $1, -24(%rbp)
uuid_000000000007a57c:
	mov -488(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_000000000007a57f
uuid_000000000007a57d:
	movb $1, -24(%rbp)
uuid_000000000007a57f:
	mov -472(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007a582
uuid_000000000007a580:
	movb $1, -24(%rbp)
uuid_000000000007a582:
	mov -456(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007a585
uuid_000000000007a583:
	movb $1, -24(%rbp)
uuid_000000000007a585:
	mov -440(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007a588
uuid_000000000007a586:
	movb $1, -24(%rbp)
uuid_000000000007a588:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007a58b
uuid_000000000007a589:
	movb $1, -24(%rbp)
uuid_000000000007a58b:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007a58e
uuid_000000000007a58c:
	movb $1, -24(%rbp)
uuid_000000000007a58e:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007a591
uuid_000000000007a58f:
	movb $1, -24(%rbp)
uuid_000000000007a591:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007a594
uuid_000000000007a592:
	movb $1, -24(%rbp)
uuid_000000000007a594:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007a597
uuid_000000000007a595:
	movb $1, -24(%rbp)
uuid_000000000007a597:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007a59a
uuid_000000000007a598:
	movb $1, -24(%rbp)
uuid_000000000007a59a:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007a59d
uuid_000000000007a59b:
	movb $1, -24(%rbp)
uuid_000000000007a59d:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007a5a0
uuid_000000000007a59e:
	movb $1, -24(%rbp)
uuid_000000000007a5a0:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007a5a3
uuid_000000000007a5a1:
	movb $1, -24(%rbp)
uuid_000000000007a5a3:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a5a6
uuid_000000000007a5a4:
	movb $1, -24(%rbp)
uuid_000000000007a5a6:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a5a9
uuid_000000000007a5a7:
	movb $1, -24(%rbp)
uuid_000000000007a5a9:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a5ac
uuid_000000000007a5aa:
	movb $1, -24(%rbp)
uuid_000000000007a5ac:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a5af
uuid_000000000007a5ad:
	movb $1, -24(%rbp)
uuid_000000000007a5af:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a5b2
uuid_000000000007a5b0:
	movb $1, -24(%rbp)
uuid_000000000007a5b2:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a5b5
uuid_000000000007a5b3:
	push %RBP
	mov -8(%RBP), %RAX
	inc %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $58, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a537
	jmp uuid_000000000007a539
uuid_000000000007a537:
	movb $1, -24(%rbp)
uuid_000000000007a539:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	inc %RAX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a53a
	jmp uuid_000000000007a53c
uuid_000000000007a53a:
	movb $1, -24(%rbp)
uuid_000000000007a53c:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007a5b5:
	mov -184(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a5b8
uuid_000000000007a5b6:
	movb $1, -24(%rbp)
uuid_000000000007a5b8:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a5bb
uuid_000000000007a5b9:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007a533
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a534
	movb $1, -24(%rbp)
	jmp uuid_000000000007a536
uuid_000000000007a534:
uuid_000000000007a536:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a5bb:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007a5be
uuid_000000000007a5bc:
	movb $1, -24(%rbp)
uuid_000000000007a5be:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a5c1
uuid_000000000007a5bf:
	movb $1, -24(%rbp)
uuid_000000000007a5c1:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a5c4
uuid_000000000007a5c2:
	movb $1, -24(%rbp)
uuid_000000000007a5c4:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a5c7
uuid_000000000007a5c5:
	movb $1, -24(%rbp)
uuid_000000000007a5c7:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a5ca
uuid_000000000007a5c8:
	movb $1, -24(%rbp)
uuid_000000000007a5ca:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a5cd
uuid_000000000007a5cb:
	movb $1, -24(%rbp)
uuid_000000000007a5cd:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a5d0
uuid_000000000007a5ce:
	movb $1, -24(%rbp)
uuid_000000000007a5d0:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007a5d1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5d2
	jmp uuid_000000000007a5d4
uuid_000000000007a5d2:
	movb $0, -24(%rbp)
uuid_000000000007a5d4:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov -24(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	mov	%R13,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringIsUsed:
	pushq $uuid_000000000007a365
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5e7
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5e4
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5e1
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5de
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5db
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a5da
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a5dd
uuid_000000000007a5db:
	movq $uuid_000000000007a5d9, -24(%rbp)
uuid_000000000007a5dd:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a5e0
uuid_000000000007a5de:
	movq $uuid_000000000007a5d8, -24(%rbp)
uuid_000000000007a5e0:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a5e3
uuid_000000000007a5e1:
	movq $uuid_000000000007a5d7, -24(%rbp)
uuid_000000000007a5e3:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a5e6
uuid_000000000007a5e4:
	movq $uuid_000000000007a5d6, -24(%rbp)
uuid_000000000007a5e6:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a5e9
uuid_000000000007a5e7:
	movq $uuid_000000000007a5d5, -24(%rbp)
uuid_000000000007a5e9:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringType:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
to_SB_string_CL_ArrowSListType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a606
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5f2
	jmp uuid_000000000007a5f4
uuid_000000000007a5f2:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5ef
	jmp uuid_000000000007a5f1
uuid_000000000007a5ef:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_000000000007a5ec
	jmp uuid_000000000007a5ee
uuid_000000000007a5ec:
	movb $1, -216(%rbp)
uuid_000000000007a5ee:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007a5f1:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007a5f4:
	mov -224(%RBP),%RSP
	add $-304, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a603
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5fb
	jmp uuid_000000000007a5fd
uuid_000000000007a5fb:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a5f8
	jmp uuid_000000000007a5fa
uuid_000000000007a5f8:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_000000000007a5f5
	jmp uuid_000000000007a5f7
uuid_000000000007a5f5:
	movb $1, -360(%rbp)
uuid_000000000007a5f7:
	mov -424(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007a5fa:
	mov -376(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007a5fd:
	mov -368(%RBP),%RSP
	add $-448, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a600
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a5ff
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a602
uuid_000000000007a600:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a5fe
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007a602:
	mov -312(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007a605
uuid_000000000007a603:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007a605:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007a608
uuid_000000000007a606:
uuid_000000000007a608:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
to_SB_string_SB_impl_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a650
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a60c
	jmp uuid_000000000007a60e
uuid_000000000007a60c:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a609
	jmp uuid_000000000007a60b
uuid_000000000007a609:
	movb $1, -152(%rbp)
uuid_000000000007a60b:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a60e:
	mov -160(%RBP),%RSP
	add $-176, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a64d
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a615
	jmp uuid_000000000007a617
uuid_000000000007a615:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a612
	jmp uuid_000000000007a614
uuid_000000000007a612:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a60f
	jmp uuid_000000000007a611
uuid_000000000007a60f:
	movb $1, -216(%rbp)
uuid_000000000007a611:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a614:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a617:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a64a
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a61f
	jmp uuid_000000000007a621
uuid_000000000007a61f:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a61c
	jmp uuid_000000000007a61e
uuid_000000000007a61c:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a619
	jmp uuid_000000000007a61b
uuid_000000000007a619:
	movb $1, -328(%rbp)
uuid_000000000007a61b:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007a61e:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007a621:
	mov -336(%RBP),%RSP
	add $-400, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a647
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a632
	jmp uuid_000000000007a634
uuid_000000000007a632:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a628
	jmp uuid_000000000007a62a
uuid_000000000007a628:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a625
	jmp uuid_000000000007a627
uuid_000000000007a625:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	jmp uuid_000000000007a622
	jmp uuid_000000000007a624
uuid_000000000007a622:
	movb $1, -504(%rbp)
uuid_000000000007a624:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007a627:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007a62a:
	mov -512(%RBP),%RSP
	add $-592, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a62f
	jmp uuid_000000000007a631
uuid_000000000007a62f:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a62c
	jmp uuid_000000000007a62e
uuid_000000000007a62c:
	movb $1, -440(%rbp)
uuid_000000000007a62e:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007a631:
	mov -456(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007a634:
	mov -448(%RBP),%RSP
	add $-608, %RSP
	mov -440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a644
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a63b
	jmp uuid_000000000007a63d
uuid_000000000007a63b:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a638
	jmp uuid_000000000007a63a
uuid_000000000007a638:
	push %RBP
	mov -624(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a635
	jmp uuid_000000000007a637
uuid_000000000007a635:
	movb $1, -648(%rbp)
uuid_000000000007a637:
	mov -712(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007a63a:
	mov -664(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007a63d:
	mov -656(%RBP),%RSP
	add $-720, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a641
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a640
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a643
uuid_000000000007a641:
	pushq $0
	pushq -720(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a63e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a63f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a643:
	mov -616(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007a646
uuid_000000000007a644:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a62b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a646:
	mov -408(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007a649
uuid_000000000007a647:
	pushq $0
	pushq -400(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a649:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007a64c
uuid_000000000007a64a:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a618
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a64c:
	mov -184(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007a64f
uuid_000000000007a64d:
	pushq $0
	pushq -176(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a64f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a652
uuid_000000000007a650:
	pushq $0
	pushq $uuid_000000000007a443
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007a652:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a659
	jmp uuid_000000000007a65b
uuid_000000000007a659:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a656
	jmp uuid_000000000007a658
uuid_000000000007a656:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a653
	jmp uuid_000000000007a655
uuid_000000000007a653:
	movb $1, -192(%rbp)
uuid_000000000007a655:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a658:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a65b:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a6c0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a66e
	jmp uuid_000000000007a670
uuid_000000000007a66e:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a65f
	jmp uuid_000000000007a661
uuid_000000000007a65f:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a65c
	jmp uuid_000000000007a65e
uuid_000000000007a65c:
	movb $1, -384(%rbp)
uuid_000000000007a65e:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007a661:
	mov -392(%RBP),%RSP
	add $-408, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a66b
	jmp uuid_000000000007a66d
uuid_000000000007a66b:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a665
	jmp uuid_000000000007a667
uuid_000000000007a665:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a662
	jmp uuid_000000000007a664
uuid_000000000007a662:
	movb $1, -448(%rbp)
uuid_000000000007a664:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a667:
	mov -456(%RBP),%RSP
	add $-472, %RSP
	mov -448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a668
	jmp uuid_000000000007a66a
uuid_000000000007a668:
	movb $1, -336(%rbp)
uuid_000000000007a66a:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a66d:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a670:
	mov -344(%RBP),%RSP
	add $-472, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a6bd
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a689
	jmp uuid_000000000007a68b
uuid_000000000007a689:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a677
	jmp uuid_000000000007a679
uuid_000000000007a677:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a674
	jmp uuid_000000000007a676
uuid_000000000007a674:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a671
	jmp uuid_000000000007a673
uuid_000000000007a671:
	movb $1, -592(%rbp)
uuid_000000000007a673:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007a676:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007a679:
	mov -600(%RBP),%RSP
	add $-664, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a686
	jmp uuid_000000000007a688
uuid_000000000007a686:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a680
	jmp uuid_000000000007a682
uuid_000000000007a680:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a67d
	jmp uuid_000000000007a67f
uuid_000000000007a67d:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a67a
	jmp uuid_000000000007a67c
uuid_000000000007a67a:
	movb $1, -704(%rbp)
uuid_000000000007a67c:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a67f:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a682:
	mov -712(%RBP),%RSP
	add $-776, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a683
	jmp uuid_000000000007a685
uuid_000000000007a683:
	movb $1, -544(%rbp)
uuid_000000000007a685:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a688:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007a68b:
	mov -552(%RBP),%RSP
	add $-776, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a6ba
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6aa
	jmp uuid_000000000007a6ac
uuid_000000000007a6aa:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a698
	jmp uuid_000000000007a69a
uuid_000000000007a698:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a695
	jmp uuid_000000000007a697
uuid_000000000007a695:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a692
	jmp uuid_000000000007a694
uuid_000000000007a692:
	movb $1, -896(%rbp)
uuid_000000000007a694:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007a697:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007a69a:
	mov -904(%RBP),%RSP
	add $-968, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a6a7
	jmp uuid_000000000007a6a9
uuid_000000000007a6a7:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6a1
	jmp uuid_000000000007a6a3
uuid_000000000007a6a1:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a69e
	jmp uuid_000000000007a6a0
uuid_000000000007a69e:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a69b
	jmp uuid_000000000007a69d
uuid_000000000007a69b:
	movb $1, -1008(%rbp)
uuid_000000000007a69d:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a6a0:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a6a3:
	mov -1016(%RBP),%RSP
	add $-1080, %RSP
	mov -1008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a6a4
	jmp uuid_000000000007a6a6
uuid_000000000007a6a4:
	movb $1, -848(%rbp)
uuid_000000000007a6a6:
	mov -976(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a6a9:
	mov -864(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a6ac:
	mov -856(%RBP),%RSP
	add $-1080, %RSP
	mov -848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a6b7
	push %RBP
	jmp uuid_000000000007a6b4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a6b3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a6b6
uuid_000000000007a6b4:
uuid_000000000007a6b6:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007a6b9
uuid_000000000007a6b7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6b0
	jmp uuid_000000000007a6b2
uuid_000000000007a6b0:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6ad
	jmp uuid_000000000007a6af
uuid_000000000007a6ad:
	movq $1, -64(%rbp)
uuid_000000000007a6af:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007a6b2:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007a6b9:
	mov -784(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007a6bc
uuid_000000000007a6ba:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a68f
	jmp uuid_000000000007a691
uuid_000000000007a68f:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a68c
	jmp uuid_000000000007a68e
uuid_000000000007a68c:
	movq $1, -64(%rbp)
uuid_000000000007a68e:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a691:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a6bc:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007a6bf
uuid_000000000007a6bd:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a6bf:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007a6c2
uuid_000000000007a6c0:
	movq $1, -64(%rbp)
uuid_000000000007a6c2:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
typeof_CL_ArrowTypeAST:
#call function .lookup : Arrow<Cons<Cons<BTreeIs<AST,Type>,AST>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
ascript_CL_ArrowNilConsTypeAST:
#call function .bind : Arrow<Cons<Cons<Array<BTreeIs<AST,Type>,?>,AST>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9bf
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9bc
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6d6
	jmp uuid_000000000007a6d8
uuid_000000000007a6d6:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a6d3
	jmp uuid_000000000007a6d5
uuid_000000000007a6d3:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a6d0
	jmp uuid_000000000007a6d2
uuid_000000000007a6d0:
	movb $1, -560(%rbp)
uuid_000000000007a6d2:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a6d5:
	mov -576(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a6d8:
	mov -568(%RBP),%RSP
	add $-728, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9b9
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6df
	jmp uuid_000000000007a6e1
uuid_000000000007a6df:
	push %RBP
	jmp uuid_000000000007a6dc
	jmp uuid_000000000007a6de
uuid_000000000007a6dc:
	push %RBP
	jmp uuid_000000000007a6d9
	jmp uuid_000000000007a6db
uuid_000000000007a6d9:
	movb $1, -816(%rbp)
uuid_000000000007a6db:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007a6de:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007a6e1:
	mov -824(%RBP),%RSP
	add $-840, %RSP
	mov -816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9b6
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6e8
	jmp uuid_000000000007a6ea
uuid_000000000007a6e8:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a6e5
	jmp uuid_000000000007a6e7
uuid_000000000007a6e5:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_000000000007a6e2
	jmp uuid_000000000007a6e4
uuid_000000000007a6e2:
	movb $1, -928(%rbp)
uuid_000000000007a6e4:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a6e7:
	mov -944(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a6ea:
	mov -936(%RBP),%RSP
	add $-1080, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9b3
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a71c
	jmp uuid_000000000007a71e
uuid_000000000007a71c:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a709
	jmp uuid_000000000007a70b
uuid_000000000007a709:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6f7
	jmp uuid_000000000007a6f9
uuid_000000000007a6f7:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	jmp uuid_000000000007a6f4
	jmp uuid_000000000007a6f6
uuid_000000000007a6f4:
	movb $1, -1360(%rbp)
uuid_000000000007a6f6:
	mov -1376(%RBP),%RSP
	add $-1400, %RSP
uuid_000000000007a6f9:
	mov -1368(%RBP),%RSP
	add $-1400, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a706
	jmp uuid_000000000007a708
uuid_000000000007a706:
	push %RBP
	mov -1240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a700
	jmp uuid_000000000007a702
uuid_000000000007a700:
	push %RBP
	jmp uuid_000000000007a6fd
	jmp uuid_000000000007a6ff
uuid_000000000007a6fd:
	push %RBP
	jmp uuid_000000000007a6fa
	jmp uuid_000000000007a6fc
uuid_000000000007a6fa:
	movb $1, -1488(%rbp)
uuid_000000000007a6fc:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007a6ff:
	mov -1504(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007a702:
	mov -1496(%RBP),%RSP
	add $-1512, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a703
	jmp uuid_000000000007a705
uuid_000000000007a703:
	movb $1, -1264(%rbp)
uuid_000000000007a705:
	mov -1408(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007a708:
	mov -1280(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007a70b:
	mov -1272(%RBP),%RSP
	add $-1512, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a719
	jmp uuid_000000000007a71b
uuid_000000000007a719:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a713
	jmp uuid_000000000007a715
uuid_000000000007a713:
	push %RBP
	jmp uuid_000000000007a710
	jmp uuid_000000000007a712
uuid_000000000007a710:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a70d
	jmp uuid_000000000007a70f
uuid_000000000007a70d:
	movb $1, -1600(%rbp)
uuid_000000000007a70f:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007a712:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007a715:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
	mov -1600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a716
	jmp uuid_000000000007a718
uuid_000000000007a716:
	movb $1, -1168(%rbp)
uuid_000000000007a718:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007a71b:
	mov -1184(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007a71e:
	mov -1176(%RBP),%RSP
	add $-1632, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9b0
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a759
	jmp uuid_000000000007a75b
uuid_000000000007a759:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a747
	jmp uuid_000000000007a749
uuid_000000000007a747:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a73e
	jmp uuid_000000000007a740
uuid_000000000007a73e:
	push %RBP
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	jmp uuid_000000000007a73b
	jmp uuid_000000000007a73d
uuid_000000000007a73b:
	movb $1, -1912(%rbp)
uuid_000000000007a73d:
	mov -1928(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007a740:
	mov -1920(%RBP),%RSP
	add $-1952, %RSP
	mov -1912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a744
	jmp uuid_000000000007a746
uuid_000000000007a744:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a741
	jmp uuid_000000000007a743
uuid_000000000007a741:
	movb $1, -1816(%rbp)
uuid_000000000007a743:
	mov -1960(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007a746:
	mov -1832(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007a749:
	mov -1824(%RBP),%RSP
	add $-2032, %RSP
	mov -1816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a756
	jmp uuid_000000000007a758
uuid_000000000007a756:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2112(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a750
	jmp uuid_000000000007a752
uuid_000000000007a750:
	push %RBP
	jmp uuid_000000000007a74d
	jmp uuid_000000000007a74f
uuid_000000000007a74d:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a74a
	jmp uuid_000000000007a74c
uuid_000000000007a74a:
	movb $1, -2120(%rbp)
uuid_000000000007a74c:
	mov -2144(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007a74f:
	mov -2136(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007a752:
	mov -2128(%RBP),%RSP
	add $-2152, %RSP
	mov -2120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a753
	jmp uuid_000000000007a755
uuid_000000000007a753:
	movb $1, -1720(%rbp)
uuid_000000000007a755:
	mov -2040(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007a758:
	mov -1736(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007a75b:
	mov -1728(%RBP),%RSP
	add $-2152, %RSP
	mov -1720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9ad
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a788
	jmp uuid_000000000007a78a
uuid_000000000007a788:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a775
	jmp uuid_000000000007a777
uuid_000000000007a775:
	push %RBP
	jmp uuid_000000000007a772
	jmp uuid_000000000007a774
uuid_000000000007a772:
	push %RBP
	mov -2264(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a76f
	jmp uuid_000000000007a771
uuid_000000000007a76f:
	movb $1, -2336(%rbp)
uuid_000000000007a771:
	mov -2360(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007a774:
	mov -2352(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007a777:
	mov -2344(%RBP),%RSP
	add $-2368, %RSP
	mov -2336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a785
	jmp uuid_000000000007a787
uuid_000000000007a785:
	push %RBP
	mov -2216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a77f
	jmp uuid_000000000007a781
uuid_000000000007a77f:
	push %RBP
	jmp uuid_000000000007a77c
	jmp uuid_000000000007a77e
uuid_000000000007a77c:
	push %RBP
	mov -2384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2488(%rbp)
	pushq $uuid_000000000007a778
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a779
	jmp uuid_000000000007a77b
uuid_000000000007a779:
	movb $1, -2456(%rbp)
uuid_000000000007a77b:
	mov -2480(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007a77e:
	mov -2472(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007a781:
	mov -2464(%RBP),%RSP
	add $-2488, %RSP
	mov -2456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a782
	jmp uuid_000000000007a784
uuid_000000000007a782:
	movb $1, -2240(%rbp)
uuid_000000000007a784:
	mov -2376(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007a787:
	mov -2256(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007a78a:
	mov -2248(%RBP),%RSP
	add $-2488, %RSP
	mov -2240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9aa
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7a5
	jmp uuid_000000000007a7a7
uuid_000000000007a7a5:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a792
	jmp uuid_000000000007a794
uuid_000000000007a792:
	push %RBP
	jmp uuid_000000000007a78f
	jmp uuid_000000000007a791
uuid_000000000007a78f:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a78c
	jmp uuid_000000000007a78e
uuid_000000000007a78c:
	movb $1, -2672(%rbp)
uuid_000000000007a78e:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007a791:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007a794:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7a2
	jmp uuid_000000000007a7a4
uuid_000000000007a7a2:
	push %RBP
	mov -2552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a79c
	jmp uuid_000000000007a79e
uuid_000000000007a79c:
	push %RBP
	jmp uuid_000000000007a799
	jmp uuid_000000000007a79b
uuid_000000000007a799:
	push %RBP
	mov -2720(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2824(%rbp)
	pushq $uuid_000000000007a795
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a796
	jmp uuid_000000000007a798
uuid_000000000007a796:
	movb $1, -2792(%rbp)
uuid_000000000007a798:
	mov -2816(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007a79b:
	mov -2808(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007a79e:
	mov -2800(%RBP),%RSP
	add $-2824, %RSP
	mov -2792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a79f
	jmp uuid_000000000007a7a1
uuid_000000000007a79f:
	movb $1, -2576(%rbp)
uuid_000000000007a7a1:
	mov -2712(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007a7a4:
	mov -2592(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007a7a7:
	mov -2584(%RBP),%RSP
	add $-2824, %RSP
	mov -2576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9a7
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2904(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7ca
	jmp uuid_000000000007a7cc
uuid_000000000007a7ca:
	push %RBP
	mov -2896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a7c7
	jmp uuid_000000000007a7c9
uuid_000000000007a7c7:
	push %RBP
	mov -2888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7c1
	jmp uuid_000000000007a7c3
uuid_000000000007a7c1:
	push %RBP
	mov -3072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a7be
	jmp uuid_000000000007a7c0
uuid_000000000007a7be:
	push %RBP
	mov -3064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7b8
	jmp uuid_000000000007a7ba
uuid_000000000007a7b8:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a7b5
	jmp uuid_000000000007a7b7
uuid_000000000007a7b5:
	push %RBP
	mov -3240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7af
	jmp uuid_000000000007a7b1
uuid_000000000007a7af:
	push %RBP
	jmp uuid_000000000007a7ac
	jmp uuid_000000000007a7ae
uuid_000000000007a7ac:
	push %RBP
	mov -3368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3472(%rbp)
	pushq $uuid_000000000007a7a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7a9
	jmp uuid_000000000007a7ab
uuid_000000000007a7a9:
	movb $1, -3440(%rbp)
uuid_000000000007a7ab:
	mov -3464(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7ae:
	mov -3456(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7b1:
	mov -3448(%RBP),%RSP
	add $-3472, %RSP
	mov -3440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7b2
	jmp uuid_000000000007a7b4
uuid_000000000007a7b2:
	movb $1, -3264(%rbp)
uuid_000000000007a7b4:
	mov -3360(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7b7:
	mov -3280(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7ba:
	mov -3272(%RBP),%RSP
	add $-3472, %RSP
	mov -3264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7bb
	jmp uuid_000000000007a7bd
uuid_000000000007a7bb:
	movb $1, -3088(%rbp)
uuid_000000000007a7bd:
	mov -3184(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7c0:
	mov -3104(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7c3:
	mov -3096(%RBP),%RSP
	add $-3472, %RSP
	mov -3088(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7c4
	jmp uuid_000000000007a7c6
uuid_000000000007a7c4:
	movb $1, -2912(%rbp)
uuid_000000000007a7c6:
	mov -3008(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7c9:
	mov -2928(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007a7cc:
	mov -2920(%RBP),%RSP
	add $-3472, %RSP
	mov -2912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9a4
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -3552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7ee
	jmp uuid_000000000007a7f0
uuid_000000000007a7ee:
	push %RBP
	mov -3544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7dc
	jmp uuid_000000000007a7de
uuid_000000000007a7dc:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3744(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7d3
	jmp uuid_000000000007a7d5
uuid_000000000007a7d3:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_000000000007a7d0
	jmp uuid_000000000007a7d2
uuid_000000000007a7d0:
	movb $1, -3752(%rbp)
uuid_000000000007a7d2:
	mov -3768(%RBP),%RSP
	add $-3792, %RSP
uuid_000000000007a7d5:
	mov -3760(%RBP),%RSP
	add $-3792, %RSP
	mov -3752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7d9
	jmp uuid_000000000007a7db
uuid_000000000007a7d9:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a7d6
	jmp uuid_000000000007a7d8
uuid_000000000007a7d6:
	movb $1, -3656(%rbp)
uuid_000000000007a7d8:
	mov -3800(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007a7db:
	mov -3672(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007a7de:
	mov -3664(%RBP),%RSP
	add $-3872, %RSP
	mov -3656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7eb
	jmp uuid_000000000007a7ed
uuid_000000000007a7eb:
	push %RBP
	mov -3536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7e5
	jmp uuid_000000000007a7e7
uuid_000000000007a7e5:
	push %RBP
	jmp uuid_000000000007a7e2
	jmp uuid_000000000007a7e4
uuid_000000000007a7e2:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3992(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7df
	jmp uuid_000000000007a7e1
uuid_000000000007a7df:
	movb $1, -3960(%rbp)
uuid_000000000007a7e1:
	mov -3984(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007a7e4:
	mov -3976(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007a7e7:
	mov -3968(%RBP),%RSP
	add $-3992, %RSP
	mov -3960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a7e8
	jmp uuid_000000000007a7ea
uuid_000000000007a7e8:
	movb $1, -3560(%rbp)
uuid_000000000007a7ea:
	mov -3880(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007a7ed:
	mov -3576(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007a7f0:
	mov -3568(%RBP),%RSP
	add $-3992, %RSP
	mov -3560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9a1
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a834
	jmp uuid_000000000007a836
uuid_000000000007a834:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a821
	jmp uuid_000000000007a823
uuid_000000000007a821:
	push %RBP
	jmp uuid_000000000007a81e
	jmp uuid_000000000007a820
uuid_000000000007a81e:
	movb $1, -4176(%rbp)
uuid_000000000007a820:
	mov -4192(%RBP),%RSP
	add $-4192, %RSP
uuid_000000000007a823:
	mov -4184(%RBP),%RSP
	add $-4192, %RSP
	mov -4176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a831
	jmp uuid_000000000007a833
uuid_000000000007a831:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a82b
	jmp uuid_000000000007a82d
uuid_000000000007a82b:
	push %RBP
	jmp uuid_000000000007a828
	jmp uuid_000000000007a82a
uuid_000000000007a828:
	push %RBP
	mov -4208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq $uuid_000000000007a824
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a825
	jmp uuid_000000000007a827
uuid_000000000007a825:
	movb $1, -4280(%rbp)
uuid_000000000007a827:
	mov -4304(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007a82a:
	mov -4296(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007a82d:
	mov -4288(%RBP),%RSP
	add $-4312, %RSP
	mov -4280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a82e
	jmp uuid_000000000007a830
uuid_000000000007a82e:
	movb $1, -4080(%rbp)
uuid_000000000007a830:
	mov -4200(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007a833:
	mov -4096(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007a836:
	mov -4088(%RBP),%RSP
	add $-4312, %RSP
	mov -4080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a99e
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a855
	jmp uuid_000000000007a857
uuid_000000000007a855:
	push %RBP
	mov -4384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a852
	jmp uuid_000000000007a854
uuid_000000000007a852:
	push %RBP
	mov -4376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a84c
	jmp uuid_000000000007a84e
uuid_000000000007a84c:
	push %RBP
	jmp uuid_000000000007a849
	jmp uuid_000000000007a84b
uuid_000000000007a849:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	pushq $uuid_000000000007a845
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a846
	jmp uuid_000000000007a848
uuid_000000000007a846:
	movb $1, -4576(%rbp)
uuid_000000000007a848:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007a84b:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007a84e:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
	mov -4576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a84f
	jmp uuid_000000000007a851
uuid_000000000007a84f:
	movb $1, -4400(%rbp)
uuid_000000000007a851:
	mov -4496(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007a854:
	mov -4416(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007a857:
	mov -4408(%RBP),%RSP
	add $-4608, %RSP
	mov -4400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a99b
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a868
	jmp uuid_000000000007a86a
uuid_000000000007a868:
	push %RBP
	mov -4680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a865
	jmp uuid_000000000007a867
uuid_000000000007a865:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a85f
	jmp uuid_000000000007a861
uuid_000000000007a85f:
	push %RBP
	jmp uuid_000000000007a85c
	jmp uuid_000000000007a85e
uuid_000000000007a85c:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq $uuid_000000000007a858
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a859
	jmp uuid_000000000007a85b
uuid_000000000007a859:
	movb $1, -4872(%rbp)
uuid_000000000007a85b:
	mov -4896(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007a85e:
	mov -4888(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007a861:
	mov -4880(%RBP),%RSP
	add $-4904, %RSP
	mov -4872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a862
	jmp uuid_000000000007a864
uuid_000000000007a862:
	movb $1, -4696(%rbp)
uuid_000000000007a864:
	mov -4792(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007a867:
	mov -4712(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007a86a:
	mov -4704(%RBP),%RSP
	add $-4904, %RSP
	mov -4696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a998
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8c9
	jmp uuid_000000000007a8cb
uuid_000000000007a8c9:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8c6
	jmp uuid_000000000007a8c8
uuid_000000000007a8c6:
	push %RBP
	mov -4968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8c0
	jmp uuid_000000000007a8c2
uuid_000000000007a8c0:
	push %RBP
	pushq -5136(%RBP)
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	jmp uuid_000000000007a8bd
	jmp uuid_000000000007a8bf
uuid_000000000007a8bd:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8ba
	jmp uuid_000000000007a8bc
uuid_000000000007a8ba:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8b4
	jmp uuid_000000000007a8b6
uuid_000000000007a8b4:
	push %RBP
	jmp uuid_000000000007a8b1
	jmp uuid_000000000007a8b3
uuid_000000000007a8b1:
	push %RBP
	mov -5304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a8ae
	jmp uuid_000000000007a8b0
uuid_000000000007a8ae:
	movb $1, -5376(%rbp)
uuid_000000000007a8b0:
	mov -5400(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8b3:
	mov -5392(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8b6:
	mov -5384(%RBP),%RSP
	add $-5408, %RSP
	mov -5376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a8b7
	jmp uuid_000000000007a8b9
uuid_000000000007a8b7:
	movb $1, -5168(%rbp)
uuid_000000000007a8b9:
	mov -5296(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8bc:
	mov -5216(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8bf:
	mov -5184(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8c2:
	mov -5176(%RBP),%RSP
	add $-5408, %RSP
	mov -5168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a8c3
	jmp uuid_000000000007a8c5
uuid_000000000007a8c3:
	movb $1, -4992(%rbp)
uuid_000000000007a8c5:
	mov -5088(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8c8:
	mov -5008(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007a8cb:
	mov -5000(%RBP),%RSP
	add $-5408, %RSP
	mov -4992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a995
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8f7
	jmp uuid_000000000007a8f9
uuid_000000000007a8f7:
	push %RBP
	mov -5480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8f4
	jmp uuid_000000000007a8f6
uuid_000000000007a8f4:
	push %RBP
	mov -5472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8f1
	jmp uuid_000000000007a8f3
uuid_000000000007a8f1:
	movb $1, -5496(%rbp)
uuid_000000000007a8f3:
	mov -5592(%RBP),%RSP
	add $-5664, %RSP
uuid_000000000007a8f6:
	mov -5512(%RBP),%RSP
	add $-5664, %RSP
uuid_000000000007a8f9:
	mov -5504(%RBP),%RSP
	add $-5664, %RSP
	mov -5496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a992
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a92d
	jmp uuid_000000000007a92f
uuid_000000000007a92d:
	push %RBP
	pushq -5720(%RBP)
	pushq -5728(%RBP)
	pushq -5736(%RBP)
	jmp uuid_000000000007a92a
	jmp uuid_000000000007a92c
uuid_000000000007a92a:
	push %RBP
	mov -5712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a927
	jmp uuid_000000000007a929
uuid_000000000007a927:
	push %RBP
	mov -5704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a924
	jmp uuid_000000000007a926
uuid_000000000007a924:
	movb $1, -5752(%rbp)
uuid_000000000007a926:
	mov -5880(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007a929:
	mov -5800(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007a92c:
	mov -5768(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007a92f:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
	mov -5752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a98f
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a963
	jmp uuid_000000000007a965
uuid_000000000007a963:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	jmp uuid_000000000007a960
	jmp uuid_000000000007a962
uuid_000000000007a960:
	push %RBP
	mov -5968(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a95d
	jmp uuid_000000000007a95f
uuid_000000000007a95d:
	movb $1, -6040(%rbp)
uuid_000000000007a95f:
	mov -6120(%RBP),%RSP
	add $-6128, %RSP
uuid_000000000007a962:
	mov -6056(%RBP),%RSP
	add $-6128, %RSP
uuid_000000000007a965:
	mov -6048(%RBP),%RSP
	add $-6128, %RSP
	mov -6040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a98c
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a96c
	jmp uuid_000000000007a96e
uuid_000000000007a96c:
	push %RBP
	jmp uuid_000000000007a969
	jmp uuid_000000000007a96b
uuid_000000000007a969:
	push %RBP
	mov -6144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a966
	jmp uuid_000000000007a968
uuid_000000000007a966:
	movb $1, -6216(%rbp)
uuid_000000000007a968:
	mov -6240(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007a96b:
	mov -6232(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007a96e:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
	mov -6216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a989
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a97e
	jmp uuid_000000000007a980
uuid_000000000007a97e:
	push %RBP
	jmp uuid_000000000007a97b
	jmp uuid_000000000007a97d
uuid_000000000007a97b:
	movb $1, -6336(%rbp)
uuid_000000000007a97d:
	mov -6352(%RBP),%RSP
	add $-6352, %RSP
uuid_000000000007a980:
	mov -6344(%RBP),%RSP
	add $-6352, %RSP
	mov -6336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a986
	push %RBP
	jmp uuid_000000000007a983
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a982
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a985
uuid_000000000007a983:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a981
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a985:
	mov -6360(%RBP),%RSP
	add $-6360, %RSP
	jmp uuid_000000000007a988
uuid_000000000007a986:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a988:
	mov -6256(%RBP),%RSP
	add $-6352, %RSP
	jmp uuid_000000000007a98b
uuid_000000000007a989:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a978
#call function typeof-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a975
	jmp uuid_000000000007a977
uuid_000000000007a975:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a96f
	jmp uuid_000000000007a971
uuid_000000000007a96f:
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6280(%RBP)
	popq -6272(%RBP)
	popq -6264(%RBP)
uuid_000000000007a971:
	mov -6296(%RBP),%RSP
	add $-6296, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a972
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a919
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a919
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6312(%rbp)
	pushq -6320(%rbp)
	pushq -6328(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007a974
uuid_000000000007a972:
uuid_000000000007a974:
	mov -6304(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007a977:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
	jmp uuid_000000000007a97a
uuid_000000000007a978:
uuid_000000000007a97a:
	mov -6256(%RBP),%RSP
	add $-6256, %RSP
uuid_000000000007a98b:
	mov -6136(%RBP),%RSP
	add $-6256, %RSP
	jmp uuid_000000000007a98e
uuid_000000000007a98c:
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a98e:
	mov -5960(%RBP),%RSP
	add $-6152, %RSP
	jmp uuid_000000000007a991
uuid_000000000007a98f:
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a955
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_000000000007a957
uuid_000000000007a955:
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	push %RBP
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	pushq -6008(%rbp)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq $0
	push %RBP
	mov -6112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a94e
	jmp uuid_000000000007a950
uuid_000000000007a94e:
	push %RBP
	mov -6104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a93c
	jmp uuid_000000000007a93e
uuid_000000000007a93c:
	push %RBP
	mov -6200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6304(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a933
	jmp uuid_000000000007a935
uuid_000000000007a933:
	push %RBP
	pushq -6280(%RBP)
	pushq -6288(%RBP)
	pushq -6296(%RBP)
	jmp uuid_000000000007a930
	jmp uuid_000000000007a932
uuid_000000000007a930:
	movb $1, -6312(%rbp)
uuid_000000000007a932:
	mov -6328(%RBP),%RSP
	add $-6352, %RSP
uuid_000000000007a935:
	mov -6320(%RBP),%RSP
	add $-6352, %RSP
	mov -6312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a939
	jmp uuid_000000000007a93b
uuid_000000000007a939:
	push %RBP
	mov -6192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a936
	jmp uuid_000000000007a938
uuid_000000000007a936:
	movb $1, -6216(%rbp)
uuid_000000000007a938:
	mov -6360(%RBP),%RSP
	add $-6432, %RSP
uuid_000000000007a93b:
	mov -6232(%RBP),%RSP
	add $-6432, %RSP
uuid_000000000007a93e:
	mov -6224(%RBP),%RSP
	add $-6432, %RSP
	mov -6216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a94b
	jmp uuid_000000000007a94d
uuid_000000000007a94b:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a945
	jmp uuid_000000000007a947
uuid_000000000007a945:
	push %RBP
	jmp uuid_000000000007a942
	jmp uuid_000000000007a944
uuid_000000000007a942:
	push %RBP
	mov -6448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6552(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a93f
	jmp uuid_000000000007a941
uuid_000000000007a93f:
	movb $1, -6520(%rbp)
uuid_000000000007a941:
	mov -6544(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007a944:
	mov -6536(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007a947:
	mov -6528(%RBP),%RSP
	add $-6552, %RSP
	mov -6520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a948
	jmp uuid_000000000007a94a
uuid_000000000007a948:
	movb $1, -6120(%rbp)
uuid_000000000007a94a:
	mov -6440(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007a94d:
	mov -6136(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007a950:
	mov -6128(%RBP),%RSP
	add $-6552, %RSP
	mov -6120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a952
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a951
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a954
uuid_000000000007a952:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6368(%rbp)
	pushq -6376(%rbp)
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq -6336(%rbp)
	pushq -6344(%rbp)
	pushq -6352(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a954:
	mov -6040(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007a957:
	mov -5960(%RBP),%RSP
	add $-6552, %RSP
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
	pushq -6560(%rbp)
	pushq -6568(%rbp)
	pushq -6576(%rbp)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a95a
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a959
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a959
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007a95c
uuid_000000000007a95a:
uuid_000000000007a95c:
	mov -6608(%RBP),%RSP
	add $-6608, %RSP
uuid_000000000007a991:
	mov -5672(%RBP),%RSP
	add $-6608, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a994
uuid_000000000007a992:
	pushq $3
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8fa
	jmp uuid_000000000007a8fc
uuid_000000000007a8fa:
	pushq $0
	popq -5672(%RBP)
uuid_000000000007a8fc:
	mov -5680(%RBP),%RSP
	add $-5680, %RSP
	pushq $4
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8fd
	jmp uuid_000000000007a8ff
uuid_000000000007a8fd:
	pushq $3
	popq -5688(%RBP)
uuid_000000000007a8ff:
	mov -5696(%RBP),%RSP
	add $-5696, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5672(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a900
	jmp uuid_000000000007a902
uuid_000000000007a900:
	pushq $0
	popq -5688(%RBP)
uuid_000000000007a902:
	mov -5704(%RBP),%RSP
	add $-5704, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function apply-or-cons-and-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a903
	jmp uuid_000000000007a905
uuid_000000000007a903:
#call function implicit-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call implicit_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5728(%RBP)
	popq -5720(%RBP)
	popq -5712(%RBP)
uuid_000000000007a905:
	mov -5736(%RBP),%RSP
	add $-5736, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_000000000007a906
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a909
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a90b
uuid_000000000007a909:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a907
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a907
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a906
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007a908
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007a90b:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a921
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a923
uuid_000000000007a921:
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	push %RBP
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	push %RBP
	mov -5952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a912
	jmp uuid_000000000007a914
uuid_000000000007a912:
	push %RBP
	jmp uuid_000000000007a90f
	jmp uuid_000000000007a911
uuid_000000000007a90f:
	push %RBP
	mov -5888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a90c
	jmp uuid_000000000007a90e
uuid_000000000007a90c:
	movb $1, -5960(%rbp)
uuid_000000000007a90e:
	mov -5984(%RBP),%RSP
	add $-5992, %RSP
uuid_000000000007a911:
	mov -5976(%RBP),%RSP
	add $-5992, %RSP
uuid_000000000007a914:
	mov -5968(%RBP),%RSP
	add $-5992, %RSP
	mov -5960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a91e
	push %RBP
	jmp uuid_000000000007a91b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a91a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a91d
uuid_000000000007a91b:
uuid_000000000007a91d:
	mov -6000(%RBP),%RSP
	add $-6000, %RSP
	mov %RSP, %R14
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a920
uuid_000000000007a91e:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a915
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a916
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5992(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a917
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6008(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a918
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a919
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a919
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007a920:
	mov -5880(%RBP),%RSP
	add $-6056, %RSP
uuid_000000000007a923:
	mov -5800(%RBP),%RSP
	add $-6056, %RSP
uuid_000000000007a994:
	mov -5416(%RBP),%RSP
	add $-6056, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a997
uuid_000000000007a995:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5408(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8d0
	jmp uuid_000000000007a8d2
uuid_000000000007a8d0:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8cd
	jmp uuid_000000000007a8cf
uuid_000000000007a8cd:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8cc
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a8cf:
	mov -5448(%RBP),%RSP
	add $-5448, %RSP
uuid_000000000007a8d2:
	mov -5440(%RBP),%RSP
	add $-5448, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8d4
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8d3
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a8d6
uuid_000000000007a8d4:
uuid_000000000007a8d6:
	mov -5480(%RBP),%RSP
	add $-5480, %RSP
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5472(%RBP)
	popq -5464(%RBP)
	popq -5456(%RBP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8e9
	jmp uuid_000000000007a8eb
uuid_000000000007a8e9:
	push %RBP
	jmp uuid_000000000007a8e6
	jmp uuid_000000000007a8e8
uuid_000000000007a8e6:
	push %RBP
	mov -5616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8e0
	jmp uuid_000000000007a8e2
uuid_000000000007a8e0:
	push %RBP
	jmp uuid_000000000007a8dd
	jmp uuid_000000000007a8df
uuid_000000000007a8dd:
	push %RBP
	jmp uuid_000000000007a8da
	jmp uuid_000000000007a8dc
uuid_000000000007a8da:
	push %RBP
	mov -5696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8d7
	jmp uuid_000000000007a8d9
uuid_000000000007a8d7:
	movb $1, -5744(%rbp)
uuid_000000000007a8d9:
	mov -5776(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007a8dc:
	mov -5768(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007a8df:
	mov -5760(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007a8e2:
	mov -5752(%RBP),%RSP
	add $-5848, %RSP
	mov -5744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a8e3
	jmp uuid_000000000007a8e5
uuid_000000000007a8e3:
	movb $1, -5640(%rbp)
uuid_000000000007a8e5:
	mov -5664(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007a8e8:
	mov -5656(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007a8eb:
	mov -5648(%RBP),%RSP
	add $-5848, %RSP
	mov -5640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a8ed
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a8ec
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a8ef
uuid_000000000007a8ed:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a8ef:
	mov -5560(%RBP),%RSP
	add $-5848, %RSP
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -5408(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8f0
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a8f0
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007a997:
	mov -4912(%RBP),%RSP
	add $-5872, %RSP
	jmp uuid_000000000007a99a
uuid_000000000007a998:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a884
	jmp uuid_000000000007a886
uuid_000000000007a884:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a87b
	jmp uuid_000000000007a87d
uuid_000000000007a87b:
	push %RBP
	mov -5040(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a872
	jmp uuid_000000000007a874
uuid_000000000007a872:
	push %RBP
	mov -5104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5176(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a86f
	jmp uuid_000000000007a871
uuid_000000000007a86f:
	push %RBP
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a86c
	jmp uuid_000000000007a86e
uuid_000000000007a86c:
	movb $1, -5120(%rbp)
uuid_000000000007a86e:
	mov -5184(%RBP),%RSP
	add $-5208, %RSP
uuid_000000000007a871:
	mov -5136(%RBP),%RSP
	add $-5208, %RSP
uuid_000000000007a874:
	mov -5128(%RBP),%RSP
	add $-5208, %RSP
	mov -5120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a878
	jmp uuid_000000000007a87a
uuid_000000000007a878:
	push %RBP
	jmp uuid_000000000007a875
	jmp uuid_000000000007a877
uuid_000000000007a875:
	movb $1, -5056(%rbp)
uuid_000000000007a877:
	mov -5216(%RBP),%RSP
	add $-5216, %RSP
uuid_000000000007a87a:
	mov -5072(%RBP),%RSP
	add $-5216, %RSP
uuid_000000000007a87d:
	mov -5064(%RBP),%RSP
	add $-5216, %RSP
	mov -5056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a881
	jmp uuid_000000000007a883
uuid_000000000007a881:
	push %RBP
	mov -4968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5232(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a87e
	jmp uuid_000000000007a880
uuid_000000000007a87e:
	movb $1, -4992(%rbp)
uuid_000000000007a880:
	mov -5224(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007a883:
	mov -5008(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007a886:
	mov -5000(%RBP),%RSP
	add $-5232, %RSP
	mov -4992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a8ab
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -5264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a89f
	jmp uuid_000000000007a8a1
uuid_000000000007a89f:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a896
	jmp uuid_000000000007a898
uuid_000000000007a896:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a88d
	jmp uuid_000000000007a88f
uuid_000000000007a88d:
	push %RBP
	mov -5384(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a88a
	jmp uuid_000000000007a88c
uuid_000000000007a88a:
	push %RBP
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	jmp uuid_000000000007a887
	jmp uuid_000000000007a889
uuid_000000000007a887:
	movb $1, -5400(%rbp)
uuid_000000000007a889:
	mov -5464(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007a88c:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007a88f:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
	mov -5400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a893
	jmp uuid_000000000007a895
uuid_000000000007a893:
	push %RBP
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a890
	jmp uuid_000000000007a892
uuid_000000000007a890:
	movb $1, -5336(%rbp)
uuid_000000000007a892:
	mov -5496(%RBP),%RSP
	add $-5520, %RSP
uuid_000000000007a895:
	mov -5352(%RBP),%RSP
	add $-5520, %RSP
uuid_000000000007a898:
	mov -5344(%RBP),%RSP
	add $-5520, %RSP
	mov -5336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a89c
	jmp uuid_000000000007a89e
uuid_000000000007a89c:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5536(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a899
	jmp uuid_000000000007a89b
uuid_000000000007a899:
	movb $1, -5272(%rbp)
uuid_000000000007a89b:
	mov -5528(%RBP),%RSP
	add $-5536, %RSP
uuid_000000000007a89e:
	mov -5288(%RBP),%RSP
	add $-5536, %RSP
uuid_000000000007a8a1:
	mov -5280(%RBP),%RSP
	add $-5536, %RSP
	mov -5272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a8a8
	push %RBP
	jmp uuid_000000000007a8a5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a8a4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a8a7
uuid_000000000007a8a5:
uuid_000000000007a8a7:
	mov -5544(%RBP),%RSP
	add $-5544, %RSP
	jmp uuid_000000000007a8aa
uuid_000000000007a8a8:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8a2
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a8a2
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -4928(%RBP)
	popq -4920(%RBP)
	popq -4912(%RBP)
uuid_000000000007a8aa:
	mov -5240(%RBP),%RSP
	add $-5536, %RSP
	jmp uuid_000000000007a8ad
uuid_000000000007a8ab:
uuid_000000000007a8ad:
	mov -4960(%RBP),%RSP
	add $-5232, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a99a:
	mov -4616(%RBP),%RSP
	add $-5232, %RSP
	jmp uuid_000000000007a99d
uuid_000000000007a99b:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq $1
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a99d:
	mov -4320(%RBP),%RSP
	add $-4608, %RSP
	jmp uuid_000000000007a9a0
uuid_000000000007a99e:
#call function as-constant : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a837
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call as_SB_constant_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq $0
	push %RBP
	mov -4488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a83e
	jmp uuid_000000000007a840
uuid_000000000007a83e:
	push %RBP
	jmp uuid_000000000007a83b
	jmp uuid_000000000007a83d
uuid_000000000007a83b:
	push %RBP
	mov -4472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a838
	jmp uuid_000000000007a83a
uuid_000000000007a838:
	movb $1, -4496(%rbp)
uuid_000000000007a83a:
	mov -4520(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007a83d:
	mov -4512(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007a840:
	mov -4504(%RBP),%RSP
	add $-4592, %RSP
	mov -4496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a842
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a841
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a844
uuid_000000000007a842:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a844:
	mov -4416(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007a9a0:
	mov -4000(%RBP),%RSP
	add $-4592, %RSP
	jmp uuid_000000000007a9a3
uuid_000000000007a9a1:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	push %RBP
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7f7
	jmp uuid_000000000007a7f9
uuid_000000000007a7f7:
	push %RBP
	jmp uuid_000000000007a7f4
	jmp uuid_000000000007a7f6
uuid_000000000007a7f4:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a7f1
	jmp uuid_000000000007a7f3
uuid_000000000007a7f1:
	movb $1, -4176(%rbp)
uuid_000000000007a7f3:
	mov -4200(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007a7f6:
	mov -4192(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007a7f9:
	mov -4184(%RBP),%RSP
	add $-4208, %RSP
	mov -4176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a80e
	push %RBP
	jmp uuid_000000000007a80b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a80a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a80d
uuid_000000000007a80b:
uuid_000000000007a80d:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	jmp uuid_000000000007a810
uuid_000000000007a80e:
	push %RBP
#call function is-reg8 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7fb
	jmp uuid_000000000007a7fd
uuid_000000000007a7fb:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a7fa
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007a7fd:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	push %RBP
#call function is-reg16 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7ff
	jmp uuid_000000000007a801
uuid_000000000007a7ff:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a7fe
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007a801:
	mov -4224(%RBP),%RSP
	add $-4224, %RSP
	push %RBP
#call function is-reg32 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a803
	jmp uuid_000000000007a805
uuid_000000000007a803:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a802
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007a805:
	mov -4232(%RBP),%RSP
	add $-4232, %RSP
	push %RBP
#call function is-reg64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a807
	jmp uuid_000000000007a809
uuid_000000000007a807:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a806
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007a809:
	mov -4240(%RBP),%RSP
	add $-4240, %RSP
uuid_000000000007a810:
	mov -4096(%RBP),%RSP
	add $-4240, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a81b
	jmp uuid_000000000007a81d
uuid_000000000007a81b:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a811
	jmp uuid_000000000007a813
uuid_000000000007a811:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_000000000007a813:
	mov -4280(%RBP),%RSP
	add $-4280, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq $uuid_000000000007a814
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a818
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a815
	jmp uuid_000000000007a817
uuid_000000000007a815:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_000000000007a817:
	mov -4320(%RBP),%RSP
	add $-4320, %RSP
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
	jmp uuid_000000000007a81a
uuid_000000000007a818:
uuid_000000000007a81a:
	mov -4288(%RBP),%RSP
	add $-4288, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a81d:
	mov -4248(%RBP),%RSP
	add $-4288, %RSP
uuid_000000000007a9a3:
	mov -3480(%RBP),%RSP
	add $-4288, %RSP
	jmp uuid_000000000007a9a6
uuid_000000000007a9a4:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7cd
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	mov %RSP, %R14
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a7cf
uuid_000000000007a7cd:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	pushq -3592(%rbp)
	pushq -3600(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_000000000007a7cf:
	mov -3480(%RBP),%RSP
	add $-3720, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a9a6:
	mov -2832(%RBP),%RSP
	add $-3720, %RSP
	jmp uuid_000000000007a9a9
uuid_000000000007a9a7:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a9a9:
	mov -2496(%RBP),%RSP
	add $-2824, %RSP
	jmp uuid_000000000007a9ac
uuid_000000000007a9aa:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2368(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a78b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a9ac:
	mov -2160(%RBP),%RSP
	add $-2488, %RSP
	jmp uuid_000000000007a9af
uuid_000000000007a9ad:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq $0
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a76c
	jmp uuid_000000000007a76e
uuid_000000000007a76c:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a75c
	jmp uuid_000000000007a75e
uuid_000000000007a75c:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	movq -2240(%rbp), %r15
	movq %r15, -1952(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -1944(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -1936(%rbp)
uuid_000000000007a75e:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq $0
	push %RBP
	mov -2392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a765
	jmp uuid_000000000007a767
uuid_000000000007a765:
	push %RBP
	mov -2384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a762
	jmp uuid_000000000007a764
uuid_000000000007a762:
	push %RBP
	mov -2376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a75f
	jmp uuid_000000000007a761
uuid_000000000007a75f:
	movb $1, -2400(%rbp)
uuid_000000000007a761:
	mov -2496(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007a764:
	mov -2416(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007a767:
	mov -2408(%RBP),%RSP
	add $-2568, %RSP
	mov -2400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a769
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a768
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a76b
uuid_000000000007a769:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a76b:
	mov -2320(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007a76e:
	mov -2184(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007a9af:
	mov -1640(%RBP),%RSP
	add $-2568, %RSP
	jmp uuid_000000000007a9b2
uuid_000000000007a9b0:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a72e
	jmp uuid_000000000007a730
uuid_000000000007a72e:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a725
	jmp uuid_000000000007a727
uuid_000000000007a725:
	push %RBP
	jmp uuid_000000000007a722
	jmp uuid_000000000007a724
uuid_000000000007a722:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a71f
	jmp uuid_000000000007a721
uuid_000000000007a71f:
	movb $1, -1888(%rbp)
uuid_000000000007a721:
	mov -1912(%RBP),%RSP
	add $-1984, %RSP
uuid_000000000007a724:
	mov -1904(%RBP),%RSP
	add $-1984, %RSP
uuid_000000000007a727:
	mov -1896(%RBP),%RSP
	add $-1984, %RSP
	mov -1888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a72b
	jmp uuid_000000000007a72d
uuid_000000000007a72b:
	push %RBP
	jmp uuid_000000000007a728
	jmp uuid_000000000007a72a
uuid_000000000007a728:
	movb $1, -1792(%rbp)
uuid_000000000007a72a:
	mov -1992(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007a72d:
	mov -1808(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007a730:
	mov -1800(%RBP),%RSP
	add $-1992, %RSP
	mov -1792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a738
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007a737
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a73a
uuid_000000000007a738:
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a731
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_000000000007a733
uuid_000000000007a731:
uuid_000000000007a733:
	mov -2000(%RBP),%RSP
	add $-2000, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a734
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a736
uuid_000000000007a734:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
uuid_000000000007a736:
	mov -2032(%RBP),%RSP
	add $-2032, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a73a:
	mov -1712(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007a9b2:
	mov -1088(%RBP),%RSP
	add $-2032, %RSP
	jmp uuid_000000000007a9b5
uuid_000000000007a9b3:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6f1
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6ee
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6eb
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ec
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a6ec
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007a6f0
uuid_000000000007a6ee:
uuid_000000000007a6f0:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_000000000007a6f3
uuid_000000000007a6f1:
uuid_000000000007a6f3:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007a9b5:
	mov -848(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007a9b8
uuid_000000000007a9b6:
uuid_000000000007a9b8:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a9bb
uuid_000000000007a9b9:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_000000000007a9bb:
	mov -480(%RBP),%RSP
	add $-848, %RSP
	jmp uuid_000000000007a9be
uuid_000000000007a9bc:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a9be:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007a9c1
uuid_000000000007a9bf:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a9c1:
	mov -320(%RBP),%RSP
	add $-392, %RSP
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9c2
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007a9c4
uuid_000000000007a9c2:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a919
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007a919
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007a9c4:
	mov -400(%RBP),%RSP
	add $-424, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $240, %rsp
	ret
add_SB_alias_CL_ArrowNilConsTypeConsStringString:
#call function cons : Arrow<Cons<Tuple<Tuple<String,String>,Type>,List<Tuple<Tuple<String,String>,Type>>>,List<Tuple<Tuple<String,String>,Type>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $48, %rsp
	ret
find_SB_alias_CL_ArrowStringConsTypeString:
	pushq -8(%rbp)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007aa24:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa25
	jmp uuid_000000000007aa26
uuid_000000000007aa25:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9e9
	jmp uuid_000000000007a9eb
uuid_000000000007a9e9:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a9e6
	jmp uuid_000000000007a9e8
uuid_000000000007a9e6:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_000000000007a9e3
	jmp uuid_000000000007a9e5
uuid_000000000007a9e3:
	movb $1, -280(%rbp)
uuid_000000000007a9e5:
	mov -376(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007a9e8:
	mov -296(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007a9eb:
	mov -288(%RBP),%RSP
	add $-432, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa21
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aa20
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa23
uuid_000000000007aa21:
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	push %RBP
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa16
	jmp uuid_000000000007aa18
uuid_000000000007aa16:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa04
	jmp uuid_000000000007aa06
uuid_000000000007aa04:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9fb
	jmp uuid_000000000007a9fd
uuid_000000000007a9fb:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9f2
	jmp uuid_000000000007a9f4
uuid_000000000007a9f2:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9ef
	jmp uuid_000000000007a9f1
uuid_000000000007a9ef:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_000000000007a9ec
	jmp uuid_000000000007a9ee
uuid_000000000007a9ec:
	movb $1, -736(%rbp)
uuid_000000000007a9ee:
	mov -800(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007a9f1:
	mov -752(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007a9f4:
	mov -744(%RBP),%RSP
	add $-824, %RSP
	mov -736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007a9f8
	jmp uuid_000000000007a9fa
uuid_000000000007a9f8:
	push %RBP
	jmp uuid_000000000007a9f5
	jmp uuid_000000000007a9f7
uuid_000000000007a9f5:
	movb $1, -672(%rbp)
uuid_000000000007a9f7:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007a9fa:
	mov -688(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007a9fd:
	mov -680(%RBP),%RSP
	add $-832, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa01
	jmp uuid_000000000007aa03
uuid_000000000007aa01:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9fe
	jmp uuid_000000000007aa00
uuid_000000000007a9fe:
	movb $1, -608(%rbp)
uuid_000000000007aa00:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007aa03:
	mov -624(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007aa06:
	mov -616(%RBP),%RSP
	add $-848, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa13
	jmp uuid_000000000007aa15
uuid_000000000007aa13:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa0d
	jmp uuid_000000000007aa0f
uuid_000000000007aa0d:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aa0a
	jmp uuid_000000000007aa0c
uuid_000000000007aa0a:
	push %RBP
	mov -864(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aa07
	jmp uuid_000000000007aa09
uuid_000000000007aa07:
	movb $1, -888(%rbp)
uuid_000000000007aa09:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007aa0c:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007aa0f:
	mov -896(%RBP),%RSP
	add $-928, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa10
	jmp uuid_000000000007aa12
uuid_000000000007aa10:
	movb $1, -560(%rbp)
uuid_000000000007aa12:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007aa15:
	mov -576(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007aa18:
	mov -568(%RBP),%RSP
	add $-928, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa1d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aa1c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa1f
uuid_000000000007aa1d:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa19
	jmp uuid_000000000007aa1b
uuid_000000000007aa19:
	movq -912(%rbp), %r15
	movq %r15, -48(%rbp)
	mov -912(%rbp), %r15
	mov %r15, -48(%rbp)
uuid_000000000007aa1b:
	mov -936(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007aa1f:
	mov -496(%RBP),%RSP
	add $-936, %RSP
	movq -368(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007aa23:
	mov -200(%RBP),%RSP
	add $-936, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007aa24
uuid_000000000007aa26:
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
find_SB_alias_SB_type_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $3
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007aa5c:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa5d
	jmp uuid_000000000007aa5e
uuid_000000000007aa5d:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa39
	jmp uuid_000000000007aa3b
uuid_000000000007aa39:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa36
	jmp uuid_000000000007aa38
uuid_000000000007aa36:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	jmp uuid_000000000007aa33
	jmp uuid_000000000007aa35
uuid_000000000007aa33:
	movb $1, -272(%rbp)
uuid_000000000007aa35:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007aa38:
	mov -288(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007aa3b:
	mov -280(%RBP),%RSP
	add $-424, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa59
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aa58
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa5b
uuid_000000000007aa59:
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa4b
	jmp uuid_000000000007aa4d
uuid_000000000007aa4b:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007aa48
	jmp uuid_000000000007aa4a
uuid_000000000007aa48:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa42
	jmp uuid_000000000007aa44
uuid_000000000007aa42:
	push %RBP
	mov -616(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aa3f
	jmp uuid_000000000007aa41
uuid_000000000007aa3f:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aa3c
	jmp uuid_000000000007aa3e
uuid_000000000007aa3c:
	movb $1, -632(%rbp)
uuid_000000000007aa3e:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007aa41:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007aa44:
	mov -640(%RBP),%RSP
	add $-672, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa45
	jmp uuid_000000000007aa47
uuid_000000000007aa45:
	movb $1, -552(%rbp)
uuid_000000000007aa47:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007aa4a:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007aa4d:
	mov -560(%RBP),%RSP
	add $-672, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aa55
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aa54
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa57
uuid_000000000007aa55:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa51
	jmp uuid_000000000007aa53
uuid_000000000007aa51:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa4e
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	jmp uuid_000000000007aa50
uuid_000000000007aa4e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007aa50:
	mov -688(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007aa53:
	mov -680(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007aa57:
	mov -488(%RBP),%RSP
	add $-688, %RSP
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007aa5b:
	mov -192(%RBP),%RSP
	add $-688, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007aa5c
uuid_000000000007aa5e:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_class_SB_exists_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>,Tuple<Tuple<String,U64>,U64>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_as_SB_special_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_special_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
index_SB_lone_SB_tag_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_lone_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64Type:
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $uuid_000000000007aaab
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function global-is-seen : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call global_SB_is_SB_seen_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaae
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aab0
uuid_000000000007aaae:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaac
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007aab0:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
global_SB_is_SB_seen_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
has_SB_only_SB_child_CL_ArrowNilConsStringString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,String>,?>,String>,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
get_SB_only_SB_child_CL_ArrowStringString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,String>,String>,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $uuid_000000000007a365
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_of_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
size_SB_of_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaeb
	jmp uuid_000000000007aaed
uuid_000000000007aaeb:
	push %RBP
	jmp uuid_000000000007aae8
	jmp uuid_000000000007aaea
uuid_000000000007aae8:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aae5
	jmp uuid_000000000007aae7
uuid_000000000007aae5:
	movb $1, -104(%rbp)
uuid_000000000007aae7:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007aaea:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007aaed:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aaf3
	push %RBP
	jmp uuid_000000000007aaf0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aaef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aaf2
uuid_000000000007aaf0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaee
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007aaf2:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007aaf5
uuid_000000000007aaf3:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007aaf5:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
class_SB_of_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab35
	jmp uuid_000000000007ab37
uuid_000000000007ab35:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab2b
	jmp uuid_000000000007ab2d
uuid_000000000007ab2b:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab28
	jmp uuid_000000000007ab2a
uuid_000000000007ab28:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab22
	jmp uuid_000000000007ab24
uuid_000000000007ab22:
	push %RBP
	jmp uuid_000000000007ab1f
	jmp uuid_000000000007ab21
uuid_000000000007ab1f:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ab1c
	jmp uuid_000000000007ab1e
uuid_000000000007ab1c:
	movb $1, -304(%rbp)
uuid_000000000007ab1e:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ab21:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ab24:
	mov -312(%RBP),%RSP
	add $-336, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab25
	jmp uuid_000000000007ab27
uuid_000000000007ab25:
	movb $1, -208(%rbp)
uuid_000000000007ab27:
	mov -272(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ab2a:
	mov -224(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ab2d:
	mov -216(%RBP),%RSP
	add $-336, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab32
	jmp uuid_000000000007ab34
uuid_000000000007ab32:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $uuid_000000000007ab2e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab2f
	jmp uuid_000000000007ab31
uuid_000000000007ab2f:
	movb $1, -144(%rbp)
uuid_000000000007ab31:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007ab34:
	mov -160(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007ab37:
	mov -152(%RBP),%RSP
	add $-352, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab56
	push %RBP
	jmp uuid_000000000007ab53
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ab52
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab55
uuid_000000000007ab53:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ab51
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ab55:
	mov -360(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007ab58
uuid_000000000007ab56:
#call function fields-of-tag : Arrow<String,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab3e
	jmp uuid_000000000007ab40
uuid_000000000007ab3e:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab3b
	jmp uuid_000000000007ab3d
uuid_000000000007ab3b:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab38
	jmp uuid_000000000007ab3a
uuid_000000000007ab38:
	movb $1, -480(%rbp)
uuid_000000000007ab3a:
	mov -528(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007ab3d:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007ab40:
	mov -488(%RBP),%RSP
	add $-552, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab4e
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab47
	jmp uuid_000000000007ab49
uuid_000000000007ab47:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007ab44
	jmp uuid_000000000007ab46
uuid_000000000007ab44:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007ab41
	jmp uuid_000000000007ab43
uuid_000000000007ab41:
	movb $1, -624(%rbp)
uuid_000000000007ab43:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007ab46:
	mov -640(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007ab49:
	mov -632(%RBP),%RSP
	add $-696, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab4b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ab4a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab4d
uuid_000000000007ab4b:
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007ab4d:
	mov -560(%RBP),%RSP
	add $-696, %RSP
	jmp uuid_000000000007ab50
uuid_000000000007ab4e:
uuid_000000000007ab50:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007ab58:
	mov -112(%RBP),%RSP
	add $-552, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $uuid_000000000007ab59
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a837
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a917
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a329
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
set_SB_type_SB_fields_CL_ArrowNilConsTypeType:
	pushq $uuid_000000000007a365
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab6e
	jmp uuid_000000000007ab70
uuid_000000000007ab6e:
	push %RBP
	jmp uuid_000000000007ab6b
	jmp uuid_000000000007ab6d
uuid_000000000007ab6b:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ab68
	jmp uuid_000000000007ab6a
uuid_000000000007ab68:
	movb $1, -128(%rbp)
uuid_000000000007ab6a:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007ab6d:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007ab70:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab76
	push %RBP
	jmp uuid_000000000007ab73
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ab72
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab75
uuid_000000000007ab73:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ab71
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ab75:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007ab78
uuid_000000000007ab76:
	movq -160(%rbp), %r15
	movq %r15, -64(%rbp)
	mov -160(%rbp), %r15
	mov %r15, -64(%rbp)
uuid_000000000007ab78:
	mov -96(%RBP),%RSP
	add $-160, %RSP
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -64(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
get_SB_vararg_SB_inner_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab7f
	jmp uuid_000000000007ab81
uuid_000000000007ab7f:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab7c
	jmp uuid_000000000007ab7e
uuid_000000000007ab7c:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab79
	jmp uuid_000000000007ab7b
uuid_000000000007ab79:
	movb $1, -120(%rbp)
uuid_000000000007ab7b:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab7e:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab81:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aba1
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab97
	jmp uuid_000000000007ab99
uuid_000000000007ab97:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab8e
	jmp uuid_000000000007ab90
uuid_000000000007ab8e:
	push %RBP
	jmp uuid_000000000007ab8b
	jmp uuid_000000000007ab8d
uuid_000000000007ab8b:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	jmp uuid_000000000007ab88
	jmp uuid_000000000007ab8a
uuid_000000000007ab88:
	movb $1, -296(%rbp)
uuid_000000000007ab8a:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007ab8d:
	mov -312(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007ab90:
	mov -304(%RBP),%RSP
	add $-344, %RSP
	mov -296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab94
	jmp uuid_000000000007ab96
uuid_000000000007ab94:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab91
	jmp uuid_000000000007ab93
uuid_000000000007ab91:
	movb $1, -232(%rbp)
uuid_000000000007ab93:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ab96:
	mov -248(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ab99:
	mov -240(%RBP),%RSP
	add $-360, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ab9e
	push %RBP
	jmp uuid_000000000007ab9b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ab9a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab9d
uuid_000000000007ab9b:
uuid_000000000007ab9d:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007aba0
uuid_000000000007ab9e:
	movq -344(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007aba0:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007aba3
uuid_000000000007aba1:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab82
	jmp uuid_000000000007ab84
uuid_000000000007ab82:
	movq -192(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab84:
	mov -200(%RBP),%RSP
	add $-200, %RSP
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab85
	jmp uuid_000000000007ab87
uuid_000000000007ab85:
	movq -160(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab87:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007aba3:
	mov -88(%RBP),%RSP
	add $-208, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
is_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abaa
	jmp uuid_000000000007abac
uuid_000000000007abaa:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aba7
	jmp uuid_000000000007aba9
uuid_000000000007aba7:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aba4
	jmp uuid_000000000007aba6
uuid_000000000007aba4:
	movb $1, -104(%rbp)
uuid_000000000007aba6:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007aba9:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007abac:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007abd5
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abb3
	jmp uuid_000000000007abb5
uuid_000000000007abb3:
	push %RBP
	jmp uuid_000000000007abb0
	jmp uuid_000000000007abb2
uuid_000000000007abb0:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a915
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abad
	jmp uuid_000000000007abaf
uuid_000000000007abad:
	movb $1, -216(%rbp)
uuid_000000000007abaf:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007abb2:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007abb5:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007abd2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abbc
	jmp uuid_000000000007abbe
uuid_000000000007abbc:
	push %RBP
	jmp uuid_000000000007abb9
	jmp uuid_000000000007abbb
uuid_000000000007abb9:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abb6
	jmp uuid_000000000007abb8
uuid_000000000007abb6:
	movb $1, -288(%rbp)
uuid_000000000007abb8:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007abbb:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007abbe:
	mov -296(%RBP),%RSP
	add $-320, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007abcf
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abc5
	jmp uuid_000000000007abc7
uuid_000000000007abc5:
	push %RBP
	jmp uuid_000000000007abc2
	jmp uuid_000000000007abc4
uuid_000000000007abc2:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abbf
	jmp uuid_000000000007abc1
uuid_000000000007abbf:
	movb $1, -360(%rbp)
uuid_000000000007abc1:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007abc4:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007abc7:
	mov -368(%RBP),%RSP
	add $-392, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007abcc
	push %RBP
	jmp uuid_000000000007abc9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007abc8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007abcb
uuid_000000000007abc9:
uuid_000000000007abcb:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007abce
uuid_000000000007abcc:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007abce:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007abd1
uuid_000000000007abcf:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007abd1:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007abd4
uuid_000000000007abd2:
	movq $1, -40(%rbp)
uuid_000000000007abd4:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007abd7
uuid_000000000007abd5:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007abd7:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_simple_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abde
	jmp uuid_000000000007abe0
uuid_000000000007abde:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007abdb
	jmp uuid_000000000007abdd
uuid_000000000007abdb:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007abd8
	jmp uuid_000000000007abda
uuid_000000000007abd8:
	movb $1, -104(%rbp)
uuid_000000000007abda:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007abdd:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007abe0:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007abf1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abe7
	jmp uuid_000000000007abe9
uuid_000000000007abe7:
	push %RBP
	jmp uuid_000000000007abe4
	jmp uuid_000000000007abe6
uuid_000000000007abe4:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a915
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abe1
	jmp uuid_000000000007abe3
uuid_000000000007abe1:
	movb $1, -216(%rbp)
uuid_000000000007abe3:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007abe6:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007abe9:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007abee
	push %RBP
	jmp uuid_000000000007abeb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007abea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007abed
uuid_000000000007abeb:
uuid_000000000007abed:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007abf0
uuid_000000000007abee:
	movq $1, -40(%rbp)
uuid_000000000007abf0:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007abf3
uuid_000000000007abf1:
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007abf3:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_tag_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abfa
	jmp uuid_000000000007abfc
uuid_000000000007abfa:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007abf7
	jmp uuid_000000000007abf9
uuid_000000000007abf7:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007abf4
	jmp uuid_000000000007abf6
uuid_000000000007abf4:
	movb $1, -104(%rbp)
uuid_000000000007abf6:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007abf9:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007abfc:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac0d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac03
	jmp uuid_000000000007ac05
uuid_000000000007ac03:
	push %RBP
	jmp uuid_000000000007ac00
	jmp uuid_000000000007ac02
uuid_000000000007ac00:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007ab2e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abfd
	jmp uuid_000000000007abff
uuid_000000000007abfd:
	movb $1, -216(%rbp)
uuid_000000000007abff:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ac02:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ac05:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac0a
	push %RBP
	jmp uuid_000000000007ac07
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ac06
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ac09
uuid_000000000007ac07:
uuid_000000000007ac09:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007ac0c
uuid_000000000007ac0a:
	movq $1, -40(%rbp)
uuid_000000000007ac0c:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007ac0f
uuid_000000000007ac0d:
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007ac0f:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_open_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aca6
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac13
	jmp uuid_000000000007ac15
uuid_000000000007ac13:
	push %RBP
	jmp uuid_000000000007ac10
	jmp uuid_000000000007ac12
uuid_000000000007ac10:
	movb $1, -136(%rbp)
uuid_000000000007ac12:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007ac15:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aca3
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac1c
	jmp uuid_000000000007ac1e
uuid_000000000007ac1c:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac19
	jmp uuid_000000000007ac1b
uuid_000000000007ac19:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac16
	jmp uuid_000000000007ac18
uuid_000000000007ac16:
	movb $1, -192(%rbp)
uuid_000000000007ac18:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ac1b:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ac1e:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aca0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac3d
	jmp uuid_000000000007ac3f
uuid_000000000007ac3d:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac34
	jmp uuid_000000000007ac36
uuid_000000000007ac34:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac2b
	jmp uuid_000000000007ac2d
uuid_000000000007ac2b:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac28
	jmp uuid_000000000007ac2a
uuid_000000000007ac28:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac25
	jmp uuid_000000000007ac27
uuid_000000000007ac25:
	movb $1, -432(%rbp)
uuid_000000000007ac27:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007ac2a:
	mov -448(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007ac2d:
	mov -440(%RBP),%RSP
	add $-520, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac31
	jmp uuid_000000000007ac33
uuid_000000000007ac31:
	push %RBP
	jmp uuid_000000000007ac2e
	jmp uuid_000000000007ac30
uuid_000000000007ac2e:
	movb $1, -368(%rbp)
uuid_000000000007ac30:
	mov -528(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007ac33:
	mov -384(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007ac36:
	mov -376(%RBP),%RSP
	add $-528, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac3a
	jmp uuid_000000000007ac3c
uuid_000000000007ac3a:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac37
	jmp uuid_000000000007ac39
uuid_000000000007ac37:
	movb $1, -304(%rbp)
uuid_000000000007ac39:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007ac3c:
	mov -320(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007ac3f:
	mov -312(%RBP),%RSP
	add $-544, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac9d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac58
	jmp uuid_000000000007ac5a
uuid_000000000007ac58:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac4f
	jmp uuid_000000000007ac51
uuid_000000000007ac4f:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac46
	jmp uuid_000000000007ac48
uuid_000000000007ac46:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac43
	jmp uuid_000000000007ac45
uuid_000000000007ac43:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007ac40
	jmp uuid_000000000007ac42
uuid_000000000007ac40:
	movb $1, -712(%rbp)
uuid_000000000007ac42:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007ac45:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007ac48:
	mov -720(%RBP),%RSP
	add $-800, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac4c
	jmp uuid_000000000007ac4e
uuid_000000000007ac4c:
	push %RBP
	jmp uuid_000000000007ac49
	jmp uuid_000000000007ac4b
uuid_000000000007ac49:
	movb $1, -648(%rbp)
uuid_000000000007ac4b:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007ac4e:
	mov -664(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007ac51:
	mov -656(%RBP),%RSP
	add $-808, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac55
	jmp uuid_000000000007ac57
uuid_000000000007ac55:
	push %RBP
	mov -560(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac52
	jmp uuid_000000000007ac54
uuid_000000000007ac52:
	movb $1, -584(%rbp)
uuid_000000000007ac54:
	mov -816(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007ac57:
	mov -600(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007ac5a:
	mov -592(%RBP),%RSP
	add $-824, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac9a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac74
	jmp uuid_000000000007ac76
uuid_000000000007ac74:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac6a
	jmp uuid_000000000007ac6c
uuid_000000000007ac6a:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac61
	jmp uuid_000000000007ac63
uuid_000000000007ac61:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac5e
	jmp uuid_000000000007ac60
uuid_000000000007ac5e:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007ac5b
	jmp uuid_000000000007ac5d
uuid_000000000007ac5b:
	movb $1, -992(%rbp)
uuid_000000000007ac5d:
	mov -1056(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007ac60:
	mov -1008(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007ac63:
	mov -1000(%RBP),%RSP
	add $-1080, %RSP
	mov -992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac67
	jmp uuid_000000000007ac69
uuid_000000000007ac67:
	push %RBP
	jmp uuid_000000000007ac64
	jmp uuid_000000000007ac66
uuid_000000000007ac64:
	movb $1, -928(%rbp)
uuid_000000000007ac66:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007ac69:
	mov -944(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007ac6c:
	mov -936(%RBP),%RSP
	add $-1088, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac71
	jmp uuid_000000000007ac73
uuid_000000000007ac71:
	push %RBP
	mov -840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_000000000007ac6d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac6e
	jmp uuid_000000000007ac70
uuid_000000000007ac6e:
	movb $1, -864(%rbp)
uuid_000000000007ac70:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007ac73:
	mov -880(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007ac76:
	mov -872(%RBP),%RSP
	add $-1104, %RSP
	mov -864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac97
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac7d
	jmp uuid_000000000007ac7f
uuid_000000000007ac7d:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac7a
	jmp uuid_000000000007ac7c
uuid_000000000007ac7a:
	push %RBP
	jmp uuid_000000000007ac77
	jmp uuid_000000000007ac79
uuid_000000000007ac77:
	movb $1, -1144(%rbp)
uuid_000000000007ac79:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007ac7c:
	mov -1160(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007ac7f:
	mov -1152(%RBP),%RSP
	add $-1208, %RSP
	mov -1144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac94
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ac93
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ac96
uuid_000000000007ac94:
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
uuid_000000000007ac90:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac91
	jmp uuid_000000000007ac92
uuid_000000000007ac91:
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	push %RBP
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac86
	jmp uuid_000000000007ac88
uuid_000000000007ac86:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac83
	jmp uuid_000000000007ac85
uuid_000000000007ac83:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007ac80
	jmp uuid_000000000007ac82
uuid_000000000007ac80:
	movb $1, -1344(%rbp)
uuid_000000000007ac82:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007ac85:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007ac88:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
	mov -1344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ac8d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ac8c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ac8f
uuid_000000000007ac8d:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac89
	jmp uuid_000000000007ac8b
uuid_000000000007ac89:
	movq $1, -40(%rbp)
uuid_000000000007ac8b:
	mov -1440(%RBP),%RSP
	add $-1440, %RSP
	movq -1400(%rbp), %r15
	movq %r15, -1248(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -1240(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -1232(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -1224(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -1216(%rbp)
uuid_000000000007ac8f:
	mov -1296(%RBP),%RSP
	add $-1440, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ac90
uuid_000000000007ac92:
uuid_000000000007ac96:
	mov -1112(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007ac99
uuid_000000000007ac97:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007ac99:
	mov -832(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_000000000007ac9c
uuid_000000000007ac9a:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007ac9c:
	mov -552(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007ac9f
uuid_000000000007ac9d:
uuid_000000000007ac9f:
	mov -272(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_000000000007aca2
uuid_000000000007aca0:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac1f
	jmp uuid_000000000007ac21
uuid_000000000007ac1f:
	movq $1, -40(%rbp)
uuid_000000000007ac21:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac22
	jmp uuid_000000000007ac24
uuid_000000000007ac22:
	movq $1, -40(%rbp)
uuid_000000000007ac24:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007aca2:
	mov -160(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007aca5
uuid_000000000007aca3:
	movq $1, -40(%rbp)
uuid_000000000007aca5:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007aca8
uuid_000000000007aca6:
	movq $1, -40(%rbp)
uuid_000000000007aca8:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_vararg_CL_ArrowU64Type:
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameterized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acb8
	jmp uuid_000000000007acba
uuid_000000000007acb8:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acaf
	jmp uuid_000000000007acb1
uuid_000000000007acaf:
	push %RBP
	jmp uuid_000000000007acac
	jmp uuid_000000000007acae
uuid_000000000007acac:
	push %RBP
	jmp uuid_000000000007aca9
	jmp uuid_000000000007acab
uuid_000000000007aca9:
	movb $1, -168(%rbp)
uuid_000000000007acab:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007acae:
	mov -184(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007acb1:
	mov -176(%RBP),%RSP
	add $-192, %RSP
	mov -168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007acb5
	jmp uuid_000000000007acb7
uuid_000000000007acb5:
	push %RBP
	jmp uuid_000000000007acb2
	jmp uuid_000000000007acb4
uuid_000000000007acb2:
	movb $1, -104(%rbp)
uuid_000000000007acb4:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007acb7:
	mov -120(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007acba:
	mov -112(%RBP),%RSP
	add $-200, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007acd1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acc1
	jmp uuid_000000000007acc3
uuid_000000000007acc1:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007acbe
	jmp uuid_000000000007acc0
uuid_000000000007acbe:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007acbb
	jmp uuid_000000000007acbd
uuid_000000000007acbb:
	movb $1, -240(%rbp)
uuid_000000000007acbd:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007acc0:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007acc3:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007acce
	push %RBP
	jmp uuid_000000000007accb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007acca
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007accd
uuid_000000000007accb:
uuid_000000000007accd:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007acd0
uuid_000000000007acce:
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007acc4
	jmp uuid_000000000007acc6
uuid_000000000007acc4:
	movq $1, -40(%rbp)
uuid_000000000007acc6:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007acc7
	jmp uuid_000000000007acc9
uuid_000000000007acc7:
	movq $1, -40(%rbp)
uuid_000000000007acc9:
	mov -328(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007acd0:
	mov -208(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007acd3
uuid_000000000007acd1:
	movq $1, -40(%rbp)
uuid_000000000007acd3:
	mov -72(%RBP),%RSP
	add $-200, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_sized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad08
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acda
	jmp uuid_000000000007acdc
uuid_000000000007acda:
	push %RBP
	jmp uuid_000000000007acd7
	jmp uuid_000000000007acd9
uuid_000000000007acd7:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007acd4
	jmp uuid_000000000007acd6
uuid_000000000007acd4:
	movb $1, -136(%rbp)
uuid_000000000007acd6:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007acd9:
	mov -152(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007acdc:
	mov -144(%RBP),%RSP
	add $-168, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad05
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ace3
	jmp uuid_000000000007ace5
uuid_000000000007ace3:
	push %RBP
	jmp uuid_000000000007ace0
	jmp uuid_000000000007ace2
uuid_000000000007ace0:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007acdd
	jmp uuid_000000000007acdf
uuid_000000000007acdd:
	movb $1, -208(%rbp)
uuid_000000000007acdf:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007ace2:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007ace5:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad02
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acec
	jmp uuid_000000000007acee
uuid_000000000007acec:
	push %RBP
	jmp uuid_000000000007ace9
	jmp uuid_000000000007aceb
uuid_000000000007ace9:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007a917
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ace6
	jmp uuid_000000000007ace8
uuid_000000000007ace6:
	movb $1, -280(%rbp)
uuid_000000000007ace8:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007aceb:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007acee:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007acff
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acf5
	jmp uuid_000000000007acf7
uuid_000000000007acf5:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007acf2
	jmp uuid_000000000007acf4
uuid_000000000007acf2:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007acef
	jmp uuid_000000000007acf1
uuid_000000000007acef:
	movb $1, -352(%rbp)
uuid_000000000007acf1:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007acf4:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007acf7:
	mov -360(%RBP),%RSP
	add $-424, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007acfc
	push %RBP
	jmp uuid_000000000007acf9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007acf8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007acfb
uuid_000000000007acf9:
uuid_000000000007acfb:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007acfe
uuid_000000000007acfc:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007acfe:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007ad01
uuid_000000000007acff:
	movq $1, -40(%rbp)
uuid_000000000007ad01:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007ad04
uuid_000000000007ad02:
	movq $1, -40(%rbp)
uuid_000000000007ad04:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007ad07
uuid_000000000007ad05:
	movq $1, -40(%rbp)
uuid_000000000007ad07:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007ad0a
uuid_000000000007ad08:
	movq $1, -40(%rbp)
uuid_000000000007ad0a:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_representation_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad11
	jmp uuid_000000000007ad13
uuid_000000000007ad11:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad0e
	jmp uuid_000000000007ad10
uuid_000000000007ad0e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad0b
	jmp uuid_000000000007ad0d
uuid_000000000007ad0b:
	movb $1, -104(%rbp)
uuid_000000000007ad0d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ad10:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ad13:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad61
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad1b
	jmp uuid_000000000007ad1d
uuid_000000000007ad1b:
	push %RBP
	jmp uuid_000000000007ad18
	jmp uuid_000000000007ad1a
uuid_000000000007ad18:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad15
	jmp uuid_000000000007ad17
uuid_000000000007ad15:
	movb $1, -216(%rbp)
uuid_000000000007ad17:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ad1a:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ad1d:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad5e
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad24
	jmp uuid_000000000007ad26
uuid_000000000007ad24:
	push %RBP
	jmp uuid_000000000007ad21
	jmp uuid_000000000007ad23
uuid_000000000007ad21:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_000000000007a7fa
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad1e
	jmp uuid_000000000007ad20
uuid_000000000007ad1e:
	movb $1, -288(%rbp)
uuid_000000000007ad20:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007ad23:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007ad26:
	mov -296(%RBP),%RSP
	add $-320, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad5b
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad2d
	jmp uuid_000000000007ad2f
uuid_000000000007ad2d:
	push %RBP
	jmp uuid_000000000007ad2a
	jmp uuid_000000000007ad2c
uuid_000000000007ad2a:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007a7fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad27
	jmp uuid_000000000007ad29
uuid_000000000007ad27:
	movb $1, -360(%rbp)
uuid_000000000007ad29:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007ad2c:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007ad2f:
	mov -368(%RBP),%RSP
	add $-392, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad58
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad36
	jmp uuid_000000000007ad38
uuid_000000000007ad36:
	push %RBP
	jmp uuid_000000000007ad33
	jmp uuid_000000000007ad35
uuid_000000000007ad33:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $uuid_000000000007a802
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad30
	jmp uuid_000000000007ad32
uuid_000000000007ad30:
	movb $1, -432(%rbp)
uuid_000000000007ad32:
	mov -456(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007ad35:
	mov -448(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007ad38:
	mov -440(%RBP),%RSP
	add $-464, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad55
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad3f
	jmp uuid_000000000007ad41
uuid_000000000007ad3f:
	push %RBP
	jmp uuid_000000000007ad3c
	jmp uuid_000000000007ad3e
uuid_000000000007ad3c:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_000000000007a806
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad39
	jmp uuid_000000000007ad3b
uuid_000000000007ad39:
	movb $1, -504(%rbp)
uuid_000000000007ad3b:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007ad3e:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007ad41:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad52
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad48
	jmp uuid_000000000007ad4a
uuid_000000000007ad48:
	push %RBP
	jmp uuid_000000000007ad45
	jmp uuid_000000000007ad47
uuid_000000000007ad45:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad42
	jmp uuid_000000000007ad44
uuid_000000000007ad42:
	movb $1, -576(%rbp)
uuid_000000000007ad44:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007ad47:
	mov -592(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007ad4a:
	mov -584(%RBP),%RSP
	add $-608, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad4f
	push %RBP
	jmp uuid_000000000007ad4c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ad4b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad4e
uuid_000000000007ad4c:
uuid_000000000007ad4e:
	mov -616(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007ad51
uuid_000000000007ad4f:
	movq $1, -40(%rbp)
uuid_000000000007ad51:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007ad54
uuid_000000000007ad52:
	movq $1, -40(%rbp)
uuid_000000000007ad54:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007ad57
uuid_000000000007ad55:
	movq $1, -40(%rbp)
uuid_000000000007ad57:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007ad5a
uuid_000000000007ad58:
	movq $1, -40(%rbp)
uuid_000000000007ad5a:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007ad5d
uuid_000000000007ad5b:
	movq $1, -40(%rbp)
uuid_000000000007ad5d:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007ad60
uuid_000000000007ad5e:
	movq $1, -40(%rbp)
uuid_000000000007ad60:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007ad63
uuid_000000000007ad61:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007ad63:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
guess_SB_representation_CL_ArrowTypeType:
	push %RBP
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad77
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad74
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad71
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad6e
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad6b
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad68
	push %RBP
	jmp uuid_000000000007ad65
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ad64
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad67
uuid_000000000007ad65:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad67:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007ad6a
uuid_000000000007ad68:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a806
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad6a:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007ad6d
uuid_000000000007ad6b:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a802
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad6d:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007ad70
uuid_000000000007ad6e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a7fe
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad70:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007ad73
uuid_000000000007ad71:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a7fa
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad73:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_000000000007ad76
uuid_000000000007ad74:
uuid_000000000007ad76:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	jmp uuid_000000000007ad79
uuid_000000000007ad77:
uuid_000000000007ad79:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_local_SB_variable_CL_ArrowTypeType:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad7b
	jmp uuid_000000000007ad7d
uuid_000000000007ad7b:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad7d:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_constant_CL_ArrowTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad7e
	jmp uuid_000000000007ad80
uuid_000000000007ad7e:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ad80:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ada3
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad84
	jmp uuid_000000000007ad86
uuid_000000000007ad84:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ad81
	jmp uuid_000000000007ad83
uuid_000000000007ad81:
	movb $1, -136(%rbp)
uuid_000000000007ad83:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007ad86:
	mov -144(%RBP),%RSP
	add $-160, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ada0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad8d
	jmp uuid_000000000007ad8f
uuid_000000000007ad8d:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad8a
	jmp uuid_000000000007ad8c
uuid_000000000007ad8a:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad87
	jmp uuid_000000000007ad89
uuid_000000000007ad87:
	movb $1, -200(%rbp)
uuid_000000000007ad89:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ad8c:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ad8f:
	mov -208(%RBP),%RSP
	add $-272, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad9d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad96
	jmp uuid_000000000007ad98
uuid_000000000007ad96:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad93
	jmp uuid_000000000007ad95
uuid_000000000007ad93:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ad90
	jmp uuid_000000000007ad92
uuid_000000000007ad90:
	movb $1, -312(%rbp)
uuid_000000000007ad92:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007ad95:
	mov -328(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007ad98:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ad9a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ad99
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad9c
uuid_000000000007ad9a:
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007ad9c:
	mov -280(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007ad9f
uuid_000000000007ad9d:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007ad9f:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007ada2
uuid_000000000007ada0:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007ada2:
	mov -104(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007ada5
uuid_000000000007ada3:
uuid_000000000007ada5:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adb5
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adae
	jmp uuid_000000000007adb0
uuid_000000000007adae:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007adab
	jmp uuid_000000000007adad
uuid_000000000007adab:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007ada8
	jmp uuid_000000000007adaa
uuid_000000000007ada8:
	movb $1, -200(%rbp)
uuid_000000000007adaa:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007adad:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007adb0:
	mov -208(%RBP),%RSP
	add $-288, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007adb2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007adb1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007adb4
uuid_000000000007adb2:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007adb4:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007adb7
uuid_000000000007adb5:
uuid_000000000007adb7:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
ascript_SB_normal_CL_ArrowNilConsTypeAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adc3
	jmp uuid_000000000007adc5
uuid_000000000007adc3:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adc0
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	jmp uuid_000000000007adc2
uuid_000000000007adc0:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adbd
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adba
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adb8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adb9
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007adbc
uuid_000000000007adba:
uuid_000000000007adbc:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007adbf
uuid_000000000007adbd:
uuid_000000000007adbf:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007adc2:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007adc5:
	mov -112(%RBP),%RSP
	add $-152, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
typeof_CL_ArrowTypeFragmentList:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adcc
	jmp uuid_000000000007adce
uuid_000000000007adcc:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007adc9
	jmp uuid_000000000007adcb
uuid_000000000007adc9:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007adc6
	jmp uuid_000000000007adc8
uuid_000000000007adc6:
	movb $1, -552(%rbp)
uuid_000000000007adc8:
	mov -728(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007adcb:
	mov -568(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007adce:
	mov -560(%RBP),%RSP
	add $-896, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007add6
	push %RBP
	jmp uuid_000000000007add3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007add2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007add5
uuid_000000000007add3:
uuid_000000000007add5:
	mov -904(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007add8
uuid_000000000007add6:
#call function typeof : Arrow<FragmentList,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adcf
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	jmp uuid_000000000007add1
uuid_000000000007adcf:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007add1:
	mov -904(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007add8:
	mov -376(%RBP),%RSP
	add $-904, %RSP
	subq $24, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
to_SB_s_CL_ArrowSAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007addf
	jmp uuid_000000000007ade1
uuid_000000000007addf:
	push %RBP
	jmp uuid_000000000007addc
	jmp uuid_000000000007adde
uuid_000000000007addc:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007add9
	jmp uuid_000000000007addb
uuid_000000000007add9:
	movb $1, -264(%rbp)
uuid_000000000007addb:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007adde:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007ade1:
	mov -272(%RBP),%RSP
	add $-296, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae59
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ade9
	jmp uuid_000000000007adeb
uuid_000000000007ade9:
	push %RBP
	jmp uuid_000000000007ade6
	jmp uuid_000000000007ade8
uuid_000000000007ade6:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ade3
	jmp uuid_000000000007ade5
uuid_000000000007ade3:
	movb $1, -384(%rbp)
uuid_000000000007ade5:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ade8:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007adeb:
	mov -392(%RBP),%RSP
	add $-416, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae56
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae0b
	jmp uuid_000000000007ae0d
uuid_000000000007ae0b:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adf9
	jmp uuid_000000000007adfb
uuid_000000000007adf9:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adf0
	jmp uuid_000000000007adf2
uuid_000000000007adf0:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007aded
	jmp uuid_000000000007adef
uuid_000000000007aded:
	movb $1, -696(%rbp)
uuid_000000000007adef:
	mov -712(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007adf2:
	mov -704(%RBP),%RSP
	add $-736, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007adf6
	jmp uuid_000000000007adf8
uuid_000000000007adf6:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007adf3
	jmp uuid_000000000007adf5
uuid_000000000007adf3:
	movb $1, -600(%rbp)
uuid_000000000007adf5:
	mov -744(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007adf8:
	mov -616(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007adfb:
	mov -608(%RBP),%RSP
	add $-816, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae08
	jmp uuid_000000000007ae0a
uuid_000000000007ae08:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae02
	jmp uuid_000000000007ae04
uuid_000000000007ae02:
	push %RBP
	jmp uuid_000000000007adff
	jmp uuid_000000000007ae01
uuid_000000000007adff:
	push %RBP
	mov -832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -936(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adfc
	jmp uuid_000000000007adfe
uuid_000000000007adfc:
	movb $1, -904(%rbp)
uuid_000000000007adfe:
	mov -928(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007ae01:
	mov -920(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007ae04:
	mov -912(%RBP),%RSP
	add $-936, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae05
	jmp uuid_000000000007ae07
uuid_000000000007ae05:
	movb $1, -504(%rbp)
uuid_000000000007ae07:
	mov -824(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007ae0a:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007ae0d:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae53
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae2c
	jmp uuid_000000000007ae2e
uuid_000000000007ae2c:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae1a
	jmp uuid_000000000007ae1c
uuid_000000000007ae1a:
	push %RBP
	mov -1104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae11
	jmp uuid_000000000007ae13
uuid_000000000007ae11:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_000000000007ae0e
	jmp uuid_000000000007ae10
uuid_000000000007ae0e:
	movb $1, -1216(%rbp)
uuid_000000000007ae10:
	mov -1232(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007ae13:
	mov -1224(%RBP),%RSP
	add $-1256, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae17
	jmp uuid_000000000007ae19
uuid_000000000007ae17:
	push %RBP
	mov -1096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae14
	jmp uuid_000000000007ae16
uuid_000000000007ae14:
	movb $1, -1120(%rbp)
uuid_000000000007ae16:
	mov -1264(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007ae19:
	mov -1136(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007ae1c:
	mov -1128(%RBP),%RSP
	add $-1336, %RSP
	mov -1120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae29
	jmp uuid_000000000007ae2b
uuid_000000000007ae29:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae23
	jmp uuid_000000000007ae25
uuid_000000000007ae23:
	push %RBP
	jmp uuid_000000000007ae20
	jmp uuid_000000000007ae22
uuid_000000000007ae20:
	push %RBP
	mov -1352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ae1d
	jmp uuid_000000000007ae1f
uuid_000000000007ae1d:
	movb $1, -1424(%rbp)
uuid_000000000007ae1f:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007ae22:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007ae25:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae26
	jmp uuid_000000000007ae28
uuid_000000000007ae26:
	movb $1, -1024(%rbp)
uuid_000000000007ae28:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007ae2b:
	mov -1040(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007ae2e:
	mov -1032(%RBP),%RSP
	add $-1456, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae50
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae35
	jmp uuid_000000000007ae37
uuid_000000000007ae35:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae32
	jmp uuid_000000000007ae34
uuid_000000000007ae32:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae2f
	jmp uuid_000000000007ae31
uuid_000000000007ae2f:
	movb $1, -1544(%rbp)
uuid_000000000007ae31:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ae34:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ae37:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae4d
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae42
	jmp uuid_000000000007ae44
uuid_000000000007ae42:
	push %RBP
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	jmp uuid_000000000007ae3f
	jmp uuid_000000000007ae41
uuid_000000000007ae3f:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae3c
	jmp uuid_000000000007ae3e
uuid_000000000007ae3c:
	push %RBP
	mov -1752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae39
	jmp uuid_000000000007ae3b
uuid_000000000007ae39:
	movb $1, -1800(%rbp)
uuid_000000000007ae3b:
	mov -1928(%RBP),%RSP
	add $-2000, %RSP
uuid_000000000007ae3e:
	mov -1848(%RBP),%RSP
	add $-2000, %RSP
uuid_000000000007ae41:
	mov -1816(%RBP),%RSP
	add $-2000, %RSP
uuid_000000000007ae44:
	mov -1808(%RBP),%RSP
	add $-2000, %RSP
	mov -1800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae4a
	push %RBP
	jmp uuid_000000000007ae47
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ae46
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ae49
uuid_000000000007ae47:
uuid_000000000007ae49:
	mov -2008(%RBP),%RSP
	add $-2008, %RSP
	jmp uuid_000000000007ae4c
uuid_000000000007ae4a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007ae45
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ae4c:
	mov -1720(%RBP),%RSP
	add $-2000, %RSP
	jmp uuid_000000000007ae4f
uuid_000000000007ae4d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007ae38
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ae4f:
	mov -1464(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007ae52
uuid_000000000007ae50:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ae52:
	mov -944(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007ae55
uuid_000000000007ae53:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ae55:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007ae58
uuid_000000000007ae56:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007adec
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -416(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ae58:
	mov -304(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007ae5b
uuid_000000000007ae59:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007ade2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -296(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ae5b:
	mov -184(%RBP),%RSP
	add $-296, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
domain_CL_ArrowTypeType:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
range_CL_ArrowTypeType:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
t1_CL_ArrowTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
t2_CL_ArrowTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
t3_CL_ArrowTypeConsTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
p_CL_ArrowTypeConsU64Type:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae6e
	jmp uuid_000000000007ae70
uuid_000000000007ae6e:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae6b
	jmp uuid_000000000007ae6d
uuid_000000000007ae6b:
	push %RBP
	jmp uuid_000000000007ae68
	jmp uuid_000000000007ae6a
uuid_000000000007ae68:
	movb $1, -104(%rbp)
uuid_000000000007ae6a:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ae6d:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ae70:
	mov -112(%RBP),%RSP
	add $-168, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae75
	push %RBP
	jmp uuid_000000000007ae72
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ae71
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ae74
uuid_000000000007ae72:
uuid_000000000007ae74:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007ae77
uuid_000000000007ae75:
#call function .nth : Arrow<Cons<Cons<List<Type>,U64>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_nth_CL_ArrowTypeConsTypeConsU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ae77:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
p1_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
p2_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
and_CL_ArrowTContextConsTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae7e
	jmp uuid_000000000007ae80
uuid_000000000007ae7e:
	push %RBP
	jmp uuid_000000000007ae7b
	jmp uuid_000000000007ae7d
uuid_000000000007ae7b:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae78
	jmp uuid_000000000007ae7a
uuid_000000000007ae78:
	movb $1, -760(%rbp)
uuid_000000000007ae7a:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ae7d:
	mov -776(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ae80:
	mov -768(%RBP),%RSP
	add $-904, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae91
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae87
	jmp uuid_000000000007ae89
uuid_000000000007ae87:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae84
	jmp uuid_000000000007ae86
uuid_000000000007ae84:
	push %RBP
	jmp uuid_000000000007ae81
	jmp uuid_000000000007ae83
uuid_000000000007ae81:
	movb $1, -1168(%rbp)
uuid_000000000007ae83:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ae86:
	mov -1184(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ae89:
	mov -1176(%RBP),%RSP
	add $-1312, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ae8e
	push %RBP
	jmp uuid_000000000007ae8b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ae8a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ae8d
uuid_000000000007ae8b:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ae8d:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_000000000007ae90
uuid_000000000007ae8e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ae90:
	mov -912(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007ae93
uuid_000000000007ae91:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ae93:
	mov -504(%RBP),%RSP
	add $-904, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
and_CL_ArrowTypeConsTypeType:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
union_CL_ArrowTContextConsTContextTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aeaa
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aea7
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aea0
	jmp uuid_000000000007aea2
uuid_000000000007aea0:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007ae9d
	jmp uuid_000000000007ae9f
uuid_000000000007ae9d:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007ae9a
	jmp uuid_000000000007ae9c
uuid_000000000007ae9a:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ae97
	jmp uuid_000000000007ae99
uuid_000000000007ae97:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae94
	jmp uuid_000000000007ae96
uuid_000000000007ae94:
	movb $1, -760(%rbp)
uuid_000000000007ae96:
	mov -904(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007ae99:
	mov -888(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007ae9c:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007ae9f:
	mov -776(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007aea2:
	mov -768(%RBP),%RSP
	add $-1024, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aea4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aea3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aea6
uuid_000000000007aea4:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -896(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aea6:
	mov -632(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_000000000007aea9
uuid_000000000007aea7:
uuid_000000000007aea9:
	mov -504(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007aeac
uuid_000000000007aeaa:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007aeac:
	mov -376(%RBP),%RSP
	add $-496, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
union_CL_ArrowContextConsContextContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aead
	jmp uuid_000000000007aeaf
uuid_000000000007aead:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007aeaf:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aec3
	jmp uuid_000000000007aec5
uuid_000000000007aec3:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aeb9
	jmp uuid_000000000007aebb
uuid_000000000007aeb9:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007aeb6
	jmp uuid_000000000007aeb8
uuid_000000000007aeb6:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aeb3
	jmp uuid_000000000007aeb5
uuid_000000000007aeb3:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aeb0
	jmp uuid_000000000007aeb2
uuid_000000000007aeb0:
	movb $1, -520(%rbp)
uuid_000000000007aeb2:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007aeb5:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007aeb8:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007aebb:
	mov -528(%RBP),%RSP
	add $-728, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aec0
	push %RBP
	jmp uuid_000000000007aebd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aebc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aebf
uuid_000000000007aebd:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007aebf:
	mov -736(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007aec2
uuid_000000000007aec0:
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -624(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq $0
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007aec2:
	mov -416(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007aec5:
	mov -312(%RBP),%RSP
	add $-728, %RSP
	subq $96, %rsp
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
union_CL_ArrowFContextConsTContextFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
uuid_000000000007aedd:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aede
	jmp uuid_000000000007aedf
uuid_000000000007aede:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aeda
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aed2
	jmp uuid_000000000007aed4
uuid_000000000007aed2:
	push %RBP
	jmp uuid_000000000007aecf
	jmp uuid_000000000007aed1
uuid_000000000007aecf:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007aecc
	jmp uuid_000000000007aece
uuid_000000000007aecc:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aec9
	jmp uuid_000000000007aecb
uuid_000000000007aec9:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aec6
	jmp uuid_000000000007aec8
uuid_000000000007aec6:
	movb $1, -912(%rbp)
uuid_000000000007aec8:
	mov -984(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007aecb:
	mov -968(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007aece:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007aed1:
	mov -928(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007aed4:
	mov -920(%RBP),%RSP
	add $-1104, %RSP
	mov -912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aed7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aed6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aed9
uuid_000000000007aed7:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $uuid_000000000007aed5
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -976(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $0
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1104(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -208(%rbp)
uuid_000000000007aed9:
	mov -784(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_000000000007aedc
uuid_000000000007aeda:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007aedc:
	mov -656(%RBP),%RSP
	add $-776, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007aedd
uuid_000000000007aedf:
	subq $200, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
tag_SB_of_CL_ArrowStringType:
	pushq $uuid_000000000007a365
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aee6
	jmp uuid_000000000007aee8
uuid_000000000007aee6:
	push %RBP
	jmp uuid_000000000007aee3
	jmp uuid_000000000007aee5
uuid_000000000007aee3:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aee0
	jmp uuid_000000000007aee2
uuid_000000000007aee0:
	movb $1, -104(%rbp)
uuid_000000000007aee2:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007aee5:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007aee8:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aeed
	push %RBP
	jmp uuid_000000000007aeea
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007aee9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aeec
uuid_000000000007aeea:
uuid_000000000007aeec:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007aeef
uuid_000000000007aeed:
	movq -136(%rbp), %r15
	movq %r15, -40(%rbp)
	mov -136(%rbp), %r15
	mov %r15, -40(%rbp)
uuid_000000000007aeef:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aefb
	jmp uuid_000000000007aefd
uuid_000000000007aefb:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aef8
	jmp uuid_000000000007aefa
uuid_000000000007aef8:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aef5
	jmp uuid_000000000007aef7
uuid_000000000007aef5:
	movb $1, -288(%rbp)
uuid_000000000007aef7:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007aefa:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007aefd:
	mov -296(%RBP),%RSP
	add $-392, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af26
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af16
	jmp uuid_000000000007af18
uuid_000000000007af16:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af04
	jmp uuid_000000000007af06
uuid_000000000007af04:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af01
	jmp uuid_000000000007af03
uuid_000000000007af01:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007aefe
	jmp uuid_000000000007af00
uuid_000000000007aefe:
	movb $1, -560(%rbp)
uuid_000000000007af00:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007af03:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007af06:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af13
	jmp uuid_000000000007af15
uuid_000000000007af13:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af0d
	jmp uuid_000000000007af0f
uuid_000000000007af0d:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af0a
	jmp uuid_000000000007af0c
uuid_000000000007af0a:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007af07
	jmp uuid_000000000007af09
uuid_000000000007af07:
	movb $1, -704(%rbp)
uuid_000000000007af09:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007af0c:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007af0f:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af10
	jmp uuid_000000000007af12
uuid_000000000007af10:
	movb $1, -496(%rbp)
uuid_000000000007af12:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007af15:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007af18:
	mov -504(%RBP),%RSP
	add $-792, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af23
	push %RBP
	jmp uuid_000000000007af20
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007af1f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007af22
uuid_000000000007af20:
uuid_000000000007af22:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007af25
uuid_000000000007af23:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af1c
	jmp uuid_000000000007af1e
uuid_000000000007af1c:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af19
	jmp uuid_000000000007af1b
uuid_000000000007af19:
	movq $1, -96(%rbp)
uuid_000000000007af1b:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007af1e:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007af25:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007af28
uuid_000000000007af26:
	movq $1, -96(%rbp)
uuid_000000000007af28:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af2f
	jmp uuid_000000000007af31
uuid_000000000007af2f:
	push %RBP
	jmp uuid_000000000007af2c
	jmp uuid_000000000007af2e
uuid_000000000007af2c:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af29
	jmp uuid_000000000007af2b
uuid_000000000007af29:
	movb $1, -192(%rbp)
uuid_000000000007af2b:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007af2e:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007af31:
	mov -200(%RBP),%RSP
	add $-240, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b109
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af4b
	jmp uuid_000000000007af4d
uuid_000000000007af4b:
	push %RBP
	jmp uuid_000000000007af48
	jmp uuid_000000000007af4a
uuid_000000000007af48:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af42
	jmp uuid_000000000007af44
uuid_000000000007af42:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af38
	jmp uuid_000000000007af3a
uuid_000000000007af38:
	push %RBP
	jmp uuid_000000000007af35
	jmp uuid_000000000007af37
uuid_000000000007af35:
	push %RBP
	jmp uuid_000000000007af32
	jmp uuid_000000000007af34
uuid_000000000007af32:
	movb $1, -432(%rbp)
uuid_000000000007af34:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007af37:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007af3a:
	mov -440(%RBP),%RSP
	add $-456, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af3f
	jmp uuid_000000000007af41
uuid_000000000007af3f:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $uuid_000000000007af3b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af3c
	jmp uuid_000000000007af3e
uuid_000000000007af3c:
	movb $1, -368(%rbp)
uuid_000000000007af3e:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007af41:
	mov -384(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007af44:
	mov -376(%RBP),%RSP
	add $-472, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af45
	jmp uuid_000000000007af47
uuid_000000000007af45:
	movb $1, -312(%rbp)
uuid_000000000007af47:
	mov -336(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007af4a:
	mov -328(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007af4d:
	mov -320(%RBP),%RSP
	add $-472, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b106
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af5a
	jmp uuid_000000000007af5c
uuid_000000000007af5a:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_000000000007af57
	jmp uuid_000000000007af59
uuid_000000000007af57:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af51
	jmp uuid_000000000007af53
uuid_000000000007af51:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007af4e
	jmp uuid_000000000007af50
uuid_000000000007af4e:
	movb $1, -624(%rbp)
uuid_000000000007af50:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007af53:
	mov -632(%RBP),%RSP
	add $-648, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af54
	jmp uuid_000000000007af56
uuid_000000000007af54:
	movb $1, -544(%rbp)
uuid_000000000007af56:
	mov -592(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007af59:
	mov -560(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007af5c:
	mov -552(%RBP),%RSP
	add $-648, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b103
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af6c
	jmp uuid_000000000007af6e
uuid_000000000007af6c:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	jmp uuid_000000000007af69
	jmp uuid_000000000007af6b
uuid_000000000007af69:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af63
	jmp uuid_000000000007af65
uuid_000000000007af63:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af60
	jmp uuid_000000000007af62
uuid_000000000007af60:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af5d
	jmp uuid_000000000007af5f
uuid_000000000007af5d:
	movb $1, -800(%rbp)
uuid_000000000007af5f:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007af62:
	mov -816(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007af65:
	mov -808(%RBP),%RSP
	add $-872, %RSP
	mov -800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af66
	jmp uuid_000000000007af68
uuid_000000000007af66:
	movb $1, -720(%rbp)
uuid_000000000007af68:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007af6b:
	mov -736(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007af6e:
	mov -728(%RBP),%RSP
	add $-872, %RSP
	mov -720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b100
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af84
	jmp uuid_000000000007af86
uuid_000000000007af84:
	push %RBP
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af7b
	jmp uuid_000000000007af7d
uuid_000000000007af7b:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af78
	jmp uuid_000000000007af7a
uuid_000000000007af78:
	push %RBP
	mov -968(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af75
	jmp uuid_000000000007af77
uuid_000000000007af75:
	movb $1, -992(%rbp)
uuid_000000000007af77:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007af7a:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007af7d:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
	mov -992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af81
	jmp uuid_000000000007af83
uuid_000000000007af81:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_000000000007af7e
	jmp uuid_000000000007af80
uuid_000000000007af7e:
	movb $1, -944(%rbp)
uuid_000000000007af80:
	mov -1072(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007af83:
	mov -960(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007af86:
	mov -952(%RBP),%RSP
	add $-1096, %RSP
	mov -944(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0fd
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afdb
	jmp uuid_000000000007afdd
uuid_000000000007afdb:
	push %RBP
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afa5
	jmp uuid_000000000007afa7
uuid_000000000007afa5:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af9c
	jmp uuid_000000000007af9e
uuid_000000000007af9c:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af93
	jmp uuid_000000000007af95
uuid_000000000007af93:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af90
	jmp uuid_000000000007af92
uuid_000000000007af90:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007af8d
	jmp uuid_000000000007af8f
uuid_000000000007af8d:
	movb $1, -1344(%rbp)
uuid_000000000007af8f:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007af92:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007af95:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
	mov -1344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007af99
	jmp uuid_000000000007af9b
uuid_000000000007af99:
	push %RBP
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_000000000007af96
	jmp uuid_000000000007af98
uuid_000000000007af96:
	movb $1, -1280(%rbp)
uuid_000000000007af98:
	mov -1440(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007af9b:
	mov -1296(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007af9e:
	mov -1288(%RBP),%RSP
	add $-1464, %RSP
	mov -1280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afa2
	jmp uuid_000000000007afa4
uuid_000000000007afa2:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af9f
	jmp uuid_000000000007afa1
uuid_000000000007af9f:
	movb $1, -1216(%rbp)
uuid_000000000007afa1:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007afa4:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007afa7:
	mov -1224(%RBP),%RSP
	add $-1480, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afd8
	jmp uuid_000000000007afda
uuid_000000000007afd8:
	push %RBP
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq $0
	push %RBP
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afd2
	jmp uuid_000000000007afd4
uuid_000000000007afd2:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afc9
	jmp uuid_000000000007afcb
uuid_000000000007afc9:
	push %RBP
	mov -1568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afae
	jmp uuid_000000000007afb0
uuid_000000000007afae:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afab
	jmp uuid_000000000007afad
uuid_000000000007afab:
	push %RBP
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	jmp uuid_000000000007afa8
	jmp uuid_000000000007afaa
uuid_000000000007afa8:
	movb $1, -1648(%rbp)
uuid_000000000007afaa:
	mov -1712(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007afad:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007afb0:
	mov -1656(%RBP),%RSP
	add $-1736, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afc6
	jmp uuid_000000000007afc8
uuid_000000000007afc6:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afc0
	jmp uuid_000000000007afc2
uuid_000000000007afc0:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afb7
	jmp uuid_000000000007afb9
uuid_000000000007afb7:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afb4
	jmp uuid_000000000007afb6
uuid_000000000007afb4:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007afb1
	jmp uuid_000000000007afb3
uuid_000000000007afb1:
	movb $1, -1840(%rbp)
uuid_000000000007afb3:
	mov -1904(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007afb6:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007afb9:
	mov -1848(%RBP),%RSP
	add $-1928, %RSP
	mov -1840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afbd
	jmp uuid_000000000007afbf
uuid_000000000007afbd:
	push %RBP
	mov -1752(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007afba
	jmp uuid_000000000007afbc
uuid_000000000007afba:
	movb $1, -1776(%rbp)
uuid_000000000007afbc:
	mov -1936(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007afbf:
	mov -1792(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007afc2:
	mov -1784(%RBP),%RSP
	add $-1944, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afc3
	jmp uuid_000000000007afc5
uuid_000000000007afc3:
	movb $1, -1584(%rbp)
uuid_000000000007afc5:
	mov -1744(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007afc8:
	mov -1600(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007afcb:
	mov -1592(%RBP),%RSP
	add $-1944, %RSP
	mov -1584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afcf
	jmp uuid_000000000007afd1
uuid_000000000007afcf:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007afcc
	jmp uuid_000000000007afce
uuid_000000000007afcc:
	movb $1, -1520(%rbp)
uuid_000000000007afce:
	mov -1952(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007afd1:
	mov -1536(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007afd4:
	mov -1528(%RBP),%RSP
	add $-1960, %RSP
	mov -1520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afd5
	jmp uuid_000000000007afd7
uuid_000000000007afd5:
	movb $1, -1168(%rbp)
uuid_000000000007afd7:
	mov -1488(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007afda:
	mov -1184(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007afdd:
	mov -1176(%RBP),%RSP
	add $-1960, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0fa
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b014
	jmp uuid_000000000007b016
uuid_000000000007b014:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	jmp uuid_000000000007b011
	jmp uuid_000000000007b013
uuid_000000000007b011:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b00b
	jmp uuid_000000000007b00d
uuid_000000000007b00b:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b002
	jmp uuid_000000000007b004
uuid_000000000007b002:
	push %RBP
	mov -2160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afe7
	jmp uuid_000000000007afe9
uuid_000000000007afe7:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afe4
	jmp uuid_000000000007afe6
uuid_000000000007afe4:
	push %RBP
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_000000000007afe1
	jmp uuid_000000000007afe3
uuid_000000000007afe1:
	movb $1, -2240(%rbp)
uuid_000000000007afe3:
	mov -2304(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007afe6:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007afe9:
	mov -2248(%RBP),%RSP
	add $-2328, %RSP
	mov -2240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007afff
	jmp uuid_000000000007b001
uuid_000000000007afff:
	push %RBP
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq $0
	push %RBP
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aff9
	jmp uuid_000000000007affb
uuid_000000000007aff9:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aff0
	jmp uuid_000000000007aff2
uuid_000000000007aff0:
	push %RBP
	mov -2416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afed
	jmp uuid_000000000007afef
uuid_000000000007afed:
	push %RBP
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	jmp uuid_000000000007afea
	jmp uuid_000000000007afec
uuid_000000000007afea:
	movb $1, -2432(%rbp)
uuid_000000000007afec:
	mov -2496(%RBP),%RSP
	add $-2520, %RSP
uuid_000000000007afef:
	mov -2448(%RBP),%RSP
	add $-2520, %RSP
uuid_000000000007aff2:
	mov -2440(%RBP),%RSP
	add $-2520, %RSP
	mov -2432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007aff6
	jmp uuid_000000000007aff8
uuid_000000000007aff6:
	push %RBP
	mov -2344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2536(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aff3
	jmp uuid_000000000007aff5
uuid_000000000007aff3:
	movb $1, -2368(%rbp)
uuid_000000000007aff5:
	mov -2528(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007aff8:
	mov -2384(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007affb:
	mov -2376(%RBP),%RSP
	add $-2536, %RSP
	mov -2368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007affc
	jmp uuid_000000000007affe
uuid_000000000007affc:
	movb $1, -2176(%rbp)
uuid_000000000007affe:
	mov -2336(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007b001:
	mov -2192(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007b004:
	mov -2184(%RBP),%RSP
	add $-2536, %RSP
	mov -2176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b008
	jmp uuid_000000000007b00a
uuid_000000000007b008:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2552(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b005
	jmp uuid_000000000007b007
uuid_000000000007b005:
	movb $1, -2112(%rbp)
uuid_000000000007b007:
	mov -2544(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007b00a:
	mov -2128(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007b00d:
	mov -2120(%RBP),%RSP
	add $-2552, %RSP
	mov -2112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b00e
	jmp uuid_000000000007b010
uuid_000000000007b00e:
	movb $1, -2032(%rbp)
uuid_000000000007b010:
	mov -2080(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007b013:
	mov -2048(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007b016:
	mov -2040(%RBP),%RSP
	add $-2552, %RSP
	mov -2032(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0f7
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b04d
	jmp uuid_000000000007b04f
uuid_000000000007b04d:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b032
	jmp uuid_000000000007b034
uuid_000000000007b032:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b029
	jmp uuid_000000000007b02b
uuid_000000000007b029:
	push %RBP
	mov -2720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b020
	jmp uuid_000000000007b022
uuid_000000000007b020:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b01d
	jmp uuid_000000000007b01f
uuid_000000000007b01d:
	push %RBP
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_000000000007b01a
	jmp uuid_000000000007b01c
uuid_000000000007b01a:
	movb $1, -2800(%rbp)
uuid_000000000007b01c:
	mov -2864(%RBP),%RSP
	add $-2888, %RSP
uuid_000000000007b01f:
	mov -2816(%RBP),%RSP
	add $-2888, %RSP
uuid_000000000007b022:
	mov -2808(%RBP),%RSP
	add $-2888, %RSP
	mov -2800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b026
	jmp uuid_000000000007b028
uuid_000000000007b026:
	push %RBP
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	jmp uuid_000000000007b023
	jmp uuid_000000000007b025
uuid_000000000007b023:
	movb $1, -2736(%rbp)
uuid_000000000007b025:
	mov -2896(%RBP),%RSP
	add $-2920, %RSP
uuid_000000000007b028:
	mov -2752(%RBP),%RSP
	add $-2920, %RSP
uuid_000000000007b02b:
	mov -2744(%RBP),%RSP
	add $-2920, %RSP
	mov -2736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b02f
	jmp uuid_000000000007b031
uuid_000000000007b02f:
	push %RBP
	mov -2648(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b02c
	jmp uuid_000000000007b02e
uuid_000000000007b02c:
	movb $1, -2672(%rbp)
uuid_000000000007b02e:
	mov -2928(%RBP),%RSP
	add $-2936, %RSP
uuid_000000000007b031:
	mov -2688(%RBP),%RSP
	add $-2936, %RSP
uuid_000000000007b034:
	mov -2680(%RBP),%RSP
	add $-2936, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b04a
	jmp uuid_000000000007b04c
uuid_000000000007b04a:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2968(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b044
	jmp uuid_000000000007b046
uuid_000000000007b044:
	push %RBP
	mov -2960(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b03b
	jmp uuid_000000000007b03d
uuid_000000000007b03b:
	push %RBP
	mov -3024(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b038
	jmp uuid_000000000007b03a
uuid_000000000007b038:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	jmp uuid_000000000007b035
	jmp uuid_000000000007b037
uuid_000000000007b035:
	movb $1, -3040(%rbp)
uuid_000000000007b037:
	mov -3104(%RBP),%RSP
	add $-3128, %RSP
uuid_000000000007b03a:
	mov -3056(%RBP),%RSP
	add $-3128, %RSP
uuid_000000000007b03d:
	mov -3048(%RBP),%RSP
	add $-3128, %RSP
	mov -3040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b041
	jmp uuid_000000000007b043
uuid_000000000007b041:
	push %RBP
	mov -2952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3144(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b03e
	jmp uuid_000000000007b040
uuid_000000000007b03e:
	movb $1, -2976(%rbp)
uuid_000000000007b040:
	mov -3136(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007b043:
	mov -2992(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007b046:
	mov -2984(%RBP),%RSP
	add $-3144, %RSP
	mov -2976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b047
	jmp uuid_000000000007b049
uuid_000000000007b047:
	movb $1, -2624(%rbp)
uuid_000000000007b049:
	mov -2944(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007b04c:
	mov -2640(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007b04f:
	mov -2632(%RBP),%RSP
	add $-3144, %RSP
	mov -2624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0f4
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b074
	jmp uuid_000000000007b076
uuid_000000000007b074:
	push %RBP
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b059
	jmp uuid_000000000007b05b
uuid_000000000007b059:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b056
	jmp uuid_000000000007b058
uuid_000000000007b056:
	push %RBP
	mov -3240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b053
	jmp uuid_000000000007b055
uuid_000000000007b053:
	movb $1, -3264(%rbp)
uuid_000000000007b055:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007b058:
	mov -3280(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007b05b:
	mov -3272(%RBP),%RSP
	add $-3336, %RSP
	mov -3264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b071
	jmp uuid_000000000007b073
uuid_000000000007b071:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b06b
	jmp uuid_000000000007b06d
uuid_000000000007b06b:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b062
	jmp uuid_000000000007b064
uuid_000000000007b062:
	push %RBP
	mov -3424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b05f
	jmp uuid_000000000007b061
uuid_000000000007b05f:
	push %RBP
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	jmp uuid_000000000007b05c
	jmp uuid_000000000007b05e
uuid_000000000007b05c:
	movb $1, -3440(%rbp)
uuid_000000000007b05e:
	mov -3504(%RBP),%RSP
	add $-3528, %RSP
uuid_000000000007b061:
	mov -3456(%RBP),%RSP
	add $-3528, %RSP
uuid_000000000007b064:
	mov -3448(%RBP),%RSP
	add $-3528, %RSP
	mov -3440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b068
	jmp uuid_000000000007b06a
uuid_000000000007b068:
	push %RBP
	mov -3352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b065
	jmp uuid_000000000007b067
uuid_000000000007b065:
	movb $1, -3376(%rbp)
uuid_000000000007b067:
	mov -3536(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007b06a:
	mov -3392(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007b06d:
	mov -3384(%RBP),%RSP
	add $-3544, %RSP
	mov -3376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b06e
	jmp uuid_000000000007b070
uuid_000000000007b06e:
	movb $1, -3216(%rbp)
uuid_000000000007b070:
	mov -3344(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007b073:
	mov -3232(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007b076:
	mov -3224(%RBP),%RSP
	add $-3544, %RSP
	mov -3216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0f1
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b08f
	jmp uuid_000000000007b091
uuid_000000000007b08f:
	push %RBP
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	jmp uuid_000000000007b08c
	jmp uuid_000000000007b08e
uuid_000000000007b08c:
	push %RBP
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b086
	jmp uuid_000000000007b088
uuid_000000000007b086:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b07d
	jmp uuid_000000000007b07f
uuid_000000000007b07d:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b07a
	jmp uuid_000000000007b07c
uuid_000000000007b07a:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_000000000007b077
	jmp uuid_000000000007b079
uuid_000000000007b077:
	movb $1, -3760(%rbp)
uuid_000000000007b079:
	mov -3824(%RBP),%RSP
	add $-3848, %RSP
uuid_000000000007b07c:
	mov -3776(%RBP),%RSP
	add $-3848, %RSP
uuid_000000000007b07f:
	mov -3768(%RBP),%RSP
	add $-3848, %RSP
	mov -3760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b083
	jmp uuid_000000000007b085
uuid_000000000007b083:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3864(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b080
	jmp uuid_000000000007b082
uuid_000000000007b080:
	movb $1, -3696(%rbp)
uuid_000000000007b082:
	mov -3856(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007b085:
	mov -3712(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007b088:
	mov -3704(%RBP),%RSP
	add $-3864, %RSP
	mov -3696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b089
	jmp uuid_000000000007b08b
uuid_000000000007b089:
	movb $1, -3616(%rbp)
uuid_000000000007b08b:
	mov -3664(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007b08e:
	mov -3632(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007b091:
	mov -3624(%RBP),%RSP
	add $-3864, %RSP
	mov -3616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0ee
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0bd
	jmp uuid_000000000007b0bf
uuid_000000000007b0bd:
	push %RBP
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq $0
	push %RBP
	mov -3976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b098
	jmp uuid_000000000007b09a
uuid_000000000007b098:
	push %RBP
	mov -3968(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b095
	jmp uuid_000000000007b097
uuid_000000000007b095:
	push %RBP
	mov -3960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b092
	jmp uuid_000000000007b094
uuid_000000000007b092:
	movb $1, -3984(%rbp)
uuid_000000000007b094:
	mov -4048(%RBP),%RSP
	add $-4056, %RSP
uuid_000000000007b097:
	mov -4000(%RBP),%RSP
	add $-4056, %RSP
uuid_000000000007b09a:
	mov -3992(%RBP),%RSP
	add $-4056, %RSP
	mov -3984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0ba
	jmp uuid_000000000007b0bc
uuid_000000000007b0ba:
	push %RBP
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq $0
	push %RBP
	mov -4088(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0b4
	jmp uuid_000000000007b0b6
uuid_000000000007b0b4:
	push %RBP
	mov -4080(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0aa
	jmp uuid_000000000007b0ac
uuid_000000000007b0aa:
	push %RBP
	mov -4144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0a7
	jmp uuid_000000000007b0a9
uuid_000000000007b0a7:
	push %RBP
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq $0
	push %RBP
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0a1
	jmp uuid_000000000007b0a3
uuid_000000000007b0a1:
	push %RBP
	mov -4240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b09e
	jmp uuid_000000000007b0a0
uuid_000000000007b09e:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b09b
	jmp uuid_000000000007b09d
uuid_000000000007b09b:
	movb $1, -4256(%rbp)
uuid_000000000007b09d:
	mov -4320(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007b0a0:
	mov -4272(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007b0a3:
	mov -4264(%RBP),%RSP
	add $-4328, %RSP
	mov -4256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0a4
	jmp uuid_000000000007b0a6
uuid_000000000007b0a4:
	movb $1, -4160(%rbp)
uuid_000000000007b0a6:
	mov -4224(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007b0a9:
	mov -4176(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007b0ac:
	mov -4168(%RBP),%RSP
	add $-4328, %RSP
	mov -4160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0b1
	jmp uuid_000000000007b0b3
uuid_000000000007b0b1:
	push %RBP
	mov -4072(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4344(%rbp)
	pushq $uuid_000000000007b0ad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0ae
	jmp uuid_000000000007b0b0
uuid_000000000007b0ae:
	movb $1, -4096(%rbp)
uuid_000000000007b0b0:
	mov -4336(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007b0b3:
	mov -4112(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007b0b6:
	mov -4104(%RBP),%RSP
	add $-4344, %RSP
	mov -4096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0b7
	jmp uuid_000000000007b0b9
uuid_000000000007b0b7:
	movb $1, -3936(%rbp)
uuid_000000000007b0b9:
	mov -4064(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007b0bc:
	mov -3952(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007b0bf:
	mov -3944(%RBP),%RSP
	add $-4344, %RSP
	mov -3936(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0eb
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0db
	jmp uuid_000000000007b0dd
uuid_000000000007b0db:
	push %RBP
	pushq -4384(%RBP)
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq $0
	push %RBP
	mov -4456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0c9
	jmp uuid_000000000007b0cb
uuid_000000000007b0c9:
	push %RBP
	mov -4448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0c6
	jmp uuid_000000000007b0c8
uuid_000000000007b0c6:
	push %RBP
	mov -4440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b0c3
	jmp uuid_000000000007b0c5
uuid_000000000007b0c3:
	movb $1, -4464(%rbp)
uuid_000000000007b0c5:
	mov -4528(%RBP),%RSP
	add $-4536, %RSP
uuid_000000000007b0c8:
	mov -4480(%RBP),%RSP
	add $-4536, %RSP
uuid_000000000007b0cb:
	mov -4472(%RBP),%RSP
	add $-4536, %RSP
	mov -4464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0d8
	jmp uuid_000000000007b0da
uuid_000000000007b0d8:
	push %RBP
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0d2
	jmp uuid_000000000007b0d4
uuid_000000000007b0d2:
	push %RBP
	mov -4560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0cf
	jmp uuid_000000000007b0d1
uuid_000000000007b0cf:
	push %RBP
	mov -4552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b0cc
	jmp uuid_000000000007b0ce
uuid_000000000007b0cc:
	movb $1, -4576(%rbp)
uuid_000000000007b0ce:
	mov -4640(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007b0d1:
	mov -4592(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007b0d4:
	mov -4584(%RBP),%RSP
	add $-4648, %RSP
	mov -4576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0d5
	jmp uuid_000000000007b0d7
uuid_000000000007b0d5:
	movb $1, -4416(%rbp)
uuid_000000000007b0d7:
	mov -4544(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007b0da:
	mov -4432(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007b0dd:
	mov -4424(%RBP),%RSP
	add $-4648, %RSP
	mov -4416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b0e8
	push %RBP
	jmp uuid_000000000007b0e5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b0e4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b0e7
uuid_000000000007b0e5:
uuid_000000000007b0e7:
	mov -4656(%RBP),%RSP
	add $-4656, %RSP
	jmp uuid_000000000007b0ea
uuid_000000000007b0e8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4648(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0e1
	jmp uuid_000000000007b0e3
uuid_000000000007b0e1:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0de
	jmp uuid_000000000007b0e0
uuid_000000000007b0de:
	movq $1, -64(%rbp)
uuid_000000000007b0e0:
	mov -4664(%RBP),%RSP
	add $-4664, %RSP
uuid_000000000007b0e3:
	mov -4656(%RBP),%RSP
	add $-4664, %RSP
uuid_000000000007b0ea:
	mov -4352(%RBP),%RSP
	add $-4664, %RSP
	jmp uuid_000000000007b0ed
uuid_000000000007b0eb:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4056(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0c0
	jmp uuid_000000000007b0c2
uuid_000000000007b0c0:
	movq $1, -64(%rbp)
uuid_000000000007b0c2:
	mov -4352(%RBP),%RSP
	add $-4352, %RSP
uuid_000000000007b0ed:
	mov -3872(%RBP),%RSP
	add $-4352, %RSP
	jmp uuid_000000000007b0f0
uuid_000000000007b0ee:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b0f0:
	mov -3552(%RBP),%RSP
	add $-3864, %RSP
	jmp uuid_000000000007b0f3
uuid_000000000007b0f1:
	movq $1, -64(%rbp)
uuid_000000000007b0f3:
	mov -3152(%RBP),%RSP
	add $-3544, %RSP
	jmp uuid_000000000007b0f6
uuid_000000000007b0f4:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b050
	jmp uuid_000000000007b052
uuid_000000000007b050:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b052:
	mov -3152(%RBP),%RSP
	add $-3152, %RSP
uuid_000000000007b0f6:
	mov -2560(%RBP),%RSP
	add $-3152, %RSP
	jmp uuid_000000000007b0f9
uuid_000000000007b0f7:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b017
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_000000000007b019
uuid_000000000007b017:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b019:
	mov -2560(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007b0f9:
	mov -1968(%RBP),%RSP
	add $-2560, %RSP
	jmp uuid_000000000007b0fc
uuid_000000000007b0fa:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007afde
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_000000000007afe0
uuid_000000000007afde:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007afe0:
	mov -1968(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007b0fc:
	mov -1104(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_000000000007b0ff
uuid_000000000007b0fd:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af87
	jmp uuid_000000000007af89
uuid_000000000007af87:
	movq $1, -64(%rbp)
uuid_000000000007af89:
	mov -1104(%RBP),%RSP
	add $-1104, %RSP
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af8a
	jmp uuid_000000000007af8c
uuid_000000000007af8a:
	movq $1, -64(%rbp)
uuid_000000000007af8c:
	mov -1112(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007b0ff:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007b102
uuid_000000000007b100:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af72
	jmp uuid_000000000007af74
uuid_000000000007af72:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af6f
	jmp uuid_000000000007af71
uuid_000000000007af6f:
	movq $1, -64(%rbp)
uuid_000000000007af71:
	mov -888(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007af74:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b102:
	mov -656(%RBP),%RSP
	add $-888, %RSP
	jmp uuid_000000000007b105
uuid_000000000007b103:
	movq $1, -64(%rbp)
uuid_000000000007b105:
	mov -480(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_000000000007b108
uuid_000000000007b106:
	movq $1, -64(%rbp)
uuid_000000000007b108:
	mov -248(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007b10b
uuid_000000000007b109:
	movq $1, -64(%rbp)
uuid_000000000007b10b:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b10c
	jmp uuid_000000000007b10e
uuid_000000000007b10c:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b10e:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_inner_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b115
	jmp uuid_000000000007b117
uuid_000000000007b115:
	push %RBP
	jmp uuid_000000000007b112
	jmp uuid_000000000007b114
uuid_000000000007b112:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b10f
	jmp uuid_000000000007b111
uuid_000000000007b10f:
	movb $1, -304(%rbp)
uuid_000000000007b111:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b114:
	mov -320(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b117:
	mov -312(%RBP),%RSP
	add $-352, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b34f
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b12d
	jmp uuid_000000000007b12f
uuid_000000000007b12d:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b11e
	jmp uuid_000000000007b120
uuid_000000000007b11e:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b11b
	jmp uuid_000000000007b11d
uuid_000000000007b11b:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b118
	jmp uuid_000000000007b11a
uuid_000000000007b118:
	movb $1, -472(%rbp)
uuid_000000000007b11a:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007b11d:
	mov -488(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007b120:
	mov -480(%RBP),%RSP
	add $-544, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b12a
	jmp uuid_000000000007b12c
uuid_000000000007b12a:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b124
	jmp uuid_000000000007b126
uuid_000000000007b124:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b121
	jmp uuid_000000000007b123
uuid_000000000007b121:
	movb $1, -584(%rbp)
uuid_000000000007b123:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007b126:
	mov -592(%RBP),%RSP
	add $-608, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b127
	jmp uuid_000000000007b129
uuid_000000000007b127:
	movb $1, -424(%rbp)
uuid_000000000007b129:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007b12c:
	mov -440(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007b12f:
	mov -432(%RBP),%RSP
	add $-608, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b34c
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b148
	jmp uuid_000000000007b14a
uuid_000000000007b148:
	push %RBP
	jmp uuid_000000000007b145
	jmp uuid_000000000007b147
uuid_000000000007b145:
	push %RBP
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b13f
	jmp uuid_000000000007b141
uuid_000000000007b13f:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b136
	jmp uuid_000000000007b138
uuid_000000000007b136:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b133
	jmp uuid_000000000007b135
uuid_000000000007b133:
	push %RBP
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	jmp uuid_000000000007b130
	jmp uuid_000000000007b132
uuid_000000000007b130:
	movb $1, -800(%rbp)
uuid_000000000007b132:
	mov -864(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b135:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b138:
	mov -808(%RBP),%RSP
	add $-888, %RSP
	mov -800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b13c
	jmp uuid_000000000007b13e
uuid_000000000007b13c:
	push %RBP
	mov -712(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $uuid_000000000007af3b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b139
	jmp uuid_000000000007b13b
uuid_000000000007b139:
	movb $1, -736(%rbp)
uuid_000000000007b13b:
	mov -896(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b13e:
	mov -752(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b141:
	mov -744(%RBP),%RSP
	add $-904, %RSP
	mov -736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b142
	jmp uuid_000000000007b144
uuid_000000000007b142:
	movb $1, -680(%rbp)
uuid_000000000007b144:
	mov -704(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b147:
	mov -696(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b14a:
	mov -688(%RBP),%RSP
	add $-904, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b349
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b157
	jmp uuid_000000000007b159
uuid_000000000007b157:
	push %RBP
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	jmp uuid_000000000007b154
	jmp uuid_000000000007b156
uuid_000000000007b154:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b14e
	jmp uuid_000000000007b150
uuid_000000000007b14e:
	push %RBP
	mov -1040(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b14b
	jmp uuid_000000000007b14d
uuid_000000000007b14b:
	movb $1, -1056(%rbp)
uuid_000000000007b14d:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b150:
	mov -1064(%RBP),%RSP
	add $-1080, %RSP
	mov -1056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b151
	jmp uuid_000000000007b153
uuid_000000000007b151:
	movb $1, -976(%rbp)
uuid_000000000007b153:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b156:
	mov -992(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b159:
	mov -984(%RBP),%RSP
	add $-1080, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b346
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b169
	jmp uuid_000000000007b16b
uuid_000000000007b169:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	jmp uuid_000000000007b166
	jmp uuid_000000000007b168
uuid_000000000007b166:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b160
	jmp uuid_000000000007b162
uuid_000000000007b160:
	push %RBP
	mov -1216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b15d
	jmp uuid_000000000007b15f
uuid_000000000007b15d:
	push %RBP
	mov -1208(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b15a
	jmp uuid_000000000007b15c
uuid_000000000007b15a:
	movb $1, -1232(%rbp)
uuid_000000000007b15c:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b15f:
	mov -1248(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b162:
	mov -1240(%RBP),%RSP
	add $-1304, %RSP
	mov -1232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b163
	jmp uuid_000000000007b165
uuid_000000000007b163:
	movb $1, -1152(%rbp)
uuid_000000000007b165:
	mov -1200(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b168:
	mov -1168(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b16b:
	mov -1160(%RBP),%RSP
	add $-1304, %RSP
	mov -1152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b343
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1a0
	jmp uuid_000000000007b1a2
uuid_000000000007b1a0:
	push %RBP
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b197
	jmp uuid_000000000007b199
uuid_000000000007b197:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b194
	jmp uuid_000000000007b196
uuid_000000000007b194:
	push %RBP
	mov -1400(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b191
	jmp uuid_000000000007b193
uuid_000000000007b191:
	movb $1, -1424(%rbp)
uuid_000000000007b193:
	mov -1472(%RBP),%RSP
	add $-1496, %RSP
uuid_000000000007b196:
	mov -1440(%RBP),%RSP
	add $-1496, %RSP
uuid_000000000007b199:
	mov -1432(%RBP),%RSP
	add $-1496, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b19d
	jmp uuid_000000000007b19f
uuid_000000000007b19d:
	push %RBP
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	jmp uuid_000000000007b19a
	jmp uuid_000000000007b19c
uuid_000000000007b19a:
	movb $1, -1376(%rbp)
uuid_000000000007b19c:
	mov -1504(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007b19f:
	mov -1392(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007b1a2:
	mov -1384(%RBP),%RSP
	add $-1528, %RSP
	mov -1376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b340
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b222
	jmp uuid_000000000007b224
uuid_000000000007b222:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1ec
	jmp uuid_000000000007b1ee
uuid_000000000007b1ec:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1e3
	jmp uuid_000000000007b1e5
uuid_000000000007b1e3:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1da
	jmp uuid_000000000007b1dc
uuid_000000000007b1da:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1d7
	jmp uuid_000000000007b1d9
uuid_000000000007b1d7:
	push %RBP
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_000000000007b1d4
	jmp uuid_000000000007b1d6
uuid_000000000007b1d4:
	movb $1, -1776(%rbp)
uuid_000000000007b1d6:
	mov -1840(%RBP),%RSP
	add $-1864, %RSP
uuid_000000000007b1d9:
	mov -1792(%RBP),%RSP
	add $-1864, %RSP
uuid_000000000007b1dc:
	mov -1784(%RBP),%RSP
	add $-1864, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b1e0
	jmp uuid_000000000007b1e2
uuid_000000000007b1e0:
	push %RBP
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_000000000007b1dd
	jmp uuid_000000000007b1df
uuid_000000000007b1dd:
	movb $1, -1712(%rbp)
uuid_000000000007b1df:
	mov -1872(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007b1e2:
	mov -1728(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007b1e5:
	mov -1720(%RBP),%RSP
	add $-1896, %RSP
	mov -1712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b1e9
	jmp uuid_000000000007b1eb
uuid_000000000007b1e9:
	push %RBP
	mov -1624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b1e6
	jmp uuid_000000000007b1e8
uuid_000000000007b1e6:
	movb $1, -1648(%rbp)
uuid_000000000007b1e8:
	mov -1904(%RBP),%RSP
	add $-1912, %RSP
uuid_000000000007b1eb:
	mov -1664(%RBP),%RSP
	add $-1912, %RSP
uuid_000000000007b1ee:
	mov -1656(%RBP),%RSP
	add $-1912, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b21f
	jmp uuid_000000000007b221
uuid_000000000007b21f:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1944(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b219
	jmp uuid_000000000007b21b
uuid_000000000007b219:
	push %RBP
	mov -1936(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b210
	jmp uuid_000000000007b212
uuid_000000000007b210:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1f5
	jmp uuid_000000000007b1f7
uuid_000000000007b1f5:
	push %RBP
	mov -2064(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1f2
	jmp uuid_000000000007b1f4
uuid_000000000007b1f2:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	jmp uuid_000000000007b1ef
	jmp uuid_000000000007b1f1
uuid_000000000007b1ef:
	movb $1, -2080(%rbp)
uuid_000000000007b1f1:
	mov -2144(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007b1f4:
	mov -2096(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007b1f7:
	mov -2088(%RBP),%RSP
	add $-2168, %RSP
	mov -2080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b20d
	jmp uuid_000000000007b20f
uuid_000000000007b20d:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b207
	jmp uuid_000000000007b209
uuid_000000000007b207:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1fe
	jmp uuid_000000000007b200
uuid_000000000007b1fe:
	push %RBP
	mov -2256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1fb
	jmp uuid_000000000007b1fd
uuid_000000000007b1fb:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	jmp uuid_000000000007b1f8
	jmp uuid_000000000007b1fa
uuid_000000000007b1f8:
	movb $1, -2272(%rbp)
uuid_000000000007b1fa:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007b1fd:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007b200:
	mov -2280(%RBP),%RSP
	add $-2360, %RSP
	mov -2272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b204
	jmp uuid_000000000007b206
uuid_000000000007b204:
	push %RBP
	mov -2184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2376(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b201
	jmp uuid_000000000007b203
uuid_000000000007b201:
	movb $1, -2208(%rbp)
uuid_000000000007b203:
	mov -2368(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007b206:
	mov -2224(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007b209:
	mov -2216(%RBP),%RSP
	add $-2376, %RSP
	mov -2208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b20a
	jmp uuid_000000000007b20c
uuid_000000000007b20a:
	movb $1, -2016(%rbp)
uuid_000000000007b20c:
	mov -2176(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007b20f:
	mov -2032(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007b212:
	mov -2024(%RBP),%RSP
	add $-2376, %RSP
	mov -2016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b216
	jmp uuid_000000000007b218
uuid_000000000007b216:
	push %RBP
	mov -1928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2392(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b213
	jmp uuid_000000000007b215
uuid_000000000007b213:
	movb $1, -1952(%rbp)
uuid_000000000007b215:
	mov -2384(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007b218:
	mov -1968(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007b21b:
	mov -1960(%RBP),%RSP
	add $-2392, %RSP
	mov -1952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b21c
	jmp uuid_000000000007b21e
uuid_000000000007b21c:
	movb $1, -1600(%rbp)
uuid_000000000007b21e:
	mov -1920(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007b221:
	mov -1616(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007b224:
	mov -1608(%RBP),%RSP
	add $-2392, %RSP
	mov -1600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b33d
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -2456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b25b
	jmp uuid_000000000007b25d
uuid_000000000007b25b:
	push %RBP
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	jmp uuid_000000000007b258
	jmp uuid_000000000007b25a
uuid_000000000007b258:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq $0
	push %RBP
	mov -2536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b252
	jmp uuid_000000000007b254
uuid_000000000007b252:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b249
	jmp uuid_000000000007b24b
uuid_000000000007b249:
	push %RBP
	mov -2592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b22e
	jmp uuid_000000000007b230
uuid_000000000007b22e:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b22b
	jmp uuid_000000000007b22d
uuid_000000000007b22b:
	push %RBP
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	jmp uuid_000000000007b228
	jmp uuid_000000000007b22a
uuid_000000000007b228:
	movb $1, -2672(%rbp)
uuid_000000000007b22a:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007b22d:
	mov -2688(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007b230:
	mov -2680(%RBP),%RSP
	add $-2760, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b246
	jmp uuid_000000000007b248
uuid_000000000007b246:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b240
	jmp uuid_000000000007b242
uuid_000000000007b240:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b237
	jmp uuid_000000000007b239
uuid_000000000007b237:
	push %RBP
	mov -2848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2920(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b234
	jmp uuid_000000000007b236
uuid_000000000007b234:
	push %RBP
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	jmp uuid_000000000007b231
	jmp uuid_000000000007b233
uuid_000000000007b231:
	movb $1, -2864(%rbp)
uuid_000000000007b233:
	mov -2928(%RBP),%RSP
	add $-2952, %RSP
uuid_000000000007b236:
	mov -2880(%RBP),%RSP
	add $-2952, %RSP
uuid_000000000007b239:
	mov -2872(%RBP),%RSP
	add $-2952, %RSP
	mov -2864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b23d
	jmp uuid_000000000007b23f
uuid_000000000007b23d:
	push %RBP
	mov -2776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b23a
	jmp uuid_000000000007b23c
uuid_000000000007b23a:
	movb $1, -2800(%rbp)
uuid_000000000007b23c:
	mov -2960(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007b23f:
	mov -2816(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007b242:
	mov -2808(%RBP),%RSP
	add $-2968, %RSP
	mov -2800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b243
	jmp uuid_000000000007b245
uuid_000000000007b243:
	movb $1, -2608(%rbp)
uuid_000000000007b245:
	mov -2768(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007b248:
	mov -2624(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007b24b:
	mov -2616(%RBP),%RSP
	add $-2968, %RSP
	mov -2608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b24f
	jmp uuid_000000000007b251
uuid_000000000007b24f:
	push %RBP
	mov -2520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2984(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b24c
	jmp uuid_000000000007b24e
uuid_000000000007b24c:
	movb $1, -2544(%rbp)
uuid_000000000007b24e:
	mov -2976(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007b251:
	mov -2560(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007b254:
	mov -2552(%RBP),%RSP
	add $-2984, %RSP
	mov -2544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b255
	jmp uuid_000000000007b257
uuid_000000000007b255:
	movb $1, -2464(%rbp)
uuid_000000000007b257:
	mov -2512(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007b25a:
	mov -2480(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007b25d:
	mov -2472(%RBP),%RSP
	add $-2984, %RSP
	mov -2464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b33a
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b294
	jmp uuid_000000000007b296
uuid_000000000007b294:
	push %RBP
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b279
	jmp uuid_000000000007b27b
uuid_000000000007b279:
	push %RBP
	mov -3088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b270
	jmp uuid_000000000007b272
uuid_000000000007b270:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b267
	jmp uuid_000000000007b269
uuid_000000000007b267:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b264
	jmp uuid_000000000007b266
uuid_000000000007b264:
	push %RBP
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	jmp uuid_000000000007b261
	jmp uuid_000000000007b263
uuid_000000000007b261:
	movb $1, -3232(%rbp)
uuid_000000000007b263:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007b266:
	mov -3248(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007b269:
	mov -3240(%RBP),%RSP
	add $-3320, %RSP
	mov -3232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b26d
	jmp uuid_000000000007b26f
uuid_000000000007b26d:
	push %RBP
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	jmp uuid_000000000007b26a
	jmp uuid_000000000007b26c
uuid_000000000007b26a:
	movb $1, -3168(%rbp)
uuid_000000000007b26c:
	mov -3328(%RBP),%RSP
	add $-3352, %RSP
uuid_000000000007b26f:
	mov -3184(%RBP),%RSP
	add $-3352, %RSP
uuid_000000000007b272:
	mov -3176(%RBP),%RSP
	add $-3352, %RSP
	mov -3168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b276
	jmp uuid_000000000007b278
uuid_000000000007b276:
	push %RBP
	mov -3080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b273
	jmp uuid_000000000007b275
uuid_000000000007b273:
	movb $1, -3104(%rbp)
uuid_000000000007b275:
	mov -3360(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007b278:
	mov -3120(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007b27b:
	mov -3112(%RBP),%RSP
	add $-3368, %RSP
	mov -3104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b291
	jmp uuid_000000000007b293
uuid_000000000007b291:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq $0
	push %RBP
	mov -3400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b28b
	jmp uuid_000000000007b28d
uuid_000000000007b28b:
	push %RBP
	mov -3392(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b282
	jmp uuid_000000000007b284
uuid_000000000007b282:
	push %RBP
	mov -3456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b27f
	jmp uuid_000000000007b281
uuid_000000000007b27f:
	push %RBP
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	jmp uuid_000000000007b27c
	jmp uuid_000000000007b27e
uuid_000000000007b27c:
	movb $1, -3472(%rbp)
uuid_000000000007b27e:
	mov -3536(%RBP),%RSP
	add $-3560, %RSP
uuid_000000000007b281:
	mov -3488(%RBP),%RSP
	add $-3560, %RSP
uuid_000000000007b284:
	mov -3480(%RBP),%RSP
	add $-3560, %RSP
	mov -3472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b288
	jmp uuid_000000000007b28a
uuid_000000000007b288:
	push %RBP
	mov -3384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3576(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b285
	jmp uuid_000000000007b287
uuid_000000000007b285:
	movb $1, -3408(%rbp)
uuid_000000000007b287:
	mov -3568(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007b28a:
	mov -3424(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007b28d:
	mov -3416(%RBP),%RSP
	add $-3576, %RSP
	mov -3408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b28e
	jmp uuid_000000000007b290
uuid_000000000007b28e:
	movb $1, -3056(%rbp)
uuid_000000000007b290:
	mov -3376(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007b293:
	mov -3072(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007b296:
	mov -3064(%RBP),%RSP
	add $-3576, %RSP
	mov -3056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b337
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2bb
	jmp uuid_000000000007b2bd
uuid_000000000007b2bb:
	push %RBP
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2a0
	jmp uuid_000000000007b2a2
uuid_000000000007b2a0:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b29d
	jmp uuid_000000000007b29f
uuid_000000000007b29d:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3768(%rbp)
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b29a
	jmp uuid_000000000007b29c
uuid_000000000007b29a:
	movb $1, -3696(%rbp)
uuid_000000000007b29c:
	mov -3760(%RBP),%RSP
	add $-3768, %RSP
uuid_000000000007b29f:
	mov -3712(%RBP),%RSP
	add $-3768, %RSP
uuid_000000000007b2a2:
	mov -3704(%RBP),%RSP
	add $-3768, %RSP
	mov -3696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2b8
	jmp uuid_000000000007b2ba
uuid_000000000007b2b8:
	push %RBP
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq $0
	push %RBP
	mov -3800(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2b2
	jmp uuid_000000000007b2b4
uuid_000000000007b2b2:
	push %RBP
	mov -3792(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2a9
	jmp uuid_000000000007b2ab
uuid_000000000007b2a9:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2a6
	jmp uuid_000000000007b2a8
uuid_000000000007b2a6:
	push %RBP
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	jmp uuid_000000000007b2a3
	jmp uuid_000000000007b2a5
uuid_000000000007b2a3:
	movb $1, -3872(%rbp)
uuid_000000000007b2a5:
	mov -3936(%RBP),%RSP
	add $-3960, %RSP
uuid_000000000007b2a8:
	mov -3888(%RBP),%RSP
	add $-3960, %RSP
uuid_000000000007b2ab:
	mov -3880(%RBP),%RSP
	add $-3960, %RSP
	mov -3872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2af
	jmp uuid_000000000007b2b1
uuid_000000000007b2af:
	push %RBP
	mov -3784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3976(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b2ac
	jmp uuid_000000000007b2ae
uuid_000000000007b2ac:
	movb $1, -3808(%rbp)
uuid_000000000007b2ae:
	mov -3968(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007b2b1:
	mov -3824(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007b2b4:
	mov -3816(%RBP),%RSP
	add $-3976, %RSP
	mov -3808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2b5
	jmp uuid_000000000007b2b7
uuid_000000000007b2b5:
	movb $1, -3648(%rbp)
uuid_000000000007b2b7:
	mov -3776(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007b2ba:
	mov -3664(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007b2bd:
	mov -3656(%RBP),%RSP
	add $-3976, %RSP
	mov -3648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b334
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2d6
	jmp uuid_000000000007b2d8
uuid_000000000007b2d6:
	push %RBP
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	jmp uuid_000000000007b2d3
	jmp uuid_000000000007b2d5
uuid_000000000007b2d3:
	push %RBP
	pushq -3992(%RBP)
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq $0
	push %RBP
	mov -4120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2cd
	jmp uuid_000000000007b2cf
uuid_000000000007b2cd:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2c4
	jmp uuid_000000000007b2c6
uuid_000000000007b2c4:
	push %RBP
	mov -4176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2c1
	jmp uuid_000000000007b2c3
uuid_000000000007b2c1:
	push %RBP
	pushq -4152(%RBP)
	pushq -4160(%RBP)
	pushq -4168(%RBP)
	jmp uuid_000000000007b2be
	jmp uuid_000000000007b2c0
uuid_000000000007b2be:
	movb $1, -4192(%rbp)
uuid_000000000007b2c0:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007b2c3:
	mov -4208(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007b2c6:
	mov -4200(%RBP),%RSP
	add $-4280, %RSP
	mov -4192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2ca
	jmp uuid_000000000007b2cc
uuid_000000000007b2ca:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b2c7
	jmp uuid_000000000007b2c9
uuid_000000000007b2c7:
	movb $1, -4128(%rbp)
uuid_000000000007b2c9:
	mov -4288(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007b2cc:
	mov -4144(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007b2cf:
	mov -4136(%RBP),%RSP
	add $-4296, %RSP
	mov -4128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2d0
	jmp uuid_000000000007b2d2
uuid_000000000007b2d0:
	movb $1, -4048(%rbp)
uuid_000000000007b2d2:
	mov -4096(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007b2d5:
	mov -4064(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007b2d8:
	mov -4056(%RBP),%RSP
	add $-4296, %RSP
	mov -4048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b331
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b303
	jmp uuid_000000000007b305
uuid_000000000007b303:
	push %RBP
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2df
	jmp uuid_000000000007b2e1
uuid_000000000007b2df:
	push %RBP
	mov -4400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2dc
	jmp uuid_000000000007b2de
uuid_000000000007b2dc:
	push %RBP
	mov -4392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b2d9
	jmp uuid_000000000007b2db
uuid_000000000007b2d9:
	movb $1, -4416(%rbp)
uuid_000000000007b2db:
	mov -4480(%RBP),%RSP
	add $-4488, %RSP
uuid_000000000007b2de:
	mov -4432(%RBP),%RSP
	add $-4488, %RSP
uuid_000000000007b2e1:
	mov -4424(%RBP),%RSP
	add $-4488, %RSP
	mov -4416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b300
	jmp uuid_000000000007b302
uuid_000000000007b300:
	push %RBP
	pushq -4312(%RBP)
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq $0
	push %RBP
	mov -4520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2fa
	jmp uuid_000000000007b2fc
uuid_000000000007b2fa:
	push %RBP
	mov -4512(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2f1
	jmp uuid_000000000007b2f3
uuid_000000000007b2f1:
	push %RBP
	mov -4576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2ee
	jmp uuid_000000000007b2f0
uuid_000000000007b2ee:
	push %RBP
	pushq -4552(%RBP)
	pushq -4560(%RBP)
	pushq -4568(%RBP)
	pushq $0
	push %RBP
	mov -4680(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2e8
	jmp uuid_000000000007b2ea
uuid_000000000007b2e8:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4744(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2e5
	jmp uuid_000000000007b2e7
uuid_000000000007b2e5:
	push %RBP
	mov -4664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b2e2
	jmp uuid_000000000007b2e4
uuid_000000000007b2e2:
	movb $1, -4688(%rbp)
uuid_000000000007b2e4:
	mov -4752(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007b2e7:
	mov -4704(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007b2ea:
	mov -4696(%RBP),%RSP
	add $-4760, %RSP
	mov -4688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2eb
	jmp uuid_000000000007b2ed
uuid_000000000007b2eb:
	movb $1, -4592(%rbp)
uuid_000000000007b2ed:
	mov -4656(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007b2f0:
	mov -4608(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007b2f3:
	mov -4600(%RBP),%RSP
	add $-4760, %RSP
	mov -4592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2f7
	jmp uuid_000000000007b2f9
uuid_000000000007b2f7:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4776(%rbp)
	pushq $uuid_000000000007b0ad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b2f4
	jmp uuid_000000000007b2f6
uuid_000000000007b2f4:
	movb $1, -4528(%rbp)
uuid_000000000007b2f6:
	mov -4768(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007b2f9:
	mov -4544(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007b2fc:
	mov -4536(%RBP),%RSP
	add $-4776, %RSP
	mov -4528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b2fd
	jmp uuid_000000000007b2ff
uuid_000000000007b2fd:
	movb $1, -4368(%rbp)
uuid_000000000007b2ff:
	mov -4496(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007b302:
	mov -4384(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007b305:
	mov -4376(%RBP),%RSP
	add $-4776, %RSP
	mov -4368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b32e
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b321
	jmp uuid_000000000007b323
uuid_000000000007b321:
	push %RBP
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq $0
	push %RBP
	mov -4888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b30f
	jmp uuid_000000000007b311
uuid_000000000007b30f:
	push %RBP
	mov -4880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b30c
	jmp uuid_000000000007b30e
uuid_000000000007b30c:
	push %RBP
	mov -4872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b309
	jmp uuid_000000000007b30b
uuid_000000000007b309:
	movb $1, -4896(%rbp)
uuid_000000000007b30b:
	mov -4960(%RBP),%RSP
	add $-4968, %RSP
uuid_000000000007b30e:
	mov -4912(%RBP),%RSP
	add $-4968, %RSP
uuid_000000000007b311:
	mov -4904(%RBP),%RSP
	add $-4968, %RSP
	mov -4896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b31e
	jmp uuid_000000000007b320
uuid_000000000007b31e:
	push %RBP
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq -4808(%RBP)
	pushq $0
	push %RBP
	mov -5000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b318
	jmp uuid_000000000007b31a
uuid_000000000007b318:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b315
	jmp uuid_000000000007b317
uuid_000000000007b315:
	push %RBP
	mov -4984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b312
	jmp uuid_000000000007b314
uuid_000000000007b312:
	movb $1, -5008(%rbp)
uuid_000000000007b314:
	mov -5072(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007b317:
	mov -5024(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007b31a:
	mov -5016(%RBP),%RSP
	add $-5080, %RSP
	mov -5008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b31b
	jmp uuid_000000000007b31d
uuid_000000000007b31b:
	movb $1, -4848(%rbp)
uuid_000000000007b31d:
	mov -4976(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007b320:
	mov -4864(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007b323:
	mov -4856(%RBP),%RSP
	add $-5080, %RSP
	mov -4848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b32b
	push %RBP
	jmp uuid_000000000007b328
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b327
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b32a
uuid_000000000007b328:
uuid_000000000007b32a:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_000000000007b32d
uuid_000000000007b32b:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5080(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b324
	jmp uuid_000000000007b326
uuid_000000000007b324:
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b326:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007b32d:
	mov -4784(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_000000000007b330
uuid_000000000007b32e:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4760(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b306
	jmp uuid_000000000007b308
uuid_000000000007b306:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b308:
	mov -4784(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007b330:
	mov -4304(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_000000000007b333
uuid_000000000007b331:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b333:
	mov -3984(%RBP),%RSP
	add $-4296, %RSP
	jmp uuid_000000000007b336
uuid_000000000007b334:
uuid_000000000007b336:
	mov -3584(%RBP),%RSP
	add $-3976, %RSP
	jmp uuid_000000000007b339
uuid_000000000007b337:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b297
	jmp uuid_000000000007b299
uuid_000000000007b297:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b299:
	mov -3584(%RBP),%RSP
	add $-3584, %RSP
uuid_000000000007b339:
	mov -2992(%RBP),%RSP
	add $-3584, %RSP
	jmp uuid_000000000007b33c
uuid_000000000007b33a:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b25e
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007b260
uuid_000000000007b25e:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b260:
	mov -2992(%RBP),%RSP
	add $-2992, %RSP
uuid_000000000007b33c:
	mov -2400(%RBP),%RSP
	add $-2992, %RSP
	jmp uuid_000000000007b33f
uuid_000000000007b33d:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b225
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007b227
uuid_000000000007b225:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b227:
	mov -2400(%RBP),%RSP
	add $-2400, %RSP
uuid_000000000007b33f:
	mov -1536(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_000000000007b342
uuid_000000000007b340:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1a9
	jmp uuid_000000000007b1ab
uuid_000000000007b1a9:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1a6
	jmp uuid_000000000007b1a8
uuid_000000000007b1a6:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1a3
	jmp uuid_000000000007b1a5
uuid_000000000007b1a3:
	movb $1, -2040(%rbp)
uuid_000000000007b1a5:
	mov -2184(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007b1a8:
	mov -2056(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007b1ab:
	mov -2048(%RBP),%RSP
	add $-2304, %RSP
	mov -2040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b1d1
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1b2
	jmp uuid_000000000007b1b4
uuid_000000000007b1b2:
	push %RBP
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	mov -2704(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1af
	jmp uuid_000000000007b1b1
uuid_000000000007b1af:
	push %RBP
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	jmp uuid_000000000007b1ac
	jmp uuid_000000000007b1ae
uuid_000000000007b1ac:
	movb $1, -2568(%rbp)
uuid_000000000007b1ae:
	mov -2712(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007b1b1:
	mov -2584(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007b1b4:
	mov -2576(%RBP),%RSP
	add $-2832, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b1ce
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3088(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1bb
	jmp uuid_000000000007b1bd
uuid_000000000007b1bb:
	push %RBP
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	jmp uuid_000000000007b1b8
	jmp uuid_000000000007b1ba
uuid_000000000007b1b8:
	push %RBP
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	mov -3360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1b5
	jmp uuid_000000000007b1b7
uuid_000000000007b1b5:
	movb $1, -3096(%rbp)
uuid_000000000007b1b7:
	mov -3240(%RBP),%RSP
	add $-3360, %RSP
uuid_000000000007b1ba:
	mov -3112(%RBP),%RSP
	add $-3360, %RSP
uuid_000000000007b1bd:
	mov -3104(%RBP),%RSP
	add $-3360, %RSP
	mov -3096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b1cb
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1c4
	jmp uuid_000000000007b1c6
uuid_000000000007b1c4:
	push %RBP
	pushq -3496(%RBP)
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	jmp uuid_000000000007b1c1
	jmp uuid_000000000007b1c3
uuid_000000000007b1c1:
	push %RBP
	pushq -3376(%RBP)
	pushq -3384(%RBP)
	pushq -3392(%RBP)
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	pushq -3424(%RBP)
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	pushq -3456(%RBP)
	pushq -3464(%RBP)
	pushq -3472(%RBP)
	pushq -3480(%RBP)
	pushq -3488(%RBP)
	jmp uuid_000000000007b1be
	jmp uuid_000000000007b1c0
uuid_000000000007b1be:
	movb $1, -3624(%rbp)
uuid_000000000007b1c0:
	mov -3768(%RBP),%RSP
	add $-3888, %RSP
uuid_000000000007b1c3:
	mov -3640(%RBP),%RSP
	add $-3888, %RSP
uuid_000000000007b1c6:
	mov -3632(%RBP),%RSP
	add $-3888, %RSP
	mov -3624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b1c8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b1c7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b1ca
uuid_000000000007b1c8:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b1ca:
	mov -3368(%RBP),%RSP
	add $-3888, %RSP
	jmp uuid_000000000007b1cd
uuid_000000000007b1cb:
	movq -3232(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -3224(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -3216(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -3208(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3200(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3192(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3184(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3176(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3168(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3160(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3152(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_000000000007b1cd:
	mov -2840(%RBP),%RSP
	add $-3360, %RSP
	jmp uuid_000000000007b1d0
uuid_000000000007b1ce:
	movq -2832(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2824(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2816(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2808(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2800(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2792(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2784(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2776(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2768(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_000000000007b1d0:
	mov -2312(%RBP),%RSP
	add $-2832, %RSP
	jmp uuid_000000000007b1d3
uuid_000000000007b1d1:
uuid_000000000007b1d3:
	mov -1784(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007b342:
	mov -1312(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_000000000007b345
uuid_000000000007b343:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b172
	jmp uuid_000000000007b174
uuid_000000000007b172:
	push %RBP
	jmp uuid_000000000007b16f
	jmp uuid_000000000007b171
uuid_000000000007b16f:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b16c
	jmp uuid_000000000007b16e
uuid_000000000007b16c:
	movb $1, -1816(%rbp)
uuid_000000000007b16e:
	mov -1840(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007b171:
	mov -1832(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007b174:
	mov -1824(%RBP),%RSP
	add $-1960, %RSP
	mov -1816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b18e
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b17b
	jmp uuid_000000000007b17d
uuid_000000000007b17b:
	push %RBP
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b178
	jmp uuid_000000000007b17a
uuid_000000000007b178:
	push %RBP
	jmp uuid_000000000007b175
	jmp uuid_000000000007b177
uuid_000000000007b175:
	movb $1, -2224(%rbp)
uuid_000000000007b177:
	mov -2368(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007b17a:
	mov -2240(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007b17d:
	mov -2232(%RBP),%RSP
	add $-2368, %RSP
	mov -2224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b18b
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b184
	jmp uuid_000000000007b186
uuid_000000000007b184:
	push %RBP
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	jmp uuid_000000000007b181
	jmp uuid_000000000007b183
uuid_000000000007b181:
	push %RBP
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	jmp uuid_000000000007b17e
	jmp uuid_000000000007b180
uuid_000000000007b17e:
	movb $1, -2632(%rbp)
uuid_000000000007b180:
	mov -2776(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007b183:
	mov -2648(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007b186:
	mov -2640(%RBP),%RSP
	add $-2896, %RSP
	mov -2632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b188
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b187
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b18a
uuid_000000000007b188:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b18a:
	mov -2376(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007b18d
uuid_000000000007b18b:
uuid_000000000007b18d:
	mov -1968(%RBP),%RSP
	add $-2368, %RSP
	jmp uuid_000000000007b190
uuid_000000000007b18e:
uuid_000000000007b190:
	mov -1560(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007b345:
	mov -1088(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_000000000007b348
uuid_000000000007b346:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1080(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b348:
	mov -912(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007b34b
uuid_000000000007b349:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b34b:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007b34e
uuid_000000000007b34c:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -608(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -544(%rbp)
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $6
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b34e:
	mov -360(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007b351
uuid_000000000007b34f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007b351:
	mov -240(%RBP),%RSP
	add $-352, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b35d
	jmp uuid_000000000007b35f
uuid_000000000007b35d:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b35a
	jmp uuid_000000000007b35c
uuid_000000000007b35a:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b357
	jmp uuid_000000000007b359
uuid_000000000007b357:
	movb $1, -400(%rbp)
uuid_000000000007b359:
	mov -464(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b35c:
	mov -416(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b35f:
	mov -408(%RBP),%RSP
	add $-504, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b385
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b378
	jmp uuid_000000000007b37a
uuid_000000000007b378:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b366
	jmp uuid_000000000007b368
uuid_000000000007b366:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b363
	jmp uuid_000000000007b365
uuid_000000000007b363:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_000000000007b360
	jmp uuid_000000000007b362
uuid_000000000007b360:
	movb $1, -672(%rbp)
uuid_000000000007b362:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007b365:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007b368:
	mov -680(%RBP),%RSP
	add $-760, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b375
	jmp uuid_000000000007b377
uuid_000000000007b375:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b36f
	jmp uuid_000000000007b371
uuid_000000000007b36f:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b36c
	jmp uuid_000000000007b36e
uuid_000000000007b36c:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	jmp uuid_000000000007b369
	jmp uuid_000000000007b36b
uuid_000000000007b369:
	movb $1, -816(%rbp)
uuid_000000000007b36b:
	mov -880(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b36e:
	mov -832(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b371:
	mov -824(%RBP),%RSP
	add $-904, %RSP
	mov -816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b372
	jmp uuid_000000000007b374
uuid_000000000007b372:
	movb $1, -608(%rbp)
uuid_000000000007b374:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b377:
	mov -624(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007b37a:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b382
	push %RBP
	jmp uuid_000000000007b37f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b37e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b381
uuid_000000000007b37f:
uuid_000000000007b381:
	mov -912(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007b384
uuid_000000000007b382:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	push %RBP
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b37b
	jmp uuid_000000000007b37d
uuid_000000000007b37b:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_000000000007b37d:
	mov -912(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007b384:
	mov -512(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007b387
uuid_000000000007b385:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_000000000007b387:
	mov -304(%RBP),%RSP
	add $-504, %RSP
	subq $120, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
fields_SB_of_SB_type_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3b2
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3a0
	jmp uuid_000000000007b3a2
uuid_000000000007b3a0:
	push %RBP
	mov -112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b397
	jmp uuid_000000000007b399
uuid_000000000007b397:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b38e
	jmp uuid_000000000007b390
uuid_000000000007b38e:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b38b
	jmp uuid_000000000007b38d
uuid_000000000007b38b:
	push %RBP
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	jmp uuid_000000000007b388
	jmp uuid_000000000007b38a
uuid_000000000007b388:
	movb $1, -256(%rbp)
uuid_000000000007b38a:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007b38d:
	mov -272(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007b390:
	mov -264(%RBP),%RSP
	add $-344, %RSP
	mov -256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b394
	jmp uuid_000000000007b396
uuid_000000000007b394:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007b391
	jmp uuid_000000000007b393
uuid_000000000007b391:
	movb $1, -192(%rbp)
uuid_000000000007b393:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007b396:
	mov -208(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007b399:
	mov -200(%RBP),%RSP
	add $-376, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b39d
	jmp uuid_000000000007b39f
uuid_000000000007b39d:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b39a
	jmp uuid_000000000007b39c
uuid_000000000007b39a:
	movb $1, -128(%rbp)
uuid_000000000007b39c:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007b39f:
	mov -144(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007b3a2:
	mov -136(%RBP),%RSP
	add $-392, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b3af
	push %RBP
	jmp uuid_000000000007b3ac
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b3ab
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b3ae
uuid_000000000007b3ac:
	pushq $uuid_000000000007a6ed
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b3ae:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b3b1
uuid_000000000007b3af:
	pushq $uuid_000000000007a6ed
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b3b1:
	mov -96(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007b3b4
uuid_000000000007b3b2:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b3b4:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_type_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b490
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3b8
	jmp uuid_000000000007b3ba
uuid_000000000007b3b8:
	push %RBP
	jmp uuid_000000000007b3b5
	jmp uuid_000000000007b3b7
uuid_000000000007b3b5:
	movb $1, -136(%rbp)
uuid_000000000007b3b7:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007b3ba:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b48d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3c1
	jmp uuid_000000000007b3c3
uuid_000000000007b3c1:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3be
	jmp uuid_000000000007b3c0
uuid_000000000007b3be:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b3bb
	jmp uuid_000000000007b3bd
uuid_000000000007b3bb:
	movb $1, -192(%rbp)
uuid_000000000007b3bd:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b3c0:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b3c3:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b48a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3dc
	jmp uuid_000000000007b3de
uuid_000000000007b3dc:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3d3
	jmp uuid_000000000007b3d5
uuid_000000000007b3d3:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3d0
	jmp uuid_000000000007b3d2
uuid_000000000007b3d0:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3ca
	jmp uuid_000000000007b3cc
uuid_000000000007b3ca:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3c7
	jmp uuid_000000000007b3c9
uuid_000000000007b3c7:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b3c4
	jmp uuid_000000000007b3c6
uuid_000000000007b3c4:
	movb $1, -464(%rbp)
uuid_000000000007b3c6:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b3c9:
	mov -480(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b3cc:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b3cd
	jmp uuid_000000000007b3cf
uuid_000000000007b3cd:
	movb $1, -368(%rbp)
uuid_000000000007b3cf:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b3d2:
	mov -384(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b3d5:
	mov -376(%RBP),%RSP
	add $-536, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b3d9
	jmp uuid_000000000007b3db
uuid_000000000007b3d9:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $uuid_000000000007a917
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b3d6
	jmp uuid_000000000007b3d8
uuid_000000000007b3d6:
	movb $1, -304(%rbp)
uuid_000000000007b3d8:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007b3db:
	mov -320(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007b3de:
	mov -312(%RBP),%RSP
	add $-552, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b487
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3f7
	jmp uuid_000000000007b3f9
uuid_000000000007b3f7:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3ee
	jmp uuid_000000000007b3f0
uuid_000000000007b3ee:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3e5
	jmp uuid_000000000007b3e7
uuid_000000000007b3e5:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3e2
	jmp uuid_000000000007b3e4
uuid_000000000007b3e2:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007b3df
	jmp uuid_000000000007b3e1
uuid_000000000007b3df:
	movb $1, -720(%rbp)
uuid_000000000007b3e1:
	mov -784(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007b3e4:
	mov -736(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007b3e7:
	mov -728(%RBP),%RSP
	add $-808, %RSP
	mov -720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b3eb
	jmp uuid_000000000007b3ed
uuid_000000000007b3eb:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3e8
	jmp uuid_000000000007b3ea
uuid_000000000007b3e8:
	movb $1, -656(%rbp)
uuid_000000000007b3ea:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007b3ed:
	mov -672(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007b3f0:
	mov -664(%RBP),%RSP
	add $-840, %RSP
	mov -656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b3f4
	jmp uuid_000000000007b3f6
uuid_000000000007b3f4:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b3f1
	jmp uuid_000000000007b3f3
uuid_000000000007b3f1:
	movb $1, -592(%rbp)
uuid_000000000007b3f3:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007b3f6:
	mov -608(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007b3f9:
	mov -600(%RBP),%RSP
	add $-856, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b484
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b412
	jmp uuid_000000000007b414
uuid_000000000007b412:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b409
	jmp uuid_000000000007b40b
uuid_000000000007b409:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b400
	jmp uuid_000000000007b402
uuid_000000000007b400:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1080(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3fd
	jmp uuid_000000000007b3ff
uuid_000000000007b3fd:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007b3fa
	jmp uuid_000000000007b3fc
uuid_000000000007b3fa:
	movb $1, -1024(%rbp)
uuid_000000000007b3fc:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007b3ff:
	mov -1040(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007b402:
	mov -1032(%RBP),%RSP
	add $-1112, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b406
	jmp uuid_000000000007b408
uuid_000000000007b406:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007b403
	jmp uuid_000000000007b405
uuid_000000000007b403:
	movb $1, -960(%rbp)
uuid_000000000007b405:
	mov -1120(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007b408:
	mov -976(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007b40b:
	mov -968(%RBP),%RSP
	add $-1144, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b40f
	jmp uuid_000000000007b411
uuid_000000000007b40f:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b40c
	jmp uuid_000000000007b40e
uuid_000000000007b40c:
	movb $1, -896(%rbp)
uuid_000000000007b40e:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007b411:
	mov -912(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007b414:
	mov -904(%RBP),%RSP
	add $-1160, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b481
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b436
	jmp uuid_000000000007b438
uuid_000000000007b436:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b42d
	jmp uuid_000000000007b42f
uuid_000000000007b42d:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b41b
	jmp uuid_000000000007b41d
uuid_000000000007b41b:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b418
	jmp uuid_000000000007b41a
uuid_000000000007b418:
	push %RBP
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	jmp uuid_000000000007b415
	jmp uuid_000000000007b417
uuid_000000000007b415:
	movb $1, -1328(%rbp)
uuid_000000000007b417:
	mov -1392(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007b41a:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007b41d:
	mov -1336(%RBP),%RSP
	add $-1416, %RSP
	mov -1328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b42a
	jmp uuid_000000000007b42c
uuid_000000000007b42a:
	push %RBP
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b424
	jmp uuid_000000000007b426
uuid_000000000007b424:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b421
	jmp uuid_000000000007b423
uuid_000000000007b421:
	push %RBP
	mov -1432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b41e
	jmp uuid_000000000007b420
uuid_000000000007b41e:
	movb $1, -1456(%rbp)
uuid_000000000007b420:
	mov -1520(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007b423:
	mov -1472(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007b426:
	mov -1464(%RBP),%RSP
	add $-1528, %RSP
	mov -1456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b427
	jmp uuid_000000000007b429
uuid_000000000007b427:
	movb $1, -1264(%rbp)
uuid_000000000007b429:
	mov -1424(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007b42c:
	mov -1280(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007b42f:
	mov -1272(%RBP),%RSP
	add $-1528, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b433
	jmp uuid_000000000007b435
uuid_000000000007b433:
	push %RBP
	mov -1176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_000000000007ac6d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b430
	jmp uuid_000000000007b432
uuid_000000000007b430:
	movb $1, -1200(%rbp)
uuid_000000000007b432:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007b435:
	mov -1216(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007b438:
	mov -1208(%RBP),%RSP
	add $-1544, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b47e
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b43f
	jmp uuid_000000000007b441
uuid_000000000007b43f:
	push %RBP
	jmp uuid_000000000007b43c
	jmp uuid_000000000007b43e
uuid_000000000007b43c:
	push %RBP
	mov -1560(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b439
	jmp uuid_000000000007b43b
uuid_000000000007b439:
	movb $1, -1584(%rbp)
uuid_000000000007b43b:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007b43e:
	mov -1600(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007b441:
	mov -1592(%RBP),%RSP
	add $-1616, %RSP
	mov -1584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b47b
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b46d
	jmp uuid_000000000007b46f
uuid_000000000007b46d:
	push %RBP
	mov -1640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b46a
	jmp uuid_000000000007b46c
uuid_000000000007b46a:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b467
	jmp uuid_000000000007b469
uuid_000000000007b467:
	movb $1, -1656(%rbp)
uuid_000000000007b469:
	mov -1704(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007b46c:
	mov -1672(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007b46f:
	mov -1664(%RBP),%RSP
	add $-1728, %RSP
	mov -1656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b478
	push %RBP
	jmp uuid_000000000007b475
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b474
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b477
uuid_000000000007b475:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b473
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b477:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007b47a
uuid_000000000007b478:
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b470
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_000000000007b472
uuid_000000000007b470:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b472:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007b47a:
	mov -1624(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007b47d
uuid_000000000007b47b:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -1616(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b454
	jmp uuid_000000000007b456
uuid_000000000007b454:
	push %RBP
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b451
	jmp uuid_000000000007b453
uuid_000000000007b451:
	push %RBP
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b44e
	jmp uuid_000000000007b450
uuid_000000000007b44e:
	movb $1, -1744(%rbp)
uuid_000000000007b450:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007b453:
	mov -1760(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007b456:
	mov -1752(%RBP),%RSP
	add $-1816, %RSP
	mov -1744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b464
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b45d
	jmp uuid_000000000007b45f
uuid_000000000007b45d:
	push %RBP
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	jmp uuid_000000000007b45a
	jmp uuid_000000000007b45c
uuid_000000000007b45a:
	push %RBP
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_000000000007b457
	jmp uuid_000000000007b459
uuid_000000000007b457:
	movb $1, -1888(%rbp)
uuid_000000000007b459:
	mov -1936(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007b45c:
	mov -1904(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007b45f:
	mov -1896(%RBP),%RSP
	add $-1960, %RSP
	mov -1888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b461
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b460
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b463
uuid_000000000007b461:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $8, %RAX
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b463:
	mov -1824(%RBP),%RSP
	add $-2104, %RSP
	jmp uuid_000000000007b466
uuid_000000000007b464:
uuid_000000000007b466:
	mov -1680(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007b47d:
	mov -1552(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_000000000007b480
uuid_000000000007b47e:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b480:
	mov -1168(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007b483
uuid_000000000007b481:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b483:
	mov -864(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_000000000007b486
uuid_000000000007b484:
	movq $8, -40(%rbp)
uuid_000000000007b486:
	mov -560(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_000000000007b489
uuid_000000000007b487:
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b489:
	mov -272(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007b48c
uuid_000000000007b48a:
#call function size-of-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call size_SB_of_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b48c:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007b48f
uuid_000000000007b48d:
uuid_000000000007b48f:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007b492
uuid_000000000007b490:
uuid_000000000007b492:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_aligned_CL_ArrowU64Type:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b493
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq -40(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_000000000007b495
uuid_000000000007b493:
uuid_000000000007b495:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType:
	pushq $0
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4ac
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b49f
	jmp uuid_000000000007b4a1
uuid_000000000007b49f:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b49c
	jmp uuid_000000000007b49e
uuid_000000000007b49c:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007b499
	jmp uuid_000000000007b49b
uuid_000000000007b499:
	movb $1, -248(%rbp)
uuid_000000000007b49b:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007b49e:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007b4a1:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b4a9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b4a8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b4ab
uuid_000000000007b4a9:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4a5
	jmp uuid_000000000007b4a7
uuid_000000000007b4a5:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4a2
	jmp uuid_000000000007b4a4
uuid_000000000007b4a2:
	movq $1, -104(%rbp)
uuid_000000000007b4a4:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b4a7:
	mov -344(%RBP),%RSP
	add $-352, %RSP
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
uuid_000000000007b4ab:
	mov -200(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007b4ae
uuid_000000000007b4ac:
uuid_000000000007b4ae:
	mov -152(%RBP),%RSP
	add $-192, %RSP
	mov -104(%rbp), %RAX
	mov %rbp, %rsp
	sub $96, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4b5
	jmp uuid_000000000007b4b7
uuid_000000000007b4b5:
	push %RBP
	jmp uuid_000000000007b4b2
	jmp uuid_000000000007b4b4
uuid_000000000007b4b2:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4af
	jmp uuid_000000000007b4b1
uuid_000000000007b4af:
	movb $1, -128(%rbp)
uuid_000000000007b4b1:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007b4b4:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007b4b7:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b510
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4d0
	jmp uuid_000000000007b4d2
uuid_000000000007b4d0:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4c7
	jmp uuid_000000000007b4c9
uuid_000000000007b4c7:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4be
	jmp uuid_000000000007b4c0
uuid_000000000007b4be:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4bb
	jmp uuid_000000000007b4bd
uuid_000000000007b4bb:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	jmp uuid_000000000007b4b8
	jmp uuid_000000000007b4ba
uuid_000000000007b4b8:
	movb $1, -328(%rbp)
uuid_000000000007b4ba:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007b4bd:
	mov -344(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007b4c0:
	mov -336(%RBP),%RSP
	add $-416, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b4c4
	jmp uuid_000000000007b4c6
uuid_000000000007b4c4:
	push %RBP
	jmp uuid_000000000007b4c1
	jmp uuid_000000000007b4c3
uuid_000000000007b4c1:
	movb $1, -264(%rbp)
uuid_000000000007b4c3:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b4c6:
	mov -280(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b4c9:
	mov -272(%RBP),%RSP
	add $-424, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b4cd
	jmp uuid_000000000007b4cf
uuid_000000000007b4cd:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_000000000007ac6d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4ca
	jmp uuid_000000000007b4cc
uuid_000000000007b4ca:
	movb $1, -200(%rbp)
uuid_000000000007b4cc:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007b4cf:
	mov -216(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007b4d2:
	mov -208(%RBP),%RSP
	add $-440, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b50d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4eb
	jmp uuid_000000000007b4ed
uuid_000000000007b4eb:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4e2
	jmp uuid_000000000007b4e4
uuid_000000000007b4e2:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4d9
	jmp uuid_000000000007b4db
uuid_000000000007b4d9:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4d6
	jmp uuid_000000000007b4d8
uuid_000000000007b4d6:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007b4d3
	jmp uuid_000000000007b4d5
uuid_000000000007b4d3:
	movb $1, -608(%rbp)
uuid_000000000007b4d5:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007b4d8:
	mov -624(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007b4db:
	mov -616(%RBP),%RSP
	add $-696, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b4df
	jmp uuid_000000000007b4e1
uuid_000000000007b4df:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	jmp uuid_000000000007b4dc
	jmp uuid_000000000007b4de
uuid_000000000007b4dc:
	movb $1, -544(%rbp)
uuid_000000000007b4de:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007b4e1:
	mov -560(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007b4e4:
	mov -552(%RBP),%RSP
	add $-728, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b4e8
	jmp uuid_000000000007b4ea
uuid_000000000007b4e8:
	push %RBP
	mov -456(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4e5
	jmp uuid_000000000007b4e7
uuid_000000000007b4e5:
	movb $1, -480(%rbp)
uuid_000000000007b4e7:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007b4ea:
	mov -496(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007b4ed:
	mov -488(%RBP),%RSP
	add $-744, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b50a
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4f4
	jmp uuid_000000000007b4f6
uuid_000000000007b4f4:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b4f1
	jmp uuid_000000000007b4f3
uuid_000000000007b4f1:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b4ee
	jmp uuid_000000000007b4f0
uuid_000000000007b4ee:
	movb $1, -784(%rbp)
uuid_000000000007b4f0:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007b4f3:
	mov -800(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007b4f6:
	mov -792(%RBP),%RSP
	add $-856, %RSP
	mov -784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b507
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4fd
	jmp uuid_000000000007b4ff
uuid_000000000007b4fd:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b4fa
	jmp uuid_000000000007b4fc
uuid_000000000007b4fa:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b4f7
	jmp uuid_000000000007b4f9
uuid_000000000007b4f7:
	movb $1, -896(%rbp)
uuid_000000000007b4f9:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b4fc:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b4ff:
	mov -904(%RBP),%RSP
	add $-968, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b504
	push %RBP
	jmp uuid_000000000007b501
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b500
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b503
uuid_000000000007b501:
uuid_000000000007b503:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007b506
uuid_000000000007b504:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b506:
	mov -864(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_000000000007b509
uuid_000000000007b507:
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b509:
	mov -752(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_000000000007b50c
uuid_000000000007b50a:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b50c:
	mov -448(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007b50f
uuid_000000000007b50d:
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b50f:
	mov -168(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007b512
uuid_000000000007b510:
uuid_000000000007b512:
	mov -96(%RBP),%RSP
	add $-160, %RSP
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b513
	jmp uuid_000000000007b515
uuid_000000000007b513:
	movq $1, -64(%rbp)
uuid_000000000007b515:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
has_SB_forward_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b525
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b51e
	jmp uuid_000000000007b520
uuid_000000000007b51e:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b51b
	jmp uuid_000000000007b51d
uuid_000000000007b51b:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007b518
	jmp uuid_000000000007b51a
uuid_000000000007b518:
	movb $1, -200(%rbp)
uuid_000000000007b51a:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b51d:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b520:
	mov -208(%RBP),%RSP
	add $-288, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b522
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b521
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b524
uuid_000000000007b522:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
uuid_000000000007b524:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b527
uuid_000000000007b525:
uuid_000000000007b527:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
has_SB_forward_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b52e
	jmp uuid_000000000007b530
uuid_000000000007b52e:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b52b
	jmp uuid_000000000007b52d
uuid_000000000007b52b:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b528
	jmp uuid_000000000007b52a
uuid_000000000007b528:
	movb $1, -104(%rbp)
uuid_000000000007b52a:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b52d:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b530:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b582
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b537
	jmp uuid_000000000007b539
uuid_000000000007b537:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b534
	jmp uuid_000000000007b536
uuid_000000000007b534:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b531
	jmp uuid_000000000007b533
uuid_000000000007b531:
	movb $1, -216(%rbp)
uuid_000000000007b533:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b536:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b539:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b57f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b552
	jmp uuid_000000000007b554
uuid_000000000007b552:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b549
	jmp uuid_000000000007b54b
uuid_000000000007b549:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b540
	jmp uuid_000000000007b542
uuid_000000000007b540:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b53d
	jmp uuid_000000000007b53f
uuid_000000000007b53d:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007b53a
	jmp uuid_000000000007b53c
uuid_000000000007b53a:
	movb $1, -456(%rbp)
uuid_000000000007b53c:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007b53f:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007b542:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b546
	jmp uuid_000000000007b548
uuid_000000000007b546:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	jmp uuid_000000000007b543
	jmp uuid_000000000007b545
uuid_000000000007b543:
	movb $1, -392(%rbp)
uuid_000000000007b545:
	mov -552(%RBP),%RSP
	add $-576, %RSP
uuid_000000000007b548:
	mov -408(%RBP),%RSP
	add $-576, %RSP
uuid_000000000007b54b:
	mov -400(%RBP),%RSP
	add $-576, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b54f
	jmp uuid_000000000007b551
uuid_000000000007b54f:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007ac6d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b54c
	jmp uuid_000000000007b54e
uuid_000000000007b54c:
	movb $1, -328(%rbp)
uuid_000000000007b54e:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b551:
	mov -344(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b554:
	mov -336(%RBP),%RSP
	add $-592, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b57c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b55b
	jmp uuid_000000000007b55d
uuid_000000000007b55b:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b558
	jmp uuid_000000000007b55a
uuid_000000000007b558:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b555
	jmp uuid_000000000007b557
uuid_000000000007b555:
	movb $1, -632(%rbp)
uuid_000000000007b557:
	mov -696(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007b55a:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007b55d:
	mov -640(%RBP),%RSP
	add $-704, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b579
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b56f
	jmp uuid_000000000007b571
uuid_000000000007b56f:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b56c
	jmp uuid_000000000007b56e
uuid_000000000007b56c:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b569
	jmp uuid_000000000007b56b
uuid_000000000007b569:
	movb $1, -744(%rbp)
uuid_000000000007b56b:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007b56e:
	mov -760(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007b571:
	mov -752(%RBP),%RSP
	add $-816, %RSP
	mov -744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b576
	push %RBP
	jmp uuid_000000000007b573
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b572
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b575
uuid_000000000007b573:
uuid_000000000007b575:
	mov -824(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007b578
uuid_000000000007b576:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b578:
	mov -712(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_000000000007b57b
uuid_000000000007b579:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -704(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b566
	jmp uuid_000000000007b568
uuid_000000000007b566:
	movq $1, -40(%rbp)
uuid_000000000007b568:
	mov -712(%RBP),%RSP
	add $-712, %RSP
uuid_000000000007b57b:
	mov -600(%RBP),%RSP
	add $-712, %RSP
	jmp uuid_000000000007b57e
uuid_000000000007b57c:
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b57e:
	mov -296(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007b581
uuid_000000000007b57f:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b581:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b584
uuid_000000000007b582:
uuid_000000000007b584:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg8_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007b585
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5c6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007b586
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5c3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007b587
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5c0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007b588
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5bd
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007b589
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5ba
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007b58a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5b7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007b58b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5b4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007b58c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5b1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007b58d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5ae
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007b58e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5ab
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007b58f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5a8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007b590
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5a5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007b591
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5a2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007b592
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b59f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007b593
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b59c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007b594
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b599
	push %RBP
	jmp uuid_000000000007b596
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b595
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b598
uuid_000000000007b596:
uuid_000000000007b598:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007b59b
uuid_000000000007b599:
	movq $1, -24(%rbp)
uuid_000000000007b59b:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b59e
uuid_000000000007b59c:
	movq $1, -24(%rbp)
uuid_000000000007b59e:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007b5a1
uuid_000000000007b59f:
	movq $1, -24(%rbp)
uuid_000000000007b5a1:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b5a4
uuid_000000000007b5a2:
	movq $1, -24(%rbp)
uuid_000000000007b5a4:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b5a7
uuid_000000000007b5a5:
	movq $1, -24(%rbp)
uuid_000000000007b5a7:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b5aa
uuid_000000000007b5a8:
	movq $1, -24(%rbp)
uuid_000000000007b5aa:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b5ad
uuid_000000000007b5ab:
	movq $1, -24(%rbp)
uuid_000000000007b5ad:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b5b0
uuid_000000000007b5ae:
	movq $1, -24(%rbp)
uuid_000000000007b5b0:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b5b3
uuid_000000000007b5b1:
	movq $1, -24(%rbp)
uuid_000000000007b5b3:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b5b6
uuid_000000000007b5b4:
	movq $1, -24(%rbp)
uuid_000000000007b5b6:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b5b9
uuid_000000000007b5b7:
	movq $1, -24(%rbp)
uuid_000000000007b5b9:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b5bc
uuid_000000000007b5ba:
	movq $1, -24(%rbp)
uuid_000000000007b5bc:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b5bf
uuid_000000000007b5bd:
	movq $1, -24(%rbp)
uuid_000000000007b5bf:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b5c2
uuid_000000000007b5c0:
	movq $1, -24(%rbp)
uuid_000000000007b5c2:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b5c5
uuid_000000000007b5c3:
	movq $1, -24(%rbp)
uuid_000000000007b5c5:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b5c8
uuid_000000000007b5c6:
	movq $1, -24(%rbp)
uuid_000000000007b5c8:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg8_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5cf
	jmp uuid_000000000007b5d1
uuid_000000000007b5cf:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b5cc
	jmp uuid_000000000007b5ce
uuid_000000000007b5cc:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b5c9
	jmp uuid_000000000007b5cb
uuid_000000000007b5c9:
	movb $1, -104(%rbp)
uuid_000000000007b5cb:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b5ce:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b5d1:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5e2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5d8
	jmp uuid_000000000007b5da
uuid_000000000007b5d8:
	push %RBP
	jmp uuid_000000000007b5d5
	jmp uuid_000000000007b5d7
uuid_000000000007b5d5:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a7fa
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5d2
	jmp uuid_000000000007b5d4
uuid_000000000007b5d2:
	movb $1, -216(%rbp)
uuid_000000000007b5d4:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b5d7:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b5da:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5df
	push %RBP
	jmp uuid_000000000007b5dc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b5db
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b5de
uuid_000000000007b5dc:
uuid_000000000007b5de:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b5e1
uuid_000000000007b5df:
	movq $1, -40(%rbp)
uuid_000000000007b5e1:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007b5e4
uuid_000000000007b5e2:
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b5e4:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg16_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007b5e5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b626
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007b5e6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b623
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007b5e7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b620
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007b5e8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b61d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007b5e9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b61a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007b5ea
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b617
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007b5eb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b614
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007b5ec
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b611
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007b5ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b60e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007b5ee
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b60b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007b5ef
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b608
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007b5f0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b605
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007b5f1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b602
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007b5f2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5ff
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007b5f3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5fc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007b5f4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5f9
	push %RBP
	jmp uuid_000000000007b5f6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b5f5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b5f8
uuid_000000000007b5f6:
uuid_000000000007b5f8:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007b5fb
uuid_000000000007b5f9:
	movq $1, -24(%rbp)
uuid_000000000007b5fb:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b5fe
uuid_000000000007b5fc:
	movq $1, -24(%rbp)
uuid_000000000007b5fe:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007b601
uuid_000000000007b5ff:
	movq $1, -24(%rbp)
uuid_000000000007b601:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b604
uuid_000000000007b602:
	movq $1, -24(%rbp)
uuid_000000000007b604:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b607
uuid_000000000007b605:
	movq $1, -24(%rbp)
uuid_000000000007b607:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b60a
uuid_000000000007b608:
	movq $1, -24(%rbp)
uuid_000000000007b60a:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b60d
uuid_000000000007b60b:
	movq $1, -24(%rbp)
uuid_000000000007b60d:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b610
uuid_000000000007b60e:
	movq $1, -24(%rbp)
uuid_000000000007b610:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b613
uuid_000000000007b611:
	movq $1, -24(%rbp)
uuid_000000000007b613:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b616
uuid_000000000007b614:
	movq $1, -24(%rbp)
uuid_000000000007b616:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b619
uuid_000000000007b617:
	movq $1, -24(%rbp)
uuid_000000000007b619:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b61c
uuid_000000000007b61a:
	movq $1, -24(%rbp)
uuid_000000000007b61c:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b61f
uuid_000000000007b61d:
	movq $1, -24(%rbp)
uuid_000000000007b61f:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b622
uuid_000000000007b620:
	movq $1, -24(%rbp)
uuid_000000000007b622:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b625
uuid_000000000007b623:
	movq $1, -24(%rbp)
uuid_000000000007b625:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b628
uuid_000000000007b626:
	movq $1, -24(%rbp)
uuid_000000000007b628:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg16_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b62f
	jmp uuid_000000000007b631
uuid_000000000007b62f:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b62c
	jmp uuid_000000000007b62e
uuid_000000000007b62c:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b629
	jmp uuid_000000000007b62b
uuid_000000000007b629:
	movb $1, -104(%rbp)
uuid_000000000007b62b:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b62e:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b631:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b642
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b638
	jmp uuid_000000000007b63a
uuid_000000000007b638:
	push %RBP
	jmp uuid_000000000007b635
	jmp uuid_000000000007b637
uuid_000000000007b635:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a7fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b632
	jmp uuid_000000000007b634
uuid_000000000007b632:
	movb $1, -216(%rbp)
uuid_000000000007b634:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b637:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b63a:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b63f
	push %RBP
	jmp uuid_000000000007b63c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b63b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b63e
uuid_000000000007b63c:
uuid_000000000007b63e:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b641
uuid_000000000007b63f:
	movq $1, -40(%rbp)
uuid_000000000007b641:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007b644
uuid_000000000007b642:
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b644:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg32_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007b645
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b686
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007b646
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b683
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007b647
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b680
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007b648
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b67d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007b649
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b67a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007b64a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b677
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007b64b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b674
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007b64c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b671
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007b64d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b66e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007b64e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b66b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007b64f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b668
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007b650
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b665
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007b651
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b662
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007b652
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b65f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007b653
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b65c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007b654
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b659
	push %RBP
	jmp uuid_000000000007b656
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b655
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b658
uuid_000000000007b656:
uuid_000000000007b658:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007b65b
uuid_000000000007b659:
	movq $1, -24(%rbp)
uuid_000000000007b65b:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b65e
uuid_000000000007b65c:
	movq $1, -24(%rbp)
uuid_000000000007b65e:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007b661
uuid_000000000007b65f:
	movq $1, -24(%rbp)
uuid_000000000007b661:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b664
uuid_000000000007b662:
	movq $1, -24(%rbp)
uuid_000000000007b664:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b667
uuid_000000000007b665:
	movq $1, -24(%rbp)
uuid_000000000007b667:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b66a
uuid_000000000007b668:
	movq $1, -24(%rbp)
uuid_000000000007b66a:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b66d
uuid_000000000007b66b:
	movq $1, -24(%rbp)
uuid_000000000007b66d:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b670
uuid_000000000007b66e:
	movq $1, -24(%rbp)
uuid_000000000007b670:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b673
uuid_000000000007b671:
	movq $1, -24(%rbp)
uuid_000000000007b673:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b676
uuid_000000000007b674:
	movq $1, -24(%rbp)
uuid_000000000007b676:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b679
uuid_000000000007b677:
	movq $1, -24(%rbp)
uuid_000000000007b679:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b67c
uuid_000000000007b67a:
	movq $1, -24(%rbp)
uuid_000000000007b67c:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b67f
uuid_000000000007b67d:
	movq $1, -24(%rbp)
uuid_000000000007b67f:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b682
uuid_000000000007b680:
	movq $1, -24(%rbp)
uuid_000000000007b682:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b685
uuid_000000000007b683:
	movq $1, -24(%rbp)
uuid_000000000007b685:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b688
uuid_000000000007b686:
	movq $1, -24(%rbp)
uuid_000000000007b688:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg32_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b68f
	jmp uuid_000000000007b691
uuid_000000000007b68f:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b68c
	jmp uuid_000000000007b68e
uuid_000000000007b68c:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b689
	jmp uuid_000000000007b68b
uuid_000000000007b689:
	movb $1, -104(%rbp)
uuid_000000000007b68b:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b68e:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b691:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b6a2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b698
	jmp uuid_000000000007b69a
uuid_000000000007b698:
	push %RBP
	jmp uuid_000000000007b695
	jmp uuid_000000000007b697
uuid_000000000007b695:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a802
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b692
	jmp uuid_000000000007b694
uuid_000000000007b692:
	movb $1, -216(%rbp)
uuid_000000000007b694:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b697:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b69a:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b69f
	push %RBP
	jmp uuid_000000000007b69c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b69b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b69e
uuid_000000000007b69c:
uuid_000000000007b69e:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b6a1
uuid_000000000007b69f:
	movq $1, -40(%rbp)
uuid_000000000007b6a1:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007b6a4
uuid_000000000007b6a2:
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b6a4:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg64_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007b6a5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6e6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007b6a6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6e3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007b6a7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6e0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007b6a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6dd
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007b6a9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6da
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007b6aa
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6d7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007b6ab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6d4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007b6ac
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6d1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007b6ad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6ce
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007b6ae
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6cb
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007b6af
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6c8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007b6b0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6c5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007b6b1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6c2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007b6b2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6bf
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007b6b3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6bc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007b6b4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6b9
	push %RBP
	jmp uuid_000000000007b6b6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b6b5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b6b8
uuid_000000000007b6b6:
uuid_000000000007b6b8:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007b6bb
uuid_000000000007b6b9:
	movq $1, -24(%rbp)
uuid_000000000007b6bb:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b6be
uuid_000000000007b6bc:
	movq $1, -24(%rbp)
uuid_000000000007b6be:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007b6c1
uuid_000000000007b6bf:
	movq $1, -24(%rbp)
uuid_000000000007b6c1:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b6c4
uuid_000000000007b6c2:
	movq $1, -24(%rbp)
uuid_000000000007b6c4:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b6c7
uuid_000000000007b6c5:
	movq $1, -24(%rbp)
uuid_000000000007b6c7:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b6ca
uuid_000000000007b6c8:
	movq $1, -24(%rbp)
uuid_000000000007b6ca:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b6cd
uuid_000000000007b6cb:
	movq $1, -24(%rbp)
uuid_000000000007b6cd:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b6d0
uuid_000000000007b6ce:
	movq $1, -24(%rbp)
uuid_000000000007b6d0:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b6d3
uuid_000000000007b6d1:
	movq $1, -24(%rbp)
uuid_000000000007b6d3:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b6d6
uuid_000000000007b6d4:
	movq $1, -24(%rbp)
uuid_000000000007b6d6:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b6d9
uuid_000000000007b6d7:
	movq $1, -24(%rbp)
uuid_000000000007b6d9:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b6dc
uuid_000000000007b6da:
	movq $1, -24(%rbp)
uuid_000000000007b6dc:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b6df
uuid_000000000007b6dd:
	movq $1, -24(%rbp)
uuid_000000000007b6df:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b6e2
uuid_000000000007b6e0:
	movq $1, -24(%rbp)
uuid_000000000007b6e2:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b6e5
uuid_000000000007b6e3:
	movq $1, -24(%rbp)
uuid_000000000007b6e5:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b6e8
uuid_000000000007b6e6:
	movq $1, -24(%rbp)
uuid_000000000007b6e8:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg64_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6ef
	jmp uuid_000000000007b6f1
uuid_000000000007b6ef:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b6ec
	jmp uuid_000000000007b6ee
uuid_000000000007b6ec:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b6e9
	jmp uuid_000000000007b6eb
uuid_000000000007b6e9:
	movb $1, -104(%rbp)
uuid_000000000007b6eb:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b6ee:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b6f1:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b702
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6f8
	jmp uuid_000000000007b6fa
uuid_000000000007b6f8:
	push %RBP
	jmp uuid_000000000007b6f5
	jmp uuid_000000000007b6f7
uuid_000000000007b6f5:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a806
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6f2
	jmp uuid_000000000007b6f4
uuid_000000000007b6f2:
	movb $1, -216(%rbp)
uuid_000000000007b6f4:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b6f7:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007b6fa:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b6ff
	push %RBP
	jmp uuid_000000000007b6fc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b6fb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b6fe
uuid_000000000007b6fc:
uuid_000000000007b6fe:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b701
uuid_000000000007b6ff:
	movq $1, -40(%rbp)
uuid_000000000007b701:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007b704
uuid_000000000007b702:
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b704:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_tag_CL_ArrowTypeType:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b718
	jmp uuid_000000000007b71a
uuid_000000000007b718:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b70b
	jmp uuid_000000000007b70d
uuid_000000000007b70b:
	push %RBP
	jmp uuid_000000000007b708
	jmp uuid_000000000007b70a
uuid_000000000007b708:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b705
	jmp uuid_000000000007b707
uuid_000000000007b705:
	movb $1, -128(%rbp)
uuid_000000000007b707:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007b70a:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007b70d:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b715
	push %RBP
	jmp uuid_000000000007b712
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b711
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b714
uuid_000000000007b712:
uuid_000000000007b714:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007b717
uuid_000000000007b715:
#call function get-only-child : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_only_SB_child_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	mov -168(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b70e
	jmp uuid_000000000007b710
uuid_000000000007b70e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ab2e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b710:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b717:
	mov -96(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b71a:
	mov -64(%RBP),%RSP
	add $-176, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowTypeType:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b71b
	jmp uuid_000000000007b71d
uuid_000000000007b71b:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a917
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b71d:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b736
	jmp uuid_000000000007b738
uuid_000000000007b736:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b72d
	jmp uuid_000000000007b72f
uuid_000000000007b72d:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b724
	jmp uuid_000000000007b726
uuid_000000000007b724:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b721
	jmp uuid_000000000007b723
uuid_000000000007b721:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007b71e
	jmp uuid_000000000007b720
uuid_000000000007b71e:
	movb $1, -240(%rbp)
uuid_000000000007b720:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b723:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b726:
	mov -248(%RBP),%RSP
	add $-328, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b72a
	jmp uuid_000000000007b72c
uuid_000000000007b72a:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007b727
	jmp uuid_000000000007b729
uuid_000000000007b727:
	movb $1, -176(%rbp)
uuid_000000000007b729:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007b72c:
	mov -192(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007b72f:
	mov -184(%RBP),%RSP
	add $-360, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b733
	jmp uuid_000000000007b735
uuid_000000000007b733:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b730
	jmp uuid_000000000007b732
uuid_000000000007b730:
	movb $1, -112(%rbp)
uuid_000000000007b732:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007b735:
	mov -128(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007b738:
	mov -120(%RBP),%RSP
	add $-376, %RSP
	mov -112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b73d
	push %RBP
	jmp uuid_000000000007b73a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b739
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b73c
uuid_000000000007b73a:
uuid_000000000007b73c:
	mov -384(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007b73f
uuid_000000000007b73d:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b73f:
	mov -80(%RBP),%RSP
	add $-376, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b74f
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b748
	jmp uuid_000000000007b74a
uuid_000000000007b748:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b745
	jmp uuid_000000000007b747
uuid_000000000007b745:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007b742
	jmp uuid_000000000007b744
uuid_000000000007b742:
	movb $1, -192(%rbp)
uuid_000000000007b744:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b747:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b74a:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b74c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b74b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b74e
uuid_000000000007b74c:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b74e:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b751
uuid_000000000007b74f:
uuid_000000000007b751:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_size_SB_recurse_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b758
	jmp uuid_000000000007b75a
uuid_000000000007b758:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b755
	jmp uuid_000000000007b757
uuid_000000000007b755:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b752
	jmp uuid_000000000007b754
uuid_000000000007b752:
	movb $1, -96(%rbp)
uuid_000000000007b754:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b757:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b75a:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7a7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b761
	jmp uuid_000000000007b763
uuid_000000000007b761:
	push %RBP
	jmp uuid_000000000007b75e
	jmp uuid_000000000007b760
uuid_000000000007b75e:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007ab2e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b75b
	jmp uuid_000000000007b75d
uuid_000000000007b75b:
	movb $1, -208(%rbp)
uuid_000000000007b75d:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b760:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b763:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7a4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b76a
	jmp uuid_000000000007b76c
uuid_000000000007b76a:
	push %RBP
	jmp uuid_000000000007b767
	jmp uuid_000000000007b769
uuid_000000000007b767:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007a917
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b764
	jmp uuid_000000000007b766
uuid_000000000007b764:
	movb $1, -280(%rbp)
uuid_000000000007b766:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b769:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b76c:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7a1
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b773
	jmp uuid_000000000007b775
uuid_000000000007b773:
	push %RBP
	jmp uuid_000000000007b770
	jmp uuid_000000000007b772
uuid_000000000007b770:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007a916
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b76d
	jmp uuid_000000000007b76f
uuid_000000000007b76d:
	movb $1, -352(%rbp)
uuid_000000000007b76f:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007b772:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007b775:
	mov -360(%RBP),%RSP
	add $-384, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b79e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b77c
	jmp uuid_000000000007b77e
uuid_000000000007b77c:
	push %RBP
	jmp uuid_000000000007b779
	jmp uuid_000000000007b77b
uuid_000000000007b779:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_000000000007ab59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b776
	jmp uuid_000000000007b778
uuid_000000000007b776:
	movb $1, -424(%rbp)
uuid_000000000007b778:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007b77b:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007b77e:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b79b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b785
	jmp uuid_000000000007b787
uuid_000000000007b785:
	push %RBP
	jmp uuid_000000000007b782
	jmp uuid_000000000007b784
uuid_000000000007b782:
	push %RBP
	mov -472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_000000000007a918
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b77f
	jmp uuid_000000000007b781
uuid_000000000007b77f:
	movb $1, -496(%rbp)
uuid_000000000007b781:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007b784:
	mov -512(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007b787:
	mov -504(%RBP),%RSP
	add $-528, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b798
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b78e
	jmp uuid_000000000007b790
uuid_000000000007b78e:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b78b
	jmp uuid_000000000007b78d
uuid_000000000007b78b:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b788
	jmp uuid_000000000007b78a
uuid_000000000007b788:
	movb $1, -568(%rbp)
uuid_000000000007b78a:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007b78d:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007b790:
	mov -576(%RBP),%RSP
	add $-640, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b795
	push %RBP
	jmp uuid_000000000007b792
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b791
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b794
uuid_000000000007b792:
uuid_000000000007b794:
	mov -648(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_000000000007b797
uuid_000000000007b795:
	pushq -640(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b797:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007b79a
uuid_000000000007b798:
uuid_000000000007b79a:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007b79d
uuid_000000000007b79b:
uuid_000000000007b79d:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007b7a0
uuid_000000000007b79e:
uuid_000000000007b7a0:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007b7a3
uuid_000000000007b7a1:
uuid_000000000007b7a3:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b7a6
uuid_000000000007b7a4:
uuid_000000000007b7a6:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b7a9
uuid_000000000007b7a7:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b7a9:
	mov -64(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_fields_CL_ArrowTypeType:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007ab59
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7b0
	jmp uuid_000000000007b7b2
uuid_000000000007b7b0:
	push %RBP
	jmp uuid_000000000007b7ad
	jmp uuid_000000000007b7af
uuid_000000000007b7ad:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007ab59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b7aa
	jmp uuid_000000000007b7ac
uuid_000000000007b7aa:
	movb $1, -96(%rbp)
uuid_000000000007b7ac:
	mov -120(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007b7af:
	mov -112(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007b7b2:
	mov -104(%RBP),%RSP
	add $-128, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7ba
	push %RBP
	jmp uuid_000000000007b7b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b7b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7b9
uuid_000000000007b7b7:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7b3
	jmp uuid_000000000007b7b5
uuid_000000000007b7b3:
#call function fields-of-tag : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b7b5:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007b7b9:
	mov -136(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007b7bc
uuid_000000000007b7ba:
uuid_000000000007b7bc:
	mov -64(%RBP),%RSP
	add $-128, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7c3
	jmp uuid_000000000007b7c5
uuid_000000000007b7c3:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7c0
	jmp uuid_000000000007b7c2
uuid_000000000007b7c0:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7bd
	jmp uuid_000000000007b7bf
uuid_000000000007b7bd:
	movb $1, -96(%rbp)
uuid_000000000007b7bf:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b7c2:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b7c5:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b81f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7f1
	jmp uuid_000000000007b7f3
uuid_000000000007b7f1:
	push %RBP
	jmp uuid_000000000007b7ee
	jmp uuid_000000000007b7f0
uuid_000000000007b7ee:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a915
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b7eb
	jmp uuid_000000000007b7ed
uuid_000000000007b7eb:
	movb $1, -208(%rbp)
uuid_000000000007b7ed:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b7f0:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b7f3:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b81c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7fa
	jmp uuid_000000000007b7fc
uuid_000000000007b7fa:
	push %RBP
	jmp uuid_000000000007b7f7
	jmp uuid_000000000007b7f9
uuid_000000000007b7f7:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007ab2e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b7f4
	jmp uuid_000000000007b7f6
uuid_000000000007b7f4:
	movb $1, -280(%rbp)
uuid_000000000007b7f6:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b7f9:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b7fc:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b819
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b803
	jmp uuid_000000000007b805
uuid_000000000007b803:
	push %RBP
	jmp uuid_000000000007b800
	jmp uuid_000000000007b802
uuid_000000000007b800:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007ab59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b7fd
	jmp uuid_000000000007b7ff
uuid_000000000007b7fd:
	movb $1, -352(%rbp)
uuid_000000000007b7ff:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007b802:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007b805:
	mov -360(%RBP),%RSP
	add $-384, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b816
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b80c
	jmp uuid_000000000007b80e
uuid_000000000007b80c:
	push %RBP
	jmp uuid_000000000007b809
	jmp uuid_000000000007b80b
uuid_000000000007b809:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_000000000007a918
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b806
	jmp uuid_000000000007b808
uuid_000000000007b806:
	movb $1, -424(%rbp)
uuid_000000000007b808:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007b80b:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007b80e:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b813
	push %RBP
	jmp uuid_000000000007b810
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b80f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b812
uuid_000000000007b810:
uuid_000000000007b812:
	mov -464(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007b815
uuid_000000000007b813:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b815:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007b818
uuid_000000000007b816:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b818:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007b81b
uuid_000000000007b819:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b81b:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b81e
uuid_000000000007b81c:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b81e:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b821
uuid_000000000007b81f:
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7cc
	jmp uuid_000000000007b7ce
uuid_000000000007b7cc:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007b7c9
	jmp uuid_000000000007b7cb
uuid_000000000007b7c9:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7c6
	jmp uuid_000000000007b7c8
uuid_000000000007b7c6:
	movb $1, -344(%rbp)
uuid_000000000007b7c8:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007b7cb:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007b7ce:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7e8
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7d5
	jmp uuid_000000000007b7d7
uuid_000000000007b7d5:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7d2
	jmp uuid_000000000007b7d4
uuid_000000000007b7d2:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007b7cf
	jmp uuid_000000000007b7d1
uuid_000000000007b7cf:
	movb $1, -488(%rbp)
uuid_000000000007b7d1:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b7d4:
	mov -504(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b7d7:
	mov -496(%RBP),%RSP
	add $-560, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7e5
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7de
	jmp uuid_000000000007b7e0
uuid_000000000007b7de:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_000000000007b7db
	jmp uuid_000000000007b7dd
uuid_000000000007b7db:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007b7d8
	jmp uuid_000000000007b7da
uuid_000000000007b7d8:
	movb $1, -632(%rbp)
uuid_000000000007b7da:
	mov -680(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007b7dd:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007b7e0:
	mov -640(%RBP),%RSP
	add $-704, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7e2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b7e1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7e4
uuid_000000000007b7e2:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b7e4:
	mov -568(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_000000000007b7e7
uuid_000000000007b7e5:
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b7e7:
	mov -424(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007b7ea
uuid_000000000007b7e8:
	movq -384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b7ea:
	mov -280(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007b821:
	mov -64(%RBP),%RSP
	add $-416, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b82a
	jmp uuid_000000000007b82c
uuid_000000000007b82a:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b827
	jmp uuid_000000000007b829
uuid_000000000007b827:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007b824
	jmp uuid_000000000007b826
uuid_000000000007b824:
	movb $1, -144(%rbp)
uuid_000000000007b826:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b829:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b82c:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b831
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b82e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b82d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b830
uuid_000000000007b82e:
uuid_000000000007b830:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b833
uuid_000000000007b831:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b833:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_constructor_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b83a
	jmp uuid_000000000007b83c
uuid_000000000007b83a:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b837
	jmp uuid_000000000007b839
uuid_000000000007b837:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b834
	jmp uuid_000000000007b836
uuid_000000000007b834:
	movb $1, -96(%rbp)
uuid_000000000007b836:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b839:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b83c:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b85f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b849
	jmp uuid_000000000007b84b
uuid_000000000007b849:
	push %RBP
	jmp uuid_000000000007b846
	jmp uuid_000000000007b848
uuid_000000000007b846:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a915
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b843
	jmp uuid_000000000007b845
uuid_000000000007b843:
	movb $1, -208(%rbp)
uuid_000000000007b845:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b848:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b84b:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b85c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b852
	jmp uuid_000000000007b854
uuid_000000000007b852:
	push %RBP
	jmp uuid_000000000007b84f
	jmp uuid_000000000007b851
uuid_000000000007b84f:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007a916
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b84c
	jmp uuid_000000000007b84e
uuid_000000000007b84c:
	movb $1, -280(%rbp)
uuid_000000000007b84e:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b851:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b854:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b859
	push %RBP
	jmp uuid_000000000007b856
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b855
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b858
uuid_000000000007b856:
uuid_000000000007b858:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007b85b
uuid_000000000007b859:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b85b:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b85e
uuid_000000000007b85c:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b85e:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b861
uuid_000000000007b85f:
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b840
	movq -136(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -128(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -120(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b842
uuid_000000000007b840:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b83d
	movq -168(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -160(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b83f
uuid_000000000007b83d:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b83f:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007b842:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007b861:
	mov -64(%RBP),%RSP
	add $-184, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b86a
	jmp uuid_000000000007b86c
uuid_000000000007b86a:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b867
	jmp uuid_000000000007b869
uuid_000000000007b867:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007b864
	jmp uuid_000000000007b866
uuid_000000000007b864:
	movb $1, -144(%rbp)
uuid_000000000007b866:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b869:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b86c:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b871
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b86e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b86d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b870
uuid_000000000007b86e:
uuid_000000000007b870:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b873
uuid_000000000007b871:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b873:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b87a
	jmp uuid_000000000007b87c
uuid_000000000007b87a:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b877
	jmp uuid_000000000007b879
uuid_000000000007b877:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b874
	jmp uuid_000000000007b876
uuid_000000000007b874:
	movb $1, -96(%rbp)
uuid_000000000007b876:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b879:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b87c:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b90c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b88c
	jmp uuid_000000000007b88e
uuid_000000000007b88c:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b889
	jmp uuid_000000000007b88b
uuid_000000000007b889:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b886
	jmp uuid_000000000007b888
uuid_000000000007b886:
	movb $1, -208(%rbp)
uuid_000000000007b888:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b88b:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b88e:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b909
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b896
	jmp uuid_000000000007b898
uuid_000000000007b896:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b893
	jmp uuid_000000000007b895
uuid_000000000007b893:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007b88f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b890
	jmp uuid_000000000007b892
uuid_000000000007b890:
	movb $1, -320(%rbp)
uuid_000000000007b892:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007b895:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007b898:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b906
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b89f
	jmp uuid_000000000007b8a1
uuid_000000000007b89f:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b89c
	jmp uuid_000000000007b89e
uuid_000000000007b89c:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b899
	jmp uuid_000000000007b89b
uuid_000000000007b899:
	movb $1, -432(%rbp)
uuid_000000000007b89b:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b89e:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b8a1:
	mov -440(%RBP),%RSP
	add $-504, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b903
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8a8
	jmp uuid_000000000007b8aa
uuid_000000000007b8a8:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8a5
	jmp uuid_000000000007b8a7
uuid_000000000007b8a5:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8a2
	jmp uuid_000000000007b8a4
uuid_000000000007b8a2:
	movb $1, -544(%rbp)
uuid_000000000007b8a4:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b8a7:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b8aa:
	mov -552(%RBP),%RSP
	add $-616, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b900
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8b1
	jmp uuid_000000000007b8b3
uuid_000000000007b8b1:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8ae
	jmp uuid_000000000007b8b0
uuid_000000000007b8ae:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $uuid_000000000007a6eb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8ab
	jmp uuid_000000000007b8ad
uuid_000000000007b8ab:
	movb $1, -656(%rbp)
uuid_000000000007b8ad:
	mov -720(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007b8b0:
	mov -672(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007b8b3:
	mov -664(%RBP),%RSP
	add $-728, %RSP
	mov -656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8fd
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8ba
	jmp uuid_000000000007b8bc
uuid_000000000007b8ba:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8b7
	jmp uuid_000000000007b8b9
uuid_000000000007b8b7:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq $uuid_000000000007a7fa
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8b4
	jmp uuid_000000000007b8b6
uuid_000000000007b8b4:
	movb $1, -768(%rbp)
uuid_000000000007b8b6:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007b8b9:
	mov -784(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007b8bc:
	mov -776(%RBP),%RSP
	add $-840, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8fa
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8c3
	jmp uuid_000000000007b8c5
uuid_000000000007b8c3:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8c0
	jmp uuid_000000000007b8c2
uuid_000000000007b8c0:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_000000000007a7fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8bd
	jmp uuid_000000000007b8bf
uuid_000000000007b8bd:
	movb $1, -880(%rbp)
uuid_000000000007b8bf:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007b8c2:
	mov -896(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007b8c5:
	mov -888(%RBP),%RSP
	add $-952, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8f7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8cc
	jmp uuid_000000000007b8ce
uuid_000000000007b8cc:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8c9
	jmp uuid_000000000007b8cb
uuid_000000000007b8c9:
	push %RBP
	mov -968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_000000000007a802
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8c6
	jmp uuid_000000000007b8c8
uuid_000000000007b8c6:
	movb $1, -992(%rbp)
uuid_000000000007b8c8:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007b8cb:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007b8ce:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
	mov -992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8f4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8d5
	jmp uuid_000000000007b8d7
uuid_000000000007b8d5:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8d2
	jmp uuid_000000000007b8d4
uuid_000000000007b8d2:
	push %RBP
	mov -1080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_000000000007a806
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8cf
	jmp uuid_000000000007b8d1
uuid_000000000007b8cf:
	movb $1, -1104(%rbp)
uuid_000000000007b8d1:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007b8d4:
	mov -1120(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007b8d7:
	mov -1112(%RBP),%RSP
	add $-1176, %RSP
	mov -1104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8f1
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8de
	jmp uuid_000000000007b8e0
uuid_000000000007b8de:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b8db
	jmp uuid_000000000007b8dd
uuid_000000000007b8db:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b8d8
	jmp uuid_000000000007b8da
uuid_000000000007b8d8:
	movb $1, -1216(%rbp)
uuid_000000000007b8da:
	mov -1280(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007b8dd:
	mov -1232(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007b8e0:
	mov -1224(%RBP),%RSP
	add $-1288, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8ee
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8eb
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8e4
	jmp uuid_000000000007b8e6
uuid_000000000007b8e4:
	push %RBP
	jmp uuid_000000000007b8e1
	jmp uuid_000000000007b8e3
uuid_000000000007b8e1:
	movb $1, -1360(%rbp)
uuid_000000000007b8e3:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007b8e6:
	mov -1368(%RBP),%RSP
	add $-1376, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8e8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b8e7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b8ea
uuid_000000000007b8e8:
uuid_000000000007b8ea:
	mov -1328(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007b8ed
uuid_000000000007b8eb:
uuid_000000000007b8ed:
	mov -1296(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_000000000007b8f0
uuid_000000000007b8ee:
	pushq -1288(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b8f0:
	mov -1184(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_000000000007b8f3
uuid_000000000007b8f1:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b8f3:
	mov -1072(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_000000000007b8f6
uuid_000000000007b8f4:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b8f6:
	mov -960(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007b8f9
uuid_000000000007b8f7:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b8f9:
	mov -848(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007b8fc
uuid_000000000007b8fa:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b8fc:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007b8ff
uuid_000000000007b8fd:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b8ff:
	mov -624(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007b902
uuid_000000000007b900:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b902:
	mov -512(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007b905
uuid_000000000007b903:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b905:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007b908
uuid_000000000007b906:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b908:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007b90b
uuid_000000000007b909:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b90b:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b90e
uuid_000000000007b90c:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b883
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b880
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007b882
uuid_000000000007b880:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b882:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007b885
uuid_000000000007b883:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b87d
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b87f
uuid_000000000007b87d:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b87f:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b885:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b90e:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b917
	jmp uuid_000000000007b919
uuid_000000000007b917:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b914
	jmp uuid_000000000007b916
uuid_000000000007b914:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007b911
	jmp uuid_000000000007b913
uuid_000000000007b911:
	movb $1, -144(%rbp)
uuid_000000000007b913:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b916:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b919:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b91e
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b91b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b91a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b91d
uuid_000000000007b91b:
uuid_000000000007b91d:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b920
uuid_000000000007b91e:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b920:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b927
	jmp uuid_000000000007b929
uuid_000000000007b927:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b924
	jmp uuid_000000000007b926
uuid_000000000007b924:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b921
	jmp uuid_000000000007b923
uuid_000000000007b921:
	movb $1, -96(%rbp)
uuid_000000000007b923:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b926:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b929:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b94c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b939
	jmp uuid_000000000007b93b
uuid_000000000007b939:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b936
	jmp uuid_000000000007b938
uuid_000000000007b936:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b933
	jmp uuid_000000000007b935
uuid_000000000007b933:
	movb $1, -208(%rbp)
uuid_000000000007b935:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b938:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b93b:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b949
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b946
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b93f
	jmp uuid_000000000007b941
uuid_000000000007b93f:
	push %RBP
	jmp uuid_000000000007b93c
	jmp uuid_000000000007b93e
uuid_000000000007b93c:
	movb $1, -352(%rbp)
uuid_000000000007b93e:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007b941:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b943
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b942
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b945
uuid_000000000007b943:
uuid_000000000007b945:
	mov -320(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007b948
uuid_000000000007b946:
uuid_000000000007b948:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b94b
uuid_000000000007b949:
	pushq -280(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b94b:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b94e
uuid_000000000007b94c:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b930
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b92d
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007b92f
uuid_000000000007b92d:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b92f:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007b932
uuid_000000000007b930:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b92a
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b92c
uuid_000000000007b92a:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b92c:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b932:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b94e:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b955
	jmp uuid_000000000007b957
uuid_000000000007b955:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b952
	jmp uuid_000000000007b954
uuid_000000000007b952:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b94f
	jmp uuid_000000000007b951
uuid_000000000007b94f:
	movb $1, -96(%rbp)
uuid_000000000007b951:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b954:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b957:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b992
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b967
	jmp uuid_000000000007b969
uuid_000000000007b967:
	push %RBP
	jmp uuid_000000000007b964
	jmp uuid_000000000007b966
uuid_000000000007b964:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a918
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b961
	jmp uuid_000000000007b963
uuid_000000000007b961:
	movb $1, -208(%rbp)
uuid_000000000007b963:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b966:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b969:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b98f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b970
	jmp uuid_000000000007b972
uuid_000000000007b970:
	push %RBP
	jmp uuid_000000000007b96d
	jmp uuid_000000000007b96f
uuid_000000000007b96d:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007a917
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b96a
	jmp uuid_000000000007b96c
uuid_000000000007b96a:
	movb $1, -280(%rbp)
uuid_000000000007b96c:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b96f:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b972:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b98c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b979
	jmp uuid_000000000007b97b
uuid_000000000007b979:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b976
	jmp uuid_000000000007b978
uuid_000000000007b976:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b973
	jmp uuid_000000000007b975
uuid_000000000007b973:
	movb $1, -352(%rbp)
uuid_000000000007b975:
	mov -416(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b978:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b97b:
	mov -360(%RBP),%RSP
	add $-424, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b989
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b986
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b97f
	jmp uuid_000000000007b981
uuid_000000000007b97f:
	push %RBP
	jmp uuid_000000000007b97c
	jmp uuid_000000000007b97e
uuid_000000000007b97c:
	movb $1, -496(%rbp)
uuid_000000000007b97e:
	mov -512(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007b981:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b983
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b982
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b985
uuid_000000000007b983:
uuid_000000000007b985:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_000000000007b988
uuid_000000000007b986:
uuid_000000000007b988:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007b98b
uuid_000000000007b989:
	pushq -424(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b98b:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007b98e
uuid_000000000007b98c:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b98e:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b991
uuid_000000000007b98f:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b991:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b994
uuid_000000000007b992:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b95e
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b95b
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007b95d
uuid_000000000007b95b:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b95d:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007b960
uuid_000000000007b95e:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b958
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b95a
uuid_000000000007b958:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b95a:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b960:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b994:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b99d
	jmp uuid_000000000007b99f
uuid_000000000007b99d:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b99a
	jmp uuid_000000000007b99c
uuid_000000000007b99a:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007b997
	jmp uuid_000000000007b999
uuid_000000000007b997:
	movb $1, -144(%rbp)
uuid_000000000007b999:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b99c:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b99f:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9a4
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9a1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b9a0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9a3
uuid_000000000007b9a1:
uuid_000000000007b9a3:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b9a6
uuid_000000000007b9a4:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b9a6:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9ad
	jmp uuid_000000000007b9af
uuid_000000000007b9ad:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9aa
	jmp uuid_000000000007b9ac
uuid_000000000007b9aa:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9a7
	jmp uuid_000000000007b9a9
uuid_000000000007b9a7:
	movb $1, -96(%rbp)
uuid_000000000007b9a9:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b9ac:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b9af:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9ea
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9bf
	jmp uuid_000000000007b9c1
uuid_000000000007b9bf:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9bc
	jmp uuid_000000000007b9be
uuid_000000000007b9bc:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_000000000007a917
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9b9
	jmp uuid_000000000007b9bb
uuid_000000000007b9b9:
	movb $1, -208(%rbp)
uuid_000000000007b9bb:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b9be:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b9c1:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9e7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9c8
	jmp uuid_000000000007b9ca
uuid_000000000007b9c8:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9c5
	jmp uuid_000000000007b9c7
uuid_000000000007b9c5:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007a918
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9c2
	jmp uuid_000000000007b9c4
uuid_000000000007b9c2:
	movb $1, -320(%rbp)
uuid_000000000007b9c4:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007b9c7:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007b9ca:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9e4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9d1
	jmp uuid_000000000007b9d3
uuid_000000000007b9d1:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9ce
	jmp uuid_000000000007b9d0
uuid_000000000007b9ce:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9cb
	jmp uuid_000000000007b9cd
uuid_000000000007b9cb:
	movb $1, -432(%rbp)
uuid_000000000007b9cd:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b9d0:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b9d3:
	mov -440(%RBP),%RSP
	add $-504, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9e1
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9de
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9d7
	jmp uuid_000000000007b9d9
uuid_000000000007b9d7:
	push %RBP
	jmp uuid_000000000007b9d4
	jmp uuid_000000000007b9d6
uuid_000000000007b9d4:
	movb $1, -576(%rbp)
uuid_000000000007b9d6:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b9d9:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9db
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007b9da
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9dd
uuid_000000000007b9db:
uuid_000000000007b9dd:
	mov -544(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007b9e0
uuid_000000000007b9de:
uuid_000000000007b9e0:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007b9e3
uuid_000000000007b9e1:
	pushq -504(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b9e3:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007b9e6
uuid_000000000007b9e4:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b9e6:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007b9e9
uuid_000000000007b9e7:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b9e9:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b9ec
uuid_000000000007b9ea:
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9b6
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9b3
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007b9b5
uuid_000000000007b9b3:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b9b5:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007b9b8
uuid_000000000007b9b6:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9b0
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b9b2
uuid_000000000007b9b0:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b9b2:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b9b8:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b9ec:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_tag_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9f3
	jmp uuid_000000000007b9f5
uuid_000000000007b9f3:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9f0
	jmp uuid_000000000007b9f2
uuid_000000000007b9f0:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9ed
	jmp uuid_000000000007b9ef
uuid_000000000007b9ed:
	movb $1, -120(%rbp)
uuid_000000000007b9ef:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007b9f2:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007b9f5:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba0c
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba02
	jmp uuid_000000000007ba04
uuid_000000000007ba02:
	push %RBP
	jmp uuid_000000000007b9ff
	jmp uuid_000000000007ba01
uuid_000000000007b9ff:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_000000000007ab2e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9fc
	jmp uuid_000000000007b9fe
uuid_000000000007b9fc:
	movb $1, -232(%rbp)
uuid_000000000007b9fe:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba01:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba04:
	mov -240(%RBP),%RSP
	add $-264, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba09
	push %RBP
	jmp uuid_000000000007ba06
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ba05
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba08
uuid_000000000007ba06:
uuid_000000000007ba08:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007ba0b
uuid_000000000007ba09:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ba0b:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007ba0e
uuid_000000000007ba0c:
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9f9
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9f6
	jmp uuid_000000000007b9f8
uuid_000000000007b9f6:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007b9f8:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b9fb
uuid_000000000007b9f9:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007b9fb:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007ba0e:
	mov -88(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_class_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba15
	jmp uuid_000000000007ba17
uuid_000000000007ba15:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba12
	jmp uuid_000000000007ba14
uuid_000000000007ba12:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba0f
	jmp uuid_000000000007ba11
uuid_000000000007ba0f:
	movb $1, -120(%rbp)
uuid_000000000007ba11:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ba14:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ba17:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba34
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba24
	jmp uuid_000000000007ba26
uuid_000000000007ba24:
	push %RBP
	jmp uuid_000000000007ba21
	jmp uuid_000000000007ba23
uuid_000000000007ba21:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ba1e
	jmp uuid_000000000007ba20
uuid_000000000007ba1e:
	movb $1, -232(%rbp)
uuid_000000000007ba20:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba23:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba26:
	mov -240(%RBP),%RSP
	add $-264, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba31
	push %RBP
	jmp uuid_000000000007ba2e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba30
uuid_000000000007ba2e:
uuid_000000000007ba30:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007ba33
uuid_000000000007ba31:
	push %RBP
#call function is-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba2a
	jmp uuid_000000000007ba2c
uuid_000000000007ba2a:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba27
	jmp uuid_000000000007ba29
uuid_000000000007ba27:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ba29:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ba2c:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ba33:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007ba36
uuid_000000000007ba34:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba18
	jmp uuid_000000000007ba1a
uuid_000000000007ba18:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ba1a:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba1b
	jmp uuid_000000000007ba1d
uuid_000000000007ba1b:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ba1d:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007ba36:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba3f
	jmp uuid_000000000007ba41
uuid_000000000007ba3f:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba3c
	jmp uuid_000000000007ba3e
uuid_000000000007ba3c:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007ba39
	jmp uuid_000000000007ba3b
uuid_000000000007ba39:
	movb $1, -184(%rbp)
uuid_000000000007ba3b:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ba3e:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ba41:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba46
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba43
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ba42
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba45
uuid_000000000007ba43:
uuid_000000000007ba45:
	mov -280(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007ba48
uuid_000000000007ba46:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007ba48:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba4f
	jmp uuid_000000000007ba51
uuid_000000000007ba4f:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba4c
	jmp uuid_000000000007ba4e
uuid_000000000007ba4c:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba49
	jmp uuid_000000000007ba4b
uuid_000000000007ba49:
	movb $1, -120(%rbp)
uuid_000000000007ba4b:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ba4e:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ba51:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bae0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba61
	jmp uuid_000000000007ba63
uuid_000000000007ba61:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba5e
	jmp uuid_000000000007ba60
uuid_000000000007ba5e:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba5b
	jmp uuid_000000000007ba5d
uuid_000000000007ba5b:
	movb $1, -232(%rbp)
uuid_000000000007ba5d:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007ba60:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007ba63:
	mov -240(%RBP),%RSP
	add $-304, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007badd
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba6a
	jmp uuid_000000000007ba6c
uuid_000000000007ba6a:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba67
	jmp uuid_000000000007ba69
uuid_000000000007ba67:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $uuid_000000000007b88f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba64
	jmp uuid_000000000007ba66
uuid_000000000007ba64:
	movb $1, -344(%rbp)
uuid_000000000007ba66:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ba69:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ba6c:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bada
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba73
	jmp uuid_000000000007ba75
uuid_000000000007ba73:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba70
	jmp uuid_000000000007ba72
uuid_000000000007ba70:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba6d
	jmp uuid_000000000007ba6f
uuid_000000000007ba6d:
	movb $1, -456(%rbp)
uuid_000000000007ba6f:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007ba72:
	mov -472(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007ba75:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bad7
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba7c
	jmp uuid_000000000007ba7e
uuid_000000000007ba7c:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba79
	jmp uuid_000000000007ba7b
uuid_000000000007ba79:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba76
	jmp uuid_000000000007ba78
uuid_000000000007ba76:
	movb $1, -568(%rbp)
uuid_000000000007ba78:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007ba7b:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007ba7e:
	mov -576(%RBP),%RSP
	add $-640, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bad4
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba85
	jmp uuid_000000000007ba87
uuid_000000000007ba85:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba82
	jmp uuid_000000000007ba84
uuid_000000000007ba82:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $uuid_000000000007a6eb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba7f
	jmp uuid_000000000007ba81
uuid_000000000007ba7f:
	movb $1, -680(%rbp)
uuid_000000000007ba81:
	mov -744(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007ba84:
	mov -696(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007ba87:
	mov -688(%RBP),%RSP
	add $-752, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bad1
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba8e
	jmp uuid_000000000007ba90
uuid_000000000007ba8e:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba8b
	jmp uuid_000000000007ba8d
uuid_000000000007ba8b:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $uuid_000000000007a7fa
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba88
	jmp uuid_000000000007ba8a
uuid_000000000007ba88:
	movb $1, -792(%rbp)
uuid_000000000007ba8a:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007ba8d:
	mov -808(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007ba90:
	mov -800(%RBP),%RSP
	add $-864, %RSP
	mov -792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bace
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba97
	jmp uuid_000000000007ba99
uuid_000000000007ba97:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba94
	jmp uuid_000000000007ba96
uuid_000000000007ba94:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007a7fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba91
	jmp uuid_000000000007ba93
uuid_000000000007ba91:
	movb $1, -904(%rbp)
uuid_000000000007ba93:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007ba96:
	mov -920(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007ba99:
	mov -912(%RBP),%RSP
	add $-976, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bacb
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baa0
	jmp uuid_000000000007baa2
uuid_000000000007baa0:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba9d
	jmp uuid_000000000007ba9f
uuid_000000000007ba9d:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_000000000007a802
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba9a
	jmp uuid_000000000007ba9c
uuid_000000000007ba9a:
	movb $1, -1016(%rbp)
uuid_000000000007ba9c:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007ba9f:
	mov -1032(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007baa2:
	mov -1024(%RBP),%RSP
	add $-1088, %RSP
	mov -1016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bac8
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baa9
	jmp uuid_000000000007baab
uuid_000000000007baa9:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baa6
	jmp uuid_000000000007baa8
uuid_000000000007baa6:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $uuid_000000000007a806
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007baa3
	jmp uuid_000000000007baa5
uuid_000000000007baa3:
	movb $1, -1128(%rbp)
uuid_000000000007baa5:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007baa8:
	mov -1144(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007baab:
	mov -1136(%RBP),%RSP
	add $-1200, %RSP
	mov -1128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bac5
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab2
	jmp uuid_000000000007bab4
uuid_000000000007bab2:
	push %RBP
	mov -1224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007baaf
	jmp uuid_000000000007bab1
uuid_000000000007baaf:
	push %RBP
	mov -1216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007baac
	jmp uuid_000000000007baae
uuid_000000000007baac:
	movb $1, -1240(%rbp)
uuid_000000000007baae:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007bab1:
	mov -1256(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007bab4:
	mov -1248(%RBP),%RSP
	add $-1312, %RSP
	mov -1240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bac2
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -1344(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007babf
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab8
	jmp uuid_000000000007baba
uuid_000000000007bab8:
	push %RBP
	jmp uuid_000000000007bab5
	jmp uuid_000000000007bab7
uuid_000000000007bab5:
	movb $1, -1384(%rbp)
uuid_000000000007bab7:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
uuid_000000000007baba:
	mov -1392(%RBP),%RSP
	add $-1400, %RSP
	mov -1384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007babc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007babb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007babe
uuid_000000000007babc:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007babe:
	mov -1352(%RBP),%RSP
	add $-1400, %RSP
	jmp uuid_000000000007bac1
uuid_000000000007babf:
uuid_000000000007bac1:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_000000000007bac4
uuid_000000000007bac2:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007bac4:
	mov -1208(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007bac7
uuid_000000000007bac5:
uuid_000000000007bac7:
	mov -1096(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_000000000007baca
uuid_000000000007bac8:
uuid_000000000007baca:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007bacd
uuid_000000000007bacb:
uuid_000000000007bacd:
	mov -872(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007bad0
uuid_000000000007bace:
uuid_000000000007bad0:
	mov -760(%RBP),%RSP
	add $-864, %RSP
	jmp uuid_000000000007bad3
uuid_000000000007bad1:
uuid_000000000007bad3:
	mov -648(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_000000000007bad6
uuid_000000000007bad4:
uuid_000000000007bad6:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007bad9
uuid_000000000007bad7:
uuid_000000000007bad9:
	mov -424(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007badc
uuid_000000000007bada:
uuid_000000000007badc:
	mov -312(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007badf
uuid_000000000007badd:
uuid_000000000007badf:
	mov -200(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007bae2
uuid_000000000007bae0:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba58
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba55
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_000000000007ba57
uuid_000000000007ba55:
	movq -240(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ba57:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007ba5a
uuid_000000000007ba58:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba52
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
	jmp uuid_000000000007ba54
uuid_000000000007ba52:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007ba54:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007ba5a:
	mov -248(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007bae2:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baf9
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baf6
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baef
	jmp uuid_000000000007baf1
uuid_000000000007baef:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007baec
	jmp uuid_000000000007baee
uuid_000000000007baec:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007bae9
	jmp uuid_000000000007baeb
uuid_000000000007bae9:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bae6
	jmp uuid_000000000007bae8
uuid_000000000007bae6:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bae3
	jmp uuid_000000000007bae5
uuid_000000000007bae3:
	movb $1, -640(%rbp)
uuid_000000000007bae5:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007bae8:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007baeb:
	mov -736(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007baee:
	mov -656(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007baf1:
	mov -648(%RBP),%RSP
	add $-904, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007baf3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007baf2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007baf5
uuid_000000000007baf3:
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -776(%rbp)
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007baf5:
	mov -512(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007baf8
uuid_000000000007baf6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007baf8:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007bafb
uuid_000000000007baf9:
uuid_000000000007bafb:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
denormalize_CL_ArrowTypeType:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
enrich_CL_ArrowTypeConsTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bafc
	jmp uuid_000000000007bafe
uuid_000000000007bafc:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bafe:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
type_SB_of_SB_s_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb05
	jmp uuid_000000000007bb07
uuid_000000000007bb05:
	push %RBP
	jmp uuid_000000000007bb02
	jmp uuid_000000000007bb04
uuid_000000000007bb02:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007baff
	jmp uuid_000000000007bb01
uuid_000000000007baff:
	movb $1, -264(%rbp)
uuid_000000000007bb01:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007bb04:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007bb07:
	mov -272(%RBP),%RSP
	add $-296, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb37
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb0e
	jmp uuid_000000000007bb10
uuid_000000000007bb0e:
	push %RBP
	jmp uuid_000000000007bb0b
	jmp uuid_000000000007bb0d
uuid_000000000007bb0b:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb08
	jmp uuid_000000000007bb0a
uuid_000000000007bb08:
	movb $1, -384(%rbp)
uuid_000000000007bb0a:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007bb0d:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007bb10:
	mov -392(%RBP),%RSP
	add $-416, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb34
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb29
	jmp uuid_000000000007bb2b
uuid_000000000007bb29:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb26
	jmp uuid_000000000007bb28
uuid_000000000007bb26:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb20
	jmp uuid_000000000007bb22
uuid_000000000007bb20:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb17
	jmp uuid_000000000007bb19
uuid_000000000007bb17:
	push %RBP
	jmp uuid_000000000007bb14
	jmp uuid_000000000007bb16
uuid_000000000007bb14:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007a5fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb11
	jmp uuid_000000000007bb13
uuid_000000000007bb11:
	movb $1, -776(%rbp)
uuid_000000000007bb13:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bb16:
	mov -792(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bb19:
	mov -784(%RBP),%RSP
	add $-808, %RSP
	mov -776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb1d
	jmp uuid_000000000007bb1f
uuid_000000000007bb1d:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb1a
	jmp uuid_000000000007bb1c
uuid_000000000007bb1a:
	movb $1, -680(%rbp)
uuid_000000000007bb1c:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007bb1f:
	mov -696(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007bb22:
	mov -688(%RBP),%RSP
	add $-888, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb23
	jmp uuid_000000000007bb25
uuid_000000000007bb23:
	movb $1, -504(%rbp)
uuid_000000000007bb25:
	mov -600(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007bb28:
	mov -520(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007bb2b:
	mov -512(%RBP),%RSP
	add $-888, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb31
	push %RBP
	jmp uuid_000000000007bb2e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bb2d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb30
uuid_000000000007bb2e:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb2c
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bb30:
	mov -896(%RBP),%RSP
	add $-896, %RSP
	jmp uuid_000000000007bb33
uuid_000000000007bb31:
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb33:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007bb36
uuid_000000000007bb34:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007bb36:
	mov -304(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007bb39
uuid_000000000007bb37:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007bb39:
	mov -184(%RBP),%RSP
	add $-320, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb40
	jmp uuid_000000000007bb42
uuid_000000000007bb40:
	push %RBP
	jmp uuid_000000000007bb3d
	jmp uuid_000000000007bb3f
uuid_000000000007bb3d:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb3a
	jmp uuid_000000000007bb3c
uuid_000000000007bb3a:
	movb $1, -304(%rbp)
uuid_000000000007bb3c:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007bb3f:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007bb42:
	mov -312(%RBP),%RSP
	add $-336, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bba4
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb63
	jmp uuid_000000000007bb65
uuid_000000000007bb63:
	push %RBP
	jmp uuid_000000000007bb60
	jmp uuid_000000000007bb62
uuid_000000000007bb60:
	push %RBP
	mov -352(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb5d
	jmp uuid_000000000007bb5f
uuid_000000000007bb5d:
	movb $1, -424(%rbp)
uuid_000000000007bb5f:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007bb62:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007bb65:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bba1
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb97
	jmp uuid_000000000007bb99
uuid_000000000007bb97:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb94
	jmp uuid_000000000007bb96
uuid_000000000007bb94:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb8e
	jmp uuid_000000000007bb90
uuid_000000000007bb8e:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb85
	jmp uuid_000000000007bb87
uuid_000000000007bb85:
	push %RBP
	jmp uuid_000000000007bb82
	jmp uuid_000000000007bb84
uuid_000000000007bb82:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_000000000007a5fe
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb7f
	jmp uuid_000000000007bb81
uuid_000000000007bb7f:
	movb $1, -816(%rbp)
uuid_000000000007bb81:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007bb84:
	mov -832(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007bb87:
	mov -824(%RBP),%RSP
	add $-848, %RSP
	mov -816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb8b
	jmp uuid_000000000007bb8d
uuid_000000000007bb8b:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb88
	jmp uuid_000000000007bb8a
uuid_000000000007bb88:
	movb $1, -720(%rbp)
uuid_000000000007bb8a:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bb8d:
	mov -736(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bb90:
	mov -728(%RBP),%RSP
	add $-928, %RSP
	mov -720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb91
	jmp uuid_000000000007bb93
uuid_000000000007bb91:
	movb $1, -544(%rbp)
uuid_000000000007bb93:
	mov -640(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bb96:
	mov -560(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bb99:
	mov -552(%RBP),%RSP
	add $-928, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb9e
	push %RBP
	jmp uuid_000000000007bb9b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bb9a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb9d
uuid_000000000007bb9b:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb2c
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bb9d:
	mov -936(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007bba0
uuid_000000000007bb9e:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	movq -112(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007bba0:
	mov -464(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007bba3
uuid_000000000007bba1:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb6c
	jmp uuid_000000000007bb6e
uuid_000000000007bb6c:
	push %RBP
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_000000000007bb69
	jmp uuid_000000000007bb6b
uuid_000000000007bb69:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $uuid_000000000007a365
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb66
	jmp uuid_000000000007bb68
uuid_000000000007bb66:
	movb $1, -576(%rbp)
uuid_000000000007bb68:
	mov -624(%RBP),%RSP
	add $-632, %RSP
uuid_000000000007bb6b:
	mov -592(%RBP),%RSP
	add $-632, %RSP
uuid_000000000007bb6e:
	mov -584(%RBP),%RSP
	add $-632, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb7c
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb75
	jmp uuid_000000000007bb77
uuid_000000000007bb75:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007bb72
	jmp uuid_000000000007bb74
uuid_000000000007bb72:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb6f
	jmp uuid_000000000007bb71
uuid_000000000007bb6f:
	movb $1, -688(%rbp)
uuid_000000000007bb71:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007bb74:
	mov -704(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007bb77:
	mov -696(%RBP),%RSP
	add $-744, %RSP
	mov -688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb79
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bb78
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb7b
uuid_000000000007bb79:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a533
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -744(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a533
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -728(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_000000000007bb7b:
	mov -640(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007bb7e
uuid_000000000007bb7c:
	movq -616(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_000000000007bb7e:
	mov -528(%RBP),%RSP
	add $-632, %RSP
	movq -480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_000000000007bba3:
	mov -344(%RBP),%RSP
	add $-632, %RSP
	jmp uuid_000000000007bba6
uuid_000000000007bba4:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb49
	jmp uuid_000000000007bb4b
uuid_000000000007bb49:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007bb46
	jmp uuid_000000000007bb48
uuid_000000000007bb46:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_000000000007a365
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb43
	jmp uuid_000000000007bb45
uuid_000000000007bb43:
	movb $1, -456(%rbp)
uuid_000000000007bb45:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007bb48:
	mov -472(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007bb4b:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb5a
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb52
	jmp uuid_000000000007bb54
uuid_000000000007bb52:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007bb4f
	jmp uuid_000000000007bb51
uuid_000000000007bb4f:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb4c
	jmp uuid_000000000007bb4e
uuid_000000000007bb4c:
	movb $1, -568(%rbp)
uuid_000000000007bb4e:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bb51:
	mov -584(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bb54:
	mov -576(%RBP),%RSP
	add $-624, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb57
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bb56
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb59
uuid_000000000007bb57:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a533
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -624(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a533
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb55
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -608(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_000000000007bb59:
	mov -520(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007bb5c
uuid_000000000007bb5a:
	movq -496(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_000000000007bb5c:
	mov -408(%RBP),%RSP
	add $-512, %RSP
	movq -360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_000000000007bba6:
	mov -224(%RBP),%RSP
	add $-512, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $120, %rsp
	ret
typeof_SB_lhs_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbc5
	jmp uuid_000000000007bbc7
uuid_000000000007bbc5:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbb3
	jmp uuid_000000000007bbb5
uuid_000000000007bbb3:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbaa
	jmp uuid_000000000007bbac
uuid_000000000007bbaa:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007bba7
	jmp uuid_000000000007bba9
uuid_000000000007bba7:
	movb $1, -456(%rbp)
uuid_000000000007bba9:
	mov -472(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007bbac:
	mov -464(%RBP),%RSP
	add $-496, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbb0
	jmp uuid_000000000007bbb2
uuid_000000000007bbb0:
	push %RBP
	jmp uuid_000000000007bbad
	jmp uuid_000000000007bbaf
uuid_000000000007bbad:
	movb $1, -360(%rbp)
uuid_000000000007bbaf:
	mov -504(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007bbb2:
	mov -376(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007bbb5:
	mov -368(%RBP),%RSP
	add $-504, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbc2
	jmp uuid_000000000007bbc4
uuid_000000000007bbc2:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbbc
	jmp uuid_000000000007bbbe
uuid_000000000007bbbc:
	push %RBP
	jmp uuid_000000000007bbb9
	jmp uuid_000000000007bbbb
uuid_000000000007bbb9:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbb6
	jmp uuid_000000000007bbb8
uuid_000000000007bbb6:
	movb $1, -592(%rbp)
uuid_000000000007bbb8:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bbbb:
	mov -608(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bbbe:
	mov -600(%RBP),%RSP
	add $-624, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbbf
	jmp uuid_000000000007bbc1
uuid_000000000007bbbf:
	movb $1, -264(%rbp)
uuid_000000000007bbc1:
	mov -512(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bbc4:
	mov -280(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bbc7:
	mov -272(%RBP),%RSP
	add $-624, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbfd
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbef
	jmp uuid_000000000007bbf1
uuid_000000000007bbef:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbe6
	jmp uuid_000000000007bbe8
uuid_000000000007bbe6:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbd4
	jmp uuid_000000000007bbd6
uuid_000000000007bbd4:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbcb
	jmp uuid_000000000007bbcd
uuid_000000000007bbcb:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007bbc8
	jmp uuid_000000000007bbca
uuid_000000000007bbc8:
	movb $1, -1000(%rbp)
uuid_000000000007bbca:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007bbcd:
	mov -1008(%RBP),%RSP
	add $-1040, %RSP
	mov -1000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbd1
	jmp uuid_000000000007bbd3
uuid_000000000007bbd1:
	push %RBP
	jmp uuid_000000000007bbce
	jmp uuid_000000000007bbd0
uuid_000000000007bbce:
	movb $1, -904(%rbp)
uuid_000000000007bbd0:
	mov -1048(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007bbd3:
	mov -920(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007bbd6:
	mov -912(%RBP),%RSP
	add $-1048, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbe3
	jmp uuid_000000000007bbe5
uuid_000000000007bbe3:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbdd
	jmp uuid_000000000007bbdf
uuid_000000000007bbdd:
	push %RBP
	jmp uuid_000000000007bbda
	jmp uuid_000000000007bbdc
uuid_000000000007bbda:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbd7
	jmp uuid_000000000007bbd9
uuid_000000000007bbd7:
	movb $1, -1136(%rbp)
uuid_000000000007bbd9:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007bbdc:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007bbdf:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbe0
	jmp uuid_000000000007bbe2
uuid_000000000007bbe0:
	movb $1, -808(%rbp)
uuid_000000000007bbe2:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007bbe5:
	mov -824(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007bbe8:
	mov -816(%RBP),%RSP
	add $-1168, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbec
	jmp uuid_000000000007bbee
uuid_000000000007bbec:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bbe9
	jmp uuid_000000000007bbeb
uuid_000000000007bbe9:
	movb $1, -712(%rbp)
uuid_000000000007bbeb:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007bbee:
	mov -728(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007bbf1:
	mov -720(%RBP),%RSP
	add $-1248, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbfa
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -1328(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbf7
	push %RBP
	jmp uuid_000000000007bbf4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bbf3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bbf6
uuid_000000000007bbf4:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbf2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bbf6:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
	jmp uuid_000000000007bbf9
uuid_000000000007bbf7:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bbf9:
	mov -1256(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_000000000007bbfc
uuid_000000000007bbfa:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bbfc:
	mov -632(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007bbff
uuid_000000000007bbfd:
	movq -496(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007bbff:
	mov -184(%RBP),%RSP
	add $-624, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
typeof_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
cons_SB_head_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc20
	jmp uuid_000000000007bc22
uuid_000000000007bc20:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc17
	jmp uuid_000000000007bc19
uuid_000000000007bc17:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc0e
	jmp uuid_000000000007bc10
uuid_000000000007bc0e:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc0b
	jmp uuid_000000000007bc0d
uuid_000000000007bc0b:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007bc08
	jmp uuid_000000000007bc0a
uuid_000000000007bc08:
	movb $1, -248(%rbp)
uuid_000000000007bc0a:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007bc0d:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007bc10:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc14
	jmp uuid_000000000007bc16
uuid_000000000007bc14:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007bc11
	jmp uuid_000000000007bc13
uuid_000000000007bc11:
	movb $1, -184(%rbp)
uuid_000000000007bc13:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bc16:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bc19:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc1d
	jmp uuid_000000000007bc1f
uuid_000000000007bc1d:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc1a
	jmp uuid_000000000007bc1c
uuid_000000000007bc1a:
	movb $1, -120(%rbp)
uuid_000000000007bc1c:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bc1f:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bc22:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc27
	push %RBP
	jmp uuid_000000000007bc24
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bc23
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc26
uuid_000000000007bc24:
uuid_000000000007bc26:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007bc29
uuid_000000000007bc27:
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007bc29:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_tail_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc42
	jmp uuid_000000000007bc44
uuid_000000000007bc42:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc39
	jmp uuid_000000000007bc3b
uuid_000000000007bc39:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc30
	jmp uuid_000000000007bc32
uuid_000000000007bc30:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc2d
	jmp uuid_000000000007bc2f
uuid_000000000007bc2d:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007bc2a
	jmp uuid_000000000007bc2c
uuid_000000000007bc2a:
	movb $1, -248(%rbp)
uuid_000000000007bc2c:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007bc2f:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007bc32:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc36
	jmp uuid_000000000007bc38
uuid_000000000007bc36:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007bc33
	jmp uuid_000000000007bc35
uuid_000000000007bc33:
	movb $1, -184(%rbp)
uuid_000000000007bc35:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bc38:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bc3b:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc3f
	jmp uuid_000000000007bc41
uuid_000000000007bc3f:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc3c
	jmp uuid_000000000007bc3e
uuid_000000000007bc3c:
	movb $1, -120(%rbp)
uuid_000000000007bc3e:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bc41:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bc44:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc49
	push %RBP
	jmp uuid_000000000007bc46
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bc45
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc48
uuid_000000000007bc46:
uuid_000000000007bc48:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007bc4b
uuid_000000000007bc49:
	movq -368(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007bc4b:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsStringType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc52
	jmp uuid_000000000007bc54
uuid_000000000007bc52:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc4f
	jmp uuid_000000000007bc51
uuid_000000000007bc4f:
	push %RBP
	jmp uuid_000000000007bc4c
	jmp uuid_000000000007bc4e
uuid_000000000007bc4c:
	movb $1, -112(%rbp)
uuid_000000000007bc4e:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc51:
	mov -128(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc54:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	mov -112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc59
	push %RBP
	jmp uuid_000000000007bc56
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bc55
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc58
uuid_000000000007bc56:
uuid_000000000007bc58:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007bc5b
uuid_000000000007bc59:
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -32(%rbp)
	pushq $1
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
uuid_000000000007bc5b:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc6c
	jmp uuid_000000000007bc6e
uuid_000000000007bc6c:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc69
	jmp uuid_000000000007bc6b
uuid_000000000007bc69:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc63
	jmp uuid_000000000007bc65
uuid_000000000007bc63:
	push %RBP
	mov -248(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bc60
	jmp uuid_000000000007bc62
uuid_000000000007bc60:
	movb $1, -264(%rbp)
uuid_000000000007bc62:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007bc65:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc66
	jmp uuid_000000000007bc68
uuid_000000000007bc66:
	movb $1, -168(%rbp)
uuid_000000000007bc68:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007bc6b:
	mov -184(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007bc6e:
	mov -176(%RBP),%RSP
	add $-288, %RSP
	mov -168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc76
	push %RBP
	jmp uuid_000000000007bc73
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bc72
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc75
uuid_000000000007bc73:
uuid_000000000007bc75:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007bc78
uuid_000000000007bc76:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc6f
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -48(%rbp)
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -72(%rbp)
	jmp uuid_000000000007bc71
uuid_000000000007bc6f:
	movq -56(%rbp), %r15
	movq %r15, -72(%rbp)
	mov -56(%rbp), %r15
	mov %r15, -72(%rbp)
uuid_000000000007bc71:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007bc78:
	mov -120(%RBP),%RSP
	add $-296, %RSP
	mov -72(%rbp), %RAX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
apply_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc79
	jmp uuid_000000000007bc7b
uuid_000000000007bc79:
#call function reduce-plural : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call reduce_SB_plural_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bc7b:
	mov -224(%RBP),%RSP
	add $-224, %RSP
	push %RBP
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	movq -144(%RBP), %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc7f
	jmp uuid_000000000007bc81
uuid_000000000007bc7f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc7c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc7d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc7e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bc81:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc95
	jmp uuid_000000000007bc97
uuid_000000000007bc95:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc82
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc83
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007bc92:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc93
	jmp uuid_000000000007bc94
uuid_000000000007bc93:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc84
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc8b
	jmp uuid_000000000007bc8d
uuid_000000000007bc8b:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc88
	jmp uuid_000000000007bc8a
uuid_000000000007bc88:
	push %RBP
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	jmp uuid_000000000007bc85
	jmp uuid_000000000007bc87
uuid_000000000007bc85:
	movb $1, -376(%rbp)
uuid_000000000007bc87:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007bc8a:
	mov -392(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007bc8d:
	mov -384(%RBP),%RSP
	add $-464, %RSP
	mov -376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc8f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bc8e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc91
uuid_000000000007bc8f:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -432(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -248(%rbp)
uuid_000000000007bc91:
	mov -328(%RBP),%RSP
	add $-464, %RSP
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bc92
uuid_000000000007bc94:
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bc97:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007bcd1:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcd2
	jmp uuid_000000000007bcd3
uuid_000000000007bcd2:
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc9e
	jmp uuid_000000000007bca0
uuid_000000000007bc9e:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc9b
	jmp uuid_000000000007bc9d
uuid_000000000007bc9b:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007bc98
	jmp uuid_000000000007bc9a
uuid_000000000007bc98:
	movb $1, -416(%rbp)
uuid_000000000007bc9a:
	mov -480(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007bc9d:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007bca0:
	mov -424(%RBP),%RSP
	add $-504, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bccd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bcd0
uuid_000000000007bcce:
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	push %RBP
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcb9
	jmp uuid_000000000007bcbb
uuid_000000000007bcb9:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcb0
	jmp uuid_000000000007bcb2
uuid_000000000007bcb0:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bca7
	jmp uuid_000000000007bca9
uuid_000000000007bca7:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bca4
	jmp uuid_000000000007bca6
uuid_000000000007bca4:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007bca1
	jmp uuid_000000000007bca3
uuid_000000000007bca1:
	movb $1, -696(%rbp)
uuid_000000000007bca3:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007bca6:
	mov -712(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007bca9:
	mov -704(%RBP),%RSP
	add $-784, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcad
	jmp uuid_000000000007bcaf
uuid_000000000007bcad:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007bcaa
	jmp uuid_000000000007bcac
uuid_000000000007bcaa:
	movb $1, -632(%rbp)
uuid_000000000007bcac:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007bcaf:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007bcb2:
	mov -640(%RBP),%RSP
	add $-816, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcb6
	jmp uuid_000000000007bcb8
uuid_000000000007bcb6:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcb3
	jmp uuid_000000000007bcb5
uuid_000000000007bcb3:
	movb $1, -568(%rbp)
uuid_000000000007bcb5:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bcb8:
	mov -584(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bcbb:
	mov -576(%RBP),%RSP
	add $-832, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcca
	push %RBP
	jmp uuid_000000000007bcc7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bcc6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bcc9
uuid_000000000007bcc7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bcc5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcc9:
	mov -840(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007bccc
uuid_000000000007bcca:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -64(%RBP), %RAX
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcc2
	jmp uuid_000000000007bcc4
uuid_000000000007bcc2:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcbf
	jmp uuid_000000000007bcc1
uuid_000000000007bcbf:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bcbc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bcbd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bcbe
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcc1:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function try-specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcc4:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007bccc:
	mov -536(%RBP),%RSP
	add $-992, %RSP
	movq -472(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -288(%rbp)
uuid_000000000007bcd0:
	mov -368(%RBP),%RSP
	add $-992, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $120, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bcd1
uuid_000000000007bcd3:
	subq $24, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
apply_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd51
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd4e
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcda
	jmp uuid_000000000007bcdc
uuid_000000000007bcda:
	push %RBP
	jmp uuid_000000000007bcd7
	jmp uuid_000000000007bcd9
uuid_000000000007bcd7:
	push %RBP
	jmp uuid_000000000007bcd4
	jmp uuid_000000000007bcd6
uuid_000000000007bcd4:
	movb $1, -568(%rbp)
uuid_000000000007bcd6:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007bcd9:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007bcdc:
	mov -576(%RBP),%RSP
	add $-592, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd4b
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bce0
	jmp uuid_000000000007bce2
uuid_000000000007bce0:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007bcdd
	jmp uuid_000000000007bcdf
uuid_000000000007bcdd:
	movb $1, -680(%rbp)
uuid_000000000007bcdf:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007bce2:
	mov -688(%RBP),%RSP
	add $-720, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd48
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bce9
	jmp uuid_000000000007bceb
uuid_000000000007bce9:
	push %RBP
	jmp uuid_000000000007bce6
	jmp uuid_000000000007bce8
uuid_000000000007bce6:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bce3
	jmp uuid_000000000007bce5
uuid_000000000007bce3:
	movb $1, -808(%rbp)
uuid_000000000007bce5:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007bce8:
	mov -824(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007bceb:
	mov -816(%RBP),%RSP
	add $-840, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd45
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd0b
	jmp uuid_000000000007bd0d
uuid_000000000007bd0b:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd08
	jmp uuid_000000000007bd0a
uuid_000000000007bd08:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd05
	jmp uuid_000000000007bd07
uuid_000000000007bd05:
	movb $1, -928(%rbp)
uuid_000000000007bd07:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007bd0a:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007bd0d:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd42
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd17
	jmp uuid_000000000007bd19
uuid_000000000007bd17:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_000000000007bd14
	jmp uuid_000000000007bd16
uuid_000000000007bd14:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd11
	jmp uuid_000000000007bd13
uuid_000000000007bd11:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd0e
	jmp uuid_000000000007bd10
uuid_000000000007bd0e:
	movb $1, -1184(%rbp)
uuid_000000000007bd10:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007bd13:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007bd16:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007bd19:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
	mov -1184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd3f
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd20
	jmp uuid_000000000007bd22
uuid_000000000007bd20:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd1d
	jmp uuid_000000000007bd1f
uuid_000000000007bd1d:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd1a
	jmp uuid_000000000007bd1c
uuid_000000000007bd1a:
	movb $1, -1472(%rbp)
uuid_000000000007bd1c:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007bd1f:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007bd22:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
	mov -1472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd3c
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd29
	jmp uuid_000000000007bd2b
uuid_000000000007bd29:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd26
	jmp uuid_000000000007bd28
uuid_000000000007bd26:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd23
	jmp uuid_000000000007bd25
uuid_000000000007bd23:
	movb $1, -1728(%rbp)
uuid_000000000007bd25:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007bd28:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007bd2b:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
	mov -1728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd39
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd32
	jmp uuid_000000000007bd34
uuid_000000000007bd32:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd2f
	jmp uuid_000000000007bd31
uuid_000000000007bd2f:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007bd2c
	jmp uuid_000000000007bd2e
uuid_000000000007bd2c:
	movb $1, -1984(%rbp)
uuid_000000000007bd2e:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007bd31:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007bd34:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
	mov -1984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd36
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bd35
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd38
uuid_000000000007bd36:
#call function substitute : Arrow<Cons<Context,Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTokenConsTokenContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bd38:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_000000000007bd3b
uuid_000000000007bd39:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bd3b:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_000000000007bd3e
uuid_000000000007bd3c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bd3e:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_000000000007bd41
uuid_000000000007bd3f:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bd41:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_000000000007bd44
uuid_000000000007bd42:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bd44:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007bd47
uuid_000000000007bd45:
uuid_000000000007bd02:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd03
	jmp uuid_000000000007bd04
uuid_000000000007bd03:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcf5
	jmp uuid_000000000007bcf7
uuid_000000000007bcf5:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007bcf2
	jmp uuid_000000000007bcf4
uuid_000000000007bcf2:
	push %RBP
	mov -960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bcef
	jmp uuid_000000000007bcf1
uuid_000000000007bcef:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcec
	jmp uuid_000000000007bcee
uuid_000000000007bcec:
	movb $1, -1048(%rbp)
uuid_000000000007bcee:
	mov -1160(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007bcf1:
	mov -1144(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007bcf4:
	mov -1064(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007bcf7:
	mov -1056(%RBP),%RSP
	add $-1256, %RSP
	mov -1048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcff
	push %RBP
	jmp uuid_000000000007bcfc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bcfb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bcfe
uuid_000000000007bcfc:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bcfe:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
	jmp uuid_000000000007bd01
uuid_000000000007bcff:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcf8
	movq -1256(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007bcfa
uuid_000000000007bcf8:
	movq -1136(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -184(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bcfa:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007bd01:
	mov -944(%RBP),%RSP
	add $-1264, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bd02
uuid_000000000007bd04:
uuid_000000000007bd47:
	mov -728(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007bd4a
uuid_000000000007bd48:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	pushq $4
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007bd4a:
	mov -600(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007bd4d
uuid_000000000007bd4b:
uuid_000000000007bd4d:
	mov -488(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007bd50
uuid_000000000007bd4e:
uuid_000000000007bd50:
	mov -408(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007bd53
uuid_000000000007bd51:
uuid_000000000007bd53:
	mov -328(%RBP),%RSP
	add $-400, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
apply_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd5c
	jmp uuid_000000000007bd5e
uuid_000000000007bd5c:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd59
	jmp uuid_000000000007bd5b
uuid_000000000007bd59:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd56
	jmp uuid_000000000007bd58
uuid_000000000007bd56:
	movb $1, -240(%rbp)
uuid_000000000007bd58:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007bd5b:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007bd5e:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd84
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd77
	jmp uuid_000000000007bd79
uuid_000000000007bd77:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd6e
	jmp uuid_000000000007bd70
uuid_000000000007bd6e:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd65
	jmp uuid_000000000007bd67
uuid_000000000007bd65:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd62
	jmp uuid_000000000007bd64
uuid_000000000007bd62:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007bd5f
	jmp uuid_000000000007bd61
uuid_000000000007bd5f:
	movb $1, -480(%rbp)
uuid_000000000007bd61:
	mov -544(%RBP),%RSP
	add $-568, %RSP
uuid_000000000007bd64:
	mov -496(%RBP),%RSP
	add $-568, %RSP
uuid_000000000007bd67:
	mov -488(%RBP),%RSP
	add $-568, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd6b
	jmp uuid_000000000007bd6d
uuid_000000000007bd6b:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007bd68
	jmp uuid_000000000007bd6a
uuid_000000000007bd68:
	movb $1, -416(%rbp)
uuid_000000000007bd6a:
	mov -576(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007bd6d:
	mov -432(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007bd70:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd74
	jmp uuid_000000000007bd76
uuid_000000000007bd74:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd71
	jmp uuid_000000000007bd73
uuid_000000000007bd71:
	movb $1, -352(%rbp)
uuid_000000000007bd73:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007bd76:
	mov -368(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007bd79:
	mov -360(%RBP),%RSP
	add $-616, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd81
	push %RBP
	jmp uuid_000000000007bd7e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bd7d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd80
uuid_000000000007bd7e:
uuid_000000000007bd80:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007bd83
uuid_000000000007bd81:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd7a
	jmp uuid_000000000007bd7c
uuid_000000000007bd7a:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007bd7c:
	mov -624(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007bd83:
	mov -320(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007bd86
uuid_000000000007bd84:
#call function + : Arrow<Cons<List<Type>,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowListTypeConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007bd86:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	subq $40, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
reduce_SB_plural_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
uuid_000000000007bd9b:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd9c
	jmp uuid_000000000007bd9d
uuid_000000000007bd9c:
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd91
	jmp uuid_000000000007bd93
uuid_000000000007bd91:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd8e
	jmp uuid_000000000007bd90
uuid_000000000007bd8e:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_000000000007bd8b
	jmp uuid_000000000007bd8d
uuid_000000000007bd8b:
	movb $1, -224(%rbp)
uuid_000000000007bd8d:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007bd90:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007bd93:
	mov -232(%RBP),%RSP
	add $-312, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd98
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bd97
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd9a
uuid_000000000007bd98:
	push %RBP
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd94
	jmp uuid_000000000007bd96
uuid_000000000007bd94:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007bd96:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	movq -280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -96(%rbp)
uuid_000000000007bd9a:
	mov -176(%RBP),%RSP
	add $-320, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bd9b
uuid_000000000007bd9d:
	push %RBP
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd9e
	jmp uuid_000000000007bda0
uuid_000000000007bd9e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bda0:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007bdc7:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdc8
	jmp uuid_000000000007bdc9
uuid_000000000007bdc8:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bda7
	jmp uuid_000000000007bda9
uuid_000000000007bda7:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bda4
	jmp uuid_000000000007bda6
uuid_000000000007bda4:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007bda1
	jmp uuid_000000000007bda3
uuid_000000000007bda1:
	movb $1, -232(%rbp)
uuid_000000000007bda3:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bda6:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bda9:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bdc4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bdc3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdc6
uuid_000000000007bdc4:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_000000000007bdbd:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdbe
	jmp uuid_000000000007bdbf
uuid_000000000007bdbe:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdb0
	jmp uuid_000000000007bdb2
uuid_000000000007bdb0:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdad
	jmp uuid_000000000007bdaf
uuid_000000000007bdad:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007bdaa
	jmp uuid_000000000007bdac
uuid_000000000007bdaa:
	movb $1, -456(%rbp)
uuid_000000000007bdac:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007bdaf:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007bdb2:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bdba
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bdb9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdbc
uuid_000000000007bdba:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdb6
	jmp uuid_000000000007bdb8
uuid_000000000007bdb6:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdb3
	jmp uuid_000000000007bdb5
uuid_000000000007bdb3:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007bdb5:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007bdb8:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_000000000007bdbc:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bdbd
uuid_000000000007bdbf:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdc0
	jmp uuid_000000000007bdc2
uuid_000000000007bdc0:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007bdc2:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bdc6:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bdc7
uuid_000000000007bdc9:
	movq -88(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -72(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007bdf0:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdf1
	jmp uuid_000000000007bdf2
uuid_000000000007bdf1:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdd0
	jmp uuid_000000000007bdd2
uuid_000000000007bdd0:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdcd
	jmp uuid_000000000007bdcf
uuid_000000000007bdcd:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007bdca
	jmp uuid_000000000007bdcc
uuid_000000000007bdca:
	movb $1, -232(%rbp)
uuid_000000000007bdcc:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bdcf:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bdd2:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bded
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bdec
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdef
uuid_000000000007bded:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_000000000007bde6:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bde7
	jmp uuid_000000000007bde8
uuid_000000000007bde7:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdd9
	jmp uuid_000000000007bddb
uuid_000000000007bdd9:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdd6
	jmp uuid_000000000007bdd8
uuid_000000000007bdd6:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007bdd3
	jmp uuid_000000000007bdd5
uuid_000000000007bdd3:
	movb $1, -456(%rbp)
uuid_000000000007bdd5:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007bdd8:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007bddb:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bde3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bde2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bde5
uuid_000000000007bde3:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bddf
	jmp uuid_000000000007bde1
uuid_000000000007bddf:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bddc
	jmp uuid_000000000007bdde
uuid_000000000007bddc:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007bdde:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007bde1:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_000000000007bde5:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bde6
uuid_000000000007bde8:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bde9
	jmp uuid_000000000007bdeb
uuid_000000000007bde9:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007bdeb:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bdef:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bdf0
uuid_000000000007bdf2:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bdf6
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdf3
	jmp uuid_000000000007bdf5
uuid_000000000007bdf3:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007bdf5:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007bdf8
uuid_000000000007bdf6:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007bdf8:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007be3c:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be3d
	jmp uuid_000000000007be3e
uuid_000000000007be3d:
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be39
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be05
	jmp uuid_000000000007be07
uuid_000000000007be05:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007be02
	jmp uuid_000000000007be04
uuid_000000000007be02:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	jmp uuid_000000000007bdff
	jmp uuid_000000000007be01
uuid_000000000007bdff:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bdfc
	jmp uuid_000000000007bdfe
uuid_000000000007bdfc:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdf9
	jmp uuid_000000000007bdfb
uuid_000000000007bdf9:
	movb $1, -688(%rbp)
uuid_000000000007bdfb:
	mov -832(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007bdfe:
	mov -816(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007be01:
	mov -784(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007be04:
	mov -704(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007be07:
	mov -696(%RBP),%RSP
	add $-952, %RSP
	mov -688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be36
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007be35
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be38
uuid_000000000007be36:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be32
	jmp uuid_000000000007be34
uuid_000000000007be32:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_000000000007be08
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be09
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	jmp uuid_000000000007be0b
uuid_000000000007be09:
uuid_000000000007be0b:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be2f
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be2c
	jmp uuid_000000000007be2e
uuid_000000000007be2c:
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	push %RBP
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be1e
	jmp uuid_000000000007be20
uuid_000000000007be1e:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be15
	jmp uuid_000000000007be17
uuid_000000000007be15:
	push %RBP
	jmp uuid_000000000007be12
	jmp uuid_000000000007be14
uuid_000000000007be12:
	push %RBP
	jmp uuid_000000000007be0f
	jmp uuid_000000000007be11
uuid_000000000007be0f:
	push %RBP
	jmp uuid_000000000007be0c
	jmp uuid_000000000007be0e
uuid_000000000007be0c:
	movb $1, -1264(%rbp)
uuid_000000000007be0e:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007be11:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007be14:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007be17:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be1b
	jmp uuid_000000000007be1d
uuid_000000000007be1b:
	push %RBP
	jmp uuid_000000000007be18
	jmp uuid_000000000007be1a
uuid_000000000007be18:
	movb $1, -1168(%rbp)
uuid_000000000007be1a:
	mov -1304(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007be1d:
	mov -1184(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007be20:
	mov -1176(%RBP),%RSP
	add $-1304, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be29
	push %RBP
	jmp uuid_000000000007be26
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007be25
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be28
uuid_000000000007be26:
uuid_000000000007be28:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007be2b
uuid_000000000007be29:
#call function cons : Arrow<Cons<StackToSpecialize,List<StackToSpecialize>>,List<StackToSpecialize>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007be2b:
	mov -1088(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007be2e:
	mov -1008(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_000000000007be31
uuid_000000000007be2f:
uuid_000000000007be31:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007be34:
	mov -960(%RBP),%RSP
	add $-1000, %RSP
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -192(%rbp)
uuid_000000000007be38:
	mov -560(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007be3b
uuid_000000000007be39:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007be3b:
	mov -432(%RBP),%RSP
	add $-552, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007be3c
uuid_000000000007be3e:
	mov %rbp, %rsp
	sub $184, %rsp
	ret
unify_SB_hint_CL_ArrowTypeConsTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be57
	jmp uuid_000000000007be59
uuid_000000000007be57:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be45
	jmp uuid_000000000007be47
uuid_000000000007be45:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be42
	jmp uuid_000000000007be44
uuid_000000000007be42:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be3f
	jmp uuid_000000000007be41
uuid_000000000007be3f:
	movb $1, -232(%rbp)
uuid_000000000007be41:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007be44:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007be47:
	mov -240(%RBP),%RSP
	add $-304, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be54
	jmp uuid_000000000007be56
uuid_000000000007be54:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be4e
	jmp uuid_000000000007be50
uuid_000000000007be4e:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be4b
	jmp uuid_000000000007be4d
uuid_000000000007be4b:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be48
	jmp uuid_000000000007be4a
uuid_000000000007be48:
	movb $1, -344(%rbp)
uuid_000000000007be4a:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007be4d:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007be50:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be51
	jmp uuid_000000000007be53
uuid_000000000007be51:
	movb $1, -184(%rbp)
uuid_000000000007be53:
	mov -312(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007be56:
	mov -200(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007be59:
	mov -192(%RBP),%RSP
	add $-416, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be76
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be6c
	jmp uuid_000000000007be6e
uuid_000000000007be6c:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be63
	jmp uuid_000000000007be65
uuid_000000000007be63:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be60
	jmp uuid_000000000007be62
uuid_000000000007be60:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be5d
	jmp uuid_000000000007be5f
uuid_000000000007be5d:
	movb $1, -536(%rbp)
uuid_000000000007be5f:
	mov -584(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007be62:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007be65:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be69
	jmp uuid_000000000007be6b
uuid_000000000007be69:
	push %RBP
	jmp uuid_000000000007be66
	jmp uuid_000000000007be68
uuid_000000000007be66:
	movb $1, -488(%rbp)
uuid_000000000007be68:
	mov -616(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007be6b:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007be6e:
	mov -496(%RBP),%RSP
	add $-616, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be73
	push %RBP
	jmp uuid_000000000007be70
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007be6f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be72
uuid_000000000007be70:
uuid_000000000007be72:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007be75
uuid_000000000007be73:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007be75:
	mov -424(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007be78
uuid_000000000007be76:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be5a
	pushq -304(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_000000000007be5c
uuid_000000000007be5a:
	movq -24(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007be5c:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007be78:
	mov -120(%RBP),%RSP
	add $-424, %RSP
	subq $24, %rsp
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_hint_CL_ArrowListTypeConsListTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be8b
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be81
	jmp uuid_000000000007be83
uuid_000000000007be81:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be7e
	jmp uuid_000000000007be80
uuid_000000000007be7e:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_000000000007be7b
	jmp uuid_000000000007be7d
uuid_000000000007be7b:
	movb $1, -216(%rbp)
uuid_000000000007be7d:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007be80:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007be83:
	mov -224(%RBP),%RSP
	add $-304, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be88
	push %RBP
	jmp uuid_000000000007be85
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007be84
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be87
uuid_000000000007be85:
uuid_000000000007be87:
	mov -312(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007be8a
uuid_000000000007be88:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007be8a:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007be8d
uuid_000000000007be8b:
uuid_000000000007be8d:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType:
#call function mark-class-exists : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_class_SB_exists_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bea7
	jmp uuid_000000000007bea9
uuid_000000000007bea7:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bea4
	jmp uuid_000000000007bea6
uuid_000000000007bea4:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be9e
	jmp uuid_000000000007bea0
uuid_000000000007be9e:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be95
	jmp uuid_000000000007be97
uuid_000000000007be95:
	push %RBP
	jmp uuid_000000000007be92
	jmp uuid_000000000007be94
uuid_000000000007be92:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_000000000007be8e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be8f
	jmp uuid_000000000007be91
uuid_000000000007be8f:
	movb $1, -552(%rbp)
uuid_000000000007be91:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007be94:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007be97:
	mov -560(%RBP),%RSP
	add $-584, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be9b
	jmp uuid_000000000007be9d
uuid_000000000007be9b:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be98
	jmp uuid_000000000007be9a
uuid_000000000007be98:
	movb $1, -456(%rbp)
uuid_000000000007be9a:
	mov -592(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007be9d:
	mov -472(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007bea0:
	mov -464(%RBP),%RSP
	add $-664, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bea1
	jmp uuid_000000000007bea3
uuid_000000000007bea1:
	movb $1, -280(%rbp)
uuid_000000000007bea3:
	mov -376(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007bea6:
	mov -296(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007bea9:
	mov -288(%RBP),%RSP
	add $-664, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bee6
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	jmp uuid_000000000007bee3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bee2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bee5
uuid_000000000007bee3:
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
	push %RBP
	movq -104(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bedf
	jmp uuid_000000000007bee1
uuid_000000000007bedf:
	pushq $uuid_000000000007a365
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beb0
	jmp uuid_000000000007beb2
uuid_000000000007beb0:
	push %RBP
	jmp uuid_000000000007bead
	jmp uuid_000000000007beaf
uuid_000000000007bead:
	push %RBP
	mov -848(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007beaa
	jmp uuid_000000000007beac
uuid_000000000007beaa:
	movb $1, -920(%rbp)
uuid_000000000007beac:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007beaf:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007beb2:
	mov -928(%RBP),%RSP
	add $-952, %RSP
	mov -920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007becc
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bec2
	jmp uuid_000000000007bec4
uuid_000000000007bec2:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bebf
	jmp uuid_000000000007bec1
uuid_000000000007bebf:
	push %RBP
	mov -1016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beb9
	jmp uuid_000000000007bebb
uuid_000000000007beb9:
	push %RBP
	jmp uuid_000000000007beb6
	jmp uuid_000000000007beb8
uuid_000000000007beb6:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007beb3
	jmp uuid_000000000007beb5
uuid_000000000007beb3:
	movb $1, -1216(%rbp)
uuid_000000000007beb5:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007beb8:
	mov -1232(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007bebb:
	mov -1224(%RBP),%RSP
	add $-1248, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bebc
	jmp uuid_000000000007bebe
uuid_000000000007bebc:
	movb $1, -1040(%rbp)
uuid_000000000007bebe:
	mov -1136(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007bec1:
	mov -1056(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007bec4:
	mov -1048(%RBP),%RSP
	add $-1248, %RSP
	mov -1040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bec9
	push %RBP
	jmp uuid_000000000007bec6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bec5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bec8
uuid_000000000007bec6:
uuid_000000000007bec8:
	mov -1256(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_000000000007becb
uuid_000000000007bec9:
	movq -1248(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -1248(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_000000000007becb:
	mov -960(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007bece
uuid_000000000007becc:
	movq -952(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -952(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_000000000007bece:
	mov -840(%RBP),%RSP
	add $-952, %RSP
	push %RBP
	mov -760(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007bedc
	jmp uuid_000000000007bede
uuid_000000000007bedc:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bed5
	jmp uuid_000000000007bed7
uuid_000000000007bed5:
	push %RBP
	jmp uuid_000000000007bed2
	jmp uuid_000000000007bed4
uuid_000000000007bed2:
	push %RBP
	mov -1000(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007becf
	jmp uuid_000000000007bed1
uuid_000000000007becf:
	movb $1, -1024(%rbp)
uuid_000000000007bed1:
	mov -1048(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007bed4:
	mov -1040(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007bed7:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bed9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bed8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bedb
uuid_000000000007bed9:
#call function has-only-child : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call has_SB_only_SB_child_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bedb:
	mov -992(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007bede:
	mov -960(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007bee1:
	mov -752(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007bee5:
	mov -672(%RBP),%RSP
	add $-1056, %RSP
	jmp uuid_000000000007bee8
uuid_000000000007bee6:
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	movq -104(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
uuid_000000000007bee8:
	mov -200(%RBP),%RSP
	add $-680, %RSP
	mov -120(%rbp), %RAX
	mov %rbp, %rsp
	sub $112, %rsp
	ret
arity_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bef8
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bef1
	jmp uuid_000000000007bef3
uuid_000000000007bef1:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007beee
	jmp uuid_000000000007bef0
uuid_000000000007beee:
	push %RBP
	jmp uuid_000000000007beeb
	jmp uuid_000000000007beed
uuid_000000000007beeb:
	movb $1, -200(%rbp)
uuid_000000000007beed:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bef0:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bef3:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bef5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bef4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bef7
uuid_000000000007bef5:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007bef7:
	mov -152(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007befa
uuid_000000000007bef8:
uuid_000000000007befa:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
arity_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf01
	jmp uuid_000000000007bf03
uuid_000000000007bf01:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007befe
	jmp uuid_000000000007bf00
uuid_000000000007befe:
	push %RBP
	jmp uuid_000000000007befb
	jmp uuid_000000000007befd
uuid_000000000007befb:
	movb $1, -104(%rbp)
uuid_000000000007befd:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007bf00:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007bf03:
	mov -112(%RBP),%RSP
	add $-168, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf08
	push %RBP
	jmp uuid_000000000007bf05
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bf04
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf07
uuid_000000000007bf05:
uuid_000000000007bf07:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007bf0a
uuid_000000000007bf08:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007bf0a:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_arity_CL_ArrowU64Type:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf23
	jmp uuid_000000000007bf25
uuid_000000000007bf23:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf1a
	jmp uuid_000000000007bf1c
uuid_000000000007bf1a:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf11
	jmp uuid_000000000007bf13
uuid_000000000007bf11:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf0e
	jmp uuid_000000000007bf10
uuid_000000000007bf0e:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007bf0b
	jmp uuid_000000000007bf0d
uuid_000000000007bf0b:
	movb $1, -232(%rbp)
uuid_000000000007bf0d:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bf10:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bf13:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf17
	jmp uuid_000000000007bf19
uuid_000000000007bf17:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	jmp uuid_000000000007bf14
	jmp uuid_000000000007bf16
uuid_000000000007bf14:
	movb $1, -168(%rbp)
uuid_000000000007bf16:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007bf19:
	mov -184(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007bf1c:
	mov -176(%RBP),%RSP
	add $-352, %RSP
	mov -168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf20
	jmp uuid_000000000007bf22
uuid_000000000007bf20:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf1d
	jmp uuid_000000000007bf1f
uuid_000000000007bf1d:
	movb $1, -104(%rbp)
uuid_000000000007bf1f:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bf22:
	mov -120(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bf25:
	mov -112(%RBP),%RSP
	add $-368, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf2a
	push %RBP
	jmp uuid_000000000007bf27
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bf26
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf29
uuid_000000000007bf27:
uuid_000000000007bf29:
	mov -376(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007bf2c
uuid_000000000007bf2a:
#call function cons-arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call cons_SB_arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bf2c:
	mov -72(%RBP),%RSP
	add $-368, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parse_SB_field_SB_of_CL_ArrowTupleTypeStringString:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $uuid_000000000007a365
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007bf30:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $0, %R14B
	cmpb %R14B,%R13B
	setne %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf31
	jmp uuid_000000000007bf32
uuid_000000000007bf31:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $58, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf2d
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007bf2f
uuid_000000000007bf2d:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	inc %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	movq $uuid_000000000007a365, -8(%rbp)
uuid_000000000007bf2f:
	mov -80(%RBP),%RSP
	add $-80, %RSP
	add $8, %RSP
	jmp uuid_000000000007bf30
uuid_000000000007bf32:
	pushq -48(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	subq $40, %rsp
	pushq 40(%rsp)
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
implicit_SB_tail_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf4b
	jmp uuid_000000000007bf4d
uuid_000000000007bf4b:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf42
	jmp uuid_000000000007bf44
uuid_000000000007bf42:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf39
	jmp uuid_000000000007bf3b
uuid_000000000007bf39:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf36
	jmp uuid_000000000007bf38
uuid_000000000007bf36:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_000000000007bf33
	jmp uuid_000000000007bf35
uuid_000000000007bf33:
	movb $1, -224(%rbp)
uuid_000000000007bf35:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007bf38:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007bf3b:
	mov -232(%RBP),%RSP
	add $-312, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf3f
	jmp uuid_000000000007bf41
uuid_000000000007bf3f:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007bf3c
	jmp uuid_000000000007bf3e
uuid_000000000007bf3c:
	movb $1, -160(%rbp)
uuid_000000000007bf3e:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007bf41:
	mov -176(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007bf44:
	mov -168(%RBP),%RSP
	add $-344, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf48
	jmp uuid_000000000007bf4a
uuid_000000000007bf48:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf45
	jmp uuid_000000000007bf47
uuid_000000000007bf45:
	movb $1, -96(%rbp)
uuid_000000000007bf47:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007bf4a:
	mov -112(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007bf4d:
	mov -104(%RBP),%RSP
	add $-360, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf52
	push %RBP
	jmp uuid_000000000007bf4f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bf4e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf51
uuid_000000000007bf4f:
uuid_000000000007bf51:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007bf54
uuid_000000000007bf52:
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007bf54:
	mov -64(%RBP),%RSP
	add $-360, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf56
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf55
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf58
uuid_000000000007bf56:
uuid_000000000007bf58:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST:
#call function find-alias-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007bf7b:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf7c
	jmp uuid_000000000007bf7d
uuid_000000000007bf7c:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf78
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf65
	jmp uuid_000000000007bf67
uuid_000000000007bf65:
	push %RBP
	jmp uuid_000000000007bf62
	jmp uuid_000000000007bf64
uuid_000000000007bf62:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_000000000007bf5f
	jmp uuid_000000000007bf61
uuid_000000000007bf5f:
	push %RBP
	mov -504(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bf5c
	jmp uuid_000000000007bf5e
uuid_000000000007bf5c:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf59
	jmp uuid_000000000007bf5b
uuid_000000000007bf59:
	movb $1, -616(%rbp)
uuid_000000000007bf5b:
	mov -688(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bf5e:
	mov -672(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bf61:
	mov -640(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bf64:
	mov -632(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bf67:
	mov -624(%RBP),%RSP
	add $-808, %RSP
	mov -616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf75
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bf74
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf77
uuid_000000000007bf75:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf71
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
	jmp uuid_000000000007bf73
uuid_000000000007bf71:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf6b
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_000000000007bf6d
uuid_000000000007bf6b:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf68
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_000000000007bf6a
uuid_000000000007bf68:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007bf6a:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bf6d:
	mov -824(%RBP),%RSP
	add $-832, %RSP
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf6e
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	jmp uuid_000000000007bf70
uuid_000000000007bf6e:
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
uuid_000000000007bf70:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007bf73:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007bf77:
	mov -488(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007bf7a
uuid_000000000007bf78:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
uuid_000000000007bf7a:
	mov -360(%RBP),%RSP
	add $-480, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007bf7b
uuid_000000000007bf7d:
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typecheck_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_000000000007bf8b:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf8c
	jmp uuid_000000000007bf8d
uuid_000000000007bf8c:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf84
	jmp uuid_000000000007bf86
uuid_000000000007bf84:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf81
	jmp uuid_000000000007bf83
uuid_000000000007bf81:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf7e
	jmp uuid_000000000007bf80
uuid_000000000007bf7e:
	movb $1, -312(%rbp)
uuid_000000000007bf80:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007bf83:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007bf86:
	mov -320(%RBP),%RSP
	add $-480, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf88
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bf87
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf8a
uuid_000000000007bf88:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007bf8a:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bf8b
uuid_000000000007bf8d:
uuid_000000000007bf9b:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf9c
	jmp uuid_000000000007bf9d
uuid_000000000007bf9c:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf94
	jmp uuid_000000000007bf96
uuid_000000000007bf94:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf91
	jmp uuid_000000000007bf93
uuid_000000000007bf91:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf8e
	jmp uuid_000000000007bf90
uuid_000000000007bf8e:
	movb $1, -312(%rbp)
uuid_000000000007bf90:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007bf93:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007bf96:
	mov -320(%RBP),%RSP
	add $-480, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf98
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bf97
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf9a
uuid_000000000007bf98:
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -480(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007bf9a:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bf9b
uuid_000000000007bf9d:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfc2:
#call function non-zero : Arrow<List<StackToSpecialize>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bfc3
	jmp uuid_000000000007bfc4
uuid_000000000007bfc3:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfbb
	jmp uuid_000000000007bfbd
uuid_000000000007bfbb:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfb8
	jmp uuid_000000000007bfba
uuid_000000000007bfb8:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfb2
	jmp uuid_000000000007bfb4
uuid_000000000007bfb2:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007bfaf
	jmp uuid_000000000007bfb1
uuid_000000000007bfaf:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_000000000007bfac
	jmp uuid_000000000007bfae
uuid_000000000007bfac:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007bfa9
	jmp uuid_000000000007bfab
uuid_000000000007bfa9:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bfa6
	jmp uuid_000000000007bfa8
uuid_000000000007bfa6:
	movb $1, -984(%rbp)
uuid_000000000007bfa8:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007bfab:
	mov -1160(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007bfae:
	mov -1032(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007bfb1:
	mov -1000(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007bfb4:
	mov -992(%RBP),%RSP
	add $-1200, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfb5
	jmp uuid_000000000007bfb7
uuid_000000000007bfb5:
	movb $1, -568(%rbp)
uuid_000000000007bfb7:
	mov -792(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007bfba:
	mov -584(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007bfbd:
	mov -576(%RBP),%RSP
	add $-1200, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfbf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007bfbe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bfc1
uuid_000000000007bfbf:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r14
	movq -784(%rbp), %r15
	movq %r15, 0(%r14)
	movq -776(%rbp), %r15
	movq %r15, 8(%r14)
	movq -768(%rbp), %r15
	movq %r15, 16(%r14)
	movq -760(%rbp), %r15
	movq %r15, 24(%r14)
	movq -752(%rbp), %r15
	movq %r15, 32(%r14)
	movq -744(%rbp), %r15
	movq %r15, 40(%r14)
	movq -736(%rbp), %r15
	movq %r15, 48(%r14)
	movq -728(%rbp), %r15
	movq %r15, 56(%r14)
	movq -720(%rbp), %r15
	movq %r15, 64(%r14)
	movq -712(%rbp), %r15
	movq %r15, 72(%r14)
	movq -704(%rbp), %r15
	movq %r15, 80(%r14)
	movq -696(%rbp), %r15
	movq %r15, 88(%r14)
	movq -688(%rbp), %r15
	movq %r15, 96(%r14)
	movq -680(%rbp), %r15
	movq %r15, 104(%r14)
	movq -672(%rbp), %r15
	movq %r15, 112(%r14)
	movq -664(%rbp), %r15
	movq %r15, 120(%r14)
	movq -656(%rbp), %r15
	movq %r15, 128(%r14)
	movq -648(%rbp), %r15
	movq %r15, 136(%r14)
	movq -640(%rbp), %r15
	movq %r15, 144(%r14)
	movq -632(%rbp), %r15
	movq %r15, 152(%r14)
	movq -624(%rbp), %r15
	movq %r15, 160(%r14)
	movq -616(%rbp), %r15
	movq %r15, 168(%r14)
	movq -608(%rbp), %r15
	movq %r15, 176(%r14)
	movq -600(%rbp), %r15
	movq %r15, 184(%r14)
	movq -592(%rbp), %r15
	movq %r15, 192(%r14)
#call function specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfc1:
	mov -360(%RBP),%RSP
	add $-1200, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $200, %rsp
	add $184, %rsp
	add $8, %rsp
	add $24, %rsp
	add $120, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bfc2
uuid_000000000007bfc4:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_CL_ArrowTokenConsTokenContext:
	mov -104(%RBP), %RAX
	push %RAX
uuid_000000000007c00e:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c00f
	jmp uuid_000000000007c010
uuid_000000000007c00f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c00b
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfd7
	jmp uuid_000000000007bfd9
uuid_000000000007bfd7:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfcb
	jmp uuid_000000000007bfcd
uuid_000000000007bfcb:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_000000000007bfc8
	jmp uuid_000000000007bfca
uuid_000000000007bfc8:
	push %RBP
	jmp uuid_000000000007bfc5
	jmp uuid_000000000007bfc7
uuid_000000000007bfc5:
	movb $1, -576(%rbp)
uuid_000000000007bfc7:
	mov -656(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007bfca:
	mov -592(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007bfcd:
	mov -584(%RBP),%RSP
	add $-656, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfd4
	jmp uuid_000000000007bfd6
uuid_000000000007bfd4:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bfd1
	jmp uuid_000000000007bfd3
uuid_000000000007bfd1:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfce
	jmp uuid_000000000007bfd0
uuid_000000000007bfce:
	movb $1, -480(%rbp)
uuid_000000000007bfd0:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007bfd3:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007bfd6:
	mov -496(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007bfd9:
	mov -488(%RBP),%RSP
	add $-776, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c008
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfef
	jmp uuid_000000000007bff1
uuid_000000000007bfef:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfe3
	jmp uuid_000000000007bfe5
uuid_000000000007bfe3:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007bfe0
	jmp uuid_000000000007bfe2
uuid_000000000007bfe0:
	push %RBP
	jmp uuid_000000000007bfdd
	jmp uuid_000000000007bfdf
uuid_000000000007bfdd:
	movb $1, -984(%rbp)
uuid_000000000007bfdf:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007bfe2:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007bfe5:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfec
	jmp uuid_000000000007bfee
uuid_000000000007bfec:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bfe9
	jmp uuid_000000000007bfeb
uuid_000000000007bfe9:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfe6
	jmp uuid_000000000007bfe8
uuid_000000000007bfe6:
	movb $1, -888(%rbp)
uuid_000000000007bfe8:
	mov -1088(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007bfeb:
	mov -1072(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007bfee:
	mov -904(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007bff1:
	mov -896(%RBP),%RSP
	add $-1184, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c005
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -1288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bffe
	jmp uuid_000000000007c000
uuid_000000000007bffe:
	push %RBP
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	jmp uuid_000000000007bffb
	jmp uuid_000000000007bffd
uuid_000000000007bffb:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bff8
	jmp uuid_000000000007bffa
uuid_000000000007bff8:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bff5
	jmp uuid_000000000007bff7
uuid_000000000007bff5:
	movb $1, -1296(%rbp)
uuid_000000000007bff7:
	mov -1408(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007bffa:
	mov -1392(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007bffd:
	mov -1312(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007c000:
	mov -1304(%RBP),%RSP
	add $-1504, %RSP
	mov -1296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c002
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c001
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c004
uuid_000000000007c002:
	movq -1504(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c004:
	mov -1192(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_000000000007c007
uuid_000000000007c005:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bff2
	movq -1184(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007bff4
uuid_000000000007bff2:
	movq -1056(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bff4:
	mov -1192(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007c007:
	mov -784(%RBP),%RSP
	add $-1192, %RSP
	jmp uuid_000000000007c00a
uuid_000000000007c008:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bfda
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007bfdc
uuid_000000000007bfda:
	movq -648(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bfdc:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007c00a:
	mov -376(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007c00d
uuid_000000000007c00b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c00d:
	mov -272(%RBP),%RSP
	add $-368, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_000000000007c00e
uuid_000000000007c010:
	subq $56, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $160, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c020
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c019
	jmp uuid_000000000007c01b
uuid_000000000007c019:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c016
	jmp uuid_000000000007c018
uuid_000000000007c016:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007c013
	jmp uuid_000000000007c015
uuid_000000000007c013:
	movb $1, -312(%rbp)
uuid_000000000007c015:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007c018:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007c01b:
	mov -320(%RBP),%RSP
	add $-400, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c01d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c01c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c01f
uuid_000000000007c01d:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c01f:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007c022
uuid_000000000007c020:
uuid_000000000007c022:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $40, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
substitute_CL_ArrowTypeConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c026
	jmp uuid_000000000007c028
uuid_000000000007c026:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c023
	jmp uuid_000000000007c025
uuid_000000000007c023:
	movb $1, -216(%rbp)
uuid_000000000007c025:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c028:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c061
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c04b
	jmp uuid_000000000007c04d
uuid_000000000007c04b:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c048
	jmp uuid_000000000007c04a
uuid_000000000007c048:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c045
	jmp uuid_000000000007c047
uuid_000000000007c045:
	movb $1, -280(%rbp)
uuid_000000000007c047:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c04a:
	mov -296(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c04d:
	mov -288(%RBP),%RSP
	add $-352, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c05e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c054
	jmp uuid_000000000007c056
uuid_000000000007c054:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c051
	jmp uuid_000000000007c053
uuid_000000000007c051:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c04e
	jmp uuid_000000000007c050
uuid_000000000007c04e:
	movb $1, -392(%rbp)
uuid_000000000007c050:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007c053:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007c056:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c05b
	push %RBP
	jmp uuid_000000000007c058
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c057
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c05a
uuid_000000000007c058:
uuid_000000000007c05a:
	mov -472(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007c05d
uuid_000000000007c05b:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c05d:
	mov -360(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007c060
uuid_000000000007c05e:
	pushq -352(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c060:
	mov -248(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007c063
uuid_000000000007c061:
uuid_000000000007c042:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c043
	jmp uuid_000000000007c044
uuid_000000000007c043:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c03f
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c035
	jmp uuid_000000000007c037
uuid_000000000007c035:
	push %RBP
	jmp uuid_000000000007c032
	jmp uuid_000000000007c034
uuid_000000000007c032:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007c02f
	jmp uuid_000000000007c031
uuid_000000000007c02f:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c02c
	jmp uuid_000000000007c02e
uuid_000000000007c02c:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c029
	jmp uuid_000000000007c02b
uuid_000000000007c029:
	movb $1, -624(%rbp)
uuid_000000000007c02b:
	mov -696(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c02e:
	mov -680(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c031:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c034:
	mov -640(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c037:
	mov -632(%RBP),%RSP
	add $-816, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c03c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c03b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c03e
uuid_000000000007c03c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c038
	movq -816(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c03a
uuid_000000000007c038:
	movq -672(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -128(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c03a:
	mov -824(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007c03e:
	mov -496(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007c041
uuid_000000000007c03f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c041:
	mov -368(%RBP),%RSP
	add $-488, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007c042
uuid_000000000007c044:
uuid_000000000007c063:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c073
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c06c
	jmp uuid_000000000007c06e
uuid_000000000007c06c:
	push %RBP
	mov -272(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c069
	jmp uuid_000000000007c06b
uuid_000000000007c069:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	jmp uuid_000000000007c066
	jmp uuid_000000000007c068
uuid_000000000007c066:
	movb $1, -288(%rbp)
uuid_000000000007c068:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c06b:
	mov -304(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c06e:
	mov -296(%RBP),%RSP
	add $-376, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c070
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c06f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c072
uuid_000000000007c070:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007c072:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007c075
uuid_000000000007c073:
uuid_000000000007c075:
	mov -192(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
substitute_CL_ArrowTypeConsTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c079
	jmp uuid_000000000007c07b
uuid_000000000007c079:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c076
	jmp uuid_000000000007c078
uuid_000000000007c076:
	movb $1, -192(%rbp)
uuid_000000000007c078:
	mov -208(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007c07b:
	mov -200(%RBP),%RSP
	add $-216, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0e4
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0ce
	jmp uuid_000000000007c0d0
uuid_000000000007c0ce:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0cb
	jmp uuid_000000000007c0cd
uuid_000000000007c0cb:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c0c8
	jmp uuid_000000000007c0ca
uuid_000000000007c0c8:
	movb $1, -256(%rbp)
uuid_000000000007c0ca:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007c0cd:
	mov -272(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007c0d0:
	mov -264(%RBP),%RSP
	add $-328, %RSP
	mov -256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0e1
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0d7
	jmp uuid_000000000007c0d9
uuid_000000000007c0d7:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0d4
	jmp uuid_000000000007c0d6
uuid_000000000007c0d4:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0d1
	jmp uuid_000000000007c0d3
uuid_000000000007c0d1:
	movb $1, -368(%rbp)
uuid_000000000007c0d3:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c0d6:
	mov -384(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c0d9:
	mov -376(%RBP),%RSP
	add $-440, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0de
	push %RBP
	jmp uuid_000000000007c0db
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c0da
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0dd
uuid_000000000007c0db:
uuid_000000000007c0dd:
	mov -448(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007c0e0
uuid_000000000007c0de:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007c0e0:
	mov -336(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007c0e3
uuid_000000000007c0e1:
	pushq -328(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007c0e3:
	mov -224(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007c0e6
uuid_000000000007c0e4:
uuid_000000000007c0c5:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0c6
	jmp uuid_000000000007c0c7
uuid_000000000007c0c6:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0c2
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c08e
	jmp uuid_000000000007c090
uuid_000000000007c08e:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c082
	jmp uuid_000000000007c084
uuid_000000000007c082:
	push %RBP
	jmp uuid_000000000007c07f
	jmp uuid_000000000007c081
uuid_000000000007c07f:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c07c
	jmp uuid_000000000007c07e
uuid_000000000007c07c:
	movb $1, -624(%rbp)
uuid_000000000007c07e:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007c081:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007c084:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c08b
	jmp uuid_000000000007c08d
uuid_000000000007c08b:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c088
	jmp uuid_000000000007c08a
uuid_000000000007c088:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c085
	jmp uuid_000000000007c087
uuid_000000000007c085:
	movb $1, -528(%rbp)
uuid_000000000007c087:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c08a:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c08d:
	mov -544(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c090:
	mov -536(%RBP),%RSP
	add $-776, %RSP
	mov -528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0bf
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0a6
	jmp uuid_000000000007c0a8
uuid_000000000007c0a6:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c09a
	jmp uuid_000000000007c09c
uuid_000000000007c09a:
	push %RBP
	jmp uuid_000000000007c097
	jmp uuid_000000000007c099
uuid_000000000007c097:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c094
	jmp uuid_000000000007c096
uuid_000000000007c094:
	movb $1, -984(%rbp)
uuid_000000000007c096:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
uuid_000000000007c099:
	mov -1000(%RBP),%RSP
	add $-1016, %RSP
uuid_000000000007c09c:
	mov -992(%RBP),%RSP
	add $-1016, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0a3
	jmp uuid_000000000007c0a5
uuid_000000000007c0a3:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c0a0
	jmp uuid_000000000007c0a2
uuid_000000000007c0a0:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c09d
	jmp uuid_000000000007c09f
uuid_000000000007c09d:
	movb $1, -888(%rbp)
uuid_000000000007c09f:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007c0a2:
	mov -1024(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007c0a5:
	mov -904(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007c0a8:
	mov -896(%RBP),%RSP
	add $-1136, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0bc
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0b5
	jmp uuid_000000000007c0b7
uuid_000000000007c0b5:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	jmp uuid_000000000007c0b2
	jmp uuid_000000000007c0b4
uuid_000000000007c0b2:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c0af
	jmp uuid_000000000007c0b1
uuid_000000000007c0af:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0ac
	jmp uuid_000000000007c0ae
uuid_000000000007c0ac:
	movb $1, -1248(%rbp)
uuid_000000000007c0ae:
	mov -1360(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c0b1:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c0b4:
	mov -1264(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c0b7:
	mov -1256(%RBP),%RSP
	add $-1456, %RSP
	mov -1248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0b9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c0b8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0bb
uuid_000000000007c0b9:
	movq -1456(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c0bb:
	mov -1144(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007c0be
uuid_000000000007c0bc:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0a9
	movq -1136(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c0ab
uuid_000000000007c0a9:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0ab:
	mov -1144(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007c0be:
	mov -784(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_000000000007c0c1
uuid_000000000007c0bf:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c091
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c093
uuid_000000000007c091:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c093:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007c0c1:
	mov -424(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007c0c4
uuid_000000000007c0c2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0c4:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_000000000007c0c5
uuid_000000000007c0c7:
uuid_000000000007c0e6:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	subq $24, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
substitute_SB_lhs_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c117
	jmp uuid_000000000007c119
uuid_000000000007c117:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c10e
	jmp uuid_000000000007c110
uuid_000000000007c10e:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0fc
	jmp uuid_000000000007c0fe
uuid_000000000007c0fc:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0ea
	jmp uuid_000000000007c0ec
uuid_000000000007c0ea:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_000000000007c0e7
	jmp uuid_000000000007c0e9
uuid_000000000007c0e7:
	movb $1, -648(%rbp)
uuid_000000000007c0e9:
	mov -664(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007c0ec:
	mov -656(%RBP),%RSP
	add $-688, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0f9
	jmp uuid_000000000007c0fb
uuid_000000000007c0f9:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0f3
	jmp uuid_000000000007c0f5
uuid_000000000007c0f3:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_000000000007c0f0
	jmp uuid_000000000007c0f2
uuid_000000000007c0f0:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c0ed
	jmp uuid_000000000007c0ef
uuid_000000000007c0ed:
	movb $1, -776(%rbp)
uuid_000000000007c0ef:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007c0f2:
	mov -792(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007c0f5:
	mov -784(%RBP),%RSP
	add $-864, %RSP
	mov -776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0f6
	jmp uuid_000000000007c0f8
uuid_000000000007c0f6:
	movb $1, -552(%rbp)
uuid_000000000007c0f8:
	mov -696(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007c0fb:
	mov -568(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007c0fe:
	mov -560(%RBP),%RSP
	add $-864, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c10b
	jmp uuid_000000000007c10d
uuid_000000000007c10b:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c105
	jmp uuid_000000000007c107
uuid_000000000007c105:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007c102
	jmp uuid_000000000007c104
uuid_000000000007c102:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0ff
	jmp uuid_000000000007c101
uuid_000000000007c0ff:
	movb $1, -952(%rbp)
uuid_000000000007c101:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c104:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c107:
	mov -960(%RBP),%RSP
	add $-1040, %RSP
	mov -952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c108
	jmp uuid_000000000007c10a
uuid_000000000007c108:
	movb $1, -456(%rbp)
uuid_000000000007c10a:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c10d:
	mov -472(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c110:
	mov -464(%RBP),%RSP
	add $-1040, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c114
	jmp uuid_000000000007c116
uuid_000000000007c114:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c111
	jmp uuid_000000000007c113
uuid_000000000007c111:
	movb $1, -360(%rbp)
uuid_000000000007c113:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007c116:
	mov -376(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007c119:
	mov -368(%RBP),%RSP
	add $-1120, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c170
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c141
	jmp uuid_000000000007c143
uuid_000000000007c141:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c12f
	jmp uuid_000000000007c131
uuid_000000000007c12f:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c11d
	jmp uuid_000000000007c11f
uuid_000000000007c11d:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007c11a
	jmp uuid_000000000007c11c
uuid_000000000007c11a:
	movb $1, -1400(%rbp)
uuid_000000000007c11c:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c11f:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
	mov -1400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c12c
	jmp uuid_000000000007c12e
uuid_000000000007c12c:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c126
	jmp uuid_000000000007c128
uuid_000000000007c126:
	push %RBP
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	jmp uuid_000000000007c123
	jmp uuid_000000000007c125
uuid_000000000007c123:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c120
	jmp uuid_000000000007c122
uuid_000000000007c120:
	movb $1, -1528(%rbp)
uuid_000000000007c122:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007c125:
	mov -1544(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007c128:
	mov -1536(%RBP),%RSP
	add $-1616, %RSP
	mov -1528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c129
	jmp uuid_000000000007c12b
uuid_000000000007c129:
	movb $1, -1304(%rbp)
uuid_000000000007c12b:
	mov -1448(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007c12e:
	mov -1320(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007c131:
	mov -1312(%RBP),%RSP
	add $-1616, %RSP
	mov -1304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c13e
	jmp uuid_000000000007c140
uuid_000000000007c13e:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c138
	jmp uuid_000000000007c13a
uuid_000000000007c138:
	push %RBP
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_000000000007c135
	jmp uuid_000000000007c137
uuid_000000000007c135:
	push %RBP
	mov -1632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1792(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c132
	jmp uuid_000000000007c134
uuid_000000000007c132:
	movb $1, -1704(%rbp)
uuid_000000000007c134:
	mov -1784(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007c137:
	mov -1720(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007c13a:
	mov -1712(%RBP),%RSP
	add $-1792, %RSP
	mov -1704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c13b
	jmp uuid_000000000007c13d
uuid_000000000007c13b:
	movb $1, -1208(%rbp)
uuid_000000000007c13d:
	mov -1624(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007c140:
	mov -1224(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007c143:
	mov -1216(%RBP),%RSP
	add $-1792, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c16d
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c153
	jmp uuid_000000000007c155
uuid_000000000007c153:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c14a
	jmp uuid_000000000007c14c
uuid_000000000007c14a:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007c147
	jmp uuid_000000000007c149
uuid_000000000007c147:
	push %RBP
	mov -1904(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c144
	jmp uuid_000000000007c146
uuid_000000000007c144:
	movb $1, -1976(%rbp)
uuid_000000000007c146:
	mov -2056(%RBP),%RSP
	add $-2064, %RSP
uuid_000000000007c149:
	mov -1992(%RBP),%RSP
	add $-2064, %RSP
uuid_000000000007c14c:
	mov -1984(%RBP),%RSP
	add $-2064, %RSP
	mov -1976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c150
	jmp uuid_000000000007c152
uuid_000000000007c150:
	push %RBP
	mov -1856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c14d
	jmp uuid_000000000007c14f
uuid_000000000007c14d:
	movb $1, -1880(%rbp)
uuid_000000000007c14f:
	mov -2072(%RBP),%RSP
	add $-2144, %RSP
uuid_000000000007c152:
	mov -1896(%RBP),%RSP
	add $-2144, %RSP
uuid_000000000007c155:
	mov -1888(%RBP),%RSP
	add $-2144, %RSP
	mov -1880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c16a
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2224(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c15c
	jmp uuid_000000000007c15e
uuid_000000000007c15c:
	push %RBP
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_000000000007c159
	jmp uuid_000000000007c15b
uuid_000000000007c159:
	push %RBP
	mov -2160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c156
	jmp uuid_000000000007c158
uuid_000000000007c156:
	movb $1, -2232(%rbp)
uuid_000000000007c158:
	mov -2312(%RBP),%RSP
	add $-2320, %RSP
uuid_000000000007c15b:
	mov -2248(%RBP),%RSP
	add $-2320, %RSP
uuid_000000000007c15e:
	mov -2240(%RBP),%RSP
	add $-2320, %RSP
	mov -2232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c167
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c164
	push %RBP
	jmp uuid_000000000007c161
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c160
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c163
uuid_000000000007c161:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c15f
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c163:
	mov -2408(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_000000000007c166
uuid_000000000007c164:
uuid_000000000007c166:
	mov -2328(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_000000000007c169
uuid_000000000007c167:
	pushq -2320(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c169:
	mov -2152(%RBP),%RSP
	add $-2320, %RSP
	jmp uuid_000000000007c16c
uuid_000000000007c16a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c16c:
	mov -1800(%RBP),%RSP
	add $-2144, %RSP
	jmp uuid_000000000007c16f
uuid_000000000007c16d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1616(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c16f:
	mov -1128(%RBP),%RSP
	add $-1792, %RSP
	jmp uuid_000000000007c172
uuid_000000000007c170:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c172:
	mov -280(%RBP),%RSP
	add $-1120, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c26d
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c26a
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c19a
	jmp uuid_000000000007c19c
uuid_000000000007c19a:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c188
	jmp uuid_000000000007c18a
uuid_000000000007c188:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c176
	jmp uuid_000000000007c178
uuid_000000000007c176:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007c173
	jmp uuid_000000000007c175
uuid_000000000007c173:
	movb $1, -712(%rbp)
uuid_000000000007c175:
	mov -728(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007c178:
	mov -720(%RBP),%RSP
	add $-752, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c185
	jmp uuid_000000000007c187
uuid_000000000007c185:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c17f
	jmp uuid_000000000007c181
uuid_000000000007c17f:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007c17c
	jmp uuid_000000000007c17e
uuid_000000000007c17c:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c179
	jmp uuid_000000000007c17b
uuid_000000000007c179:
	movb $1, -840(%rbp)
uuid_000000000007c17b:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007c17e:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007c181:
	mov -848(%RBP),%RSP
	add $-928, %RSP
	mov -840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c182
	jmp uuid_000000000007c184
uuid_000000000007c182:
	movb $1, -616(%rbp)
uuid_000000000007c184:
	mov -760(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007c187:
	mov -632(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007c18a:
	mov -624(%RBP),%RSP
	add $-928, %RSP
	mov -616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c197
	jmp uuid_000000000007c199
uuid_000000000007c197:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c191
	jmp uuid_000000000007c193
uuid_000000000007c191:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007c18e
	jmp uuid_000000000007c190
uuid_000000000007c18e:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c18b
	jmp uuid_000000000007c18d
uuid_000000000007c18b:
	movb $1, -1016(%rbp)
uuid_000000000007c18d:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c190:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c193:
	mov -1024(%RBP),%RSP
	add $-1104, %RSP
	mov -1016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c194
	jmp uuid_000000000007c196
uuid_000000000007c194:
	movb $1, -520(%rbp)
uuid_000000000007c196:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c199:
	mov -536(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c19c:
	mov -528(%RBP),%RSP
	add $-1104, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c267
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e0
	jmp uuid_000000000007c1e2
uuid_000000000007c1e0:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ce
	jmp uuid_000000000007c1d0
uuid_000000000007c1ce:
	push %RBP
	mov -1272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1bc
	jmp uuid_000000000007c1be
uuid_000000000007c1bc:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	jmp uuid_000000000007c1b9
	jmp uuid_000000000007c1bb
uuid_000000000007c1b9:
	movb $1, -1384(%rbp)
uuid_000000000007c1bb:
	mov -1400(%RBP),%RSP
	add $-1424, %RSP
uuid_000000000007c1be:
	mov -1392(%RBP),%RSP
	add $-1424, %RSP
	mov -1384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1cb
	jmp uuid_000000000007c1cd
uuid_000000000007c1cb:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1c5
	jmp uuid_000000000007c1c7
uuid_000000000007c1c5:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_000000000007c1c2
	jmp uuid_000000000007c1c4
uuid_000000000007c1c2:
	push %RBP
	mov -1440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c1bf
	jmp uuid_000000000007c1c1
uuid_000000000007c1bf:
	movb $1, -1512(%rbp)
uuid_000000000007c1c1:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c1c4:
	mov -1528(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c1c7:
	mov -1520(%RBP),%RSP
	add $-1600, %RSP
	mov -1512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1c8
	jmp uuid_000000000007c1ca
uuid_000000000007c1c8:
	movb $1, -1288(%rbp)
uuid_000000000007c1ca:
	mov -1432(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c1cd:
	mov -1304(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c1d0:
	mov -1296(%RBP),%RSP
	add $-1600, %RSP
	mov -1288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1dd
	jmp uuid_000000000007c1df
uuid_000000000007c1dd:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1d7
	jmp uuid_000000000007c1d9
uuid_000000000007c1d7:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	jmp uuid_000000000007c1d4
	jmp uuid_000000000007c1d6
uuid_000000000007c1d4:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1d1
	jmp uuid_000000000007c1d3
uuid_000000000007c1d1:
	movb $1, -1688(%rbp)
uuid_000000000007c1d3:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c1d6:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c1d9:
	mov -1696(%RBP),%RSP
	add $-1776, %RSP
	mov -1688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1da
	jmp uuid_000000000007c1dc
uuid_000000000007c1da:
	movb $1, -1192(%rbp)
uuid_000000000007c1dc:
	mov -1608(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c1df:
	mov -1208(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c1e2:
	mov -1200(%RBP),%RSP
	add $-1776, %RSP
	mov -1192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c264
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c205
	jmp uuid_000000000007c207
uuid_000000000007c205:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_000000000007c202
	jmp uuid_000000000007c204
uuid_000000000007c202:
	push %RBP
	mov -1792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c1ff
	jmp uuid_000000000007c201
uuid_000000000007c1ff:
	movb $1, -1864(%rbp)
uuid_000000000007c201:
	mov -1944(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007c204:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007c207:
	mov -1872(%RBP),%RSP
	add $-1952, %RSP
	mov -1864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c261
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c20e
	jmp uuid_000000000007c210
uuid_000000000007c20e:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	jmp uuid_000000000007c20b
	jmp uuid_000000000007c20d
uuid_000000000007c20b:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c208
	jmp uuid_000000000007c20a
uuid_000000000007c208:
	movb $1, -2040(%rbp)
uuid_000000000007c20a:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007c20d:
	mov -2056(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007c210:
	mov -2048(%RBP),%RSP
	add $-2128, %RSP
	mov -2040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c25e
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c21a
	jmp uuid_000000000007c21c
uuid_000000000007c21a:
	push %RBP
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	jmp uuid_000000000007c217
	jmp uuid_000000000007c219
uuid_000000000007c217:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c214
	jmp uuid_000000000007c216
uuid_000000000007c214:
	push %RBP
	mov -2168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c211
	jmp uuid_000000000007c213
uuid_000000000007c211:
	movb $1, -2216(%rbp)
uuid_000000000007c213:
	mov -2344(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007c216:
	mov -2264(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007c219:
	mov -2232(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007c21c:
	mov -2224(%RBP),%RSP
	add $-2416, %RSP
	mov -2216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c25b
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2496(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c220
	jmp uuid_000000000007c222
uuid_000000000007c220:
	push %RBP
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	jmp uuid_000000000007c21d
	jmp uuid_000000000007c21f
uuid_000000000007c21d:
	movb $1, -2504(%rbp)
uuid_000000000007c21f:
	mov -2520(%RBP),%RSP
	add $-2544, %RSP
uuid_000000000007c222:
	mov -2512(%RBP),%RSP
	add $-2544, %RSP
	mov -2504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c258
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c229
	jmp uuid_000000000007c22b
uuid_000000000007c229:
	push %RBP
	mov -2616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c226
	jmp uuid_000000000007c228
uuid_000000000007c226:
	push %RBP
	mov -2608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c223
	jmp uuid_000000000007c225
uuid_000000000007c223:
	movb $1, -2632(%rbp)
uuid_000000000007c225:
	mov -2728(%RBP),%RSP
	add $-2800, %RSP
uuid_000000000007c228:
	mov -2648(%RBP),%RSP
	add $-2800, %RSP
uuid_000000000007c22b:
	mov -2640(%RBP),%RSP
	add $-2800, %RSP
	mov -2632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c255
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c232
	jmp uuid_000000000007c234
uuid_000000000007c232:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c22f
	jmp uuid_000000000007c231
uuid_000000000007c22f:
	push %RBP
	mov -2864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c22c
	jmp uuid_000000000007c22e
uuid_000000000007c22c:
	movb $1, -2888(%rbp)
uuid_000000000007c22e:
	mov -2984(%RBP),%RSP
	add $-3056, %RSP
uuid_000000000007c231:
	mov -2904(%RBP),%RSP
	add $-3056, %RSP
uuid_000000000007c234:
	mov -2896(%RBP),%RSP
	add $-3056, %RSP
	mov -2888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c252
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3136(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c23b
	jmp uuid_000000000007c23d
uuid_000000000007c23b:
	push %RBP
	mov -3128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c238
	jmp uuid_000000000007c23a
uuid_000000000007c238:
	push %RBP
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	jmp uuid_000000000007c235
	jmp uuid_000000000007c237
uuid_000000000007c235:
	movb $1, -3144(%rbp)
uuid_000000000007c237:
	mov -3240(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007c23a:
	mov -3160(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007c23d:
	mov -3152(%RBP),%RSP
	add $-3296, %RSP
	mov -3144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c24f
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c244
	jmp uuid_000000000007c246
uuid_000000000007c244:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c241
	jmp uuid_000000000007c243
uuid_000000000007c241:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c23e
	jmp uuid_000000000007c240
uuid_000000000007c23e:
	movb $1, -3384(%rbp)
uuid_000000000007c240:
	mov -3480(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007c243:
	mov -3400(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007c246:
	mov -3392(%RBP),%RSP
	add $-3552, %RSP
	mov -3384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c24c
	push %RBP
	jmp uuid_000000000007c249
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c248
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c24b
uuid_000000000007c249:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c247
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c24b:
	mov -3560(%RBP),%RSP
	add $-3560, %RSP
	jmp uuid_000000000007c24e
uuid_000000000007c24c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -3456(%rbp)
	pushq -3464(%rbp)
	pushq -3472(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c24e:
	mov -3304(%RBP),%RSP
	add $-3552, %RSP
	jmp uuid_000000000007c251
uuid_000000000007c24f:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq -3184(%rbp)
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c251:
	mov -3064(%RBP),%RSP
	add $-3296, %RSP
	jmp uuid_000000000007c254
uuid_000000000007c252:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	pushq -3040(%rbp)
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c254:
	mov -2808(%RBP),%RSP
	add $-3056, %RSP
	jmp uuid_000000000007c257
uuid_000000000007c255:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	pushq -2776(%rbp)
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c257:
	mov -2552(%RBP),%RSP
	add $-2800, %RSP
	jmp uuid_000000000007c25a
uuid_000000000007c258:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c25a:
	mov -2424(%RBP),%RSP
	add $-2544, %RSP
	jmp uuid_000000000007c25d
uuid_000000000007c25b:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $5
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c25d:
	mov -2136(%RBP),%RSP
	add $-2416, %RSP
	jmp uuid_000000000007c260
uuid_000000000007c25e:
	pushq -2128(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c260:
	mov -1960(%RBP),%RSP
	add $-2128, %RSP
	jmp uuid_000000000007c263
uuid_000000000007c261:
	pushq -1952(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c263:
	mov -1784(%RBP),%RSP
	add $-1952, %RSP
	jmp uuid_000000000007c266
uuid_000000000007c264:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c1fc:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1fd
	jmp uuid_000000000007c1fe
uuid_000000000007c1fd:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1f9
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ef
	jmp uuid_000000000007c1f1
uuid_000000000007c1ef:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	jmp uuid_000000000007c1ec
	jmp uuid_000000000007c1ee
uuid_000000000007c1ec:
	push %RBP
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	jmp uuid_000000000007c1e9
	jmp uuid_000000000007c1eb
uuid_000000000007c1e9:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c1e6
	jmp uuid_000000000007c1e8
uuid_000000000007c1e6:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1e3
	jmp uuid_000000000007c1e5
uuid_000000000007c1e3:
	movb $1, -2160(%rbp)
uuid_000000000007c1e5:
	mov -2304(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007c1e8:
	mov -2288(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007c1eb:
	mov -2256(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007c1ee:
	mov -2176(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007c1f1:
	mov -2168(%RBP),%RSP
	add $-2424, %RSP
	mov -2160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1f6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c1f5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1f8
uuid_000000000007c1f6:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1f2
	movq -2424(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2408(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2400(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2392(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2384(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c1f4
uuid_000000000007c1f2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1f4:
	mov -2432(%RBP),%RSP
	add $-2432, %RSP
uuid_000000000007c1f8:
	mov -2032(%RBP),%RSP
	add $-2432, %RSP
	jmp uuid_000000000007c1fb
uuid_000000000007c1f9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1fb:
	mov -1904(%RBP),%RSP
	add $-2024, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007c1fc
uuid_000000000007c1fe:
uuid_000000000007c266:
	mov -1112(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_000000000007c269
uuid_000000000007c267:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c1b6:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1b7
	jmp uuid_000000000007c1b8
uuid_000000000007c1b7:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1b3
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1a9
	jmp uuid_000000000007c1ab
uuid_000000000007c1a9:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_000000000007c1a6
	jmp uuid_000000000007c1a8
uuid_000000000007c1a6:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_000000000007c1a3
	jmp uuid_000000000007c1a5
uuid_000000000007c1a3:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c1a0
	jmp uuid_000000000007c1a2
uuid_000000000007c1a0:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c19d
	jmp uuid_000000000007c19f
uuid_000000000007c19d:
	movb $1, -1488(%rbp)
uuid_000000000007c19f:
	mov -1632(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007c1a2:
	mov -1616(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007c1a5:
	mov -1584(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007c1a8:
	mov -1504(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007c1ab:
	mov -1496(%RBP),%RSP
	add $-1752, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1b0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c1af
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1b2
uuid_000000000007c1b0:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1ac
	movq -1752(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c1ae
uuid_000000000007c1ac:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1ae:
	mov -1760(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007c1b2:
	mov -1360(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007c1b5
uuid_000000000007c1b3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1b5:
	mov -1232(%RBP),%RSP
	add $-1352, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007c1b6
uuid_000000000007c1b8:
uuid_000000000007c269:
	mov -440(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_000000000007c26c
uuid_000000000007c26a:
uuid_000000000007c26c:
	mov -360(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007c26f
uuid_000000000007c26d:
uuid_000000000007c26f:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowSConsSStringSList:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c29c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c273
	jmp uuid_000000000007c275
uuid_000000000007c273:
	push %RBP
	mov -160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c270
	jmp uuid_000000000007c272
uuid_000000000007c270:
	movb $1, -176(%rbp)
uuid_000000000007c272:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007c275:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c299
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c292
	jmp uuid_000000000007c294
uuid_000000000007c292:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c28f
	jmp uuid_000000000007c291
uuid_000000000007c28f:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c28c
	jmp uuid_000000000007c28e
uuid_000000000007c28c:
	movb $1, -240(%rbp)
uuid_000000000007c28e:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007c291:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007c294:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c296
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c295
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c298
uuid_000000000007c296:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007c298:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007c29b
uuid_000000000007c299:
uuid_000000000007c289:
#call function non-zero : Arrow<StringSList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c28a
	jmp uuid_000000000007c28b
uuid_000000000007c28a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c27f
	jmp uuid_000000000007c281
uuid_000000000007c27f:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	jmp uuid_000000000007c27c
	jmp uuid_000000000007c27e
uuid_000000000007c27c:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c279
	jmp uuid_000000000007c27b
uuid_000000000007c279:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c276
	jmp uuid_000000000007c278
uuid_000000000007c276:
	movb $1, -312(%rbp)
uuid_000000000007c278:
	mov -376(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c27b:
	mov -360(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c27e:
	mov -328(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c281:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c286
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c285
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c288
uuid_000000000007c286:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c282
	jmp uuid_000000000007c284
uuid_000000000007c282:
	movq -352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007c284:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c288:
	mov -256(%RBP),%RSP
	add $-432, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c289
uuid_000000000007c28b:
uuid_000000000007c29b:
	mov -144(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007c29e
uuid_000000000007c29c:
	pushq $0
	pushq $0
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007c29e:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2dd
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007c2d7:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2d8
	jmp uuid_000000000007c2d9
uuid_000000000007c2d8:
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2d4
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ab
	jmp uuid_000000000007c2ad
uuid_000000000007c2ab:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	jmp uuid_000000000007c2a8
	jmp uuid_000000000007c2aa
uuid_000000000007c2a8:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007c2a5
	jmp uuid_000000000007c2a7
uuid_000000000007c2a5:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c2a2
	jmp uuid_000000000007c2a4
uuid_000000000007c2a2:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c29f
	jmp uuid_000000000007c2a1
uuid_000000000007c29f:
	movb $1, -768(%rbp)
uuid_000000000007c2a1:
	mov -912(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007c2a4:
	mov -896(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007c2a7:
	mov -864(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007c2aa:
	mov -784(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007c2ad:
	mov -776(%RBP),%RSP
	add $-1032, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2d1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c2d0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2d3
uuid_000000000007c2d1:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2cd
	jmp uuid_000000000007c2cf
uuid_000000000007c2cd:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2ca
	jmp uuid_000000000007c2cc
uuid_000000000007c2ca:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2c0
	jmp uuid_000000000007c2c2
uuid_000000000007c2c0:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2b7
	jmp uuid_000000000007c2b9
uuid_000000000007c2b7:
	push %RBP
	jmp uuid_000000000007c2b4
	jmp uuid_000000000007c2b6
uuid_000000000007c2b4:
	push %RBP
	jmp uuid_000000000007c2b1
	jmp uuid_000000000007c2b3
uuid_000000000007c2b1:
	push %RBP
	jmp uuid_000000000007c2ae
	jmp uuid_000000000007c2b0
uuid_000000000007c2ae:
	movb $1, -1304(%rbp)
uuid_000000000007c2b0:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007c2b3:
	mov -1328(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007c2b6:
	mov -1320(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007c2b9:
	mov -1312(%RBP),%RSP
	add $-1336, %RSP
	mov -1304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2bd
	jmp uuid_000000000007c2bf
uuid_000000000007c2bd:
	push %RBP
	jmp uuid_000000000007c2ba
	jmp uuid_000000000007c2bc
uuid_000000000007c2ba:
	movb $1, -1208(%rbp)
uuid_000000000007c2bc:
	mov -1344(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c2bf:
	mov -1224(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c2c2:
	mov -1216(%RBP),%RSP
	add $-1344, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2c7
	push %RBP
	jmp uuid_000000000007c2c4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c2c3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2c6
uuid_000000000007c2c4:
uuid_000000000007c2c6:
	mov -1352(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007c2c9
uuid_000000000007c2c7:
	movq -856(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -200(%rbp)
uuid_000000000007c2c9:
	mov -1128(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c2cc:
	mov -1048(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c2cf:
	mov -1040(%RBP),%RSP
	add $-1344, %RSP
	movq -1032(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
uuid_000000000007c2d3:
	mov -640(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_000000000007c2d6
uuid_000000000007c2d4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
uuid_000000000007c2d6:
	mov -512(%RBP),%RSP
	add $-632, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007c2d7
uuid_000000000007c2d9:
#call function mark-as-special : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mark_SB_as_SB_special_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2da
	jmp uuid_000000000007c2dc
uuid_000000000007c2da:
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_000000000007c2dc:
	mov -392(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007c2df
uuid_000000000007c2dd:
uuid_000000000007c2df:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	mov %rbp, %rsp
	sub $184, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2f3
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2e9
	jmp uuid_000000000007c2eb
uuid_000000000007c2e9:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c2e6
	jmp uuid_000000000007c2e8
uuid_000000000007c2e6:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007c2e3
	jmp uuid_000000000007c2e5
uuid_000000000007c2e3:
	movb $1, -240(%rbp)
uuid_000000000007c2e5:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007c2e8:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007c2eb:
	mov -248(%RBP),%RSP
	add $-328, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2f0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c2ef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2f2
uuid_000000000007c2f0:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2ec
	jmp uuid_000000000007c2ee
uuid_000000000007c2ec:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c2ee:
	mov -336(%RBP),%RSP
	add $-336, %RSP
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c2f2:
	mov -192(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007c2f5
uuid_000000000007c2f3:
uuid_000000000007c2f5:
	mov -144(%RBP),%RSP
	add $-184, %RSP
	mov %rbp, %rsp
	sub $96, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c30e
	jmp uuid_000000000007c310
uuid_000000000007c30e:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c305
	jmp uuid_000000000007c307
uuid_000000000007c305:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2fc
	jmp uuid_000000000007c2fe
uuid_000000000007c2fc:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2f9
	jmp uuid_000000000007c2fb
uuid_000000000007c2f9:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007c2f6
	jmp uuid_000000000007c2f8
uuid_000000000007c2f6:
	movb $1, -248(%rbp)
uuid_000000000007c2f8:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007c2fb:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007c2fe:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c302
	jmp uuid_000000000007c304
uuid_000000000007c302:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007c2ff
	jmp uuid_000000000007c301
uuid_000000000007c2ff:
	movb $1, -184(%rbp)
uuid_000000000007c301:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007c304:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007c307:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c30b
	jmp uuid_000000000007c30d
uuid_000000000007c30b:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c308
	jmp uuid_000000000007c30a
uuid_000000000007c308:
	movb $1, -120(%rbp)
uuid_000000000007c30a:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007c30d:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007c310:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c32a
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c317
	jmp uuid_000000000007c319
uuid_000000000007c317:
	push %RBP
	mov -408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c314
	jmp uuid_000000000007c316
uuid_000000000007c314:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c311
	jmp uuid_000000000007c313
uuid_000000000007c311:
	movb $1, -424(%rbp)
uuid_000000000007c313:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007c316:
	mov -440(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007c319:
	mov -432(%RBP),%RSP
	add $-496, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c327
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c31d
	jmp uuid_000000000007c31f
uuid_000000000007c31d:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c31a
	jmp uuid_000000000007c31c
uuid_000000000007c31a:
	movb $1, -536(%rbp)
uuid_000000000007c31c:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c31f:
	mov -544(%RBP),%RSP
	add $-560, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c324
	push %RBP
	jmp uuid_000000000007c321
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c320
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c323
uuid_000000000007c321:
uuid_000000000007c323:
	mov -568(%RBP),%RSP
	add $-568, %RSP
	jmp uuid_000000000007c326
uuid_000000000007c324:
#call function mark-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function parameter-number : Arrow<Cons<Type,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c326:
	mov -504(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007c329
uuid_000000000007c327:
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -496(%rbp)
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c329:
	mov -392(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_000000000007c32c
uuid_000000000007c32a:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c32c:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	mov %rbp, %rsp
	sub $56, %rsp
	ret
infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c333
	jmp uuid_000000000007c335
uuid_000000000007c333:
	push %RBP
	jmp uuid_000000000007c330
	jmp uuid_000000000007c332
uuid_000000000007c330:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c32d
	jmp uuid_000000000007c32f
uuid_000000000007c32d:
	movb $1, -272(%rbp)
uuid_000000000007c32f:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007c332:
	mov -288(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007c335:
	mov -280(%RBP),%RSP
	add $-304, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c357
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c345
	jmp uuid_000000000007c347
uuid_000000000007c345:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c342
	jmp uuid_000000000007c344
uuid_000000000007c342:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c33c
	jmp uuid_000000000007c33e
uuid_000000000007c33c:
	push %RBP
	jmp uuid_000000000007c339
	jmp uuid_000000000007c33b
uuid_000000000007c339:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c336
	jmp uuid_000000000007c338
uuid_000000000007c336:
	movb $1, -568(%rbp)
uuid_000000000007c338:
	mov -592(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007c33b:
	mov -584(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007c33e:
	mov -576(%RBP),%RSP
	add $-600, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c33f
	jmp uuid_000000000007c341
uuid_000000000007c33f:
	movb $1, -392(%rbp)
uuid_000000000007c341:
	mov -488(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007c344:
	mov -408(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007c347:
	mov -400(%RBP),%RSP
	add $-600, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c354
	push %RBP
	jmp uuid_000000000007c351
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c350
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c353
uuid_000000000007c351:
uuid_000000000007c353:
	mov -608(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007c356
uuid_000000000007c354:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c349
	jmp uuid_000000000007c34b
uuid_000000000007c349:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c348
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c34b:
	mov -632(%RBP),%RSP
	add $-632, %RSP
	push %RBP
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c34d
	jmp uuid_000000000007c34f
uuid_000000000007c34d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c34c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c34f:
	mov -640(%RBP),%RSP
	add $-640, %RSP
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ab2e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function set-type-fields : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call set_SB_type_SB_fields_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -600(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -112(%rbp)
	movq -112(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a915
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_000000000007c356:
	mov -312(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_000000000007c359
uuid_000000000007c357:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ab2e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a915
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a916
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a918
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2e9
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq $8, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a915
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_000000000007c359:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	mov -112(%rbp), %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_global_SB_context_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c369
	jmp uuid_000000000007c36b
uuid_000000000007c369:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c366
	jmp uuid_000000000007c368
uuid_000000000007c366:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c360
	jmp uuid_000000000007c362
uuid_000000000007c360:
	push %RBP
	jmp uuid_000000000007c35d
	jmp uuid_000000000007c35f
uuid_000000000007c35d:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c35a
	jmp uuid_000000000007c35c
uuid_000000000007c35a:
	movb $1, -416(%rbp)
uuid_000000000007c35c:
	mov -440(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007c35f:
	mov -432(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007c362:
	mov -424(%RBP),%RSP
	add $-448, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c363
	jmp uuid_000000000007c365
uuid_000000000007c363:
	movb $1, -240(%rbp)
uuid_000000000007c365:
	mov -336(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007c368:
	mov -256(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007c36b:
	mov -248(%RBP),%RSP
	add $-448, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c412
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3bb
	jmp uuid_000000000007c3bd
uuid_000000000007c3bb:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3a6
	jmp uuid_000000000007c3a8
uuid_000000000007c3a6:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007c3a3
	jmp uuid_000000000007c3a5
uuid_000000000007c3a3:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c39a
	jmp uuid_000000000007c39c
uuid_000000000007c39a:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c388
	jmp uuid_000000000007c38a
uuid_000000000007c388:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c37f
	jmp uuid_000000000007c381
uuid_000000000007c37f:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_000000000007c37c
	jmp uuid_000000000007c37e
uuid_000000000007c37c:
	movb $1, -1024(%rbp)
uuid_000000000007c37e:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007c381:
	mov -1032(%RBP),%RSP
	add $-1064, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c385
	jmp uuid_000000000007c387
uuid_000000000007c385:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c382
	jmp uuid_000000000007c384
uuid_000000000007c382:
	movb $1, -928(%rbp)
uuid_000000000007c384:
	mov -1072(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007c387:
	mov -944(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007c38a:
	mov -936(%RBP),%RSP
	add $-1144, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c397
	jmp uuid_000000000007c399
uuid_000000000007c397:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c391
	jmp uuid_000000000007c393
uuid_000000000007c391:
	push %RBP
	jmp uuid_000000000007c38e
	jmp uuid_000000000007c390
uuid_000000000007c38e:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c38b
	jmp uuid_000000000007c38d
uuid_000000000007c38b:
	movb $1, -1232(%rbp)
uuid_000000000007c38d:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c390:
	mov -1248(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c393:
	mov -1240(%RBP),%RSP
	add $-1264, %RSP
	mov -1232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c394
	jmp uuid_000000000007c396
uuid_000000000007c394:
	movb $1, -832(%rbp)
uuid_000000000007c396:
	mov -1152(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c399:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c39c:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3a0
	jmp uuid_000000000007c3a2
uuid_000000000007c3a0:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c39d
	jmp uuid_000000000007c39f
uuid_000000000007c39d:
	movb $1, -704(%rbp)
uuid_000000000007c39f:
	mov -1272(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c3a2:
	mov -752(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c3a5:
	mov -720(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c3a8:
	mov -712(%RBP),%RSP
	add $-1344, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3b8
	jmp uuid_000000000007c3ba
uuid_000000000007c3b8:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3b2
	jmp uuid_000000000007c3b4
uuid_000000000007c3b2:
	push %RBP
	jmp uuid_000000000007c3af
	jmp uuid_000000000007c3b1
uuid_000000000007c3af:
	push %RBP
	jmp uuid_000000000007c3ac
	jmp uuid_000000000007c3ae
uuid_000000000007c3ac:
	push %RBP
	mov -1360(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c3a9
	jmp uuid_000000000007c3ab
uuid_000000000007c3a9:
	movb $1, -1416(%rbp)
uuid_000000000007c3ab:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c3ae:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c3b1:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c3b4:
	mov -1424(%RBP),%RSP
	add $-1456, %RSP
	mov -1416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3b5
	jmp uuid_000000000007c3b7
uuid_000000000007c3b5:
	movb $1, -536(%rbp)
uuid_000000000007c3b7:
	mov -1352(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c3ba:
	mov -552(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c3bd:
	mov -544(%RBP),%RSP
	add $-1456, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c40f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3f8
	jmp uuid_000000000007c3fa
uuid_000000000007c3f8:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3e3
	jmp uuid_000000000007c3e5
uuid_000000000007c3e3:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3d1
	jmp uuid_000000000007c3d3
uuid_000000000007c3d1:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3c8
	jmp uuid_000000000007c3ca
uuid_000000000007c3c8:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007c3c5
	jmp uuid_000000000007c3c7
uuid_000000000007c3c5:
	movb $1, -1832(%rbp)
uuid_000000000007c3c7:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c3ca:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
	mov -1832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3ce
	jmp uuid_000000000007c3d0
uuid_000000000007c3ce:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c3cb
	jmp uuid_000000000007c3cd
uuid_000000000007c3cb:
	movb $1, -1736(%rbp)
uuid_000000000007c3cd:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007c3d0:
	mov -1752(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007c3d3:
	mov -1744(%RBP),%RSP
	add $-1952, %RSP
	mov -1736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3e0
	jmp uuid_000000000007c3e2
uuid_000000000007c3e0:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3da
	jmp uuid_000000000007c3dc
uuid_000000000007c3da:
	push %RBP
	jmp uuid_000000000007c3d7
	jmp uuid_000000000007c3d9
uuid_000000000007c3d7:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2072(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3d4
	jmp uuid_000000000007c3d6
uuid_000000000007c3d4:
	movb $1, -2040(%rbp)
uuid_000000000007c3d6:
	mov -2064(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007c3d9:
	mov -2056(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007c3dc:
	mov -2048(%RBP),%RSP
	add $-2072, %RSP
	mov -2040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3dd
	jmp uuid_000000000007c3df
uuid_000000000007c3dd:
	movb $1, -1640(%rbp)
uuid_000000000007c3df:
	mov -1960(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007c3e2:
	mov -1656(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007c3e5:
	mov -1648(%RBP),%RSP
	add $-2072, %RSP
	mov -1640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3f5
	jmp uuid_000000000007c3f7
uuid_000000000007c3f5:
	push %RBP
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq $0
	push %RBP
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3ef
	jmp uuid_000000000007c3f1
uuid_000000000007c3ef:
	push %RBP
	jmp uuid_000000000007c3ec
	jmp uuid_000000000007c3ee
uuid_000000000007c3ec:
	push %RBP
	jmp uuid_000000000007c3e9
	jmp uuid_000000000007c3eb
uuid_000000000007c3e9:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c3e6
	jmp uuid_000000000007c3e8
uuid_000000000007c3e6:
	movb $1, -2144(%rbp)
uuid_000000000007c3e8:
	mov -2176(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007c3eb:
	mov -2168(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007c3ee:
	mov -2160(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007c3f1:
	mov -2152(%RBP),%RSP
	add $-2184, %RSP
	mov -2144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3f2
	jmp uuid_000000000007c3f4
uuid_000000000007c3f2:
	movb $1, -1544(%rbp)
uuid_000000000007c3f4:
	mov -2080(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007c3f7:
	mov -1560(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007c3fa:
	mov -1552(%RBP),%RSP
	add $-2184, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c40c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c401
	jmp uuid_000000000007c403
uuid_000000000007c401:
	push %RBP
	jmp uuid_000000000007c3fe
	jmp uuid_000000000007c400
uuid_000000000007c3fe:
	push %RBP
	jmp uuid_000000000007c3fb
	jmp uuid_000000000007c3fd
uuid_000000000007c3fb:
	movb $1, -2272(%rbp)
uuid_000000000007c3fd:
	mov -2296(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007c400:
	mov -2288(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007c403:
	mov -2280(%RBP),%RSP
	add $-2296, %RSP
	mov -2272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c409
	push %RBP
	jmp uuid_000000000007c406
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c405
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c408
uuid_000000000007c406:
uuid_000000000007c408:
	mov -2304(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_000000000007c40b
uuid_000000000007c409:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c404
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c40b:
	mov -2192(%RBP),%RSP
	add $-2296, %RSP
	jmp uuid_000000000007c40e
uuid_000000000007c40c:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6eb
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c40e:
	mov -1464(%RBP),%RSP
	add $-2208, %RSP
	jmp uuid_000000000007c411
uuid_000000000007c40f:
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3be
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	jmp uuid_000000000007c3c0
uuid_000000000007c3be:
uuid_000000000007c3c0:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1536(%RBP)
	popq -1528(%RBP)
	popq -1520(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3c2
	jmp uuid_000000000007c3c4
uuid_000000000007c3c2:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c3c1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c3c4:
	mov -1544(%RBP),%RSP
	add $-1544, %RSP
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
uuid_000000000007c411:
	mov -456(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007c414
uuid_000000000007c412:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c372
	jmp uuid_000000000007c374
uuid_000000000007c372:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c36f
	jmp uuid_000000000007c371
uuid_000000000007c36f:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c36c
	jmp uuid_000000000007c36e
uuid_000000000007c36c:
	movb $1, -544(%rbp)
uuid_000000000007c36e:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007c371:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007c374:
	mov -552(%RBP),%RSP
	add $-616, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c379
	push %RBP
	jmp uuid_000000000007c376
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c375
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c378
uuid_000000000007c376:
uuid_000000000007c378:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007c37b
uuid_000000000007c379:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c37b:
	mov -512(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007c414:
	mov -160(%RBP),%RSP
	add $-616, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_well_SB_typed_CL_ArrowNilAST:
uuid_000000000007c422:
#call function is-seq : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call is_SB_seq_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c423
	jmp uuid_000000000007c424
uuid_000000000007c423:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c41b
	jmp uuid_000000000007c41d
uuid_000000000007c41b:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c418
	jmp uuid_000000000007c41a
uuid_000000000007c418:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c415
	jmp uuid_000000000007c417
uuid_000000000007c415:
	movb $1, -240(%rbp)
uuid_000000000007c417:
	mov -336(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007c41a:
	mov -256(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007c41d:
	mov -248(%RBP),%RSP
	add $-408, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c41f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c41e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c421
uuid_000000000007c41f:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c421:
	mov -160(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c422
uuid_000000000007c424:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a5
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a2
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c42b
	jmp uuid_000000000007c42d
uuid_000000000007c42b:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c428
	jmp uuid_000000000007c42a
uuid_000000000007c428:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	jmp uuid_000000000007c425
	jmp uuid_000000000007c427
uuid_000000000007c425:
	movb $1, -400(%rbp)
uuid_000000000007c427:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007c42a:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007c42d:
	mov -408(%RBP),%RSP
	add $-552, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c59f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c437
	jmp uuid_000000000007c439
uuid_000000000007c437:
	push %RBP
	jmp uuid_000000000007c434
	jmp uuid_000000000007c436
uuid_000000000007c434:
	push %RBP
	jmp uuid_000000000007c431
	jmp uuid_000000000007c433
uuid_000000000007c431:
	movb $1, -640(%rbp)
uuid_000000000007c433:
	mov -664(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c436:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c439:
	mov -648(%RBP),%RSP
	add $-664, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c59c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c455
	jmp uuid_000000000007c457
uuid_000000000007c455:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c452
	jmp uuid_000000000007c454
uuid_000000000007c452:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c44c
	jmp uuid_000000000007c44e
uuid_000000000007c44c:
	push %RBP
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_000000000007c449
	jmp uuid_000000000007c44b
uuid_000000000007c449:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c446
	jmp uuid_000000000007c448
uuid_000000000007c446:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c440
	jmp uuid_000000000007c442
uuid_000000000007c440:
	push %RBP
	jmp uuid_000000000007c43d
	jmp uuid_000000000007c43f
uuid_000000000007c43d:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c43a
	jmp uuid_000000000007c43c
uuid_000000000007c43a:
	movb $1, -1136(%rbp)
uuid_000000000007c43c:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c43f:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c442:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c443
	jmp uuid_000000000007c445
uuid_000000000007c443:
	movb $1, -928(%rbp)
uuid_000000000007c445:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c448:
	mov -976(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c44b:
	mov -944(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c44e:
	mov -936(%RBP),%RSP
	add $-1168, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c44f
	jmp uuid_000000000007c451
uuid_000000000007c44f:
	movb $1, -752(%rbp)
uuid_000000000007c451:
	mov -848(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c454:
	mov -768(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007c457:
	mov -760(%RBP),%RSP
	add $-1168, %RSP
	mov -752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c599
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c467
	jmp uuid_000000000007c469
uuid_000000000007c467:
	push %RBP
	jmp uuid_000000000007c464
	jmp uuid_000000000007c466
uuid_000000000007c464:
	push %RBP
	mov -1232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c45e
	jmp uuid_000000000007c460
uuid_000000000007c45e:
	push %RBP
	jmp uuid_000000000007c45b
	jmp uuid_000000000007c45d
uuid_000000000007c45b:
	push %RBP
	mov -1288(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq $uuid_000000000007a778
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c458
	jmp uuid_000000000007c45a
uuid_000000000007c458:
	movb $1, -1360(%rbp)
uuid_000000000007c45a:
	mov -1384(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007c45d:
	mov -1376(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007c460:
	mov -1368(%RBP),%RSP
	add $-1392, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c461
	jmp uuid_000000000007c463
uuid_000000000007c461:
	movb $1, -1256(%rbp)
uuid_000000000007c463:
	mov -1280(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007c466:
	mov -1272(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007c469:
	mov -1264(%RBP),%RSP
	add $-1392, %RSP
	mov -1256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c596
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c482
	jmp uuid_000000000007c484
uuid_000000000007c482:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c470
	jmp uuid_000000000007c472
uuid_000000000007c470:
	push %RBP
	jmp uuid_000000000007c46d
	jmp uuid_000000000007c46f
uuid_000000000007c46d:
	push %RBP
	jmp uuid_000000000007c46a
	jmp uuid_000000000007c46c
uuid_000000000007c46a:
	movb $1, -1576(%rbp)
uuid_000000000007c46c:
	mov -1600(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c46f:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c472:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
	mov -1576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c47f
	jmp uuid_000000000007c481
uuid_000000000007c47f:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c479
	jmp uuid_000000000007c47b
uuid_000000000007c479:
	push %RBP
	jmp uuid_000000000007c476
	jmp uuid_000000000007c478
uuid_000000000007c476:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq $uuid_000000000007a795
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c473
	jmp uuid_000000000007c475
uuid_000000000007c473:
	movb $1, -1688(%rbp)
uuid_000000000007c475:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c478:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c47b:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	mov -1688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c47c
	jmp uuid_000000000007c47e
uuid_000000000007c47c:
	movb $1, -1480(%rbp)
uuid_000000000007c47e:
	mov -1608(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c481:
	mov -1496(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c484:
	mov -1488(%RBP),%RSP
	add $-1720, %RSP
	mov -1480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c593
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4a3
	jmp uuid_000000000007c4a5
uuid_000000000007c4a3:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c491
	jmp uuid_000000000007c493
uuid_000000000007c491:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c488
	jmp uuid_000000000007c48a
uuid_000000000007c488:
	push %RBP
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	jmp uuid_000000000007c485
	jmp uuid_000000000007c487
uuid_000000000007c485:
	movb $1, -2000(%rbp)
uuid_000000000007c487:
	mov -2016(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007c48a:
	mov -2008(%RBP),%RSP
	add $-2040, %RSP
	mov -2000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c48e
	jmp uuid_000000000007c490
uuid_000000000007c48e:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c48b
	jmp uuid_000000000007c48d
uuid_000000000007c48b:
	movb $1, -1904(%rbp)
uuid_000000000007c48d:
	mov -2048(%RBP),%RSP
	add $-2120, %RSP
uuid_000000000007c490:
	mov -1920(%RBP),%RSP
	add $-2120, %RSP
uuid_000000000007c493:
	mov -1912(%RBP),%RSP
	add $-2120, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4a0
	jmp uuid_000000000007c4a2
uuid_000000000007c4a0:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c49a
	jmp uuid_000000000007c49c
uuid_000000000007c49a:
	push %RBP
	jmp uuid_000000000007c497
	jmp uuid_000000000007c499
uuid_000000000007c497:
	push %RBP
	mov -2136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2240(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c494
	jmp uuid_000000000007c496
uuid_000000000007c494:
	movb $1, -2208(%rbp)
uuid_000000000007c496:
	mov -2232(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007c499:
	mov -2224(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007c49c:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
	mov -2208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c49d
	jmp uuid_000000000007c49f
uuid_000000000007c49d:
	movb $1, -1808(%rbp)
uuid_000000000007c49f:
	mov -2128(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007c4a2:
	mov -1824(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007c4a5:
	mov -1816(%RBP),%RSP
	add $-2240, %RSP
	mov -1808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c590
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4c4
	jmp uuid_000000000007c4c6
uuid_000000000007c4c4:
	push %RBP
	mov -2312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2416(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4b2
	jmp uuid_000000000007c4b4
uuid_000000000007c4b2:
	push %RBP
	mov -2408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4a9
	jmp uuid_000000000007c4ab
uuid_000000000007c4a9:
	push %RBP
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	jmp uuid_000000000007c4a6
	jmp uuid_000000000007c4a8
uuid_000000000007c4a6:
	movb $1, -2520(%rbp)
uuid_000000000007c4a8:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c4ab:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
	mov -2520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4af
	jmp uuid_000000000007c4b1
uuid_000000000007c4af:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4ac
	jmp uuid_000000000007c4ae
uuid_000000000007c4ac:
	movb $1, -2424(%rbp)
uuid_000000000007c4ae:
	mov -2568(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007c4b1:
	mov -2440(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007c4b4:
	mov -2432(%RBP),%RSP
	add $-2640, %RSP
	mov -2424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4c1
	jmp uuid_000000000007c4c3
uuid_000000000007c4c1:
	push %RBP
	mov -2304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2720(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4bb
	jmp uuid_000000000007c4bd
uuid_000000000007c4bb:
	push %RBP
	jmp uuid_000000000007c4b8
	jmp uuid_000000000007c4ba
uuid_000000000007c4b8:
	push %RBP
	mov -2656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2760(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4b5
	jmp uuid_000000000007c4b7
uuid_000000000007c4b5:
	movb $1, -2728(%rbp)
uuid_000000000007c4b7:
	mov -2752(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007c4ba:
	mov -2744(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007c4bd:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
	mov -2728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4be
	jmp uuid_000000000007c4c0
uuid_000000000007c4be:
	movb $1, -2328(%rbp)
uuid_000000000007c4c0:
	mov -2648(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007c4c3:
	mov -2344(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007c4c6:
	mov -2336(%RBP),%RSP
	add $-2760, %RSP
	mov -2328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c58d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4e8
	jmp uuid_000000000007c4ea
uuid_000000000007c4e8:
	push %RBP
	mov -2832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4e5
	jmp uuid_000000000007c4e7
uuid_000000000007c4e5:
	push %RBP
	mov -2824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4df
	jmp uuid_000000000007c4e1
uuid_000000000007c4df:
	push %RBP
	mov -3008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4dc
	jmp uuid_000000000007c4de
uuid_000000000007c4dc:
	push %RBP
	mov -3000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4d6
	jmp uuid_000000000007c4d8
uuid_000000000007c4d6:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4d3
	jmp uuid_000000000007c4d5
uuid_000000000007c4d3:
	push %RBP
	mov -3176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4cd
	jmp uuid_000000000007c4cf
uuid_000000000007c4cd:
	push %RBP
	jmp uuid_000000000007c4ca
	jmp uuid_000000000007c4cc
uuid_000000000007c4ca:
	push %RBP
	mov -3304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3408(%rbp)
	pushq $uuid_000000000007a7a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4c7
	jmp uuid_000000000007c4c9
uuid_000000000007c4c7:
	movb $1, -3376(%rbp)
uuid_000000000007c4c9:
	mov -3400(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4cc:
	mov -3392(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4cf:
	mov -3384(%RBP),%RSP
	add $-3408, %RSP
	mov -3376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4d0
	jmp uuid_000000000007c4d2
uuid_000000000007c4d0:
	movb $1, -3200(%rbp)
uuid_000000000007c4d2:
	mov -3296(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4d5:
	mov -3216(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4d8:
	mov -3208(%RBP),%RSP
	add $-3408, %RSP
	mov -3200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4d9
	jmp uuid_000000000007c4db
uuid_000000000007c4d9:
	movb $1, -3024(%rbp)
uuid_000000000007c4db:
	mov -3120(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4de:
	mov -3040(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4e1:
	mov -3032(%RBP),%RSP
	add $-3408, %RSP
	mov -3024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4e2
	jmp uuid_000000000007c4e4
uuid_000000000007c4e2:
	movb $1, -2848(%rbp)
uuid_000000000007c4e4:
	mov -2944(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4e7:
	mov -2864(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007c4ea:
	mov -2856(%RBP),%RSP
	add $-3408, %RSP
	mov -2848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c58a
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c504
	jmp uuid_000000000007c506
uuid_000000000007c504:
	push %RBP
	mov -3480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c501
	jmp uuid_000000000007c503
uuid_000000000007c501:
	push %RBP
	mov -3472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4fb
	jmp uuid_000000000007c4fd
uuid_000000000007c4fb:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4f8
	jmp uuid_000000000007c4fa
uuid_000000000007c4f8:
	push %RBP
	mov -3648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3840(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4f2
	jmp uuid_000000000007c4f4
uuid_000000000007c4f2:
	push %RBP
	jmp uuid_000000000007c4ef
	jmp uuid_000000000007c4f1
uuid_000000000007c4ef:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3880(%rbp)
	pushq $uuid_000000000007c4eb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4ec
	jmp uuid_000000000007c4ee
uuid_000000000007c4ec:
	movb $1, -3848(%rbp)
uuid_000000000007c4ee:
	mov -3872(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007c4f1:
	mov -3864(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007c4f4:
	mov -3856(%RBP),%RSP
	add $-3880, %RSP
	mov -3848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4f5
	jmp uuid_000000000007c4f7
uuid_000000000007c4f5:
	movb $1, -3672(%rbp)
uuid_000000000007c4f7:
	mov -3768(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007c4fa:
	mov -3688(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007c4fd:
	mov -3680(%RBP),%RSP
	add $-3880, %RSP
	mov -3672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4fe
	jmp uuid_000000000007c500
uuid_000000000007c4fe:
	movb $1, -3496(%rbp)
uuid_000000000007c500:
	mov -3592(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007c503:
	mov -3512(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007c506:
	mov -3504(%RBP),%RSP
	add $-3880, %RSP
	mov -3496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c587
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3960(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c50a
	jmp uuid_000000000007c50c
uuid_000000000007c50a:
	push %RBP
	jmp uuid_000000000007c507
	jmp uuid_000000000007c509
uuid_000000000007c507:
	movb $1, -3968(%rbp)
uuid_000000000007c509:
	mov -3984(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007c50c:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
	mov -3968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c584
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c51c
	jmp uuid_000000000007c51e
uuid_000000000007c51c:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c519
	jmp uuid_000000000007c51b
uuid_000000000007c519:
	push %RBP
	mov -4048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c513
	jmp uuid_000000000007c515
uuid_000000000007c513:
	push %RBP
	jmp uuid_000000000007c510
	jmp uuid_000000000007c512
uuid_000000000007c510:
	push %RBP
	mov -4176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4280(%rbp)
	pushq $uuid_000000000007a858
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c50d
	jmp uuid_000000000007c50f
uuid_000000000007c50d:
	movb $1, -4248(%rbp)
uuid_000000000007c50f:
	mov -4272(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007c512:
	mov -4264(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007c515:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
	mov -4248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c516
	jmp uuid_000000000007c518
uuid_000000000007c516:
	movb $1, -4072(%rbp)
uuid_000000000007c518:
	mov -4168(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007c51b:
	mov -4088(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007c51e:
	mov -4080(%RBP),%RSP
	add $-4280, %RSP
	mov -4072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c581
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c52e
	jmp uuid_000000000007c530
uuid_000000000007c52e:
	push %RBP
	mov -4352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c52b
	jmp uuid_000000000007c52d
uuid_000000000007c52b:
	push %RBP
	mov -4344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4536(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c525
	jmp uuid_000000000007c527
uuid_000000000007c525:
	push %RBP
	jmp uuid_000000000007c522
	jmp uuid_000000000007c524
uuid_000000000007c522:
	push %RBP
	mov -4472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $uuid_000000000007a845
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c51f
	jmp uuid_000000000007c521
uuid_000000000007c51f:
	movb $1, -4544(%rbp)
uuid_000000000007c521:
	mov -4568(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007c524:
	mov -4560(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007c527:
	mov -4552(%RBP),%RSP
	add $-4576, %RSP
	mov -4544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c528
	jmp uuid_000000000007c52a
uuid_000000000007c528:
	movb $1, -4368(%rbp)
uuid_000000000007c52a:
	mov -4464(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007c52d:
	mov -4384(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007c530:
	mov -4376(%RBP),%RSP
	add $-4576, %RSP
	mov -4368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c57e
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4656(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c537
	jmp uuid_000000000007c539
uuid_000000000007c537:
	push %RBP
	jmp uuid_000000000007c534
	jmp uuid_000000000007c536
uuid_000000000007c534:
	push %RBP
	mov -4592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c531
	jmp uuid_000000000007c533
uuid_000000000007c531:
	movb $1, -4664(%rbp)
uuid_000000000007c533:
	mov -4688(%RBP),%RSP
	add $-4696, %RSP
uuid_000000000007c536:
	mov -4680(%RBP),%RSP
	add $-4696, %RSP
uuid_000000000007c539:
	mov -4672(%RBP),%RSP
	add $-4696, %RSP
	mov -4664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c57b
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c540
	jmp uuid_000000000007c542
uuid_000000000007c540:
	push %RBP
	jmp uuid_000000000007c53d
	jmp uuid_000000000007c53f
uuid_000000000007c53d:
	push %RBP
	mov -4712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c53a
	jmp uuid_000000000007c53c
uuid_000000000007c53a:
	movb $1, -4784(%rbp)
uuid_000000000007c53c:
	mov -4808(%RBP),%RSP
	add $-4816, %RSP
uuid_000000000007c53f:
	mov -4800(%RBP),%RSP
	add $-4816, %RSP
uuid_000000000007c542:
	mov -4792(%RBP),%RSP
	add $-4816, %RSP
	mov -4784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c578
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4896(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c54c
	jmp uuid_000000000007c54e
uuid_000000000007c54c:
	push %RBP
	pushq -4872(%RBP)
	pushq -4880(%RBP)
	pushq -4888(%RBP)
	jmp uuid_000000000007c549
	jmp uuid_000000000007c54b
uuid_000000000007c549:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c546
	jmp uuid_000000000007c548
uuid_000000000007c546:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c543
	jmp uuid_000000000007c545
uuid_000000000007c543:
	movb $1, -4904(%rbp)
uuid_000000000007c545:
	mov -5032(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007c548:
	mov -4952(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007c54b:
	mov -4920(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007c54e:
	mov -4912(%RBP),%RSP
	add $-5104, %RSP
	mov -4904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c575
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c555
	jmp uuid_000000000007c557
uuid_000000000007c555:
	push %RBP
	mov -5176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c552
	jmp uuid_000000000007c554
uuid_000000000007c552:
	push %RBP
	mov -5168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c54f
	jmp uuid_000000000007c551
uuid_000000000007c54f:
	movb $1, -5192(%rbp)
uuid_000000000007c551:
	mov -5288(%RBP),%RSP
	add $-5360, %RSP
uuid_000000000007c554:
	mov -5208(%RBP),%RSP
	add $-5360, %RSP
uuid_000000000007c557:
	mov -5200(%RBP),%RSP
	add $-5360, %RSP
	mov -5192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c572
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c55e
	jmp uuid_000000000007c560
uuid_000000000007c55e:
	push %RBP
	mov -5432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c55b
	jmp uuid_000000000007c55d
uuid_000000000007c55b:
	push %RBP
	mov -5424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c558
	jmp uuid_000000000007c55a
uuid_000000000007c558:
	movb $1, -5448(%rbp)
uuid_000000000007c55a:
	mov -5544(%RBP),%RSP
	add $-5616, %RSP
uuid_000000000007c55d:
	mov -5464(%RBP),%RSP
	add $-5616, %RSP
uuid_000000000007c560:
	mov -5456(%RBP),%RSP
	add $-5616, %RSP
	mov -5448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c56f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c564
	jmp uuid_000000000007c566
uuid_000000000007c564:
	push %RBP
	jmp uuid_000000000007c561
	jmp uuid_000000000007c563
uuid_000000000007c561:
	movb $1, -5704(%rbp)
uuid_000000000007c563:
	mov -5720(%RBP),%RSP
	add $-5720, %RSP
uuid_000000000007c566:
	mov -5712(%RBP),%RSP
	add $-5720, %RSP
	mov -5704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c56c
	push %RBP
	jmp uuid_000000000007c569
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c568
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c56b
uuid_000000000007c569:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c567
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c56b:
	mov -5728(%RBP),%RSP
	add $-5728, %RSP
	jmp uuid_000000000007c56e
uuid_000000000007c56c:
uuid_000000000007c56e:
	mov -5624(%RBP),%RSP
	add $-5720, %RSP
	jmp uuid_000000000007c571
uuid_000000000007c56f:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c571:
	mov -5368(%RBP),%RSP
	add $-5616, %RSP
	jmp uuid_000000000007c574
uuid_000000000007c572:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c574:
	mov -5112(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_000000000007c577
uuid_000000000007c575:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c577:
	mov -4824(%RBP),%RSP
	add $-5104, %RSP
	jmp uuid_000000000007c57a
uuid_000000000007c578:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c57a:
	mov -4704(%RBP),%RSP
	add $-4816, %RSP
	jmp uuid_000000000007c57d
uuid_000000000007c57b:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c57d:
	mov -4584(%RBP),%RSP
	add $-4696, %RSP
	jmp uuid_000000000007c580
uuid_000000000007c57e:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c580:
	mov -4288(%RBP),%RSP
	add $-4576, %RSP
	jmp uuid_000000000007c583
uuid_000000000007c581:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c583:
	mov -3992(%RBP),%RSP
	add $-4280, %RSP
	jmp uuid_000000000007c586
uuid_000000000007c584:
uuid_000000000007c586:
	mov -3888(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_000000000007c589
uuid_000000000007c587:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c589:
	mov -3416(%RBP),%RSP
	add $-3880, %RSP
	jmp uuid_000000000007c58c
uuid_000000000007c58a:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	pushq -3088(%rbp)
	pushq -3096(%rbp)
	pushq -3104(%rbp)
	pushq -3112(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c58c:
	mov -2768(%RBP),%RSP
	add $-3408, %RSP
	jmp uuid_000000000007c58f
uuid_000000000007c58d:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq -2616(%rbp)
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c58f:
	mov -2248(%RBP),%RSP
	add $-2760, %RSP
	jmp uuid_000000000007c592
uuid_000000000007c590:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c592:
	mov -1728(%RBP),%RSP
	add $-2240, %RSP
	jmp uuid_000000000007c595
uuid_000000000007c593:
uuid_000000000007c595:
	mov -1400(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_000000000007c598
uuid_000000000007c596:
uuid_000000000007c598:
	mov -1176(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007c59b
uuid_000000000007c599:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c59b:
	mov -672(%RBP),%RSP
	add $-1168, %RSP
	jmp uuid_000000000007c59e
uuid_000000000007c59c:
uuid_000000000007c59e:
	mov -560(%RBP),%RSP
	add $-664, %RSP
	jmp uuid_000000000007c5a1
uuid_000000000007c59f:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c42e
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c430
uuid_000000000007c42e:
uuid_000000000007c430:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c5a1:
	mov -320(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007c5a4
uuid_000000000007c5a2:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c5a4:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007c5a7
uuid_000000000007c5a5:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c5a7:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_one_SB_typed_CL_ArrowNilAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5a8
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8d3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c5aa
uuid_000000000007c5a8:
uuid_000000000007c5aa:
	mov -88(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
infer_SB_ctx_CL_ArrowTContextConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5d2
	jmp uuid_000000000007c5d4
uuid_000000000007c5d2:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5c0
	jmp uuid_000000000007c5c2
uuid_000000000007c5c0:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5ae
	jmp uuid_000000000007c5b0
uuid_000000000007c5ae:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007c5ab
	jmp uuid_000000000007c5ad
uuid_000000000007c5ab:
	movb $1, -552(%rbp)
uuid_000000000007c5ad:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c5b0:
	mov -560(%RBP),%RSP
	add $-592, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5bd
	jmp uuid_000000000007c5bf
uuid_000000000007c5bd:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5b7
	jmp uuid_000000000007c5b9
uuid_000000000007c5b7:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007c5b4
	jmp uuid_000000000007c5b6
uuid_000000000007c5b4:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c5b1
	jmp uuid_000000000007c5b3
uuid_000000000007c5b1:
	movb $1, -680(%rbp)
uuid_000000000007c5b3:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007c5b6:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007c5b9:
	mov -688(%RBP),%RSP
	add $-768, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5ba
	jmp uuid_000000000007c5bc
uuid_000000000007c5ba:
	movb $1, -456(%rbp)
uuid_000000000007c5bc:
	mov -600(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007c5bf:
	mov -472(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007c5c2:
	mov -464(%RBP),%RSP
	add $-768, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5cf
	jmp uuid_000000000007c5d1
uuid_000000000007c5cf:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5c9
	jmp uuid_000000000007c5cb
uuid_000000000007c5c9:
	push %RBP
	jmp uuid_000000000007c5c6
	jmp uuid_000000000007c5c8
uuid_000000000007c5c6:
	push %RBP
	mov -784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5c3
	jmp uuid_000000000007c5c5
uuid_000000000007c5c3:
	movb $1, -856(%rbp)
uuid_000000000007c5c5:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c5c8:
	mov -872(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c5cb:
	mov -864(%RBP),%RSP
	add $-888, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5cc
	jmp uuid_000000000007c5ce
uuid_000000000007c5cc:
	movb $1, -360(%rbp)
uuid_000000000007c5ce:
	mov -776(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c5d1:
	mov -376(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c5d4:
	mov -368(%RBP),%RSP
	add $-888, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c613
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c605
	jmp uuid_000000000007c607
uuid_000000000007c605:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5fc
	jmp uuid_000000000007c5fe
uuid_000000000007c5fc:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5ea
	jmp uuid_000000000007c5ec
uuid_000000000007c5ea:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5d8
	jmp uuid_000000000007c5da
uuid_000000000007c5d8:
	push %RBP
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	jmp uuid_000000000007c5d5
	jmp uuid_000000000007c5d7
uuid_000000000007c5d5:
	movb $1, -1264(%rbp)
uuid_000000000007c5d7:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c5da:
	mov -1272(%RBP),%RSP
	add $-1304, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5e7
	jmp uuid_000000000007c5e9
uuid_000000000007c5e7:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5e1
	jmp uuid_000000000007c5e3
uuid_000000000007c5e1:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	jmp uuid_000000000007c5de
	jmp uuid_000000000007c5e0
uuid_000000000007c5de:
	push %RBP
	mov -1320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c5db
	jmp uuid_000000000007c5dd
uuid_000000000007c5db:
	movb $1, -1392(%rbp)
uuid_000000000007c5dd:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c5e0:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c5e3:
	mov -1400(%RBP),%RSP
	add $-1480, %RSP
	mov -1392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5e4
	jmp uuid_000000000007c5e6
uuid_000000000007c5e4:
	movb $1, -1168(%rbp)
uuid_000000000007c5e6:
	mov -1312(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c5e9:
	mov -1184(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c5ec:
	mov -1176(%RBP),%RSP
	add $-1480, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5f9
	jmp uuid_000000000007c5fb
uuid_000000000007c5f9:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5f3
	jmp uuid_000000000007c5f5
uuid_000000000007c5f3:
	push %RBP
	jmp uuid_000000000007c5f0
	jmp uuid_000000000007c5f2
uuid_000000000007c5f0:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5ed
	jmp uuid_000000000007c5ef
uuid_000000000007c5ed:
	movb $1, -1568(%rbp)
uuid_000000000007c5ef:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c5f2:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c5f5:
	mov -1576(%RBP),%RSP
	add $-1600, %RSP
	mov -1568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5f6
	jmp uuid_000000000007c5f8
uuid_000000000007c5f6:
	movb $1, -1072(%rbp)
uuid_000000000007c5f8:
	mov -1488(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c5fb:
	mov -1088(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007c5fe:
	mov -1080(%RBP),%RSP
	add $-1600, %RSP
	mov -1072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c602
	jmp uuid_000000000007c604
uuid_000000000007c602:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c5ff
	jmp uuid_000000000007c601
uuid_000000000007c5ff:
	movb $1, -976(%rbp)
uuid_000000000007c601:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c604:
	mov -992(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c607:
	mov -984(%RBP),%RSP
	add $-1680, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c610
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -1760(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c60d
	push %RBP
	jmp uuid_000000000007c60a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c609
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c60c
uuid_000000000007c60a:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c608
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c60c:
	mov -1768(%RBP),%RSP
	add $-1768, %RSP
	jmp uuid_000000000007c60f
uuid_000000000007c60d:
uuid_000000000007c60f:
	mov -1688(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007c612
uuid_000000000007c610:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1480(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1480(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c612:
	mov -896(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_000000000007c615
uuid_000000000007c613:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -768(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -768(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c615:
	mov -280(%RBP),%RSP
	add $-888, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c625
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c61e
	jmp uuid_000000000007c620
uuid_000000000007c61e:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c61b
	jmp uuid_000000000007c61d
uuid_000000000007c61b:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007c618
	jmp uuid_000000000007c61a
uuid_000000000007c618:
	movb $1, -312(%rbp)
uuid_000000000007c61a:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007c61d:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007c620:
	mov -320(%RBP),%RSP
	add $-400, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c622
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c621
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c624
uuid_000000000007c622:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c624:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007c627
uuid_000000000007c625:
uuid_000000000007c627:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c62e
	jmp uuid_000000000007c630
uuid_000000000007c62e:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c62b
	jmp uuid_000000000007c62d
uuid_000000000007c62b:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c628
	jmp uuid_000000000007c62a
uuid_000000000007c628:
	movb $1, -216(%rbp)
uuid_000000000007c62a:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c62d:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c630:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c64a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c634
	jmp uuid_000000000007c636
uuid_000000000007c634:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c631
	jmp uuid_000000000007c633
uuid_000000000007c631:
	movb $1, -328(%rbp)
uuid_000000000007c633:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c636:
	mov -336(%RBP),%RSP
	add $-352, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c647
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c63d
	jmp uuid_000000000007c63f
uuid_000000000007c63d:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c63a
	jmp uuid_000000000007c63c
uuid_000000000007c63a:
	push %RBP
	jmp uuid_000000000007c637
	jmp uuid_000000000007c639
uuid_000000000007c637:
	movb $1, -392(%rbp)
uuid_000000000007c639:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007c63c:
	mov -408(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007c63f:
	mov -400(%RBP),%RSP
	add $-456, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c644
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c641
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c640
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c643
uuid_000000000007c641:
uuid_000000000007c643:
	mov -464(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007c646
uuid_000000000007c644:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c646:
	mov -360(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007c649
uuid_000000000007c647:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -352(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c649:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007c64c
uuid_000000000007c64a:
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c64c:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
compile_SB_exit_SB_cleanup_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c64d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c64e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c64f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_data_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c650
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_text_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c651
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c652
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c653
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c656
	jmp uuid_000000000007c658
uuid_000000000007c656:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c654
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c655
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007c658:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	push %RBP
	mov $main_SB_with_SB_argv_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007c65b
	jmp uuid_000000000007c65d
uuid_000000000007c65b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c659
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c65a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007c65d:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	mov $main_SB_with_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007c668
	jmp uuid_000000000007c66a
uuid_000000000007c668:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c65e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c65f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
	mov $main_SB_with_SB_argv_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007c662
	jmp uuid_000000000007c664
uuid_000000000007c662:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c660
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c661
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007c664:
	mov -64(%RBP),%RSP
	add $-64, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c665
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c666
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c667
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007c66a:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_CL_ArrowNilNil:
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	push %RBP
	pushq -16(%rbp)
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c66f
	push %RBP
	pushq -16(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c66c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c66b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c66e
uuid_000000000007c66c:
#call function compile-blob : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_blob_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c66e:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	jmp uuid_000000000007c671
uuid_000000000007c66f:
#call function compile-gnu : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_gnu_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c671:
	mov -24(%RBP),%RSP
	add $-32, %RSP
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_blob_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007c6ca:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6cb
	jmp uuid_000000000007c6cc
uuid_000000000007c6cb:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c681
	jmp uuid_000000000007c683
uuid_000000000007c681:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c678
	jmp uuid_000000000007c67a
uuid_000000000007c678:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c675
	jmp uuid_000000000007c677
uuid_000000000007c675:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c672
	jmp uuid_000000000007c674
uuid_000000000007c672:
	movb $1, -336(%rbp)
uuid_000000000007c674:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007c677:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007c67a:
	mov -344(%RBP),%RSP
	add $-504, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c67e
	jmp uuid_000000000007c680
uuid_000000000007c67e:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c67b
	jmp uuid_000000000007c67d
uuid_000000000007c67b:
	movb $1, -240(%rbp)
uuid_000000000007c67d:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c680:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c683:
	mov -248(%RBP),%RSP
	add $-584, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6c7
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c69f
	jmp uuid_000000000007c6a1
uuid_000000000007c69f:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c696
	jmp uuid_000000000007c698
uuid_000000000007c696:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c693
	jmp uuid_000000000007c695
uuid_000000000007c693:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c68d
	jmp uuid_000000000007c68f
uuid_000000000007c68d:
	push %RBP
	jmp uuid_000000000007c68a
	jmp uuid_000000000007c68c
uuid_000000000007c68a:
	push %RBP
	jmp uuid_000000000007c687
	jmp uuid_000000000007c689
uuid_000000000007c687:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c684
	jmp uuid_000000000007c686
uuid_000000000007c684:
	movb $1, -928(%rbp)
uuid_000000000007c686:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c689:
	mov -952(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c68c:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c68f:
	mov -936(%RBP),%RSP
	add $-968, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c690
	jmp uuid_000000000007c692
uuid_000000000007c690:
	movb $1, -768(%rbp)
uuid_000000000007c692:
	mov -864(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c695:
	mov -784(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c698:
	mov -776(%RBP),%RSP
	add $-968, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c69c
	jmp uuid_000000000007c69e
uuid_000000000007c69c:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c699
	jmp uuid_000000000007c69b
uuid_000000000007c699:
	movb $1, -672(%rbp)
uuid_000000000007c69b:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007c69e:
	mov -688(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007c6a1:
	mov -680(%RBP),%RSP
	add $-1048, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6c4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6bd
	jmp uuid_000000000007c6bf
uuid_000000000007c6bd:
	push %RBP
	mov -1120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6ba
	jmp uuid_000000000007c6bc
uuid_000000000007c6ba:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6b7
	jmp uuid_000000000007c6b9
uuid_000000000007c6b7:
	movb $1, -1136(%rbp)
uuid_000000000007c6b9:
	mov -1232(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c6bc:
	mov -1152(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c6bf:
	mov -1144(%RBP),%RSP
	add $-1304, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6c1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c6c0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c6c3
uuid_000000000007c6c1:
	movq -1304(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c6c3:
	mov -1056(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_000000000007c6c6
uuid_000000000007c6c4:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6ab
	jmp uuid_000000000007c6ad
uuid_000000000007c6ab:
	push %RBP
	jmp uuid_000000000007c6a8
	jmp uuid_000000000007c6aa
uuid_000000000007c6a8:
	push %RBP
	jmp uuid_000000000007c6a5
	jmp uuid_000000000007c6a7
uuid_000000000007c6a5:
	push %RBP
	jmp uuid_000000000007c6a2
	jmp uuid_000000000007c6a4
uuid_000000000007c6a2:
	movb $1, -1208(%rbp)
uuid_000000000007c6a4:
	mov -1240(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c6a7:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c6aa:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c6ad:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6b4
	push %RBP
	jmp uuid_000000000007c6b1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c6b0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c6b3
uuid_000000000007c6b1:
uuid_000000000007c6b3:
	mov -1248(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007c6b6
uuid_000000000007c6b4:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $uuid_000000000007c6ae
	pushq $0
	pushq $uuid_000000000007c6af
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007c6b6:
	mov -1128(%RBP),%RSP
	add $-1392, %RSP
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c6c6:
	mov -592(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007c6c9
uuid_000000000007c6c7:
	movq -584(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c6c9:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c6ca
uuid_000000000007c6cc:
	pushq $0
	pushq $0
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r14
	movq 0(%r14), %r15
	movq %r15, -80(%rbp)
	movq 8(%r14), %r15
	movq %r15, -72(%rbp)
	movq 16(%r14), %r15
	movq %r15, -64(%rbp)
	movq 24(%r14), %r15
	movq %r15, -56(%rbp)
	movq 32(%r14), %r15
	movq %r15, -48(%rbp)
	movq 40(%r14), %r15
	movq %r15, -40(%rbp)
	movq 48(%r14), %r15
	movq %r15, -32(%rbp)
	movq 56(%r14), %r15
	movq %r15, -24(%rbp)
	movq 64(%r14), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c723:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c724
	jmp uuid_000000000007c725
uuid_000000000007c724:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6e8
	jmp uuid_000000000007c6ea
uuid_000000000007c6e8:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6df
	jmp uuid_000000000007c6e1
uuid_000000000007c6df:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6dc
	jmp uuid_000000000007c6de
uuid_000000000007c6dc:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6d6
	jmp uuid_000000000007c6d8
uuid_000000000007c6d6:
	push %RBP
	jmp uuid_000000000007c6d3
	jmp uuid_000000000007c6d5
uuid_000000000007c6d3:
	push %RBP
	jmp uuid_000000000007c6d0
	jmp uuid_000000000007c6d2
uuid_000000000007c6d0:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c6cd
	jmp uuid_000000000007c6cf
uuid_000000000007c6cd:
	movb $1, -520(%rbp)
uuid_000000000007c6cf:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c6d2:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c6d5:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c6d8:
	mov -528(%RBP),%RSP
	add $-560, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6d9
	jmp uuid_000000000007c6db
uuid_000000000007c6d9:
	movb $1, -360(%rbp)
uuid_000000000007c6db:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c6de:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c6e1:
	mov -368(%RBP),%RSP
	add $-560, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6e5
	jmp uuid_000000000007c6e7
uuid_000000000007c6e5:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6e2
	jmp uuid_000000000007c6e4
uuid_000000000007c6e2:
	movb $1, -264(%rbp)
uuid_000000000007c6e4:
	mov -568(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007c6e7:
	mov -280(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007c6ea:
	mov -272(%RBP),%RSP
	add $-640, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c720
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6fa
	jmp uuid_000000000007c6fc
uuid_000000000007c6fa:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6f1
	jmp uuid_000000000007c6f3
uuid_000000000007c6f1:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6ee
	jmp uuid_000000000007c6f0
uuid_000000000007c6ee:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6eb
	jmp uuid_000000000007c6ed
uuid_000000000007c6eb:
	movb $1, -824(%rbp)
uuid_000000000007c6ed:
	mov -920(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007c6f0:
	mov -840(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007c6f3:
	mov -832(%RBP),%RSP
	add $-992, %RSP
	mov -824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6f7
	jmp uuid_000000000007c6f9
uuid_000000000007c6f7:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6f4
	jmp uuid_000000000007c6f6
uuid_000000000007c6f4:
	movb $1, -728(%rbp)
uuid_000000000007c6f6:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007c6f9:
	mov -744(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007c6fc:
	mov -736(%RBP),%RSP
	add $-1072, %RSP
	mov -728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c71d
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c709
	jmp uuid_000000000007c70b
uuid_000000000007c709:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c700
	jmp uuid_000000000007c702
uuid_000000000007c700:
	push %RBP
	jmp uuid_000000000007c6fd
	jmp uuid_000000000007c6ff
uuid_000000000007c6fd:
	movb $1, -1256(%rbp)
uuid_000000000007c6ff:
	mov -1272(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007c702:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
	mov -1256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c706
	jmp uuid_000000000007c708
uuid_000000000007c706:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c703
	jmp uuid_000000000007c705
uuid_000000000007c703:
	movb $1, -1160(%rbp)
uuid_000000000007c705:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c708:
	mov -1176(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c70b:
	mov -1168(%RBP),%RSP
	add $-1352, %RSP
	mov -1160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c71a
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1432(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c712
	jmp uuid_000000000007c714
uuid_000000000007c712:
	push %RBP
	mov -1424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c70f
	jmp uuid_000000000007c711
uuid_000000000007c70f:
	push %RBP
	mov -1416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c70c
	jmp uuid_000000000007c70e
uuid_000000000007c70c:
	movb $1, -1440(%rbp)
uuid_000000000007c70e:
	mov -1536(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007c711:
	mov -1456(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007c714:
	mov -1448(%RBP),%RSP
	add $-1608, %RSP
	mov -1440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c717
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c716
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c719
uuid_000000000007c717:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_000000000007c715
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq $0
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1608(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c719:
	mov -1360(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007c71c
uuid_000000000007c71a:
	movq -1352(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c71c:
	mov -1080(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007c71f
uuid_000000000007c71d:
	movq -1072(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c71f:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007c722
uuid_000000000007c720:
	movq -640(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c722:
	mov -184(%RBP),%RSP
	add $-640, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c723
uuid_000000000007c725:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_gnu_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007c785:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c786
	jmp uuid_000000000007c787
uuid_000000000007c786:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c741
	jmp uuid_000000000007c743
uuid_000000000007c741:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c738
	jmp uuid_000000000007c73a
uuid_000000000007c738:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c735
	jmp uuid_000000000007c737
uuid_000000000007c735:
	push %RBP
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c72f
	jmp uuid_000000000007c731
uuid_000000000007c72f:
	push %RBP
	jmp uuid_000000000007c72c
	jmp uuid_000000000007c72e
uuid_000000000007c72c:
	push %RBP
	jmp uuid_000000000007c729
	jmp uuid_000000000007c72b
uuid_000000000007c729:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c726
	jmp uuid_000000000007c728
uuid_000000000007c726:
	movb $1, -496(%rbp)
uuid_000000000007c728:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c72b:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c72e:
	mov -512(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c731:
	mov -504(%RBP),%RSP
	add $-536, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c732
	jmp uuid_000000000007c734
uuid_000000000007c732:
	movb $1, -336(%rbp)
uuid_000000000007c734:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c737:
	mov -352(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c73a:
	mov -344(%RBP),%RSP
	add $-536, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c73e
	jmp uuid_000000000007c740
uuid_000000000007c73e:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c73b
	jmp uuid_000000000007c73d
uuid_000000000007c73b:
	movb $1, -240(%rbp)
uuid_000000000007c73d:
	mov -544(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007c740:
	mov -256(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007c743:
	mov -248(%RBP),%RSP
	add $-616, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c782
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c76f
	jmp uuid_000000000007c771
uuid_000000000007c76f:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c766
	jmp uuid_000000000007c768
uuid_000000000007c766:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c763
	jmp uuid_000000000007c765
uuid_000000000007c763:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c760
	jmp uuid_000000000007c762
uuid_000000000007c760:
	movb $1, -800(%rbp)
uuid_000000000007c762:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c765:
	mov -816(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c768:
	mov -808(%RBP),%RSP
	add $-968, %RSP
	mov -800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c76c
	jmp uuid_000000000007c76e
uuid_000000000007c76c:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c769
	jmp uuid_000000000007c76b
uuid_000000000007c769:
	movb $1, -704(%rbp)
uuid_000000000007c76b:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007c76e:
	mov -720(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007c771:
	mov -712(%RBP),%RSP
	add $-1048, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c77f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c778
	jmp uuid_000000000007c77a
uuid_000000000007c778:
	push %RBP
	jmp uuid_000000000007c775
	jmp uuid_000000000007c777
uuid_000000000007c775:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c772
	jmp uuid_000000000007c774
uuid_000000000007c772:
	movb $1, -1136(%rbp)
uuid_000000000007c774:
	mov -1160(%RBP),%RSP
	add $-1232, %RSP
uuid_000000000007c777:
	mov -1152(%RBP),%RSP
	add $-1232, %RSP
uuid_000000000007c77a:
	mov -1144(%RBP),%RSP
	add $-1232, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c77c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c77b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c77e
uuid_000000000007c77c:
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c77e:
	mov -1056(%RBP),%RSP
	add $-1232, %RSP
	jmp uuid_000000000007c781
uuid_000000000007c77f:
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c781:
	mov -624(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_000000000007c784
uuid_000000000007c782:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_000000000007c744
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c745
	jmp uuid_000000000007c747
uuid_000000000007c745:
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007c747:
	mov -624(%RBP),%RSP
	add $-624, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c75d
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c75a
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007c6ae
	pushq $0
	pushq $uuid_000000000007c748
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $uuid_000000000007c749
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c750
	jmp uuid_000000000007c752
uuid_000000000007c750:
	push %RBP
	jmp uuid_000000000007c74d
	jmp uuid_000000000007c74f
uuid_000000000007c74d:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq $uuid_000000000007c749
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c74a
	jmp uuid_000000000007c74c
uuid_000000000007c74a:
	movb $1, -880(%rbp)
uuid_000000000007c74c:
	mov -904(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007c74f:
	mov -896(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007c752:
	mov -888(%RBP),%RSP
	add $-912, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c757
	push %RBP
	jmp uuid_000000000007c754
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c753
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c756
uuid_000000000007c754:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6eb
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
	pushq -976(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007c756:
	mov -920(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007c759
uuid_000000000007c757:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007c759:
	mov -848(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007c75c
uuid_000000000007c75a:
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007c75c:
	mov -816(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_000000000007c75f
uuid_000000000007c75d:
uuid_000000000007c75f:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	movq -616(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007c784:
	mov -160(%RBP),%RSP
	add $-808, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c785
uuid_000000000007c787:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-finish : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_finish_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_finish_CL_ArrowNilNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-text-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_text_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-exit-cleanup : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_exit_SB_cleanup_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c788
	jmp uuid_000000000007c78a
uuid_000000000007c788:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-data-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_data_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007c78a:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext:
	pushq $0
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c791
	jmp uuid_000000000007c793
uuid_000000000007c791:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c78e
	jmp uuid_000000000007c790
uuid_000000000007c78e:
	push %RBP
	jmp uuid_000000000007c78b
	jmp uuid_000000000007c78d
uuid_000000000007c78b:
	movb $1, -448(%rbp)
uuid_000000000007c78d:
	mov -544(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007c790:
	mov -464(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007c793:
	mov -456(%RBP),%RSP
	add $-544, %RSP
	mov -448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c79b
	push %RBP
	jmp uuid_000000000007c798
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c797
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c79a
uuid_000000000007c798:
uuid_000000000007c79a:
	mov -552(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007c79d
uuid_000000000007c79b:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c794
	jmp uuid_000000000007c796
uuid_000000000007c794:
	movq $1, -288(%rbp)
uuid_000000000007c796:
	mov -552(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007c79d:
	mov -368(%RBP),%RSP
	add $-552, %RSP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7b9
	jmp uuid_000000000007c7bb
uuid_000000000007c7b9:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7b0
	jmp uuid_000000000007c7b2
uuid_000000000007c7b0:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7ad
	jmp uuid_000000000007c7af
uuid_000000000007c7ad:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7a7
	jmp uuid_000000000007c7a9
uuid_000000000007c7a7:
	push %RBP
	jmp uuid_000000000007c7a4
	jmp uuid_000000000007c7a6
uuid_000000000007c7a4:
	push %RBP
	jmp uuid_000000000007c7a1
	jmp uuid_000000000007c7a3
uuid_000000000007c7a1:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c79e
	jmp uuid_000000000007c7a0
uuid_000000000007c79e:
	movb $1, -968(%rbp)
uuid_000000000007c7a0:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007c7a3:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007c7a6:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007c7a9:
	mov -976(%RBP),%RSP
	add $-1008, %RSP
	mov -968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7aa
	jmp uuid_000000000007c7ac
uuid_000000000007c7aa:
	movb $1, -808(%rbp)
uuid_000000000007c7ac:
	mov -904(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007c7af:
	mov -824(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007c7b2:
	mov -816(%RBP),%RSP
	add $-1008, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7b6
	jmp uuid_000000000007c7b8
uuid_000000000007c7b6:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7b3
	jmp uuid_000000000007c7b5
uuid_000000000007c7b3:
	movb $1, -712(%rbp)
uuid_000000000007c7b5:
	mov -1016(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c7b8:
	mov -728(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c7bb:
	mov -720(%RBP),%RSP
	add $-1088, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7cf
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7c5
	jmp uuid_000000000007c7c7
uuid_000000000007c7c5:
	push %RBP
	jmp uuid_000000000007c7c2
	jmp uuid_000000000007c7c4
uuid_000000000007c7c2:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7bf
	jmp uuid_000000000007c7c1
uuid_000000000007c7bf:
	movb $1, -1176(%rbp)
uuid_000000000007c7c1:
	mov -1200(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007c7c4:
	mov -1192(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007c7c7:
	mov -1184(%RBP),%RSP
	add $-1272, %RSP
	mov -1176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7cc
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7c9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c7c8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c7cb
uuid_000000000007c7c9:
uuid_000000000007c7cb:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007c7ce
uuid_000000000007c7cc:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c7ce:
	mov -1096(%RBP),%RSP
	add $-1272, %RSP
	jmp uuid_000000000007c7d1
uuid_000000000007c7cf:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	mov -288(%RBP), %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7bc
#call function compile-global : Arrow<Cons<Cons<FContext,String>,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1008(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call compile_SB_global_CL_ArrowNilConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c7be
uuid_000000000007c7bc:
uuid_000000000007c7be:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007c7d1:
	mov -632(%RBP),%RSP
	add $-1096, %RSP
	mov %rbp, %rsp
	sub $280, %rsp
	ret
compile_SB_write_CL_ArrowNilNil:
#call function write-file : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_target_CL_String, %r15
	pushq 0(%r15)
	mov $assemble_SB_final_CL_String, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call write_SB_file_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_new_CL_ArrowFContextNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	subq $200, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007c813:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c814
	jmp uuid_000000000007c815
uuid_000000000007c814:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7de
	jmp uuid_000000000007c7e0
uuid_000000000007c7de:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007c7db
	jmp uuid_000000000007c7dd
uuid_000000000007c7db:
	push %RBP
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_000000000007c7d8
	jmp uuid_000000000007c7da
uuid_000000000007c7d8:
	push %RBP
	mov -920(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c7d5
	jmp uuid_000000000007c7d7
uuid_000000000007c7d5:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7d2
	jmp uuid_000000000007c7d4
uuid_000000000007c7d2:
	movb $1, -1112(%rbp)
uuid_000000000007c7d4:
	mov -1336(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007c7d7:
	mov -1320(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007c7da:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007c7dd:
	mov -1128(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007c7e0:
	mov -1120(%RBP),%RSP
	add $-1536, %RSP
	mov -1112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c810
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c80f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c812
uuid_000000000007c810:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c80c
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c80e
uuid_000000000007c80c:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7f9
	jmp uuid_000000000007c7fb
uuid_000000000007c7f9:
	push %RBP
	mov -1592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7f0
	jmp uuid_000000000007c7f2
uuid_000000000007c7f0:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7e7
	jmp uuid_000000000007c7e9
uuid_000000000007c7e7:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7e4
	jmp uuid_000000000007c7e6
uuid_000000000007c7e4:
	push %RBP
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	jmp uuid_000000000007c7e1
	jmp uuid_000000000007c7e3
uuid_000000000007c7e1:
	movb $1, -1736(%rbp)
uuid_000000000007c7e3:
	mov -1800(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007c7e6:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007c7e9:
	mov -1744(%RBP),%RSP
	add $-1824, %RSP
	mov -1736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7ed
	jmp uuid_000000000007c7ef
uuid_000000000007c7ed:
	push %RBP
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_000000000007c7ea
	jmp uuid_000000000007c7ec
uuid_000000000007c7ea:
	movb $1, -1672(%rbp)
uuid_000000000007c7ec:
	mov -1832(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007c7ef:
	mov -1688(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007c7f2:
	mov -1680(%RBP),%RSP
	add $-1856, %RSP
	mov -1672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7f6
	jmp uuid_000000000007c7f8
uuid_000000000007c7f6:
	push %RBP
	mov -1584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7f3
	jmp uuid_000000000007c7f5
uuid_000000000007c7f3:
	movb $1, -1608(%rbp)
uuid_000000000007c7f5:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c7f8:
	mov -1624(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c7fb:
	mov -1616(%RBP),%RSP
	add $-1872, %RSP
	mov -1608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c809
	push %RBP
	jmp uuid_000000000007c806
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c805
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c808
uuid_000000000007c806:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c808:
	mov -1880(%RBP),%RSP
	add $-1880, %RSP
	jmp uuid_000000000007c80b
uuid_000000000007c809:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c802
	jmp uuid_000000000007c804
uuid_000000000007c802:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7ff
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
	jmp uuid_000000000007c801
uuid_000000000007c7ff:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7fc
	jmp uuid_000000000007c7fe
uuid_000000000007c7fc:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
uuid_000000000007c7fe:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c801:
	mov -1888(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c804:
	mov -1880(%RBP),%RSP
	add $-1896, %RSP
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c80b:
	mov -1576(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c80e:
	mov -1544(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c812:
	mov -904(%RBP),%RSP
	add $-1896, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c813
uuid_000000000007c815:
	push %RBP
	mov -312(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	pushq %R13
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c832
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c816
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c817
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -520(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -512(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c82e:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c82f
	jmp uuid_000000000007c830
uuid_000000000007c82f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c824
	jmp uuid_000000000007c826
uuid_000000000007c824:
	push %RBP
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007c821
	jmp uuid_000000000007c823
uuid_000000000007c821:
	push %RBP
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	jmp uuid_000000000007c81e
	jmp uuid_000000000007c820
uuid_000000000007c81e:
	push %RBP
	mov -928(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c81b
	jmp uuid_000000000007c81d
uuid_000000000007c81b:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c818
	jmp uuid_000000000007c81a
uuid_000000000007c818:
	movb $1, -1120(%rbp)
uuid_000000000007c81a:
	mov -1344(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007c81d:
	mov -1328(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007c820:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007c823:
	mov -1136(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007c826:
	mov -1128(%RBP),%RSP
	add $-1544, %RSP
	mov -1120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c82b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c82a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c82d
uuid_000000000007c82b:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c827
	jmp uuid_000000000007c829
uuid_000000000007c827:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c829:
	mov -1552(%RBP),%RSP
	add $-1552, %RSP
	movq -1544(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c82d:
	mov -912(%RBP),%RSP
	add $-1552, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c82e
uuid_000000000007c830:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c831
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c834
uuid_000000000007c832:
uuid_000000000007c834:
	mov -704(%RBP),%RSP
	add $-704, %RSP
	subq $152, %rsp
	pushq -672(%rbp)
	pushq -664(%rbp)
	pushq -656(%rbp)
	pushq -648(%rbp)
	pushq -640(%rbp)
	pushq -632(%rbp)
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $168, %rsp
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext:
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007c88d:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c88e
	jmp uuid_000000000007c88f
uuid_000000000007c88e:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c843
	jmp uuid_000000000007c845
uuid_000000000007c843:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_000000000007c840
	jmp uuid_000000000007c842
uuid_000000000007c840:
	push %RBP
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_000000000007c83d
	jmp uuid_000000000007c83f
uuid_000000000007c83d:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c83a
	jmp uuid_000000000007c83c
uuid_000000000007c83a:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c837
	jmp uuid_000000000007c839
uuid_000000000007c837:
	movb $1, -928(%rbp)
uuid_000000000007c839:
	mov -1152(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c83c:
	mov -1136(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c83f:
	mov -1104(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c842:
	mov -944(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c845:
	mov -936(%RBP),%RSP
	add $-1352, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c88a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c889
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c88c
uuid_000000000007c88a:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c886
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c888
uuid_000000000007c886:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c85e
	jmp uuid_000000000007c860
uuid_000000000007c85e:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c855
	jmp uuid_000000000007c857
uuid_000000000007c855:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c84c
	jmp uuid_000000000007c84e
uuid_000000000007c84c:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1608(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c849
	jmp uuid_000000000007c84b
uuid_000000000007c849:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	jmp uuid_000000000007c846
	jmp uuid_000000000007c848
uuid_000000000007c846:
	movb $1, -1552(%rbp)
uuid_000000000007c848:
	mov -1616(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007c84b:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007c84e:
	mov -1560(%RBP),%RSP
	add $-1640, %RSP
	mov -1552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c852
	jmp uuid_000000000007c854
uuid_000000000007c852:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	jmp uuid_000000000007c84f
	jmp uuid_000000000007c851
uuid_000000000007c84f:
	movb $1, -1488(%rbp)
uuid_000000000007c851:
	mov -1648(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007c854:
	mov -1504(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007c857:
	mov -1496(%RBP),%RSP
	add $-1672, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c85b
	jmp uuid_000000000007c85d
uuid_000000000007c85b:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c858
	jmp uuid_000000000007c85a
uuid_000000000007c858:
	movb $1, -1424(%rbp)
uuid_000000000007c85a:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c85d:
	mov -1440(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c860:
	mov -1432(%RBP),%RSP
	add $-1688, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c883
	push %RBP
	jmp uuid_000000000007c880
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c87f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c882
uuid_000000000007c880:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c87c
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	jmp uuid_000000000007c87e
uuid_000000000007c87c:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007c87e:
	mov -1704(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007c882:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_000000000007c885
uuid_000000000007c883:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c875
	jmp uuid_000000000007c877
uuid_000000000007c875:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c872
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c86f
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_000000000007c871
uuid_000000000007c86f:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007c871:
	mov -1712(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007c874
uuid_000000000007c872:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c868
	jmp uuid_000000000007c86a
uuid_000000000007c868:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c865
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_000000000007c867
uuid_000000000007c865:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007c867:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c86a:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c874:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c877:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c885:
	mov -1392(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c888:
	mov -1360(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007c88c:
	mov -720(%RBP),%RSP
	add $-1720, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c88d
uuid_000000000007c88f:
	push %RBP
	mov -312(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	pushq %R13
#call function .length : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c891
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c890
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c831
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c893
uuid_000000000007c891:
uuid_000000000007c893:
	mov -520(%RBP),%RSP
	add $-520, %RSP
	subq $168, %rsp
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_vararg_CL_ArrowFragmentListConsASTConsTypeConsStringFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007c8aa:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8ab
	jmp uuid_000000000007c8ac
uuid_000000000007c8ab:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8a0
	jmp uuid_000000000007c8a2
uuid_000000000007c8a0:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	jmp uuid_000000000007c89d
	jmp uuid_000000000007c89f
uuid_000000000007c89d:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_000000000007c89a
	jmp uuid_000000000007c89c
uuid_000000000007c89a:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c897
	jmp uuid_000000000007c899
uuid_000000000007c897:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c894
	jmp uuid_000000000007c896
uuid_000000000007c894:
	movb $1, -896(%rbp)
uuid_000000000007c896:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c899:
	mov -1104(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c89c:
	mov -1072(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c89f:
	mov -912(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c8a2:
	mov -904(%RBP),%RSP
	add $-1320, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8a7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c8a6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c8a9
uuid_000000000007c8a7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8a3
	jmp uuid_000000000007c8a5
uuid_000000000007c8a3:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007c8a5:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
	movq -1320(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c8a9:
	mov -688(%RBP),%RSP
	add $-1328, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c8aa
uuid_000000000007c8ac:
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	subq $200, %rsp
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::set-vararg : Arrow<Cons<Fragment,List<Array<Fragment,?>>>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
#call function cons : Arrow<Cons<Array<Fragment,?>,List<Array<Fragment,?>>>,List<Array<Fragment,?>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Fragment,Array<Fragment,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	mov %RBX, %RBP
	call cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
with_SB_location_CL_ArrowASTConsSourceLocationAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c91a
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c917
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8b3
	jmp uuid_000000000007c8b5
uuid_000000000007c8b3:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007c8b0
	jmp uuid_000000000007c8b2
uuid_000000000007c8b0:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c8ad
	jmp uuid_000000000007c8af
uuid_000000000007c8ad:
	movb $1, -504(%rbp)
uuid_000000000007c8af:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c8b2:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c8b5:
	mov -512(%RBP),%RSP
	add $-592, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c914
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8bf
	jmp uuid_000000000007c8c1
uuid_000000000007c8bf:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007c8bc
	jmp uuid_000000000007c8be
uuid_000000000007c8bc:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c8b9
	jmp uuid_000000000007c8bb
uuid_000000000007c8b9:
	movb $1, -680(%rbp)
uuid_000000000007c8bb:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007c8be:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007c8c1:
	mov -688(%RBP),%RSP
	add $-768, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c911
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8c8
	jmp uuid_000000000007c8ca
uuid_000000000007c8c8:
	push %RBP
	jmp uuid_000000000007c8c5
	jmp uuid_000000000007c8c7
uuid_000000000007c8c5:
	movb $1, -856(%rbp)
uuid_000000000007c8c7:
	mov -872(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c8ca:
	mov -864(%RBP),%RSP
	add $-872, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c90e
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8d1
	jmp uuid_000000000007c8d3
uuid_000000000007c8d1:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8ce
	jmp uuid_000000000007c8d0
uuid_000000000007c8ce:
	push %RBP
	mov -936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8cb
	jmp uuid_000000000007c8cd
uuid_000000000007c8cb:
	movb $1, -960(%rbp)
uuid_000000000007c8cd:
	mov -1056(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007c8d0:
	mov -976(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007c8d3:
	mov -968(%RBP),%RSP
	add $-1128, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c90b
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8dd
	jmp uuid_000000000007c8df
uuid_000000000007c8dd:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_000000000007c8da
	jmp uuid_000000000007c8dc
uuid_000000000007c8da:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8d7
	jmp uuid_000000000007c8d9
uuid_000000000007c8d7:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8d4
	jmp uuid_000000000007c8d6
uuid_000000000007c8d4:
	movb $1, -1216(%rbp)
uuid_000000000007c8d6:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007c8d9:
	mov -1264(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007c8dc:
	mov -1232(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007c8df:
	mov -1224(%RBP),%RSP
	add $-1416, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c908
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1496(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8e6
	jmp uuid_000000000007c8e8
uuid_000000000007c8e6:
	push %RBP
	mov -1488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8e3
	jmp uuid_000000000007c8e5
uuid_000000000007c8e3:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8e0
	jmp uuid_000000000007c8e2
uuid_000000000007c8e0:
	movb $1, -1504(%rbp)
uuid_000000000007c8e2:
	mov -1600(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007c8e5:
	mov -1520(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007c8e8:
	mov -1512(%RBP),%RSP
	add $-1672, %RSP
	mov -1504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c905
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8ef
	jmp uuid_000000000007c8f1
uuid_000000000007c8ef:
	push %RBP
	mov -1744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8ec
	jmp uuid_000000000007c8ee
uuid_000000000007c8ec:
	push %RBP
	mov -1736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8e9
	jmp uuid_000000000007c8eb
uuid_000000000007c8e9:
	movb $1, -1760(%rbp)
uuid_000000000007c8eb:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007c8ee:
	mov -1776(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007c8f1:
	mov -1768(%RBP),%RSP
	add $-1928, %RSP
	mov -1760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c902
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8f8
	jmp uuid_000000000007c8fa
uuid_000000000007c8f8:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8f5
	jmp uuid_000000000007c8f7
uuid_000000000007c8f5:
	push %RBP
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	jmp uuid_000000000007c8f2
	jmp uuid_000000000007c8f4
uuid_000000000007c8f2:
	movb $1, -2016(%rbp)
uuid_000000000007c8f4:
	mov -2112(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007c8f7:
	mov -2032(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007c8fa:
	mov -2024(%RBP),%RSP
	add $-2168, %RSP
	mov -2016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8ff
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c8fe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c901
uuid_000000000007c8ff:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8fb
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	popq -2168(%RBP)
	popq -2160(%RBP)
	popq -2152(%RBP)
	popq -2144(%RBP)
	popq -2136(%RBP)
	popq -2128(%RBP)
	popq -2120(%RBP)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -2104(%RBP)
	popq -2096(%RBP)
	popq -2088(%RBP)
	popq -2080(%RBP)
	popq -2072(%RBP)
	popq -2064(%RBP)
	popq -2056(%RBP)
	popq -2048(%RBP)
	popq -2040(%RBP)
	jmp uuid_000000000007c8fd
uuid_000000000007c8fb:
uuid_000000000007c8fd:
	mov -2176(%RBP),%RSP
	add $-2176, %RSP
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007c901:
	mov -1936(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_000000000007c904
uuid_000000000007c902:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007c904:
	mov -1680(%RBP),%RSP
	add $-1928, %RSP
	jmp uuid_000000000007c907
uuid_000000000007c905:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007c907:
	mov -1424(%RBP),%RSP
	add $-1672, %RSP
	jmp uuid_000000000007c90a
uuid_000000000007c908:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $5
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007c90a:
	mov -1136(%RBP),%RSP
	add $-1416, %RSP
	jmp uuid_000000000007c90d
uuid_000000000007c90b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007c90d:
	mov -880(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007c910
uuid_000000000007c90e:
uuid_000000000007c910:
	mov -776(%RBP),%RSP
	add $-872, %RSP
	jmp uuid_000000000007c913
uuid_000000000007c911:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8c2
	pushq -768(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $6
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_000000000007c8c4
uuid_000000000007c8c2:
uuid_000000000007c8c4:
	mov -776(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c913:
	mov -600(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_000000000007c916
uuid_000000000007c914:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8b6
	pushq -592(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $7
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_000000000007c8b8
uuid_000000000007c8b6:
uuid_000000000007c8b8:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007c916:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	jmp uuid_000000000007c919
uuid_000000000007c917:
uuid_000000000007c919:
	mov -344(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007c91c
uuid_000000000007c91a:
uuid_000000000007c91c:
	mov -264(%RBP),%RSP
	add $-336, %RSP
	subq $72, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $112, %rsp
	ret
with_SB_location_CL_ArrowTokenConsSourceLocationToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c926
	jmp uuid_000000000007c928
uuid_000000000007c926:
	push %RBP
	jmp uuid_000000000007c923
	jmp uuid_000000000007c925
uuid_000000000007c923:
	push %RBP
	jmp uuid_000000000007c920
	jmp uuid_000000000007c922
uuid_000000000007c920:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c91d
	jmp uuid_000000000007c91f
uuid_000000000007c91d:
	movb $1, -224(%rbp)
uuid_000000000007c91f:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c922:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c925:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c928:
	mov -232(%RBP),%RSP
	add $-264, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c92a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c929
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c92c
uuid_000000000007c92a:
	pushq -264(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c92c:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
without_SB_location_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c991
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c98e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c933
	jmp uuid_000000000007c935
uuid_000000000007c933:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007c930
	jmp uuid_000000000007c932
uuid_000000000007c930:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c92d
	jmp uuid_000000000007c92f
uuid_000000000007c92d:
	movb $1, -472(%rbp)
uuid_000000000007c92f:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c932:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c935:
	mov -480(%RBP),%RSP
	add $-560, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c98b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c93c
	jmp uuid_000000000007c93e
uuid_000000000007c93c:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_000000000007c939
	jmp uuid_000000000007c93b
uuid_000000000007c939:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c936
	jmp uuid_000000000007c938
uuid_000000000007c936:
	movb $1, -648(%rbp)
uuid_000000000007c938:
	mov -728(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007c93b:
	mov -664(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007c93e:
	mov -656(%RBP),%RSP
	add $-736, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c988
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c942
	jmp uuid_000000000007c944
uuid_000000000007c942:
	push %RBP
	jmp uuid_000000000007c93f
	jmp uuid_000000000007c941
uuid_000000000007c93f:
	movb $1, -824(%rbp)
uuid_000000000007c941:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007c944:
	mov -832(%RBP),%RSP
	add $-840, %RSP
	mov -824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c985
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c94b
	jmp uuid_000000000007c94d
uuid_000000000007c94b:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c948
	jmp uuid_000000000007c94a
uuid_000000000007c948:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c945
	jmp uuid_000000000007c947
uuid_000000000007c945:
	movb $1, -928(%rbp)
uuid_000000000007c947:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007c94a:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007c94d:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c982
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c957
	jmp uuid_000000000007c959
uuid_000000000007c957:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_000000000007c954
	jmp uuid_000000000007c956
uuid_000000000007c954:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c951
	jmp uuid_000000000007c953
uuid_000000000007c951:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c94e
	jmp uuid_000000000007c950
uuid_000000000007c94e:
	movb $1, -1184(%rbp)
uuid_000000000007c950:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007c953:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007c956:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007c959:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
	mov -1184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c97f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c960
	jmp uuid_000000000007c962
uuid_000000000007c960:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c95d
	jmp uuid_000000000007c95f
uuid_000000000007c95d:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c95a
	jmp uuid_000000000007c95c
uuid_000000000007c95a:
	movb $1, -1472(%rbp)
uuid_000000000007c95c:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007c95f:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007c962:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
	mov -1472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c97c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c969
	jmp uuid_000000000007c96b
uuid_000000000007c969:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c966
	jmp uuid_000000000007c968
uuid_000000000007c966:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c963
	jmp uuid_000000000007c965
uuid_000000000007c963:
	movb $1, -1728(%rbp)
uuid_000000000007c965:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c968:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c96b:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
	mov -1728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c979
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c972
	jmp uuid_000000000007c974
uuid_000000000007c972:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c96f
	jmp uuid_000000000007c971
uuid_000000000007c96f:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007c96c
	jmp uuid_000000000007c96e
uuid_000000000007c96c:
	movb $1, -1984(%rbp)
uuid_000000000007c96e:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007c971:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007c974:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
	mov -1984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c976
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c975
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c978
uuid_000000000007c976:
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c978:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_000000000007c97b
uuid_000000000007c979:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c97b:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_000000000007c97e
uuid_000000000007c97c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c97e:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_000000000007c981
uuid_000000000007c97f:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c981:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_000000000007c984
uuid_000000000007c982:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c984:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007c987
uuid_000000000007c985:
uuid_000000000007c987:
	mov -744(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007c98a
uuid_000000000007c988:
	pushq -736(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c98a:
	mov -568(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007c98d
uuid_000000000007c98b:
	pushq -560(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c98d:
	mov -392(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007c990
uuid_000000000007c98e:
uuid_000000000007c990:
	mov -312(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007c993
uuid_000000000007c991:
uuid_000000000007c993:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
without_SB_location_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c99d
	jmp uuid_000000000007c99f
uuid_000000000007c99d:
	push %RBP
	jmp uuid_000000000007c99a
	jmp uuid_000000000007c99c
uuid_000000000007c99a:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c997
	jmp uuid_000000000007c999
uuid_000000000007c997:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c994
	jmp uuid_000000000007c996
uuid_000000000007c994:
	movb $1, -192(%rbp)
uuid_000000000007c996:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c999:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c99c:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c99f:
	mov -200(%RBP),%RSP
	add $-240, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c9a1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c9a0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9a3
uuid_000000000007c9a1:
	pushq -240(%rbp)
	pushq -224(%rbp)
	pushq $uuid_000000000007a365
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c9a3:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
with_SB_key_CL_ArrowTokenConsStringToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9ad
	jmp uuid_000000000007c9af
uuid_000000000007c9ad:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	jmp uuid_000000000007c9aa
	jmp uuid_000000000007c9ac
uuid_000000000007c9aa:
	push %RBP
	jmp uuid_000000000007c9a7
	jmp uuid_000000000007c9a9
uuid_000000000007c9a7:
	push %RBP
	jmp uuid_000000000007c9a4
	jmp uuid_000000000007c9a6
uuid_000000000007c9a4:
	movb $1, -200(%rbp)
uuid_000000000007c9a6:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c9a9:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c9ac:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c9af:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c9b1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007c9b0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9b3
uuid_000000000007c9b1:
	pushq -64(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c9b3:
	mov -136(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
location_SB_of_CL_ArrowSourceLocationAST:
	pushq $uuid_000000000007c9b4
	pushq $0
	pushq $0
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9bb
	jmp uuid_000000000007c9bd
uuid_000000000007c9bb:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_000000000007c9b8
	jmp uuid_000000000007c9ba
uuid_000000000007c9b8:
	push %RBP
	jmp uuid_000000000007c9b5
	jmp uuid_000000000007c9b7
uuid_000000000007c9b5:
	movb $1, -272(%rbp)
uuid_000000000007c9b7:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c9ba:
	mov -288(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c9bd:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca1c
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9c4
	jmp uuid_000000000007c9c6
uuid_000000000007c9c4:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007c9c1
	jmp uuid_000000000007c9c3
uuid_000000000007c9c1:
	push %RBP
	jmp uuid_000000000007c9be
	jmp uuid_000000000007c9c0
uuid_000000000007c9be:
	movb $1, -440(%rbp)
uuid_000000000007c9c0:
	mov -520(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007c9c3:
	mov -456(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007c9c6:
	mov -448(%RBP),%RSP
	add $-520, %RSP
	mov -440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca19
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9cd
	jmp uuid_000000000007c9cf
uuid_000000000007c9cd:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9ca
	jmp uuid_000000000007c9cc
uuid_000000000007c9ca:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9c7
	jmp uuid_000000000007c9c9
uuid_000000000007c9c7:
	movb $1, -608(%rbp)
uuid_000000000007c9c9:
	mov -704(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c9cc:
	mov -624(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c9cf:
	mov -616(%RBP),%RSP
	add $-776, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca16
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9dc
	jmp uuid_000000000007c9de
uuid_000000000007c9dc:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_000000000007c9d9
	jmp uuid_000000000007c9db
uuid_000000000007c9d9:
	push %RBP
	mov -824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9d6
	jmp uuid_000000000007c9d8
uuid_000000000007c9d6:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9d3
	jmp uuid_000000000007c9d5
uuid_000000000007c9d3:
	movb $1, -864(%rbp)
uuid_000000000007c9d5:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007c9d8:
	mov -912(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007c9db:
	mov -880(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007c9de:
	mov -872(%RBP),%RSP
	add $-1064, %RSP
	mov -864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca13
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9e8
	jmp uuid_000000000007c9ea
uuid_000000000007c9e8:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9e5
	jmp uuid_000000000007c9e7
uuid_000000000007c9e5:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9e2
	jmp uuid_000000000007c9e4
uuid_000000000007c9e2:
	movb $1, -1152(%rbp)
uuid_000000000007c9e4:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c9e7:
	mov -1168(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c9ea:
	mov -1160(%RBP),%RSP
	add $-1320, %RSP
	mov -1152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca10
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9f4
	jmp uuid_000000000007c9f6
uuid_000000000007c9f4:
	push %RBP
	mov -1392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9f1
	jmp uuid_000000000007c9f3
uuid_000000000007c9f1:
	push %RBP
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007c9ee
	jmp uuid_000000000007c9f0
uuid_000000000007c9ee:
	movb $1, -1408(%rbp)
uuid_000000000007c9f0:
	mov -1504(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007c9f3:
	mov -1424(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007c9f6:
	mov -1416(%RBP),%RSP
	add $-1560, %RSP
	mov -1408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca0d
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca00
	jmp uuid_000000000007ca02
uuid_000000000007ca00:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9fd
	jmp uuid_000000000007c9ff
uuid_000000000007c9fd:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9fa
	jmp uuid_000000000007c9fc
uuid_000000000007c9fa:
	movb $1, -1648(%rbp)
uuid_000000000007c9fc:
	mov -1744(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007c9ff:
	mov -1664(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ca02:
	mov -1656(%RBP),%RSP
	add $-1816, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca0a
	push %RBP
	jmp uuid_000000000007ca07
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ca06
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca09
uuid_000000000007ca07:
uuid_000000000007ca09:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007ca0c
uuid_000000000007ca0a:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca03
	jmp uuid_000000000007ca05
uuid_000000000007ca03:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ca05:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ca0c:
	mov -1568(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007ca0f
uuid_000000000007ca0d:
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9f7
	jmp uuid_000000000007c9f9
uuid_000000000007c9f7:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c9f9:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007ca0f:
	mov -1328(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007ca12
uuid_000000000007ca10:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9eb
	jmp uuid_000000000007c9ed
uuid_000000000007c9eb:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c9ed:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007ca12:
	mov -1072(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_000000000007ca15
uuid_000000000007ca13:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9df
	jmp uuid_000000000007c9e1
uuid_000000000007c9df:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c9e1:
	mov -1072(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007ca15:
	mov -784(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007ca18
uuid_000000000007ca16:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9d0
	jmp uuid_000000000007c9d2
uuid_000000000007c9d0:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c9d2:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007ca18:
	mov -528(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007ca1b
uuid_000000000007ca19:
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ca1b:
	mov -360(%RBP),%RSP
	add $-520, %RSP
	jmp uuid_000000000007ca1e
uuid_000000000007ca1c:
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ca1e:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	subq $32, %rsp
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
unique_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca28
	jmp uuid_000000000007ca2a
uuid_000000000007ca28:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007ca25
	jmp uuid_000000000007ca27
uuid_000000000007ca25:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca22
	jmp uuid_000000000007ca24
uuid_000000000007ca22:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca1f
	jmp uuid_000000000007ca21
uuid_000000000007ca1f:
	movb $1, -192(%rbp)
uuid_000000000007ca21:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ca24:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ca27:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ca2a:
	mov -200(%RBP),%RSP
	add $-272, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca2c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ca2b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca2e
uuid_000000000007ca2c:
	pushq -272(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca2e:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_SB_verbose_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca38
	jmp uuid_000000000007ca3a
uuid_000000000007ca38:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007ca35
	jmp uuid_000000000007ca37
uuid_000000000007ca35:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca32
	jmp uuid_000000000007ca34
uuid_000000000007ca32:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca2f
	jmp uuid_000000000007ca31
uuid_000000000007ca2f:
	movb $1, -192(%rbp)
uuid_000000000007ca31:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ca34:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ca37:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ca3a:
	mov -200(%RBP),%RSP
	add $-272, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca3c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ca3b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca3e
uuid_000000000007ca3c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a4a7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ca3e:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
token_CL__CL_new_CL_ArrowTokenString:
	pushq -8(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function location::new : Arrow<Nil,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call location_CL__CL_new_CL_ArrowSourceLocationNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
location_CL__CL_new_CL_ArrowSourceLocationNil:
	pushq $uuid_000000000007c9b4
	pushq $0
	pushq $0
	pushq $0
	subq $32, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
non_SB_zero_CL_ArrowU64SourceLocation:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca48
	jmp uuid_000000000007ca4a
uuid_000000000007ca48:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca45
	jmp uuid_000000000007ca47
uuid_000000000007ca45:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca42
	jmp uuid_000000000007ca44
uuid_000000000007ca42:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca3f
	jmp uuid_000000000007ca41
uuid_000000000007ca3f:
	movb $1, -128(%rbp)
uuid_000000000007ca41:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007ca44:
	mov -160(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007ca47:
	mov -144(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007ca4a:
	mov -136(%RBP),%RSP
	add $-184, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca4f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ca4e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca51
uuid_000000000007ca4f:
	push %RBP
	movq -168(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca4b
	jmp uuid_000000000007ca4d
uuid_000000000007ca4b:
	movq $1, -48(%rbp)
uuid_000000000007ca4d:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ca51:
	mov -88(%RBP),%RSP
	add $-192, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_already_SB_tokenized_CL_ArrowU64String:
	pushq $0
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007ca68:
#call function non-zero : Arrow<List<String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca69
	jmp uuid_000000000007ca6a
uuid_000000000007ca69:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca5e
	jmp uuid_000000000007ca60
uuid_000000000007ca5e:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca5b
	jmp uuid_000000000007ca5d
uuid_000000000007ca5b:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca58
	jmp uuid_000000000007ca5a
uuid_000000000007ca58:
	movb $1, -112(%rbp)
uuid_000000000007ca5a:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ca5d:
	mov -128(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ca60:
	mov -120(%RBP),%RSP
	add $-168, %RSP
	mov -112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca65
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ca64
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca67
uuid_000000000007ca65:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca61
	jmp uuid_000000000007ca63
uuid_000000000007ca61:
	movq $1, -24(%rbp)
uuid_000000000007ca63:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -136(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007ca67:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ca68
uuid_000000000007ca6a:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
tokenize_CL_ArrowNilString:
	pushq $uuid_000000000007a365
	push %RBP
#call function is-already-tokenized : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call is_SB_already_SB_tokenized_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca6f
#call function read-file : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call read_SB_file_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
#call function cons : Arrow<Cons<String,List<String>>,List<String>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStringConsListStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_000000000007ca71
uuid_000000000007ca6f:
uuid_000000000007ca71:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $1
	pushq $1
	pushq $1
	pushq $1
	pushq $0
uuid_000000000007caf3:
	mov -24(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007caf4
	jmp uuid_000000000007caf5
uuid_000000000007caf4:
	mov -24(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -112(%rbp)
	mov -128(%RBP), %R13B
	mov $10, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca76
	push %RBP
	jmp uuid_000000000007ca73
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ca72
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca75
uuid_000000000007ca73:
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -80(%rbp)
uuid_000000000007ca75:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007ca78
uuid_000000000007ca76:
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	movq $1, -80(%rbp)
uuid_000000000007ca78:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	mov -24(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -136(%rbp)
	mov -152(%RBP), %R13B
	mov $35, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007caf0
	push %RBP
	pushq -136(%rbp)
	mov -168(%RBP), %R13B
	mov $10, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007caed
	push %RBP
	pushq -136(%rbp)
	mov -184(%RBP), %R13B
	mov $9, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007caea
	push %RBP
	pushq -136(%rbp)
	mov -200(%RBP), %R13B
	mov $32, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae7
	push %RBP
	pushq -136(%rbp)
	mov -216(%RBP), %R13B
	mov $40, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae4
	push %RBP
	pushq -136(%rbp)
	mov -232(%RBP), %R13B
	mov $41, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae1
	push %RBP
	pushq -136(%rbp)
	mov -248(%RBP), %R13B
	mov $39, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cade
	push %RBP
	pushq -136(%rbp)
	mov -264(%RBP), %R13B
	mov $59, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cadb
	push %RBP
	pushq -136(%rbp)
	jmp uuid_000000000007cad8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cad7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cada
uuid_000000000007cad8:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007cad4
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a4a5
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cad1
	jmp uuid_000000000007cad3
uuid_000000000007cad1:
	pushq $uuid_000000000007a4a5
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007cad3:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007cad6
uuid_000000000007cad4:
uuid_000000000007cad6:
	mov -288(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007cada:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007cadd
uuid_000000000007cadb:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007caca
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cac3
	jmp uuid_000000000007cac5
uuid_000000000007cac3:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007cac5:
	mov -280(%RBP),%RSP
	add $-336, %RSP
	pushq $uuid_000000000007a4a2
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007cacc
uuid_000000000007caca:
uuid_000000000007cacc:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007cadd:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007cae0
uuid_000000000007cade:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007cabc
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cab5
	jmp uuid_000000000007cab7
uuid_000000000007cab5:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007cab7:
	mov -264(%RBP),%RSP
	add $-320, %RSP
	pushq $uuid_000000000007a4a4
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007cabe
uuid_000000000007cabc:
uuid_000000000007cabe:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007cae0:
	mov -240(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cae3
uuid_000000000007cae1:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007caae
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caa7
	jmp uuid_000000000007caa9
uuid_000000000007caa7:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007caa9:
	mov -248(%RBP),%RSP
	add $-304, %RSP
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_000000000007a298
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007cab0
uuid_000000000007caae:
uuid_000000000007cab0:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007cae3:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007cae6
uuid_000000000007cae4:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007caa0
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca99
	jmp uuid_000000000007ca9b
uuid_000000000007ca99:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ca9b:
	mov -232(%RBP),%RSP
	add $-288, %RSP
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_000000000007a296
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	jmp uuid_000000000007caa2
uuid_000000000007caa0:
uuid_000000000007caa2:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007cae6:
	mov -208(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007cae9
uuid_000000000007cae7:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca92
	jmp uuid_000000000007ca94
uuid_000000000007ca92:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ca94:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_000000000007cae9:
	mov -192(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007caec
uuid_000000000007caea:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca8b
	jmp uuid_000000000007ca8d
uuid_000000000007ca8b:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ca8d:
	mov -192(%RBP),%RSP
	add $-248, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_000000000007caec:
	mov -176(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007caef
uuid_000000000007caed:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca84
	jmp uuid_000000000007ca86
uuid_000000000007ca84:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ca86:
	mov -176(%RBP),%RSP
	add $-232, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $0, -40(%rbp)
uuid_000000000007caef:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007caf2
uuid_000000000007caf0:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca7d
	jmp uuid_000000000007ca7f
uuid_000000000007ca7d:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ca7f:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $1, -40(%rbp)
uuid_000000000007caf2:
	mov -144(%RBP),%RSP
	add $-216, %RSP
	mov -24(%RBP), %RAX
	inc %RAX
	movq %RAX, -24(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007caf3
uuid_000000000007caf5:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cafa
	jmp uuid_000000000007cafc
uuid_000000000007cafa:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_000000000007cafc:
	mov -112(%RBP),%RSP
	add $-168, %RSP
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb03
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cb01
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cb02
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb05
uuid_000000000007cb03:
uuid_000000000007cb05:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
align_CL_ArrowI64I64:
#call function max : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $8
	mov %RBX, %RBP
	call max_CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_nil_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb0c
	jmp uuid_000000000007cb0e
uuid_000000000007cb0c:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb09
	jmp uuid_000000000007cb0b
uuid_000000000007cb09:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb06
	jmp uuid_000000000007cb08
uuid_000000000007cb06:
	movb $1, -104(%rbp)
uuid_000000000007cb08:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb0b:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb0e:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb1f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb15
	jmp uuid_000000000007cb17
uuid_000000000007cb15:
	push %RBP
	jmp uuid_000000000007cb12
	jmp uuid_000000000007cb14
uuid_000000000007cb12:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb0f
	jmp uuid_000000000007cb11
uuid_000000000007cb0f:
	movb $1, -216(%rbp)
uuid_000000000007cb11:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb14:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb17:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb1c
	push %RBP
	jmp uuid_000000000007cb19
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cb18
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb1b
uuid_000000000007cb19:
uuid_000000000007cb1b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cb1e
uuid_000000000007cb1c:
	movq $1, -40(%rbp)
uuid_000000000007cb1e:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cb21
uuid_000000000007cb1f:
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cb21:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_seq_CL_ArrowU64AST:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb28
	jmp uuid_000000000007cb2a
uuid_000000000007cb28:
	push %RBP
	jmp uuid_000000000007cb25
	jmp uuid_000000000007cb27
uuid_000000000007cb25:
	push %RBP
	jmp uuid_000000000007cb22
	jmp uuid_000000000007cb24
uuid_000000000007cb22:
	movb $1, -248(%rbp)
uuid_000000000007cb24:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007cb27:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007cb2a:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb2f
	push %RBP
	jmp uuid_000000000007cb2c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cb2b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb2e
uuid_000000000007cb2c:
uuid_000000000007cb2e:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cb31
uuid_000000000007cb2f:
	movq $1, -88(%rbp)
uuid_000000000007cb31:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
is_SB_arrow_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb38
	jmp uuid_000000000007cb3a
uuid_000000000007cb38:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb35
	jmp uuid_000000000007cb37
uuid_000000000007cb35:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb32
	jmp uuid_000000000007cb34
uuid_000000000007cb32:
	movb $1, -104(%rbp)
uuid_000000000007cb34:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb37:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb3a:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb4b
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb41
	jmp uuid_000000000007cb43
uuid_000000000007cb41:
	push %RBP
	jmp uuid_000000000007cb3e
	jmp uuid_000000000007cb40
uuid_000000000007cb3e:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a958
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb3b
	jmp uuid_000000000007cb3d
uuid_000000000007cb3b:
	movb $1, -216(%rbp)
uuid_000000000007cb3d:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb40:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb43:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb48
	push %RBP
	jmp uuid_000000000007cb45
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cb44
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb47
uuid_000000000007cb45:
uuid_000000000007cb47:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cb4a
uuid_000000000007cb48:
	movq $1, -40(%rbp)
uuid_000000000007cb4a:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cb4d
uuid_000000000007cb4b:
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cb4d:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_hook_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb54
	jmp uuid_000000000007cb56
uuid_000000000007cb54:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb51
	jmp uuid_000000000007cb53
uuid_000000000007cb51:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb4e
	jmp uuid_000000000007cb50
uuid_000000000007cb4e:
	movb $1, -104(%rbp)
uuid_000000000007cb50:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb53:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb56:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb67
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb5d
	jmp uuid_000000000007cb5f
uuid_000000000007cb5d:
	push %RBP
	jmp uuid_000000000007cb5a
	jmp uuid_000000000007cb5c
uuid_000000000007cb5a:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007aaab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb57
	jmp uuid_000000000007cb59
uuid_000000000007cb57:
	movb $1, -216(%rbp)
uuid_000000000007cb59:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb5c:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb5f:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb64
	push %RBP
	jmp uuid_000000000007cb61
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cb60
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb63
uuid_000000000007cb61:
uuid_000000000007cb63:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cb66
uuid_000000000007cb64:
	movq $1, -40(%rbp)
uuid_000000000007cb66:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cb69
uuid_000000000007cb67:
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cb69:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_blob_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb70
	jmp uuid_000000000007cb72
uuid_000000000007cb70:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb6d
	jmp uuid_000000000007cb6f
uuid_000000000007cb6d:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb6a
	jmp uuid_000000000007cb6c
uuid_000000000007cb6a:
	movb $1, -104(%rbp)
uuid_000000000007cb6c:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb6f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb72:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb83
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb79
	jmp uuid_000000000007cb7b
uuid_000000000007cb79:
	push %RBP
	jmp uuid_000000000007cb76
	jmp uuid_000000000007cb78
uuid_000000000007cb76:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007be08
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb73
	jmp uuid_000000000007cb75
uuid_000000000007cb73:
	movb $1, -216(%rbp)
uuid_000000000007cb75:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb78:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb7b:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb80
	push %RBP
	jmp uuid_000000000007cb7d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cb7c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb7f
uuid_000000000007cb7d:
uuid_000000000007cb7f:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cb82
uuid_000000000007cb80:
	movq $1, -40(%rbp)
uuid_000000000007cb82:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cb85
uuid_000000000007cb83:
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cb85:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_cons_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb8c
	jmp uuid_000000000007cb8e
uuid_000000000007cb8c:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb89
	jmp uuid_000000000007cb8b
uuid_000000000007cb89:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb86
	jmp uuid_000000000007cb88
uuid_000000000007cb86:
	movb $1, -104(%rbp)
uuid_000000000007cb88:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb8b:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cb8e:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb9f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb95
	jmp uuid_000000000007cb97
uuid_000000000007cb95:
	push %RBP
	jmp uuid_000000000007cb92
	jmp uuid_000000000007cb94
uuid_000000000007cb92:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb8f
	jmp uuid_000000000007cb91
uuid_000000000007cb8f:
	movb $1, -216(%rbp)
uuid_000000000007cb91:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb94:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cb97:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb9c
	push %RBP
	jmp uuid_000000000007cb99
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cb98
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb9b
uuid_000000000007cb99:
uuid_000000000007cb9b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cb9e
uuid_000000000007cb9c:
	movq $1, -40(%rbp)
uuid_000000000007cb9e:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cba1
uuid_000000000007cb9f:
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cba1:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_ctx_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cba8
	jmp uuid_000000000007cbaa
uuid_000000000007cba8:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cba5
	jmp uuid_000000000007cba7
uuid_000000000007cba5:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cba2
	jmp uuid_000000000007cba4
uuid_000000000007cba2:
	movb $1, -104(%rbp)
uuid_000000000007cba4:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cba7:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cbaa:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbbc
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbb2
	jmp uuid_000000000007cbb4
uuid_000000000007cbb2:
	push %RBP
	jmp uuid_000000000007cbaf
	jmp uuid_000000000007cbb1
uuid_000000000007cbaf:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007cbab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbac
	jmp uuid_000000000007cbae
uuid_000000000007cbac:
	movb $1, -216(%rbp)
uuid_000000000007cbae:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cbb1:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cbb4:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbb9
	push %RBP
	jmp uuid_000000000007cbb6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cbb5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cbb8
uuid_000000000007cbb6:
uuid_000000000007cbb8:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cbbb
uuid_000000000007cbb9:
	movq $1, -40(%rbp)
uuid_000000000007cbbb:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cbbe
uuid_000000000007cbbc:
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cbbe:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_string_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbc5
	jmp uuid_000000000007cbc7
uuid_000000000007cbc5:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbc2
	jmp uuid_000000000007cbc4
uuid_000000000007cbc2:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbbf
	jmp uuid_000000000007cbc1
uuid_000000000007cbbf:
	movb $1, -104(%rbp)
uuid_000000000007cbc1:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cbc4:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cbc7:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbd9
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbcf
	jmp uuid_000000000007cbd1
uuid_000000000007cbcf:
	push %RBP
	jmp uuid_000000000007cbcc
	jmp uuid_000000000007cbce
uuid_000000000007cbcc:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007cbc8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbc9
	jmp uuid_000000000007cbcb
uuid_000000000007cbc9:
	movb $1, -216(%rbp)
uuid_000000000007cbcb:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cbce:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cbd1:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbd6
	push %RBP
	jmp uuid_000000000007cbd3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cbd2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cbd5
uuid_000000000007cbd3:
uuid_000000000007cbd5:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cbd8
uuid_000000000007cbd6:
	movq $1, -40(%rbp)
uuid_000000000007cbd8:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cbdb
uuid_000000000007cbd9:
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cbdb:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_onto_SB_stack_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbe2
	jmp uuid_000000000007cbe4
uuid_000000000007cbe2:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbdf
	jmp uuid_000000000007cbe1
uuid_000000000007cbdf:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbdc
	jmp uuid_000000000007cbde
uuid_000000000007cbdc:
	movb $1, -104(%rbp)
uuid_000000000007cbde:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cbe1:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cbe4:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc08
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbfe
	jmp uuid_000000000007cc00
uuid_000000000007cbfe:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf5
	jmp uuid_000000000007cbf7
uuid_000000000007cbf5:
	push %RBP
	jmp uuid_000000000007cbf2
	jmp uuid_000000000007cbf4
uuid_000000000007cbf2:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbec
	jmp uuid_000000000007cbee
uuid_000000000007cbec:
	push %RBP
	jmp uuid_000000000007cbe9
	jmp uuid_000000000007cbeb
uuid_000000000007cbe9:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007cbe5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbe6
	jmp uuid_000000000007cbe8
uuid_000000000007cbe6:
	movb $1, -336(%rbp)
uuid_000000000007cbe8:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cbeb:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cbee:
	mov -344(%RBP),%RSP
	add $-368, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbef
	jmp uuid_000000000007cbf1
uuid_000000000007cbef:
	movb $1, -280(%rbp)
uuid_000000000007cbf1:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cbf4:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cbf7:
	mov -288(%RBP),%RSP
	add $-368, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbfb
	jmp uuid_000000000007cbfd
uuid_000000000007cbfb:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007af3b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbf8
	jmp uuid_000000000007cbfa
uuid_000000000007cbf8:
	movb $1, -216(%rbp)
uuid_000000000007cbfa:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cbfd:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cc00:
	mov -224(%RBP),%RSP
	add $-384, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc05
	push %RBP
	jmp uuid_000000000007cc02
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cc01
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc04
uuid_000000000007cc02:
uuid_000000000007cc04:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007cc07
uuid_000000000007cc05:
	movq $1, -40(%rbp)
uuid_000000000007cc07:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007cc0a
uuid_000000000007cc08:
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cc0a:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_offset_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc11
	jmp uuid_000000000007cc13
uuid_000000000007cc11:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc0e
	jmp uuid_000000000007cc10
uuid_000000000007cc0e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc0b
	jmp uuid_000000000007cc0d
uuid_000000000007cc0b:
	movb $1, -104(%rbp)
uuid_000000000007cc0d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cc10:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cc13:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc37
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc2d
	jmp uuid_000000000007cc2f
uuid_000000000007cc2d:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc24
	jmp uuid_000000000007cc26
uuid_000000000007cc24:
	push %RBP
	jmp uuid_000000000007cc21
	jmp uuid_000000000007cc23
uuid_000000000007cc21:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc1b
	jmp uuid_000000000007cc1d
uuid_000000000007cc1b:
	push %RBP
	jmp uuid_000000000007cc18
	jmp uuid_000000000007cc1a
uuid_000000000007cc18:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007cc14
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc15
	jmp uuid_000000000007cc17
uuid_000000000007cc15:
	movb $1, -336(%rbp)
uuid_000000000007cc17:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cc1a:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cc1d:
	mov -344(%RBP),%RSP
	add $-368, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc1e
	jmp uuid_000000000007cc20
uuid_000000000007cc1e:
	movb $1, -280(%rbp)
uuid_000000000007cc20:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cc23:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cc26:
	mov -288(%RBP),%RSP
	add $-368, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc2a
	jmp uuid_000000000007cc2c
uuid_000000000007cc2a:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007af3b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc27
	jmp uuid_000000000007cc29
uuid_000000000007cc27:
	movb $1, -216(%rbp)
uuid_000000000007cc29:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cc2c:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cc2f:
	mov -224(%RBP),%RSP
	add $-384, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc34
	push %RBP
	jmp uuid_000000000007cc31
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cc30
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc33
uuid_000000000007cc31:
uuid_000000000007cc33:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007cc36
uuid_000000000007cc34:
	movq $1, -40(%rbp)
uuid_000000000007cc36:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007cc39
uuid_000000000007cc37:
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cc39:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_branchconditional_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc40
	jmp uuid_000000000007cc42
uuid_000000000007cc40:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc3d
	jmp uuid_000000000007cc3f
uuid_000000000007cc3d:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc3a
	jmp uuid_000000000007cc3c
uuid_000000000007cc3a:
	movb $1, -104(%rbp)
uuid_000000000007cc3c:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cc3f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cc42:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc54
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc4a
	jmp uuid_000000000007cc4c
uuid_000000000007cc4a:
	push %RBP
	jmp uuid_000000000007cc47
	jmp uuid_000000000007cc49
uuid_000000000007cc47:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007cc43
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc44
	jmp uuid_000000000007cc46
uuid_000000000007cc44:
	movb $1, -216(%rbp)
uuid_000000000007cc46:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cc49:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007cc4c:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc51
	push %RBP
	jmp uuid_000000000007cc4e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cc4d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc50
uuid_000000000007cc4e:
uuid_000000000007cc50:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cc53
uuid_000000000007cc51:
	movq $1, -40(%rbp)
uuid_000000000007cc53:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007cc56
uuid_000000000007cc54:
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007cc56:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_AD__CL_ArrowASTConsASTAST:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc67
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc5d
	jmp uuid_000000000007cc5f
uuid_000000000007cc5d:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc5a
	jmp uuid_000000000007cc5c
uuid_000000000007cc5a:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc57
	jmp uuid_000000000007cc59
uuid_000000000007cc57:
	movb $1, -392(%rbp)
uuid_000000000007cc59:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cc5c:
	mov -408(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cc5f:
	mov -400(%RBP),%RSP
	add $-560, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc64
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007cc61
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cc60
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc63
uuid_000000000007cc61:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc63:
	mov -568(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007cc66
uuid_000000000007cc64:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc66:
	mov -312(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007cc69
uuid_000000000007cc67:
uuid_000000000007cc69:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
print_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc73
	jmp uuid_000000000007cc75
uuid_000000000007cc73:
	push %RBP
	jmp uuid_000000000007cc70
	jmp uuid_000000000007cc72
uuid_000000000007cc70:
	push %RBP
	jmp uuid_000000000007cc6d
	jmp uuid_000000000007cc6f
uuid_000000000007cc6d:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cc6a
	jmp uuid_000000000007cc6c
uuid_000000000007cc6a:
	movb $1, -192(%rbp)
uuid_000000000007cc6c:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc6f:
	mov -216(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc72:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc75:
	mov -200(%RBP),%RSP
	add $-232, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc77
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cc76
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc79
uuid_000000000007cc77:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cc79:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_CL_ArrowNilContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc8f
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc8c
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc83
	jmp uuid_000000000007cc85
uuid_000000000007cc83:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007cc80
	jmp uuid_000000000007cc82
uuid_000000000007cc80:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cc7d
	jmp uuid_000000000007cc7f
uuid_000000000007cc7d:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc7a
	jmp uuid_000000000007cc7c
uuid_000000000007cc7a:
	movb $1, -520(%rbp)
uuid_000000000007cc7c:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007cc7f:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007cc82:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007cc85:
	mov -528(%RBP),%RSP
	add $-728, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc89
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cc88
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc8b
uuid_000000000007cc89:
#call function print : Arrow<Context,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc86
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc87
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cc8b:
	mov -416(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007cc8e
uuid_000000000007cc8c:
uuid_000000000007cc8e:
	mov -312(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_000000000007cc91
uuid_000000000007cc8f:
uuid_000000000007cc91:
	mov -208(%RBP),%RSP
	add $-304, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
print_CL_ArrowNilTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cca8
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cca5
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc9e
	jmp uuid_000000000007cca0
uuid_000000000007cc9e:
	push %RBP
	jmp uuid_000000000007cc9b
	jmp uuid_000000000007cc9d
uuid_000000000007cc9b:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007cc98
	jmp uuid_000000000007cc9a
uuid_000000000007cc98:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cc95
	jmp uuid_000000000007cc97
uuid_000000000007cc95:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc92
	jmp uuid_000000000007cc94
uuid_000000000007cc92:
	movb $1, -640(%rbp)
uuid_000000000007cc94:
	mov -712(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007cc97:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007cc9a:
	mov -664(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007cc9d:
	mov -656(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007cca0:
	mov -648(%RBP),%RSP
	add $-832, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cca2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cca1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cca4
uuid_000000000007cca2:
#call function print : Arrow<TContext,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc87
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cca4:
	mov -512(%RBP),%RSP
	add $-832, %RSP
	jmp uuid_000000000007cca7
uuid_000000000007cca5:
uuid_000000000007cca7:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007ccaa
uuid_000000000007cca8:
uuid_000000000007ccaa:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	mov %rbp, %rsp
	sub $128, %rsp
	ret
print_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd1b
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd18
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccb2
	jmp uuid_000000000007ccb4
uuid_000000000007ccb2:
	push %RBP
	jmp uuid_000000000007ccaf
	jmp uuid_000000000007ccb1
uuid_000000000007ccaf:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ccac
	jmp uuid_000000000007ccae
uuid_000000000007ccac:
	movb $1, -400(%rbp)
uuid_000000000007ccae:
	mov -424(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007ccb1:
	mov -416(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007ccb4:
	mov -408(%RBP),%RSP
	add $-432, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd15
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccbb
	jmp uuid_000000000007ccbd
uuid_000000000007ccbb:
	push %RBP
	jmp uuid_000000000007ccb8
	jmp uuid_000000000007ccba
uuid_000000000007ccb8:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ccb5
	jmp uuid_000000000007ccb7
uuid_000000000007ccb5:
	movb $1, -520(%rbp)
uuid_000000000007ccb7:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007ccba:
	mov -536(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007ccbd:
	mov -528(%RBP),%RSP
	add $-552, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd12
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccc1
	jmp uuid_000000000007ccc3
uuid_000000000007ccc1:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007ccbe
	jmp uuid_000000000007ccc0
uuid_000000000007ccbe:
	movb $1, -640(%rbp)
uuid_000000000007ccc0:
	mov -656(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007ccc3:
	mov -648(%RBP),%RSP
	add $-680, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd0f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccc7
	jmp uuid_000000000007ccc9
uuid_000000000007ccc7:
	push %RBP
	jmp uuid_000000000007ccc4
	jmp uuid_000000000007ccc6
uuid_000000000007ccc4:
	movb $1, -768(%rbp)
uuid_000000000007ccc6:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007ccc9:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd0c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccd0
	jmp uuid_000000000007ccd2
uuid_000000000007ccd0:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cccd
	jmp uuid_000000000007cccf
uuid_000000000007cccd:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccca
	jmp uuid_000000000007cccc
uuid_000000000007ccca:
	movb $1, -872(%rbp)
uuid_000000000007cccc:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007cccf:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007ccd2:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd09
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccda
	jmp uuid_000000000007ccdc
uuid_000000000007ccda:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccd7
	jmp uuid_000000000007ccd9
uuid_000000000007ccd7:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007ccd4
	jmp uuid_000000000007ccd6
uuid_000000000007ccd4:
	movb $1, -1128(%rbp)
uuid_000000000007ccd6:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007ccd9:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007ccdc:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
	mov -1128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd06
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cce4
	jmp uuid_000000000007cce6
uuid_000000000007cce4:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cce1
	jmp uuid_000000000007cce3
uuid_000000000007cce1:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccde
	jmp uuid_000000000007cce0
uuid_000000000007ccde:
	movb $1, -1368(%rbp)
uuid_000000000007cce0:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007cce3:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007cce6:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
	mov -1368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd03
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccf0
	jmp uuid_000000000007ccf2
uuid_000000000007ccf0:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007cced
	jmp uuid_000000000007ccef
uuid_000000000007cced:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccea
	jmp uuid_000000000007ccec
uuid_000000000007ccea:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cce7
	jmp uuid_000000000007cce9
uuid_000000000007cce7:
	movb $1, -1624(%rbp)
uuid_000000000007cce9:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ccec:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ccef:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ccf2:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd00
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccf9
	jmp uuid_000000000007ccfb
uuid_000000000007ccf9:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccf6
	jmp uuid_000000000007ccf8
uuid_000000000007ccf6:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccf3
	jmp uuid_000000000007ccf5
uuid_000000000007ccf3:
	movb $1, -1912(%rbp)
uuid_000000000007ccf5:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007ccf8:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007ccfb:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
	mov -1912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ccfd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ccfc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ccff
uuid_000000000007ccfd:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc87
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ccff:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007cd02
uuid_000000000007cd00:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a296
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a4a5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a533
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd02:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007cd05
uuid_000000000007cd03:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a296
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd05:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_000000000007cd08
uuid_000000000007cd06:
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ccdd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd08:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007cd0b
uuid_000000000007cd09:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ccd3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc86
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd0b:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007cd0e
uuid_000000000007cd0c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007af3b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd0e:
	mov -688(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007cd11
uuid_000000000007cd0f:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd11:
	mov -560(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007cd14
uuid_000000000007cd12:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a4a4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd14:
	mov -440(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007cd17
uuid_000000000007cd15:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd17:
	mov -320(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007cd1a
uuid_000000000007cd18:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a286
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd1a:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007cd1d
uuid_000000000007cd1b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ccab
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd1d:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
print_CL_ArrowNilFContext:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd1e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd32:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd33
	jmp uuid_000000000007cd34
uuid_000000000007cd33:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd2b
	jmp uuid_000000000007cd2d
uuid_000000000007cd2b:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007cd28
	jmp uuid_000000000007cd2a
uuid_000000000007cd28:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007cd25
	jmp uuid_000000000007cd27
uuid_000000000007cd25:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd22
	jmp uuid_000000000007cd24
uuid_000000000007cd22:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd1f
	jmp uuid_000000000007cd21
uuid_000000000007cd1f:
	movb $1, -624(%rbp)
uuid_000000000007cd21:
	mov -848(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007cd24:
	mov -832(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007cd27:
	mov -800(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007cd2a:
	mov -640(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007cd2d:
	mov -632(%RBP),%RSP
	add $-1048, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd2f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cd2e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd31
uuid_000000000007cd2f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aaad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cd31:
	mov -416(%RBP),%RSP
	add $-1048, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cd32
uuid_000000000007cd34:
	mov %rbp, %rsp
	sub $208, %rsp
	ret
print_CL_ArrowNilFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd47
	jmp uuid_000000000007cd49
uuid_000000000007cd47:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007cd44
	jmp uuid_000000000007cd46
uuid_000000000007cd44:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd41
	jmp uuid_000000000007cd43
uuid_000000000007cd41:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007cd3e
	jmp uuid_000000000007cd40
uuid_000000000007cd3e:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd3b
	jmp uuid_000000000007cd3d
uuid_000000000007cd3b:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd38
	jmp uuid_000000000007cd3a
uuid_000000000007cd38:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007cd35
	jmp uuid_000000000007cd37
uuid_000000000007cd35:
	movb $1, -480(%rbp)
uuid_000000000007cd37:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007cd3a:
	mov -784(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007cd3d:
	mov -768(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007cd40:
	mov -736(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007cd43:
	mov -528(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007cd46:
	mov -496(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007cd49:
	mov -488(%RBP),%RSP
	add $-912, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd60
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cd5f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd62
uuid_000000000007cd60:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd4a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd4b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd5c:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd5d
	jmp uuid_000000000007cd5e
uuid_000000000007cd5d:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd55
	jmp uuid_000000000007cd57
uuid_000000000007cd55:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_000000000007cd52
	jmp uuid_000000000007cd54
uuid_000000000007cd52:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd4f
	jmp uuid_000000000007cd51
uuid_000000000007cd4f:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd4c
	jmp uuid_000000000007cd4e
uuid_000000000007cd4c:
	movb $1, -1024(%rbp)
uuid_000000000007cd4e:
	mov -1088(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007cd51:
	mov -1072(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007cd54:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007cd57:
	mov -1032(%RBP),%RSP
	add $-1136, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd59
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cd58
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd5b
uuid_000000000007cd59:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a4a8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc86
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -792(%rbp)
uuid_000000000007cd5b:
	mov -968(%RBP),%RSP
	add $-1136, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cd5c
uuid_000000000007cd5e:
uuid_000000000007cd62:
	mov -320(%RBP),%RSP
	add $-912, %RSP
	mov %rbp, %rsp
	sub $160, %rsp
	ret
print_CL_ArrowNilFragmentList:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd69
	jmp uuid_000000000007cd6b
uuid_000000000007cd69:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	jmp uuid_000000000007cd66
	jmp uuid_000000000007cd68
uuid_000000000007cd66:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd63
	jmp uuid_000000000007cd65
uuid_000000000007cd63:
	movb $1, -528(%rbp)
uuid_000000000007cd65:
	mov -704(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007cd68:
	mov -544(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007cd6b:
	mov -536(%RBP),%RSP
	add $-872, %RSP
	mov -528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd70
	push %RBP
	jmp uuid_000000000007cd6d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cd6c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd6f
uuid_000000000007cd6d:
uuid_000000000007cd6f:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_000000000007cd72
uuid_000000000007cd70:
#call function print : Arrow<FragmentList,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd72:
	mov -352(%RBP),%RSP
	add $-872, %RSP
	mov %rbp, %rsp
	sub $176, %rsp
	ret
print_CL_ArrowNilSourceLocation:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd7c
	jmp uuid_000000000007cd7e
uuid_000000000007cd7c:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd79
	jmp uuid_000000000007cd7b
uuid_000000000007cd79:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd76
	jmp uuid_000000000007cd78
uuid_000000000007cd76:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd73
	jmp uuid_000000000007cd75
uuid_000000000007cd73:
	movb $1, -120(%rbp)
uuid_000000000007cd75:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cd78:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cd7b:
	mov -136(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cd7e:
	mov -128(%RBP),%RSP
	add $-176, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd83
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cd82
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd85
uuid_000000000007cd83:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd7f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd80
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd81
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd85:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
print_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd89
	jmp uuid_000000000007cd8b
uuid_000000000007cd89:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd86
	jmp uuid_000000000007cd88
uuid_000000000007cd86:
	movb $1, -128(%rbp)
uuid_000000000007cd88:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007cd8b:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdb6
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd92
	jmp uuid_000000000007cd94
uuid_000000000007cd92:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd8f
	jmp uuid_000000000007cd91
uuid_000000000007cd8f:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd8c
	jmp uuid_000000000007cd8e
uuid_000000000007cd8c:
	movb $1, -192(%rbp)
uuid_000000000007cd8e:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007cd91:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007cd94:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdb3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd9b
	jmp uuid_000000000007cd9d
uuid_000000000007cd9b:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd98
	jmp uuid_000000000007cd9a
uuid_000000000007cd98:
	push %RBP
	mov -280(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd95
	jmp uuid_000000000007cd97
uuid_000000000007cd95:
	movb $1, -304(%rbp)
uuid_000000000007cd97:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007cd9a:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007cd9d:
	mov -312(%RBP),%RSP
	add $-376, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdb0
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda9
	jmp uuid_000000000007cdab
uuid_000000000007cda9:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cda6
	jmp uuid_000000000007cda8
uuid_000000000007cda6:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cda3
	jmp uuid_000000000007cda5
uuid_000000000007cda3:
	movb $1, -416(%rbp)
uuid_000000000007cda5:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007cda8:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007cdab:
	mov -424(%RBP),%RSP
	add $-488, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cdac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cdaf
uuid_000000000007cdad:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a63e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a63f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cdaf:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007cdb2
uuid_000000000007cdb0:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cda0
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd9f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cda2
uuid_000000000007cda0:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd9e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cda2:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cdb2:
	mov -272(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007cdb5
uuid_000000000007cdb3:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cdb5:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007cdb8
uuid_000000000007cdb6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cdb8:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007cdbb
uuid_000000000007cdb9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a443
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cdbb:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
print_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdd7
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc4
	jmp uuid_000000000007cdc6
uuid_000000000007cdc4:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc1
	jmp uuid_000000000007cdc3
uuid_000000000007cdc1:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007cdbe
	jmp uuid_000000000007cdc0
uuid_000000000007cdbe:
	movb $1, -192(%rbp)
uuid_000000000007cdc0:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cdc3:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cdc6:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdd4
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdcd
	jmp uuid_000000000007cdcf
uuid_000000000007cdcd:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cdca
	jmp uuid_000000000007cdcc
uuid_000000000007cdca:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_000000000007cdc7
	jmp uuid_000000000007cdc9
uuid_000000000007cdc7:
	movb $1, -336(%rbp)
uuid_000000000007cdc9:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007cdcc:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007cdcf:
	mov -344(%RBP),%RSP
	add $-424, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdd1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cdd0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cdd3
uuid_000000000007cdd1:
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a5fe
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cdd3:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007cdd6
uuid_000000000007cdd4:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cdd6:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cdd9
uuid_000000000007cdd7:
uuid_000000000007cdd9:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
reverse_CL_ArrowFragmentListFragmentList:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007cde7:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cde8
	jmp uuid_000000000007cde9
uuid_000000000007cde8:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cde0
	jmp uuid_000000000007cde2
uuid_000000000007cde0:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007cddd
	jmp uuid_000000000007cddf
uuid_000000000007cddd:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cdda
	jmp uuid_000000000007cddc
uuid_000000000007cdda:
	movb $1, -696(%rbp)
uuid_000000000007cddc:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007cddf:
	mov -712(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007cde2:
	mov -704(%RBP),%RSP
	add $-1040, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cde4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cde3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cde6
uuid_000000000007cde4:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq $0
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	movq -1040(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cde6:
	mov -520(%RBP),%RSP
	add $-1040, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cde7
uuid_000000000007cde9:
	subq $168, %rsp
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
serialize_SB_ast_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce6a
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce67
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cded
	jmp uuid_000000000007cdef
uuid_000000000007cded:
	push %RBP
	jmp uuid_000000000007cdea
	jmp uuid_000000000007cdec
uuid_000000000007cdea:
	movb $1, -400(%rbp)
uuid_000000000007cdec:
	mov -416(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007cdef:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce64
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdf6
	jmp uuid_000000000007cdf8
uuid_000000000007cdf6:
	push %RBP
	jmp uuid_000000000007cdf3
	jmp uuid_000000000007cdf5
uuid_000000000007cdf3:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cdf0
	jmp uuid_000000000007cdf2
uuid_000000000007cdf0:
	movb $1, -504(%rbp)
uuid_000000000007cdf2:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007cdf5:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007cdf8:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce61
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce00
	jmp uuid_000000000007ce02
uuid_000000000007ce00:
	push %RBP
	jmp uuid_000000000007cdfd
	jmp uuid_000000000007cdff
uuid_000000000007cdfd:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cdfa
	jmp uuid_000000000007cdfc
uuid_000000000007cdfa:
	movb $1, -624(%rbp)
uuid_000000000007cdfc:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007cdff:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007ce02:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce5e
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce07
	jmp uuid_000000000007ce09
uuid_000000000007ce07:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_000000000007ce04
	jmp uuid_000000000007ce06
uuid_000000000007ce04:
	movb $1, -744(%rbp)
uuid_000000000007ce06:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007ce09:
	mov -752(%RBP),%RSP
	add $-784, %RSP
	mov -744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce5b
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce10
	jmp uuid_000000000007ce12
uuid_000000000007ce10:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce0d
	jmp uuid_000000000007ce0f
uuid_000000000007ce0d:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce0a
	jmp uuid_000000000007ce0c
uuid_000000000007ce0a:
	movb $1, -872(%rbp)
uuid_000000000007ce0c:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007ce0f:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007ce12:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce58
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce1b
	jmp uuid_000000000007ce1d
uuid_000000000007ce1b:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce18
	jmp uuid_000000000007ce1a
uuid_000000000007ce18:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007ce15
	jmp uuid_000000000007ce17
uuid_000000000007ce15:
	movb $1, -1128(%rbp)
uuid_000000000007ce17:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007ce1a:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007ce1d:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
	mov -1128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce55
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce25
	jmp uuid_000000000007ce27
uuid_000000000007ce25:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce22
	jmp uuid_000000000007ce24
uuid_000000000007ce22:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce1f
	jmp uuid_000000000007ce21
uuid_000000000007ce1f:
	movb $1, -1368(%rbp)
uuid_000000000007ce21:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007ce24:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007ce27:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
	mov -1368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce52
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce32
	jmp uuid_000000000007ce34
uuid_000000000007ce32:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007ce2f
	jmp uuid_000000000007ce31
uuid_000000000007ce2f:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce2c
	jmp uuid_000000000007ce2e
uuid_000000000007ce2c:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce29
	jmp uuid_000000000007ce2b
uuid_000000000007ce29:
	movb $1, -1624(%rbp)
uuid_000000000007ce2b:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ce2e:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ce31:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007ce34:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce4f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce3c
	jmp uuid_000000000007ce3e
uuid_000000000007ce3c:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce39
	jmp uuid_000000000007ce3b
uuid_000000000007ce39:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2080(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce36
	jmp uuid_000000000007ce38
uuid_000000000007ce36:
	movb $1, -1912(%rbp)
uuid_000000000007ce38:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007ce3b:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007ce3e:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
	mov -1912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce4c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2160(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce45
	jmp uuid_000000000007ce47
uuid_000000000007ce45:
	push %RBP
	mov -2152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce42
	jmp uuid_000000000007ce44
uuid_000000000007ce42:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce3f
	jmp uuid_000000000007ce41
uuid_000000000007ce3f:
	movb $1, -2168(%rbp)
uuid_000000000007ce41:
	mov -2264(%RBP),%RSP
	add $-2336, %RSP
uuid_000000000007ce44:
	mov -2184(%RBP),%RSP
	add $-2336, %RSP
uuid_000000000007ce47:
	mov -2176(%RBP),%RSP
	add $-2336, %RSP
	mov -2168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce49
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ce48
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce4b
uuid_000000000007ce49:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce4b:
	mov -2088(%RBP),%RSP
	add $-2336, %RSP
	jmp uuid_000000000007ce4e
uuid_000000000007ce4c:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce4e:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007ce51
uuid_000000000007ce4f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce35
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce51:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007ce54
uuid_000000000007ce52:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce28
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce54:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_000000000007ce57
uuid_000000000007ce55:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce1e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce57:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007ce5a
uuid_000000000007ce58:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce13
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce5a:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007ce5d
uuid_000000000007ce5b:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce5d:
	mov -664(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007ce60
uuid_000000000007ce5e:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce03
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce60:
	mov -544(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_000000000007ce63
uuid_000000000007ce61:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cdf9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce63:
	mov -424(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007ce66
uuid_000000000007ce64:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007af3b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce66:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007ce69
uuid_000000000007ce67:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce69:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007ce6c
uuid_000000000007ce6a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a286
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce6c:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
serialize_SB_ast_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce88
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce75
	jmp uuid_000000000007ce77
uuid_000000000007ce75:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce72
	jmp uuid_000000000007ce74
uuid_000000000007ce72:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007ce6f
	jmp uuid_000000000007ce71
uuid_000000000007ce6f:
	movb $1, -192(%rbp)
uuid_000000000007ce71:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ce74:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ce77:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce85
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce7e
	jmp uuid_000000000007ce80
uuid_000000000007ce7e:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce7b
	jmp uuid_000000000007ce7d
uuid_000000000007ce7b:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_000000000007ce78
	jmp uuid_000000000007ce7a
uuid_000000000007ce78:
	movb $1, -336(%rbp)
uuid_000000000007ce7a:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007ce7d:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007ce80:
	mov -344(%RBP),%RSP
	add $-424, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce82
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ce81
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce84
uuid_000000000007ce82:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce28
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce84:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007ce87
uuid_000000000007ce85:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce87:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007ce8a
uuid_000000000007ce88:
uuid_000000000007ce8a:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
serialize_SB_ast_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cebc
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce8f
	jmp uuid_000000000007ce91
uuid_000000000007ce8f:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce8c
	jmp uuid_000000000007ce8e
uuid_000000000007ce8c:
	movb $1, -128(%rbp)
uuid_000000000007ce8e:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007ce91:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ceb9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce98
	jmp uuid_000000000007ce9a
uuid_000000000007ce98:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce95
	jmp uuid_000000000007ce97
uuid_000000000007ce95:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce92
	jmp uuid_000000000007ce94
uuid_000000000007ce92:
	movb $1, -192(%rbp)
uuid_000000000007ce94:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ce97:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ce9a:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ceb6
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cea2
	jmp uuid_000000000007cea4
uuid_000000000007cea2:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce9f
	jmp uuid_000000000007cea1
uuid_000000000007ce9f:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce9c
	jmp uuid_000000000007ce9e
uuid_000000000007ce9c:
	movb $1, -304(%rbp)
uuid_000000000007ce9e:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007cea1:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007cea4:
	mov -312(%RBP),%RSP
	add $-376, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ceb3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceab
	jmp uuid_000000000007cead
uuid_000000000007ceab:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cea8
	jmp uuid_000000000007ceaa
uuid_000000000007cea8:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cea5
	jmp uuid_000000000007cea7
uuid_000000000007cea5:
	movb $1, -416(%rbp)
uuid_000000000007cea7:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007ceaa:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007cead:
	mov -424(%RBP),%RSP
	add $-488, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ceb0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ceaf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ceb2
uuid_000000000007ceb0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce28
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce03
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ceae
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ceb2:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007ceb5
uuid_000000000007ceb3:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce03
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ceb5:
	mov -272(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007ceb8
uuid_000000000007ceb6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce28
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce9b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce28
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a297
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce14
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ceb8:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007cebb
uuid_000000000007ceb9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cdf9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cebb:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007cebe
uuid_000000000007cebc:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce8b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cebe:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
slot_CL_ArrowTypeConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cec5
	jmp uuid_000000000007cec7
uuid_000000000007cec5:
	push %RBP
	jmp uuid_000000000007cec2
	jmp uuid_000000000007cec4
uuid_000000000007cec2:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cebf
	jmp uuid_000000000007cec1
uuid_000000000007cebf:
	movb $1, -128(%rbp)
uuid_000000000007cec1:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007cec4:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007cec7:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cede
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ced1
	jmp uuid_000000000007ced3
uuid_000000000007ced1:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cece
	jmp uuid_000000000007ced0
uuid_000000000007cece:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cecb
	jmp uuid_000000000007cecd
uuid_000000000007cecb:
	movb $1, -200(%rbp)
uuid_000000000007cecd:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ced0:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ced3:
	mov -208(%RBP),%RSP
	add $-272, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cedb
	push %RBP
	jmp uuid_000000000007ced8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007ced7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ceda
uuid_000000000007ced8:
uuid_000000000007ceda:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cedd
uuid_000000000007cedb:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ced4
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	jmp uuid_000000000007ced6
uuid_000000000007ced4:
	movq -296(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007ced6:
	mov -304(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007cedd:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007cee0
uuid_000000000007cede:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cec8
	jmp uuid_000000000007ceca
uuid_000000000007cec8:
	movq -24(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007ceca:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cee0:
	mov -96(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
slot_CL_ArrowTypeConsStringConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cee7
	jmp uuid_000000000007cee9
uuid_000000000007cee7:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cee4
	jmp uuid_000000000007cee6
uuid_000000000007cee4:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cee1
	jmp uuid_000000000007cee3
uuid_000000000007cee1:
	movb $1, -136(%rbp)
uuid_000000000007cee3:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007cee6:
	mov -152(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007cee9:
	mov -144(%RBP),%RSP
	add $-208, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf13
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf06
	jmp uuid_000000000007cf08
uuid_000000000007cf06:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf03
	jmp uuid_000000000007cf05
uuid_000000000007cf03:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf00
	jmp uuid_000000000007cf02
uuid_000000000007cf00:
	movb $1, -248(%rbp)
uuid_000000000007cf02:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007cf05:
	mov -264(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007cf08:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf10
	push %RBP
	jmp uuid_000000000007cf0d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cf0c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf0f
uuid_000000000007cf0d:
uuid_000000000007cf0f:
	mov -328(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007cf12
uuid_000000000007cf10:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf09
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -56(%rbp)
	jmp uuid_000000000007cf0b
uuid_000000000007cf09:
	movq -344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007cf0b:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007cf12:
	mov -216(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007cf15
uuid_000000000007cf13:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cefd
	jmp uuid_000000000007ceff
uuid_000000000007cefd:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cef0
	jmp uuid_000000000007cef2
uuid_000000000007cef0:
	push %RBP
	jmp uuid_000000000007ceed
	jmp uuid_000000000007ceef
uuid_000000000007ceed:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ceea
	jmp uuid_000000000007ceec
uuid_000000000007ceea:
	movb $1, -312(%rbp)
uuid_000000000007ceec:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007ceef:
	mov -328(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007cef2:
	mov -320(%RBP),%RSP
	add $-344, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cefa
	push %RBP
	jmp uuid_000000000007cef7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cef6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cef9
uuid_000000000007cef7:
uuid_000000000007cef9:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007cefc
uuid_000000000007cefa:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cef3
	jmp uuid_000000000007cef5
uuid_000000000007cef3:
	movq -24(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007cef5:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007cefc:
	mov -264(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007ceff:
	mov -216(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007cf15:
	mov -104(%RBP),%RSP
	add $-352, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
uuid_CL_ArrowStringNil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007cf16
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-hex : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call to_SB_hex_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
iuid_CL_ArrowU64Nil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov -16(%rbp), %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
var_SB_name_SB_if_SB_var_CL_ArrowStringAST:
	pushq $uuid_000000000007a365
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf1d
	jmp uuid_000000000007cf1f
uuid_000000000007cf1d:
	push %RBP
	jmp uuid_000000000007cf1a
	jmp uuid_000000000007cf1c
uuid_000000000007cf1a:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf17
	jmp uuid_000000000007cf19
uuid_000000000007cf17:
	movb $1, -248(%rbp)
uuid_000000000007cf19:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cf1c:
	mov -264(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cf1f:
	mov -256(%RBP),%RSP
	add $-280, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf30
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf26
	jmp uuid_000000000007cf28
uuid_000000000007cf26:
	push %RBP
	jmp uuid_000000000007cf23
	jmp uuid_000000000007cf25
uuid_000000000007cf23:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf20
	jmp uuid_000000000007cf22
uuid_000000000007cf20:
	movb $1, -368(%rbp)
uuid_000000000007cf22:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007cf25:
	mov -384(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007cf28:
	mov -376(%RBP),%RSP
	add $-400, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf2d
	push %RBP
	jmp uuid_000000000007cf2a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cf29
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf2c
uuid_000000000007cf2a:
uuid_000000000007cf2c:
	mov -408(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_000000000007cf2f
uuid_000000000007cf2d:
	movq -400(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -400(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_000000000007cf2f:
	mov -288(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007cf32
uuid_000000000007cf30:
	movq -280(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -280(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_000000000007cf32:
	mov -168(%RBP),%RSP
	add $-280, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_expect_CL_ArrowNilConsListTokenString:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_SB_lambda_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf5e
	jmp uuid_000000000007cf60
uuid_000000000007cf5e:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf49
	jmp uuid_000000000007cf4b
uuid_000000000007cf49:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf46
	jmp uuid_000000000007cf48
uuid_000000000007cf46:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf40
	jmp uuid_000000000007cf42
uuid_000000000007cf40:
	push %RBP
	jmp uuid_000000000007cf3d
	jmp uuid_000000000007cf3f
uuid_000000000007cf3d:
	push %RBP
	jmp uuid_000000000007cf3a
	jmp uuid_000000000007cf3c
uuid_000000000007cf3a:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf37
	jmp uuid_000000000007cf39
uuid_000000000007cf37:
	movb $1, -520(%rbp)
uuid_000000000007cf39:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cf3c:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cf3f:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cf42:
	mov -528(%RBP),%RSP
	add $-560, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf43
	jmp uuid_000000000007cf45
uuid_000000000007cf43:
	movb $1, -360(%rbp)
uuid_000000000007cf45:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cf48:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cf4b:
	mov -368(%RBP),%RSP
	add $-560, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf5b
	jmp uuid_000000000007cf5d
uuid_000000000007cf5b:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf55
	jmp uuid_000000000007cf57
uuid_000000000007cf55:
	push %RBP
	jmp uuid_000000000007cf52
	jmp uuid_000000000007cf54
uuid_000000000007cf52:
	push %RBP
	jmp uuid_000000000007cf4f
	jmp uuid_000000000007cf51
uuid_000000000007cf4f:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf4c
	jmp uuid_000000000007cf4e
uuid_000000000007cf4c:
	movb $1, -632(%rbp)
uuid_000000000007cf4e:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf51:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf54:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf57:
	mov -640(%RBP),%RSP
	add $-672, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf58
	jmp uuid_000000000007cf5a
uuid_000000000007cf58:
	movb $1, -264(%rbp)
uuid_000000000007cf5a:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf5d:
	mov -280(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf60:
	mov -272(%RBP),%RSP
	add $-672, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf65
	push %RBP
	jmp uuid_000000000007cf62
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cf61
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf64
uuid_000000000007cf62:
uuid_000000000007cf64:
	mov -680(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007cf67
uuid_000000000007cf65:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -448(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cf67:
	mov -184(%RBP),%RSP
	add $-672, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf79
	jmp uuid_000000000007cf7b
uuid_000000000007cf79:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	jmp uuid_000000000007cf76
	jmp uuid_000000000007cf78
uuid_000000000007cf76:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf70
	jmp uuid_000000000007cf72
uuid_000000000007cf70:
	push %RBP
	jmp uuid_000000000007cf6d
	jmp uuid_000000000007cf6f
uuid_000000000007cf6d:
	push %RBP
	mov -1240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1344(%rbp)
	pushq $uuid_000000000007a533
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf6a
	jmp uuid_000000000007cf6c
uuid_000000000007cf6a:
	movb $1, -1312(%rbp)
uuid_000000000007cf6c:
	mov -1336(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007cf6f:
	mov -1328(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007cf72:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	mov -1312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf73
	jmp uuid_000000000007cf75
uuid_000000000007cf73:
	movb $1, -1136(%rbp)
uuid_000000000007cf75:
	mov -1232(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007cf78:
	mov -1152(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007cf7b:
	mov -1144(%RBP),%RSP
	add $-1344, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf96
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf8f
	jmp uuid_000000000007cf91
uuid_000000000007cf8f:
	push %RBP
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_000000000007cf8c
	jmp uuid_000000000007cf8e
uuid_000000000007cf8c:
	push %RBP
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	jmp uuid_000000000007cf89
	jmp uuid_000000000007cf8b
uuid_000000000007cf89:
	movb $1, -1512(%rbp)
uuid_000000000007cf8b:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007cf8e:
	mov -1528(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007cf91:
	mov -1520(%RBP),%RSP
	add $-1680, %RSP
	mov -1512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf93
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cf92
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf95
uuid_000000000007cf93:
	movq -1680(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cf95:
	mov -1352(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_000000000007cf98
uuid_000000000007cf96:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf82
	jmp uuid_000000000007cf84
uuid_000000000007cf82:
	push %RBP
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_000000000007cf7f
	jmp uuid_000000000007cf81
uuid_000000000007cf7f:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007cf7c
	jmp uuid_000000000007cf7e
uuid_000000000007cf7c:
	movb $1, -1664(%rbp)
uuid_000000000007cf7e:
	mov -1760(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cf81:
	mov -1680(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cf84:
	mov -1672(%RBP),%RSP
	add $-1832, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf86
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cf85
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf88
uuid_000000000007cf86:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST+CaseNumber<9>,Array<AST+CaseNumber<9>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1752(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -752(%rbp)
uuid_000000000007cf88:
	mov -1504(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cf98:
	mov -976(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cfd5:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cfd6
	jmp uuid_000000000007cfd7
uuid_000000000007cfd6:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfa8
	jmp uuid_000000000007cfaa
uuid_000000000007cfa8:
	push %RBP
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	jmp uuid_000000000007cfa5
	jmp uuid_000000000007cfa7
uuid_000000000007cfa5:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf9f
	jmp uuid_000000000007cfa1
uuid_000000000007cf9f:
	push %RBP
	jmp uuid_000000000007cf9c
	jmp uuid_000000000007cf9e
uuid_000000000007cf9c:
	push %RBP
	mov -2256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2360(%rbp)
	pushq $uuid_000000000007a533
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf99
	jmp uuid_000000000007cf9b
uuid_000000000007cf99:
	movb $1, -2328(%rbp)
uuid_000000000007cf9b:
	mov -2352(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007cf9e:
	mov -2344(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007cfa1:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
	mov -2328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfa2
	jmp uuid_000000000007cfa4
uuid_000000000007cfa2:
	movb $1, -2152(%rbp)
uuid_000000000007cfa4:
	mov -2248(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007cfa7:
	mov -2168(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007cfaa:
	mov -2160(%RBP),%RSP
	add $-2360, %RSP
	mov -2152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfd2
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfbe
	jmp uuid_000000000007cfc0
uuid_000000000007cfbe:
	push %RBP
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfbb
	jmp uuid_000000000007cfbd
uuid_000000000007cfbb:
	push %RBP
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	jmp uuid_000000000007cfb8
	jmp uuid_000000000007cfba
uuid_000000000007cfb8:
	movb $1, -2528(%rbp)
uuid_000000000007cfba:
	mov -2624(%RBP),%RSP
	add $-2696, %RSP
uuid_000000000007cfbd:
	mov -2544(%RBP),%RSP
	add $-2696, %RSP
uuid_000000000007cfc0:
	mov -2536(%RBP),%RSP
	add $-2696, %RSP
	mov -2528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfcf
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfc8
	jmp uuid_000000000007cfca
uuid_000000000007cfc8:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	jmp uuid_000000000007cfc5
	jmp uuid_000000000007cfc7
uuid_000000000007cfc5:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_000000000007cfc2
	jmp uuid_000000000007cfc4
uuid_000000000007cfc2:
	movb $1, -2864(%rbp)
uuid_000000000007cfc4:
	mov -2960(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007cfc7:
	mov -2880(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007cfca:
	mov -2872(%RBP),%RSP
	add $-3032, %RSP
	mov -2864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfcc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cfcb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cfce
uuid_000000000007cfcc:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2952(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2944(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2936(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2928(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2920(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2912(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2904(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2896(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2888(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cfce:
	mov -2704(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_000000000007cfd1
uuid_000000000007cfcf:
#call function parse-expect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfc1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_expect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cfd1:
	mov -2368(%RBP),%RSP
	add $-2696, %RSP
	jmp uuid_000000000007cfd4
uuid_000000000007cfd2:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfb1
	jmp uuid_000000000007cfb3
uuid_000000000007cfb1:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_000000000007cfae
	jmp uuid_000000000007cfb0
uuid_000000000007cfae:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_000000000007cfab
	jmp uuid_000000000007cfad
uuid_000000000007cfab:
	movb $1, -2680(%rbp)
uuid_000000000007cfad:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007cfb0:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007cfb3:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
	mov -2680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfb5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007cfb4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cfb7
uuid_000000000007cfb5:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -752(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cfb7:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007cfd4:
	mov -1992(%RBP),%RSP
	add $-2848, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cfd5
uuid_000000000007cfd7:
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -1984(%rbp)
	pushq -1976(%rbp)
	pushq -1968(%rbp)
	pushq -1960(%rbp)
	pushq -1952(%rbp)
	pushq -1944(%rbp)
	pushq -1936(%rbp)
	pushq -1928(%rbp)
	pushq -1920(%rbp)
	pushq -1912(%rbp)
	pushq -1904(%rbp)
	pushq -1896(%rbp)
	pushq -1888(%rbp)
	pushq -1880(%rbp)
	pushq -1872(%rbp)
	pushq -1864(%rbp)
	pushq -1856(%rbp)
	pushq -1848(%rbp)
	pushq -1840(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007d023:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d024
	jmp uuid_000000000007d025
uuid_000000000007d024:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfee
	jmp uuid_000000000007cff0
uuid_000000000007cfee:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfeb
	jmp uuid_000000000007cfed
uuid_000000000007cfeb:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfe5
	jmp uuid_000000000007cfe7
uuid_000000000007cfe5:
	push %RBP
	jmp uuid_000000000007cfe2
	jmp uuid_000000000007cfe4
uuid_000000000007cfe2:
	push %RBP
	jmp uuid_000000000007cfdf
	jmp uuid_000000000007cfe1
uuid_000000000007cfdf:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_000000000007a4a2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cfdc
	jmp uuid_000000000007cfde
uuid_000000000007cfdc:
	movb $1, -544(%rbp)
uuid_000000000007cfde:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cfe1:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cfe4:
	mov -560(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cfe7:
	mov -552(%RBP),%RSP
	add $-584, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfe8
	jmp uuid_000000000007cfea
uuid_000000000007cfe8:
	movb $1, -384(%rbp)
uuid_000000000007cfea:
	mov -480(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cfed:
	mov -400(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cff0:
	mov -392(%RBP),%RSP
	add $-584, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d020
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d003
	jmp uuid_000000000007d005
uuid_000000000007d003:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d000
	jmp uuid_000000000007d002
uuid_000000000007d000:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cffa
	jmp uuid_000000000007cffc
uuid_000000000007cffa:
	push %RBP
	jmp uuid_000000000007cff7
	jmp uuid_000000000007cff9
uuid_000000000007cff7:
	push %RBP
	jmp uuid_000000000007cff4
	jmp uuid_000000000007cff6
uuid_000000000007cff4:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cff1
	jmp uuid_000000000007cff3
uuid_000000000007cff1:
	movb $1, -832(%rbp)
uuid_000000000007cff3:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007cff6:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007cff9:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007cffc:
	mov -840(%RBP),%RSP
	add $-872, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cffd
	jmp uuid_000000000007cfff
uuid_000000000007cffd:
	movb $1, -672(%rbp)
uuid_000000000007cfff:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d002:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d005:
	mov -680(%RBP),%RSP
	add $-872, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d01d
	push %RBP
	jmp uuid_000000000007d01a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d019
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d01c
uuid_000000000007d01a:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d00f
	jmp uuid_000000000007d011
uuid_000000000007d00f:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_000000000007d00c
	jmp uuid_000000000007d00e
uuid_000000000007d00c:
	push %RBP
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	jmp uuid_000000000007d009
	jmp uuid_000000000007d00b
uuid_000000000007d009:
	movb $1, -1200(%rbp)
uuid_000000000007d00b:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007d00e:
	mov -1216(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007d011:
	mov -1208(%RBP),%RSP
	add $-1368, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d016
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d015
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d018
uuid_000000000007d016:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d012
	movq -1368(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -88(%rbp)
	jmp uuid_000000000007d014
uuid_000000000007d012:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d014:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d018:
	mov -1040(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007d01c:
	mov -880(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007d01f
uuid_000000000007d01d:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d006
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007d008
uuid_000000000007d006:
uuid_000000000007d008:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	movq -760(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d01f:
	mov -592(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_000000000007d022
uuid_000000000007d020:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d022:
	mov -304(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d023
uuid_000000000007d025:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_one_SB_expression_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0be
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d03c
	jmp uuid_000000000007d03e
uuid_000000000007d03c:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d039
	jmp uuid_000000000007d03b
uuid_000000000007d039:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d033
	jmp uuid_000000000007d035
uuid_000000000007d033:
	push %RBP
	jmp uuid_000000000007d030
	jmp uuid_000000000007d032
uuid_000000000007d030:
	push %RBP
	jmp uuid_000000000007d02d
	jmp uuid_000000000007d02f
uuid_000000000007d02d:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq $uuid_000000000007a4a5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d02a
	jmp uuid_000000000007d02c
uuid_000000000007d02a:
	movb $1, -624(%rbp)
uuid_000000000007d02c:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d02f:
	mov -648(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d032:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d035:
	mov -632(%RBP),%RSP
	add $-664, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d036
	jmp uuid_000000000007d038
uuid_000000000007d036:
	movb $1, -464(%rbp)
uuid_000000000007d038:
	mov -560(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d03b:
	mov -480(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d03e:
	mov -472(%RBP),%RSP
	add $-664, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0bb
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d05e
	jmp uuid_000000000007d060
uuid_000000000007d05e:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d05b
	jmp uuid_000000000007d05d
uuid_000000000007d05b:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d055
	jmp uuid_000000000007d057
uuid_000000000007d055:
	push %RBP
	jmp uuid_000000000007d052
	jmp uuid_000000000007d054
uuid_000000000007d052:
	push %RBP
	jmp uuid_000000000007d04f
	jmp uuid_000000000007d051
uuid_000000000007d04f:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d04c
	jmp uuid_000000000007d04e
uuid_000000000007d04c:
	movb $1, -912(%rbp)
uuid_000000000007d04e:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d051:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d054:
	mov -928(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d057:
	mov -920(%RBP),%RSP
	add $-952, %RSP
	mov -912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d058
	jmp uuid_000000000007d05a
uuid_000000000007d058:
	movb $1, -752(%rbp)
uuid_000000000007d05a:
	mov -848(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d05d:
	mov -768(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d060:
	mov -760(%RBP),%RSP
	add $-952, %RSP
	mov -752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0b8
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d074
	jmp uuid_000000000007d076
uuid_000000000007d074:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d071
	jmp uuid_000000000007d073
uuid_000000000007d071:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d06b
	jmp uuid_000000000007d06d
uuid_000000000007d06b:
	push %RBP
	jmp uuid_000000000007d068
	jmp uuid_000000000007d06a
uuid_000000000007d068:
	push %RBP
	jmp uuid_000000000007d065
	jmp uuid_000000000007d067
uuid_000000000007d065:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq $uuid_000000000007a296
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d062
	jmp uuid_000000000007d064
uuid_000000000007d062:
	movb $1, -1200(%rbp)
uuid_000000000007d064:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d067:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d06a:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d06d:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d06e
	jmp uuid_000000000007d070
uuid_000000000007d06e:
	movb $1, -1040(%rbp)
uuid_000000000007d070:
	mov -1136(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d073:
	mov -1056(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d076:
	mov -1048(%RBP),%RSP
	add $-1240, %RSP
	mov -1040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0b5
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d09f
	jmp uuid_000000000007d0a1
uuid_000000000007d09f:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d08a
	jmp uuid_000000000007d08c
uuid_000000000007d08a:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d087
	jmp uuid_000000000007d089
uuid_000000000007d087:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_000000000007d084
	jmp uuid_000000000007d086
uuid_000000000007d084:
	movb $1, -1424(%rbp)
uuid_000000000007d086:
	mov -1520(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007d089:
	mov -1440(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007d08c:
	mov -1432(%RBP),%RSP
	add $-1576, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d09c
	jmp uuid_000000000007d09e
uuid_000000000007d09c:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d096
	jmp uuid_000000000007d098
uuid_000000000007d096:
	push %RBP
	jmp uuid_000000000007d093
	jmp uuid_000000000007d095
uuid_000000000007d093:
	push %RBP
	jmp uuid_000000000007d090
	jmp uuid_000000000007d092
uuid_000000000007d090:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_000000000007a4a4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d08d
	jmp uuid_000000000007d08f
uuid_000000000007d08d:
	movb $1, -1648(%rbp)
uuid_000000000007d08f:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d092:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d095:
	mov -1664(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d098:
	mov -1656(%RBP),%RSP
	add $-1688, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d099
	jmp uuid_000000000007d09b
uuid_000000000007d099:
	movb $1, -1328(%rbp)
uuid_000000000007d09b:
	mov -1584(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d09e:
	mov -1344(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d0a1:
	mov -1336(%RBP),%RSP
	add $-1688, %RSP
	mov -1328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0b2
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0a8
	jmp uuid_000000000007d0aa
uuid_000000000007d0a8:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0a5
	jmp uuid_000000000007d0a7
uuid_000000000007d0a5:
	push %RBP
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_000000000007d0a2
	jmp uuid_000000000007d0a4
uuid_000000000007d0a2:
	movb $1, -1776(%rbp)
uuid_000000000007d0a4:
	mov -1872(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007d0a7:
	mov -1792(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007d0aa:
	mov -1784(%RBP),%RSP
	add $-1928, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0af
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d0ae
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d0b1
uuid_000000000007d0af:
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -1880(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0ab
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007d0ad
uuid_000000000007d0ab:
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0ad:
	mov -1936(%RBP),%RSP
	add $-1936, %RSP
	movq -1864(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1856(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1848(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1840(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1832(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1800(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007d0b1:
	mov -1696(%RBP),%RSP
	add $-1936, %RSP
	jmp uuid_000000000007d0b4
uuid_000000000007d0b2:
	mov -1528(%RBP), %RAX
	push %RAX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1512(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007d0b4:
	mov -1248(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007d0b7
uuid_000000000007d0b5:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d07d
	jmp uuid_000000000007d07f
uuid_000000000007d07d:
	push %RBP
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	jmp uuid_000000000007d07a
	jmp uuid_000000000007d07c
uuid_000000000007d07a:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_000000000007d077
	jmp uuid_000000000007d079
uuid_000000000007d077:
	movb $1, -1560(%rbp)
uuid_000000000007d079:
	mov -1656(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007d07c:
	mov -1576(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007d07f:
	mov -1568(%RBP),%RSP
	add $-1728, %RSP
	mov -1560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d081
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d080
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d083
uuid_000000000007d081:
	movq -1728(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007d083:
	mov -1400(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007d0b7:
	mov -960(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_000000000007d0ba
uuid_000000000007d0b8:
#call function parse-unexpect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d061
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_unexpect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d0ba:
	mov -672(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007d0bd
uuid_000000000007d0bb:
#call function parse-lambda : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call parse_SB_lambda_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d045
	jmp uuid_000000000007d047
uuid_000000000007d045:
	push %RBP
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007d042
	jmp uuid_000000000007d044
uuid_000000000007d042:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	jmp uuid_000000000007d03f
	jmp uuid_000000000007d041
uuid_000000000007d03f:
	movb $1, -984(%rbp)
uuid_000000000007d041:
	mov -1080(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007d044:
	mov -1000(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007d047:
	mov -992(%RBP),%RSP
	add $-1152, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d049
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d048
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d04b
uuid_000000000007d049:
	movq -1152(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007d04b:
	mov -824(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007d0bd:
	mov -384(%RBP),%RSP
	add $-1152, %RSP
	jmp uuid_000000000007d0c0
uuid_000000000007d0be:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
uuid_000000000007d0c0:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_toplevel_CL_ArrowASTListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_000000000007d30c:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d30d
	jmp uuid_000000000007d30e
uuid_000000000007d30d:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0d5
	jmp uuid_000000000007d0d7
uuid_000000000007d0d5:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0d2
	jmp uuid_000000000007d0d4
uuid_000000000007d0d2:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0cc
	jmp uuid_000000000007d0ce
uuid_000000000007d0cc:
	push %RBP
	jmp uuid_000000000007d0c9
	jmp uuid_000000000007d0cb
uuid_000000000007d0c9:
	push %RBP
	jmp uuid_000000000007d0c6
	jmp uuid_000000000007d0c8
uuid_000000000007d0c6:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_000000000007a4a2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0c3
	jmp uuid_000000000007d0c5
uuid_000000000007d0c3:
	movb $1, -472(%rbp)
uuid_000000000007d0c5:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007d0c8:
	mov -496(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007d0cb:
	mov -488(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007d0ce:
	mov -480(%RBP),%RSP
	add $-512, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0cf
	jmp uuid_000000000007d0d1
uuid_000000000007d0cf:
	movb $1, -312(%rbp)
uuid_000000000007d0d1:
	mov -408(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007d0d4:
	mov -328(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007d0d7:
	mov -320(%RBP),%RSP
	add $-512, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d309
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0eb
	jmp uuid_000000000007d0ed
uuid_000000000007d0eb:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0e8
	jmp uuid_000000000007d0ea
uuid_000000000007d0e8:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0e2
	jmp uuid_000000000007d0e4
uuid_000000000007d0e2:
	push %RBP
	jmp uuid_000000000007d0df
	jmp uuid_000000000007d0e1
uuid_000000000007d0df:
	push %RBP
	jmp uuid_000000000007d0dc
	jmp uuid_000000000007d0de
uuid_000000000007d0dc:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $uuid_000000000007d0d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0d9
	jmp uuid_000000000007d0db
uuid_000000000007d0d9:
	movb $1, -760(%rbp)
uuid_000000000007d0db:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d0de:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d0e1:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d0e4:
	mov -768(%RBP),%RSP
	add $-800, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0e5
	jmp uuid_000000000007d0e7
uuid_000000000007d0e5:
	movb $1, -600(%rbp)
uuid_000000000007d0e7:
	mov -696(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d0ea:
	mov -616(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d0ed:
	mov -608(%RBP),%RSP
	add $-800, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d306
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d12b
	jmp uuid_000000000007d12d
uuid_000000000007d12b:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d128
	jmp uuid_000000000007d12a
uuid_000000000007d128:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d122
	jmp uuid_000000000007d124
uuid_000000000007d122:
	push %RBP
	jmp uuid_000000000007d11f
	jmp uuid_000000000007d121
uuid_000000000007d11f:
	push %RBP
	jmp uuid_000000000007d11c
	jmp uuid_000000000007d11e
uuid_000000000007d11c:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_000000000007d118
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d119
	jmp uuid_000000000007d11b
uuid_000000000007d119:
	movb $1, -1048(%rbp)
uuid_000000000007d11b:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007d11e:
	mov -1072(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007d121:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007d124:
	mov -1056(%RBP),%RSP
	add $-1088, %RSP
	mov -1048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d125
	jmp uuid_000000000007d127
uuid_000000000007d125:
	movb $1, -888(%rbp)
uuid_000000000007d127:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007d12a:
	mov -904(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007d12d:
	mov -896(%RBP),%RSP
	add $-1088, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d303
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d164
	jmp uuid_000000000007d166
uuid_000000000007d164:
	push %RBP
	mov -1160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d14e
	jmp uuid_000000000007d150
uuid_000000000007d14e:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d14b
	jmp uuid_000000000007d14d
uuid_000000000007d14b:
	push %RBP
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq $0
	push %RBP
	mov -1424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d145
	jmp uuid_000000000007d147
uuid_000000000007d145:
	push %RBP
	jmp uuid_000000000007d142
	jmp uuid_000000000007d144
uuid_000000000007d142:
	push %RBP
	jmp uuid_000000000007d13f
	jmp uuid_000000000007d141
uuid_000000000007d13f:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $uuid_000000000007d13b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d13c
	jmp uuid_000000000007d13e
uuid_000000000007d13c:
	movb $1, -1432(%rbp)
uuid_000000000007d13e:
	mov -1464(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007d141:
	mov -1456(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007d144:
	mov -1448(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007d147:
	mov -1440(%RBP),%RSP
	add $-1472, %RSP
	mov -1432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d148
	jmp uuid_000000000007d14a
uuid_000000000007d148:
	movb $1, -1272(%rbp)
uuid_000000000007d14a:
	mov -1368(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007d14d:
	mov -1288(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007d150:
	mov -1280(%RBP),%RSP
	add $-1472, %RSP
	mov -1272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d161
	jmp uuid_000000000007d163
uuid_000000000007d161:
	push %RBP
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d15b
	jmp uuid_000000000007d15d
uuid_000000000007d15b:
	push %RBP
	jmp uuid_000000000007d158
	jmp uuid_000000000007d15a
uuid_000000000007d158:
	push %RBP
	jmp uuid_000000000007d155
	jmp uuid_000000000007d157
uuid_000000000007d155:
	push %RBP
	mov -1488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1584(%rbp)
	pushq $uuid_000000000007d151
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d152
	jmp uuid_000000000007d154
uuid_000000000007d152:
	movb $1, -1544(%rbp)
uuid_000000000007d154:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d157:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d15a:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d15d:
	mov -1552(%RBP),%RSP
	add $-1584, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d15e
	jmp uuid_000000000007d160
uuid_000000000007d15e:
	movb $1, -1176(%rbp)
uuid_000000000007d160:
	mov -1480(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d163:
	mov -1192(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d166:
	mov -1184(%RBP),%RSP
	add $-1584, %RSP
	mov -1176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d300
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d193
	jmp uuid_000000000007d195
uuid_000000000007d193:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d190
	jmp uuid_000000000007d192
uuid_000000000007d190:
	push %RBP
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d18a
	jmp uuid_000000000007d18c
uuid_000000000007d18a:
	push %RBP
	jmp uuid_000000000007d187
	jmp uuid_000000000007d189
uuid_000000000007d187:
	push %RBP
	jmp uuid_000000000007d184
	jmp uuid_000000000007d186
uuid_000000000007d184:
	push %RBP
	mov -1776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_000000000007d13b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d181
	jmp uuid_000000000007d183
uuid_000000000007d181:
	movb $1, -1832(%rbp)
uuid_000000000007d183:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007d186:
	mov -1856(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007d189:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007d18c:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
	mov -1832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d18d
	jmp uuid_000000000007d18f
uuid_000000000007d18d:
	movb $1, -1672(%rbp)
uuid_000000000007d18f:
	mov -1768(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007d192:
	mov -1688(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007d195:
	mov -1680(%RBP),%RSP
	add $-1872, %RSP
	mov -1672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2fd
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d203
	jmp uuid_000000000007d205
uuid_000000000007d203:
	push %RBP
	mov -1944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1ed
	jmp uuid_000000000007d1ef
uuid_000000000007d1ed:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1d7
	jmp uuid_000000000007d1d9
uuid_000000000007d1d7:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1c2
	jmp uuid_000000000007d1c4
uuid_000000000007d1c2:
	push %RBP
	mov -2232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1bf
	jmp uuid_000000000007d1c1
uuid_000000000007d1bf:
	push %RBP
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq $0
	push %RBP
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1b9
	jmp uuid_000000000007d1bb
uuid_000000000007d1b9:
	push %RBP
	jmp uuid_000000000007d1b6
	jmp uuid_000000000007d1b8
uuid_000000000007d1b6:
	push %RBP
	jmp uuid_000000000007d1b3
	jmp uuid_000000000007d1b5
uuid_000000000007d1b3:
	push %RBP
	mov -2352(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d1b0
	jmp uuid_000000000007d1b2
uuid_000000000007d1b0:
	movb $1, -2408(%rbp)
uuid_000000000007d1b2:
	mov -2440(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007d1b5:
	mov -2432(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007d1b8:
	mov -2424(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007d1bb:
	mov -2416(%RBP),%RSP
	add $-2448, %RSP
	mov -2408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1bc
	jmp uuid_000000000007d1be
uuid_000000000007d1bc:
	movb $1, -2248(%rbp)
uuid_000000000007d1be:
	mov -2344(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007d1c1:
	mov -2264(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007d1c4:
	mov -2256(%RBP),%RSP
	add $-2448, %RSP
	mov -2248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1d4
	jmp uuid_000000000007d1d6
uuid_000000000007d1d4:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1ce
	jmp uuid_000000000007d1d0
uuid_000000000007d1ce:
	push %RBP
	jmp uuid_000000000007d1cb
	jmp uuid_000000000007d1cd
uuid_000000000007d1cb:
	push %RBP
	jmp uuid_000000000007d1c8
	jmp uuid_000000000007d1ca
uuid_000000000007d1c8:
	push %RBP
	mov -2464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d1c5
	jmp uuid_000000000007d1c7
uuid_000000000007d1c5:
	movb $1, -2520(%rbp)
uuid_000000000007d1c7:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d1ca:
	mov -2544(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d1cd:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d1d0:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
	mov -2520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1d1
	jmp uuid_000000000007d1d3
uuid_000000000007d1d1:
	movb $1, -2152(%rbp)
uuid_000000000007d1d3:
	mov -2456(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d1d6:
	mov -2168(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d1d9:
	mov -2160(%RBP),%RSP
	add $-2560, %RSP
	mov -2152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1ea
	jmp uuid_000000000007d1ec
uuid_000000000007d1ea:
	push %RBP
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1e4
	jmp uuid_000000000007d1e6
uuid_000000000007d1e4:
	push %RBP
	jmp uuid_000000000007d1e1
	jmp uuid_000000000007d1e3
uuid_000000000007d1e1:
	push %RBP
	jmp uuid_000000000007d1de
	jmp uuid_000000000007d1e0
uuid_000000000007d1de:
	push %RBP
	mov -2576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $uuid_000000000007d1da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d1db
	jmp uuid_000000000007d1dd
uuid_000000000007d1db:
	movb $1, -2632(%rbp)
uuid_000000000007d1dd:
	mov -2664(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007d1e0:
	mov -2656(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007d1e3:
	mov -2648(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007d1e6:
	mov -2640(%RBP),%RSP
	add $-2672, %RSP
	mov -2632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1e7
	jmp uuid_000000000007d1e9
uuid_000000000007d1e7:
	movb $1, -2056(%rbp)
uuid_000000000007d1e9:
	mov -2568(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007d1ec:
	mov -2072(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007d1ef:
	mov -2064(%RBP),%RSP
	add $-2672, %RSP
	mov -2056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d200
	jmp uuid_000000000007d202
uuid_000000000007d200:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1fa
	jmp uuid_000000000007d1fc
uuid_000000000007d1fa:
	push %RBP
	jmp uuid_000000000007d1f7
	jmp uuid_000000000007d1f9
uuid_000000000007d1f7:
	push %RBP
	jmp uuid_000000000007d1f4
	jmp uuid_000000000007d1f6
uuid_000000000007d1f4:
	push %RBP
	mov -2688(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq $uuid_000000000007d1f0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d1f1
	jmp uuid_000000000007d1f3
uuid_000000000007d1f1:
	movb $1, -2744(%rbp)
uuid_000000000007d1f3:
	mov -2776(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007d1f6:
	mov -2768(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007d1f9:
	mov -2760(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007d1fc:
	mov -2752(%RBP),%RSP
	add $-2784, %RSP
	mov -2744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1fd
	jmp uuid_000000000007d1ff
uuid_000000000007d1fd:
	movb $1, -1960(%rbp)
uuid_000000000007d1ff:
	mov -2680(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007d202:
	mov -1976(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007d205:
	mov -1968(%RBP),%RSP
	add $-2784, %RSP
	mov -1960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2fa
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d24b
	jmp uuid_000000000007d24d
uuid_000000000007d24b:
	push %RBP
	mov -2856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d235
	jmp uuid_000000000007d237
uuid_000000000007d235:
	push %RBP
	mov -2952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d220
	jmp uuid_000000000007d222
uuid_000000000007d220:
	push %RBP
	mov -3048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d21d
	jmp uuid_000000000007d21f
uuid_000000000007d21d:
	push %RBP
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d217
	jmp uuid_000000000007d219
uuid_000000000007d217:
	push %RBP
	jmp uuid_000000000007d214
	jmp uuid_000000000007d216
uuid_000000000007d214:
	push %RBP
	jmp uuid_000000000007d211
	jmp uuid_000000000007d213
uuid_000000000007d211:
	push %RBP
	mov -3168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d20e
	jmp uuid_000000000007d210
uuid_000000000007d20e:
	movb $1, -3224(%rbp)
uuid_000000000007d210:
	mov -3256(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007d213:
	mov -3248(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007d216:
	mov -3240(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007d219:
	mov -3232(%RBP),%RSP
	add $-3264, %RSP
	mov -3224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d21a
	jmp uuid_000000000007d21c
uuid_000000000007d21a:
	movb $1, -3064(%rbp)
uuid_000000000007d21c:
	mov -3160(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007d21f:
	mov -3080(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007d222:
	mov -3072(%RBP),%RSP
	add $-3264, %RSP
	mov -3064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d232
	jmp uuid_000000000007d234
uuid_000000000007d232:
	push %RBP
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq $0
	push %RBP
	mov -3328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d22c
	jmp uuid_000000000007d22e
uuid_000000000007d22c:
	push %RBP
	jmp uuid_000000000007d229
	jmp uuid_000000000007d22b
uuid_000000000007d229:
	push %RBP
	jmp uuid_000000000007d226
	jmp uuid_000000000007d228
uuid_000000000007d226:
	push %RBP
	mov -3280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d223
	jmp uuid_000000000007d225
uuid_000000000007d223:
	movb $1, -3336(%rbp)
uuid_000000000007d225:
	mov -3368(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007d228:
	mov -3360(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007d22b:
	mov -3352(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007d22e:
	mov -3344(%RBP),%RSP
	add $-3376, %RSP
	mov -3336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d22f
	jmp uuid_000000000007d231
uuid_000000000007d22f:
	movb $1, -2968(%rbp)
uuid_000000000007d231:
	mov -3272(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007d234:
	mov -2984(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007d237:
	mov -2976(%RBP),%RSP
	add $-3376, %RSP
	mov -2968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d248
	jmp uuid_000000000007d24a
uuid_000000000007d248:
	push %RBP
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq $0
	push %RBP
	mov -3440(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d242
	jmp uuid_000000000007d244
uuid_000000000007d242:
	push %RBP
	jmp uuid_000000000007d23f
	jmp uuid_000000000007d241
uuid_000000000007d23f:
	push %RBP
	jmp uuid_000000000007d23c
	jmp uuid_000000000007d23e
uuid_000000000007d23c:
	push %RBP
	mov -3392(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq $uuid_000000000007d238
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d239
	jmp uuid_000000000007d23b
uuid_000000000007d239:
	movb $1, -3448(%rbp)
uuid_000000000007d23b:
	mov -3480(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007d23e:
	mov -3472(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007d241:
	mov -3464(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007d244:
	mov -3456(%RBP),%RSP
	add $-3488, %RSP
	mov -3448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d245
	jmp uuid_000000000007d247
uuid_000000000007d245:
	movb $1, -2872(%rbp)
uuid_000000000007d247:
	mov -3384(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007d24a:
	mov -2888(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007d24d:
	mov -2880(%RBP),%RSP
	add $-3488, %RSP
	mov -2872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2f7
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d276
	jmp uuid_000000000007d278
uuid_000000000007d276:
	push %RBP
	mov -3560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d260
	jmp uuid_000000000007d262
uuid_000000000007d260:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d25d
	jmp uuid_000000000007d25f
uuid_000000000007d25d:
	push %RBP
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d257
	jmp uuid_000000000007d259
uuid_000000000007d257:
	push %RBP
	jmp uuid_000000000007d254
	jmp uuid_000000000007d256
uuid_000000000007d254:
	push %RBP
	jmp uuid_000000000007d251
	jmp uuid_000000000007d253
uuid_000000000007d251:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d24e
	jmp uuid_000000000007d250
uuid_000000000007d24e:
	movb $1, -3832(%rbp)
uuid_000000000007d250:
	mov -3864(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007d253:
	mov -3856(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007d256:
	mov -3848(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007d259:
	mov -3840(%RBP),%RSP
	add $-3872, %RSP
	mov -3832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d25a
	jmp uuid_000000000007d25c
uuid_000000000007d25a:
	movb $1, -3672(%rbp)
uuid_000000000007d25c:
	mov -3768(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007d25f:
	mov -3688(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007d262:
	mov -3680(%RBP),%RSP
	add $-3872, %RSP
	mov -3672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d273
	jmp uuid_000000000007d275
uuid_000000000007d273:
	push %RBP
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d26d
	jmp uuid_000000000007d26f
uuid_000000000007d26d:
	push %RBP
	jmp uuid_000000000007d26a
	jmp uuid_000000000007d26c
uuid_000000000007d26a:
	push %RBP
	jmp uuid_000000000007d267
	jmp uuid_000000000007d269
uuid_000000000007d267:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3984(%rbp)
	pushq $uuid_000000000007d263
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d264
	jmp uuid_000000000007d266
uuid_000000000007d264:
	movb $1, -3944(%rbp)
uuid_000000000007d266:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007d269:
	mov -3968(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007d26c:
	mov -3960(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007d26f:
	mov -3952(%RBP),%RSP
	add $-3984, %RSP
	mov -3944(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d270
	jmp uuid_000000000007d272
uuid_000000000007d270:
	movb $1, -3576(%rbp)
uuid_000000000007d272:
	mov -3880(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007d275:
	mov -3592(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007d278:
	mov -3584(%RBP),%RSP
	add $-3984, %RSP
	mov -3576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2f4
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2aa
	jmp uuid_000000000007d2ac
uuid_000000000007d2aa:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d294
	jmp uuid_000000000007d296
uuid_000000000007d294:
	push %RBP
	mov -4152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d28b
	jmp uuid_000000000007d28d
uuid_000000000007d28b:
	push %RBP
	mov -4248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d288
	jmp uuid_000000000007d28a
uuid_000000000007d288:
	push %RBP
	pushq -4192(%RBP)
	pushq -4200(%RBP)
	pushq -4208(%RBP)
	pushq -4216(%RBP)
	pushq -4224(%RBP)
	pushq -4232(%RBP)
	pushq -4240(%RBP)
	pushq $0
	push %RBP
	mov -4416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d282
	jmp uuid_000000000007d284
uuid_000000000007d282:
	push %RBP
	jmp uuid_000000000007d27f
	jmp uuid_000000000007d281
uuid_000000000007d27f:
	push %RBP
	jmp uuid_000000000007d27c
	jmp uuid_000000000007d27e
uuid_000000000007d27c:
	push %RBP
	mov -4368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d279
	jmp uuid_000000000007d27b
uuid_000000000007d279:
	movb $1, -4424(%rbp)
uuid_000000000007d27b:
	mov -4456(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d27e:
	mov -4448(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d281:
	mov -4440(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d284:
	mov -4432(%RBP),%RSP
	add $-4464, %RSP
	mov -4424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d285
	jmp uuid_000000000007d287
uuid_000000000007d285:
	movb $1, -4264(%rbp)
uuid_000000000007d287:
	mov -4360(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d28a:
	mov -4280(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d28d:
	mov -4272(%RBP),%RSP
	add $-4464, %RSP
	mov -4264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d291
	jmp uuid_000000000007d293
uuid_000000000007d291:
	push %RBP
	pushq -4096(%RBP)
	pushq -4104(%RBP)
	pushq -4112(%RBP)
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq -4144(%RBP)
	jmp uuid_000000000007d28e
	jmp uuid_000000000007d290
uuid_000000000007d28e:
	movb $1, -4168(%rbp)
uuid_000000000007d290:
	mov -4472(%RBP),%RSP
	add $-4528, %RSP
uuid_000000000007d293:
	mov -4184(%RBP),%RSP
	add $-4528, %RSP
uuid_000000000007d296:
	mov -4176(%RBP),%RSP
	add $-4528, %RSP
	mov -4168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2a7
	jmp uuid_000000000007d2a9
uuid_000000000007d2a7:
	push %RBP
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	pushq -4040(%RBP)
	pushq -4048(%RBP)
	pushq $0
	push %RBP
	mov -4592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2a1
	jmp uuid_000000000007d2a3
uuid_000000000007d2a1:
	push %RBP
	jmp uuid_000000000007d29e
	jmp uuid_000000000007d2a0
uuid_000000000007d29e:
	push %RBP
	jmp uuid_000000000007d29b
	jmp uuid_000000000007d29d
uuid_000000000007d29b:
	push %RBP
	mov -4544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4640(%rbp)
	pushq $uuid_000000000007d297
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d298
	jmp uuid_000000000007d29a
uuid_000000000007d298:
	movb $1, -4600(%rbp)
uuid_000000000007d29a:
	mov -4632(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007d29d:
	mov -4624(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007d2a0:
	mov -4616(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007d2a3:
	mov -4608(%RBP),%RSP
	add $-4640, %RSP
	mov -4600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2a4
	jmp uuid_000000000007d2a6
uuid_000000000007d2a4:
	movb $1, -4072(%rbp)
uuid_000000000007d2a6:
	mov -4536(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007d2a9:
	mov -4088(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007d2ac:
	mov -4080(%RBP),%RSP
	add $-4640, %RSP
	mov -4072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2f1
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2cd
	jmp uuid_000000000007d2cf
uuid_000000000007d2cd:
	push %RBP
	mov -4712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4816(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2c4
	jmp uuid_000000000007d2c6
uuid_000000000007d2c4:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2c1
	jmp uuid_000000000007d2c3
uuid_000000000007d2c1:
	push %RBP
	pushq -4752(%RBP)
	pushq -4760(%RBP)
	pushq -4768(%RBP)
	pushq -4776(%RBP)
	pushq -4784(%RBP)
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq $0
	push %RBP
	mov -4976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2bb
	jmp uuid_000000000007d2bd
uuid_000000000007d2bb:
	push %RBP
	jmp uuid_000000000007d2b8
	jmp uuid_000000000007d2ba
uuid_000000000007d2b8:
	push %RBP
	jmp uuid_000000000007d2b5
	jmp uuid_000000000007d2b7
uuid_000000000007d2b5:
	push %RBP
	mov -4928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5024(%rbp)
	pushq $uuid_000000000007d2b1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2b2
	jmp uuid_000000000007d2b4
uuid_000000000007d2b2:
	movb $1, -4984(%rbp)
uuid_000000000007d2b4:
	mov -5016(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007d2b7:
	mov -5008(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007d2ba:
	mov -5000(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007d2bd:
	mov -4992(%RBP),%RSP
	add $-5024, %RSP
	mov -4984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2be
	jmp uuid_000000000007d2c0
uuid_000000000007d2be:
	movb $1, -4824(%rbp)
uuid_000000000007d2c0:
	mov -4920(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007d2c3:
	mov -4840(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007d2c6:
	mov -4832(%RBP),%RSP
	add $-5024, %RSP
	mov -4824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2ca
	jmp uuid_000000000007d2cc
uuid_000000000007d2ca:
	push %RBP
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	pushq -4688(%RBP)
	pushq -4696(%RBP)
	pushq -4704(%RBP)
	jmp uuid_000000000007d2c7
	jmp uuid_000000000007d2c9
uuid_000000000007d2c7:
	movb $1, -4728(%rbp)
uuid_000000000007d2c9:
	mov -5032(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007d2cc:
	mov -4744(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007d2cf:
	mov -4736(%RBP),%RSP
	add $-5088, %RSP
	mov -4728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2ee
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007d2eb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d2ea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2ed
uuid_000000000007d2eb:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq $0
	push %RBP
	mov -5480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2e3
	jmp uuid_000000000007d2e5
uuid_000000000007d2e3:
	push %RBP
	pushq -5408(%RBP)
	pushq -5416(%RBP)
	pushq -5424(%RBP)
	pushq -5432(%RBP)
	pushq -5440(%RBP)
	pushq -5448(%RBP)
	pushq -5456(%RBP)
	pushq -5464(%RBP)
	pushq -5472(%RBP)
	jmp uuid_000000000007d2e0
	jmp uuid_000000000007d2e2
uuid_000000000007d2e0:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	pushq -5400(%RBP)
	jmp uuid_000000000007d2dd
	jmp uuid_000000000007d2df
uuid_000000000007d2dd:
	movb $1, -5488(%rbp)
uuid_000000000007d2df:
	mov -5584(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007d2e2:
	mov -5504(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007d2e5:
	mov -5496(%RBP),%RSP
	add $-5656, %RSP
	mov -5488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2e7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d2e6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2e9
uuid_000000000007d2e7:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d2e9:
	mov -5328(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007d2ed:
	mov -5096(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_000000000007d2f0
uuid_000000000007d2ee:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2d6
	jmp uuid_000000000007d2d8
uuid_000000000007d2d6:
	push %RBP
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	jmp uuid_000000000007d2d3
	jmp uuid_000000000007d2d5
uuid_000000000007d2d3:
	push %RBP
	pushq -5256(%RBP)
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	pushq -5288(%RBP)
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	pushq -5320(%RBP)
	jmp uuid_000000000007d2d0
	jmp uuid_000000000007d2d2
uuid_000000000007d2d0:
	movb $1, -5408(%rbp)
uuid_000000000007d2d2:
	mov -5504(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007d2d5:
	mov -5424(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007d2d8:
	mov -5416(%RBP),%RSP
	add $-5576, %RSP
	mov -5408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d2d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2dc
uuid_000000000007d2da:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d2dc:
	mov -5248(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007d2f0:
	mov -4648(%RBP),%RSP
	add $-5576, %RSP
	jmp uuid_000000000007d2f3
uuid_000000000007d2f1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007d2ad
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d2ae
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007d2ae
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d2af
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007d2af
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d2b0
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007d2b0
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d2ae
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007d2ae
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d2b0
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007d2b0
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4464(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4464(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a837
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
	pushq $5
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -4352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -4344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -4336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -4328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -4320(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -4312(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -4304(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -4296(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -4288(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d2f3:
	mov -3992(%RBP),%RSP
	add $-4640, %RSP
	jmp uuid_000000000007d2f6
uuid_000000000007d2f4:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3760(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3752(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3744(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3736(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3728(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3720(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3712(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3704(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3696(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d2f6:
	mov -3496(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_000000000007d2f9
uuid_000000000007d2f7:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3376(%rbp)
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3152(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3112(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3104(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3096(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3088(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d2f9:
	mov -2792(%RBP),%RSP
	add $-3488, %RSP
	jmp uuid_000000000007d2fc
uuid_000000000007d2fa:
#call function close : Arrow<SfxList,Array<SfxList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SfxListSfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2448(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad14
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b88f
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	movq -2336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d2fc:
	mov -1880(%RBP),%RSP
	add $-2784, %RSP
	jmp uuid_000000000007d2ff
uuid_000000000007d2fd:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq $0
	push %RBP
	mov -2184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d19c
	jmp uuid_000000000007d19e
uuid_000000000007d19c:
	push %RBP
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	jmp uuid_000000000007d199
	jmp uuid_000000000007d19b
uuid_000000000007d199:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	jmp uuid_000000000007d196
	jmp uuid_000000000007d198
uuid_000000000007d196:
	movb $1, -2192(%rbp)
uuid_000000000007d198:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007d19b:
	mov -2208(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007d19e:
	mov -2200(%RBP),%RSP
	add $-2360, %RSP
	mov -2192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1ad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d1ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d1af
uuid_000000000007d1ad:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1a5
	jmp uuid_000000000007d1a7
uuid_000000000007d1a5:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_000000000007d1a2
	jmp uuid_000000000007d1a4
uuid_000000000007d1a2:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_000000000007d19f
	jmp uuid_000000000007d1a1
uuid_000000000007d19f:
	movb $1, -2680(%rbp)
uuid_000000000007d1a1:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007d1a4:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007d1a7:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
	mov -2680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1a9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d1a8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d1ab
uuid_000000000007d1a9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d1ab:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007d1af:
	mov -2032(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007d2ff:
	mov -1592(%RBP),%RSP
	add $-2848, %RSP
	jmp uuid_000000000007d302
uuid_000000000007d300:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d16d
	jmp uuid_000000000007d16f
uuid_000000000007d16d:
	push %RBP
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	jmp uuid_000000000007d16a
	jmp uuid_000000000007d16c
uuid_000000000007d16a:
	push %RBP
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007d167
	jmp uuid_000000000007d169
uuid_000000000007d167:
	movb $1, -1904(%rbp)
uuid_000000000007d169:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007d16c:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007d16f:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d17e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d17d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d180
uuid_000000000007d17e:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq $0
	push %RBP
	mov -2384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d176
	jmp uuid_000000000007d178
uuid_000000000007d176:
	push %RBP
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	jmp uuid_000000000007d173
	jmp uuid_000000000007d175
uuid_000000000007d173:
	push %RBP
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	jmp uuid_000000000007d170
	jmp uuid_000000000007d172
uuid_000000000007d170:
	movb $1, -2392(%rbp)
uuid_000000000007d172:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d175:
	mov -2408(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d178:
	mov -2400(%RBP),%RSP
	add $-2560, %RSP
	mov -2392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d17a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d179
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d17c
uuid_000000000007d17a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function index-tag-is-fragment : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -2480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d17c:
	mov -2232(%RBP),%RSP
	add $-2584, %RSP
uuid_000000000007d180:
	mov -1744(%RBP),%RSP
	add $-2584, %RSP
uuid_000000000007d302:
	mov -1096(%RBP),%RSP
	add $-2584, %RSP
	jmp uuid_000000000007d305
uuid_000000000007d303:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d134
	jmp uuid_000000000007d136
uuid_000000000007d134:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	jmp uuid_000000000007d131
	jmp uuid_000000000007d133
uuid_000000000007d131:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007d12e
	jmp uuid_000000000007d130
uuid_000000000007d12e:
	movb $1, -1408(%rbp)
uuid_000000000007d130:
	mov -1504(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007d133:
	mov -1424(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007d136:
	mov -1416(%RBP),%RSP
	add $-1576, %RSP
	mov -1408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d138
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d137
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d13a
uuid_000000000007d138:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d13a:
	mov -1248(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007d305:
	mov -808(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007d308
uuid_000000000007d306:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0f4
	jmp uuid_000000000007d0f6
uuid_000000000007d0f4:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007d0f1
	jmp uuid_000000000007d0f3
uuid_000000000007d0f1:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007d0ee
	jmp uuid_000000000007d0f0
uuid_000000000007d0ee:
	movb $1, -1120(%rbp)
uuid_000000000007d0f0:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007d0f3:
	mov -1136(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007d0f6:
	mov -1128(%RBP),%RSP
	add $-1288, %RSP
	mov -1120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d115
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d114
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d117
uuid_000000000007d115:
#call function take-one-expr : Arrow<List<Token>,Tuple<List<Token>,List<Token>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	mov %RBX, %RBP
	call take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0fd
	jmp uuid_000000000007d0ff
uuid_000000000007d0fd:
	push %RBP
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	jmp uuid_000000000007d0fa
	jmp uuid_000000000007d0fc
uuid_000000000007d0fa:
	push %RBP
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	jmp uuid_000000000007d0f7
	jmp uuid_000000000007d0f9
uuid_000000000007d0f7:
	movb $1, -1608(%rbp)
uuid_000000000007d0f9:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d0fc:
	mov -1624(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d0ff:
	mov -1616(%RBP),%RSP
	add $-1776, %RSP
	mov -1608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d111
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d110
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d113
uuid_000000000007d111:
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	push %RBP
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq $0
	push %RBP
	mov -2000(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d106
	jmp uuid_000000000007d108
uuid_000000000007d106:
	push %RBP
	mov -1992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d103
	jmp uuid_000000000007d105
uuid_000000000007d103:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d100
	jmp uuid_000000000007d102
uuid_000000000007d100:
	movb $1, -2008(%rbp)
uuid_000000000007d102:
	mov -2104(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007d105:
	mov -2024(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007d108:
	mov -2016(%RBP),%RSP
	add $-2176, %RSP
	mov -2008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d10d
	push %RBP
	jmp uuid_000000000007d10a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d109
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d10c
uuid_000000000007d10a:
uuid_000000000007d10c:
	mov -2184(%RBP),%RSP
	add $-2184, %RSP
	jmp uuid_000000000007d10f
uuid_000000000007d10d:
	movq -2096(%rbp), %r15
	movq %r15, -1848(%rbp)
	movq -2088(%rbp), %r15
	movq %r15, -1840(%rbp)
	movq -2080(%rbp), %r15
	movq %r15, -1832(%rbp)
	movq -2072(%rbp), %r15
	movq %r15, -1824(%rbp)
	movq -2064(%rbp), %r15
	movq %r15, -1816(%rbp)
	movq -2056(%rbp), %r15
	movq %r15, -1808(%rbp)
	movq -2048(%rbp), %r15
	movq %r15, -1800(%rbp)
	movq -2040(%rbp), %r15
	movq %r15, -1792(%rbp)
	movq -2032(%rbp), %r15
	movq %r15, -1784(%rbp)
uuid_000000000007d10f:
	mov -1928(%RBP),%RSP
	add $-2176, %RSP
#call function close : Arrow<MacroList,Array<MacroList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_MacroListMacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	movq -1696(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d113:
	mov -1448(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007d117:
	mov -960(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007d308:
	mov -520(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_000000000007d30b
uuid_000000000007d309:
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d30b:
	mov -232(%RBP),%RSP
	add $-512, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d30c
uuid_000000000007d30e:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007d327:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d328
	jmp uuid_000000000007d329
uuid_000000000007d328:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d31e
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d31b
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d318
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d315
	push %RBP
	jmp uuid_000000000007d312
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d311
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d314
uuid_000000000007d312:
uuid_000000000007d314:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007d317
uuid_000000000007d315:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007d317:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007d31a
uuid_000000000007d318:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007d31a:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007d31d
uuid_000000000007d31b:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007d31d:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007d320
uuid_000000000007d31e:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007d320:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d324
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007d326
uuid_000000000007d324:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $44, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d321
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007d323
uuid_000000000007d321:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007d323:
	mov -128(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007d326:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d327
uuid_000000000007d329:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_SB_single_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007d388:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d389
	jmp uuid_000000000007d38a
uuid_000000000007d389:
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d385
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d35b
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d358
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d355
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d352
	push %RBP
	jmp uuid_000000000007d34f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d34e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d351
uuid_000000000007d34f:
uuid_000000000007d351:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007d354
uuid_000000000007d352:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007d354:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007d357
uuid_000000000007d355:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007d357:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007d35a
uuid_000000000007d358:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007d35a:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007d35d
uuid_000000000007d35b:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007d35d:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d382
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_000000000007d384
uuid_000000000007d382:
	pushq -32(%rbp)
	push %RBP
	pushq -128(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d37f
	push %RBP
	pushq -128(%rbp)
	mov -160(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d37c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d37b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d37e
uuid_000000000007d37c:
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d367
	jmp uuid_000000000007d369
uuid_000000000007d367:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d364
	jmp uuid_000000000007d366
uuid_000000000007d364:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d361
	jmp uuid_000000000007d363
uuid_000000000007d361:
	movb $1, -224(%rbp)
uuid_000000000007d363:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007d366:
	mov -240(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007d369:
	mov -232(%RBP),%RSP
	add $-296, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d378
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d36d
	jmp uuid_000000000007d36f
uuid_000000000007d36d:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d36a
	jmp uuid_000000000007d36c
uuid_000000000007d36a:
	movb $1, -336(%rbp)
uuid_000000000007d36c:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007d36f:
	mov -344(%RBP),%RSP
	add $-360, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d375
	push %RBP
	jmp uuid_000000000007d372
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d371
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d374
uuid_000000000007d372:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d370
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d374:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007d377
uuid_000000000007d375:
	pushq -360(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d377:
	mov -304(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007d37a
uuid_000000000007d378:
	pushq -296(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d37a:
	mov -192(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007d37e:
	mov -152(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007d381
uuid_000000000007d37f:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d35e
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a86b
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007d360
uuid_000000000007d35e:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a86b
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d360:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007d381:
	mov -136(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007d384:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007d387
uuid_000000000007d385:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d34b
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d348
	push %RBP
	pushq -96(%rbp)
	jmp uuid_000000000007d345
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d344
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d347
uuid_000000000007d345:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d347:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007d34a
uuid_000000000007d348:
	movb $60, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d341
	jmp uuid_000000000007d343
uuid_000000000007d341:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007a443
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d33e
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d33b
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007d33d
uuid_000000000007d33b:
	pushq $0
	pushq -144(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007d33d:
	mov -160(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007d340
uuid_000000000007d33e:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007d340:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007d343:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d34a:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007d34d
uuid_000000000007d34b:
	movb $91, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d334
	jmp uuid_000000000007d336
uuid_000000000007d334:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007a443
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d331
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d32e
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007d330
uuid_000000000007d32e:
	pushq $0
	pushq -128(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007d330:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007d333
uuid_000000000007d331:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007d333:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007d336:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d34d:
	mov -104(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007d387:
	mov -88(%RBP),%RSP
	add $-136, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d388
uuid_000000000007d38a:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d395
	jmp uuid_000000000007d397
uuid_000000000007d395:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007a443
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d392
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d38f
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007d391
uuid_000000000007d38f:
	pushq $0
	pushq -96(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007d391:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007d394
uuid_000000000007d392:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007d394:
	mov -104(%RBP),%RSP
	add $-104, %RSP
uuid_000000000007d397:
	mov -88(%RBP),%RSP
	add $-104, %RSP
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_CL_ArrowTypeString:
	pushq $0
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d398
	jmp uuid_000000000007d39a
uuid_000000000007d398:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007a62b
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movb $1, -24(%rbp)
uuid_000000000007d39a:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007d3c1:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d3c2
	jmp uuid_000000000007d3c3
uuid_000000000007d3c2:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3a8
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3a5
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3a2
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d39f
	push %RBP
	jmp uuid_000000000007d39c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d39b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d39e
uuid_000000000007d39c:
uuid_000000000007d39e:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007d3a1
uuid_000000000007d39f:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007d3a1:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007d3a4
uuid_000000000007d3a2:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007d3a4:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007d3a7
uuid_000000000007d3a5:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007d3a7:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007d3aa
uuid_000000000007d3a8:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007d3aa:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3be
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007d3c0
uuid_000000000007d3be:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $43, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3bb
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007d3bd
uuid_000000000007d3bb:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3b1
	jmp uuid_000000000007d3b3
uuid_000000000007d3b1:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3ae
	jmp uuid_000000000007d3b0
uuid_000000000007d3ae:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3ab
	jmp uuid_000000000007d3ad
uuid_000000000007d3ab:
	movb $1, -192(%rbp)
uuid_000000000007d3ad:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007d3b0:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007d3b3:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3b8
	push %RBP
	jmp uuid_000000000007d3b5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d3b4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d3b7
uuid_000000000007d3b5:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007d3b7:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007d3ba
uuid_000000000007d3b8:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -288(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_000000000007d3ba:
	mov -160(%RBP),%RSP
	add $-288, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007d3bd:
	mov -128(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007d3c0:
	mov -120(%RBP),%RSP
	add $-288, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d3c1
uuid_000000000007d3c3:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3d4
	jmp uuid_000000000007d3d6
uuid_000000000007d3d4:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3ca
	jmp uuid_000000000007d3cc
uuid_000000000007d3ca:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3c7
	jmp uuid_000000000007d3c9
uuid_000000000007d3c7:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3c4
	jmp uuid_000000000007d3c6
uuid_000000000007d3c4:
	movb $1, -160(%rbp)
uuid_000000000007d3c6:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007d3c9:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007d3cc:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3d1
	push %RBP
	jmp uuid_000000000007d3ce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d3cd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d3d0
uuid_000000000007d3ce:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007d3d0:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007d3d3
uuid_000000000007d3d1:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -256(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_000000000007d3d3:
	mov -128(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007d3d6:
	mov -96(%RBP),%RSP
	add $-256, %RSP
	push %RBP
	mov -24(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3db
	jmp uuid_000000000007d3dd
uuid_000000000007d3db:
	pushq $uuid_000000000007a62b
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007d3dd:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	subq $24, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_unexpect_CL_ArrowNilConsListTokenString:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_CL_ArrowNilNil:
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
remove_SB_parens_CL_ArrowListTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3f8
	jmp uuid_000000000007d3fa
uuid_000000000007d3f8:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3f5
	jmp uuid_000000000007d3f7
uuid_000000000007d3f5:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3ef
	jmp uuid_000000000007d3f1
uuid_000000000007d3ef:
	push %RBP
	jmp uuid_000000000007d3ec
	jmp uuid_000000000007d3ee
uuid_000000000007d3ec:
	push %RBP
	jmp uuid_000000000007d3e9
	jmp uuid_000000000007d3eb
uuid_000000000007d3e9:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_000000000007a296
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3e6
	jmp uuid_000000000007d3e8
uuid_000000000007d3e6:
	movb $1, -400(%rbp)
uuid_000000000007d3e8:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d3eb:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d3ee:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d3f1:
	mov -408(%RBP),%RSP
	add $-440, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3f2
	jmp uuid_000000000007d3f4
uuid_000000000007d3f2:
	movb $1, -240(%rbp)
uuid_000000000007d3f4:
	mov -336(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d3f7:
	mov -256(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d3fa:
	mov -248(%RBP),%RSP
	add $-440, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d426
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d425
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d428
uuid_000000000007d426:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007d422:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d423
	jmp uuid_000000000007d424
uuid_000000000007d423:
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d40f
	jmp uuid_000000000007d411
uuid_000000000007d40f:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d40c
	jmp uuid_000000000007d40e
uuid_000000000007d40c:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d406
	jmp uuid_000000000007d408
uuid_000000000007d406:
	push %RBP
	jmp uuid_000000000007d403
	jmp uuid_000000000007d405
uuid_000000000007d403:
	push %RBP
	jmp uuid_000000000007d400
	jmp uuid_000000000007d402
uuid_000000000007d400:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3fd
	jmp uuid_000000000007d3ff
uuid_000000000007d3fd:
	movb $1, -832(%rbp)
uuid_000000000007d3ff:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d402:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d405:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d408:
	mov -840(%RBP),%RSP
	add $-872, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d409
	jmp uuid_000000000007d40b
uuid_000000000007d409:
	movb $1, -672(%rbp)
uuid_000000000007d40b:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d40e:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007d411:
	mov -680(%RBP),%RSP
	add $-872, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d41f
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d418
	jmp uuid_000000000007d41a
uuid_000000000007d418:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d415
	jmp uuid_000000000007d417
uuid_000000000007d415:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007d412
	jmp uuid_000000000007d414
uuid_000000000007d412:
	movb $1, -960(%rbp)
uuid_000000000007d414:
	mov -1056(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007d417:
	mov -976(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007d41a:
	mov -968(%RBP),%RSP
	add $-1112, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d41c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d41b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d41e
uuid_000000000007d41c:
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	movq -1048(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -264(%rbp)
uuid_000000000007d41e:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007d421
uuid_000000000007d41f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
uuid_000000000007d421:
	mov -592(%RBP),%RSP
	add $-872, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d422
uuid_000000000007d424:
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d428:
	mov -160(%RBP),%RSP
	add $-512, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
uuid_000000000007d479:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d47a
	jmp uuid_000000000007d47b
uuid_000000000007d47a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d441
	jmp uuid_000000000007d443
uuid_000000000007d441:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d43e
	jmp uuid_000000000007d440
uuid_000000000007d43e:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d438
	jmp uuid_000000000007d43a
uuid_000000000007d438:
	push %RBP
	jmp uuid_000000000007d435
	jmp uuid_000000000007d437
uuid_000000000007d435:
	push %RBP
	jmp uuid_000000000007d432
	jmp uuid_000000000007d434
uuid_000000000007d432:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007a4a2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d42f
	jmp uuid_000000000007d431
uuid_000000000007d42f:
	movb $1, -552(%rbp)
uuid_000000000007d431:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d434:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d437:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d43a:
	mov -560(%RBP),%RSP
	add $-592, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d43b
	jmp uuid_000000000007d43d
uuid_000000000007d43b:
	movb $1, -392(%rbp)
uuid_000000000007d43d:
	mov -488(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d440:
	mov -408(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d443:
	mov -400(%RBP),%RSP
	add $-592, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d476
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d44d
	jmp uuid_000000000007d44f
uuid_000000000007d44d:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d44a
	jmp uuid_000000000007d44c
uuid_000000000007d44a:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	jmp uuid_000000000007d447
	jmp uuid_000000000007d449
uuid_000000000007d447:
	movb $1, -680(%rbp)
uuid_000000000007d449:
	mov -776(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007d44c:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007d44f:
	mov -688(%RBP),%RSP
	add $-832, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d473
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d472
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d475
uuid_000000000007d473:
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d459
	jmp uuid_000000000007d45b
uuid_000000000007d459:
	push %RBP
	jmp uuid_000000000007d456
	jmp uuid_000000000007d458
uuid_000000000007d456:
	push %RBP
	jmp uuid_000000000007d453
	jmp uuid_000000000007d455
uuid_000000000007d453:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $uuid_000000000007a296
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d450
	jmp uuid_000000000007d452
uuid_000000000007d450:
	movb $1, -960(%rbp)
uuid_000000000007d452:
	mov -992(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007d455:
	mov -984(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007d458:
	mov -976(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007d45b:
	mov -968(%RBP),%RSP
	add $-1000, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d46f
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d465
	jmp uuid_000000000007d467
uuid_000000000007d465:
	push %RBP
	jmp uuid_000000000007d462
	jmp uuid_000000000007d464
uuid_000000000007d462:
	push %RBP
	jmp uuid_000000000007d45f
	jmp uuid_000000000007d461
uuid_000000000007d45f:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_000000000007a298
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d45c
	jmp uuid_000000000007d45e
uuid_000000000007d45c:
	movb $1, -1072(%rbp)
uuid_000000000007d45e:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007d461:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007d464:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007d467:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
	mov -1072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d46c
	push %RBP
	jmp uuid_000000000007d469
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d468
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d46b
uuid_000000000007d469:
uuid_000000000007d46b:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_000000000007d46e
uuid_000000000007d46c:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_000000000007d46e:
	mov -1008(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007d471
uuid_000000000007d46f:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_000000000007d471:
	mov -896(%RBP),%RSP
	add $-1000, %RSP
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -768(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d475:
	mov -600(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007d478
uuid_000000000007d476:
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d444
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head : Arrow<List<Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call head_CL_ArrowTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d446
uuid_000000000007d444:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d446:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d478:
	mov -312(%RBP),%RSP
	add $-600, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d479
uuid_000000000007d47b:
#call function remove-parens : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call remove_SB_parens_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, %RAX
	movq $8, %R14
	subq %R14, %RAX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a915
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a917
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a918
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a916
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_000000000007d47c
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_000000000007a919
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -336(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	subq $152, %rsp
	pushq -880(%rbp)
	pushq -872(%rbp)
	pushq -864(%rbp)
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $344, %rsp
	ret
compile_SB_declare_SB_cstring_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d498
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_000000000007a365
uuid_000000000007d490:
#call function non-zero : Arrow<StringStringList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d491
	jmp uuid_000000000007d492
uuid_000000000007d491:
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d486
	jmp uuid_000000000007d488
uuid_000000000007d486:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d483
	jmp uuid_000000000007d485
uuid_000000000007d483:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d480
	jmp uuid_000000000007d482
uuid_000000000007d480:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d47d
	jmp uuid_000000000007d47f
uuid_000000000007d47d:
	movb $1, -296(%rbp)
uuid_000000000007d47f:
	mov -344(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d482:
	mov -328(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d485:
	mov -312(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d488:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	mov -296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d48d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d48c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d48f
uuid_000000000007d48d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d489
	movq -376(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -184(%rbp)
	jmp uuid_000000000007d48b
uuid_000000000007d489:
	movq -320(%rbp), %r15
	movq %r15, -216(%rbp)
	mov -320(%rbp), %r15
	mov %r15, -216(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d48b:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007d48f:
	mov -256(%RBP),%RSP
	add $-384, %RSP
	add $32, %rsp
	add $32, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $32, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d490
uuid_000000000007d492:
	push %RBP
	mov -216(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d495
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -216(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d493
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function escape-literal : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call escape_SB_literal_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d494
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<StringStringList,Array<StringStringList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_StringStringListStringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -216(%rbp)
	pushq $0
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	jmp uuid_000000000007d497
uuid_000000000007d495:
uuid_000000000007d497:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007d49a
uuid_000000000007d498:
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007d49a:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4cb
	jmp uuid_000000000007d4cd
uuid_000000000007d4cb:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4c2
	jmp uuid_000000000007d4c4
uuid_000000000007d4c2:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4b0
	jmp uuid_000000000007d4b2
uuid_000000000007d4b0:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d49e
	jmp uuid_000000000007d4a0
uuid_000000000007d49e:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007d49b
	jmp uuid_000000000007d49d
uuid_000000000007d49b:
	movb $1, -760(%rbp)
uuid_000000000007d49d:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d4a0:
	mov -768(%RBP),%RSP
	add $-800, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4ad
	jmp uuid_000000000007d4af
uuid_000000000007d4ad:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4a7
	jmp uuid_000000000007d4a9
uuid_000000000007d4a7:
	push %RBP
	jmp uuid_000000000007d4a4
	jmp uuid_000000000007d4a6
uuid_000000000007d4a4:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d4a1
	jmp uuid_000000000007d4a3
uuid_000000000007d4a1:
	movb $1, -888(%rbp)
uuid_000000000007d4a3:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007d4a6:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007d4a9:
	mov -896(%RBP),%RSP
	add $-920, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4aa
	jmp uuid_000000000007d4ac
uuid_000000000007d4aa:
	movb $1, -664(%rbp)
uuid_000000000007d4ac:
	mov -808(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007d4af:
	mov -680(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007d4b2:
	mov -672(%RBP),%RSP
	add $-920, %RSP
	mov -664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4bf
	jmp uuid_000000000007d4c1
uuid_000000000007d4bf:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4b9
	jmp uuid_000000000007d4bb
uuid_000000000007d4b9:
	push %RBP
	jmp uuid_000000000007d4b6
	jmp uuid_000000000007d4b8
uuid_000000000007d4b6:
	push %RBP
	mov -936(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4b3
	jmp uuid_000000000007d4b5
uuid_000000000007d4b3:
	movb $1, -1008(%rbp)
uuid_000000000007d4b5:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d4b8:
	mov -1024(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d4bb:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
	mov -1008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4bc
	jmp uuid_000000000007d4be
uuid_000000000007d4bc:
	movb $1, -568(%rbp)
uuid_000000000007d4be:
	mov -928(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d4c1:
	mov -584(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d4c4:
	mov -576(%RBP),%RSP
	add $-1040, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4c8
	jmp uuid_000000000007d4ca
uuid_000000000007d4c8:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d4c5
	jmp uuid_000000000007d4c7
uuid_000000000007d4c5:
	movb $1, -472(%rbp)
uuid_000000000007d4c7:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007d4ca:
	mov -488(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007d4cd:
	mov -480(%RBP),%RSP
	add $-1120, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d502
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4f8
	jmp uuid_000000000007d4fa
uuid_000000000007d4f8:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4e6
	jmp uuid_000000000007d4e8
uuid_000000000007d4e6:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4d4
	jmp uuid_000000000007d4d6
uuid_000000000007d4d4:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007d4d1
	jmp uuid_000000000007d4d3
uuid_000000000007d4d1:
	movb $1, -1400(%rbp)
uuid_000000000007d4d3:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d4d6:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
	mov -1400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4e3
	jmp uuid_000000000007d4e5
uuid_000000000007d4e3:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4dd
	jmp uuid_000000000007d4df
uuid_000000000007d4dd:
	push %RBP
	jmp uuid_000000000007d4da
	jmp uuid_000000000007d4dc
uuid_000000000007d4da:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d4d7
	jmp uuid_000000000007d4d9
uuid_000000000007d4d7:
	movb $1, -1528(%rbp)
uuid_000000000007d4d9:
	mov -1552(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007d4dc:
	mov -1544(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007d4df:
	mov -1536(%RBP),%RSP
	add $-1560, %RSP
	mov -1528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4e0
	jmp uuid_000000000007d4e2
uuid_000000000007d4e0:
	movb $1, -1304(%rbp)
uuid_000000000007d4e2:
	mov -1448(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007d4e5:
	mov -1320(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007d4e8:
	mov -1312(%RBP),%RSP
	add $-1560, %RSP
	mov -1304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4f5
	jmp uuid_000000000007d4f7
uuid_000000000007d4f5:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4ef
	jmp uuid_000000000007d4f1
uuid_000000000007d4ef:
	push %RBP
	jmp uuid_000000000007d4ec
	jmp uuid_000000000007d4ee
uuid_000000000007d4ec:
	push %RBP
	mov -1576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4e9
	jmp uuid_000000000007d4eb
uuid_000000000007d4e9:
	movb $1, -1648(%rbp)
uuid_000000000007d4eb:
	mov -1672(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007d4ee:
	mov -1664(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007d4f1:
	mov -1656(%RBP),%RSP
	add $-1680, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4f2
	jmp uuid_000000000007d4f4
uuid_000000000007d4f2:
	movb $1, -1208(%rbp)
uuid_000000000007d4f4:
	mov -1568(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007d4f7:
	mov -1224(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007d4fa:
	mov -1216(%RBP),%RSP
	add $-1680, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4ff
	push %RBP
	jmp uuid_000000000007d4fc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d4fb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d4fe
uuid_000000000007d4fc:
uuid_000000000007d4fe:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007d501
uuid_000000000007d4ff:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1688(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1560(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007d501:
	mov -1128(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_000000000007d504
uuid_000000000007d502:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4ce
	jmp uuid_000000000007d4d0
uuid_000000000007d4ce:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1160(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -920(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007d4d0:
	mov -1128(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007d504:
	mov -392(%RBP),%RSP
	add $-1184, %RSP
	subq $200, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d767
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d764
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d50b
	jmp uuid_000000000007d50d
uuid_000000000007d50b:
	push %RBP
	jmp uuid_000000000007d508
	jmp uuid_000000000007d50a
uuid_000000000007d508:
	push %RBP
	mov -696(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d505
	jmp uuid_000000000007d507
uuid_000000000007d505:
	movb $1, -768(%rbp)
uuid_000000000007d507:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d50a:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d50d:
	mov -776(%RBP),%RSP
	add $-800, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d761
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d514
	jmp uuid_000000000007d516
uuid_000000000007d514:
	push %RBP
	jmp uuid_000000000007d511
	jmp uuid_000000000007d513
uuid_000000000007d511:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d50e
	jmp uuid_000000000007d510
uuid_000000000007d50e:
	movb $1, -888(%rbp)
uuid_000000000007d510:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007d513:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007d516:
	mov -896(%RBP),%RSP
	add $-920, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d75e
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d57c
	jmp uuid_000000000007d57e
uuid_000000000007d57c:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d56a
	jmp uuid_000000000007d56c
uuid_000000000007d56a:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d561
	jmp uuid_000000000007d563
uuid_000000000007d561:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_000000000007d55e
	jmp uuid_000000000007d560
uuid_000000000007d55e:
	movb $1, -1200(%rbp)
uuid_000000000007d560:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d563:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d567
	jmp uuid_000000000007d569
uuid_000000000007d567:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d564
	jmp uuid_000000000007d566
uuid_000000000007d564:
	movb $1, -1104(%rbp)
uuid_000000000007d566:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007d569:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007d56c:
	mov -1112(%RBP),%RSP
	add $-1320, %RSP
	mov -1104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d579
	jmp uuid_000000000007d57b
uuid_000000000007d579:
	push %RBP
	mov -984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d573
	jmp uuid_000000000007d575
uuid_000000000007d573:
	push %RBP
	jmp uuid_000000000007d570
	jmp uuid_000000000007d572
uuid_000000000007d570:
	push %RBP
	mov -1336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d56d
	jmp uuid_000000000007d56f
uuid_000000000007d56d:
	movb $1, -1408(%rbp)
uuid_000000000007d56f:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d572:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d575:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
	mov -1408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d576
	jmp uuid_000000000007d578
uuid_000000000007d576:
	movb $1, -1008(%rbp)
uuid_000000000007d578:
	mov -1328(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d57b:
	mov -1024(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d57e:
	mov -1016(%RBP),%RSP
	add $-1440, %RSP
	mov -1008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d75b
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d597
	jmp uuid_000000000007d599
uuid_000000000007d597:
	push %RBP
	mov -1512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d585
	jmp uuid_000000000007d587
uuid_000000000007d585:
	push %RBP
	jmp uuid_000000000007d582
	jmp uuid_000000000007d584
uuid_000000000007d582:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d57f
	jmp uuid_000000000007d581
uuid_000000000007d57f:
	movb $1, -1624(%rbp)
uuid_000000000007d581:
	mov -1648(%RBP),%RSP
	add $-1656, %RSP
uuid_000000000007d584:
	mov -1640(%RBP),%RSP
	add $-1656, %RSP
uuid_000000000007d587:
	mov -1632(%RBP),%RSP
	add $-1656, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d594
	jmp uuid_000000000007d596
uuid_000000000007d594:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d58e
	jmp uuid_000000000007d590
uuid_000000000007d58e:
	push %RBP
	jmp uuid_000000000007d58b
	jmp uuid_000000000007d58d
uuid_000000000007d58b:
	push %RBP
	mov -1672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_000000000007a778
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d588
	jmp uuid_000000000007d58a
uuid_000000000007d588:
	movb $1, -1744(%rbp)
uuid_000000000007d58a:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d58d:
	mov -1760(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d590:
	mov -1752(%RBP),%RSP
	add $-1776, %RSP
	mov -1744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d591
	jmp uuid_000000000007d593
uuid_000000000007d591:
	movb $1, -1528(%rbp)
uuid_000000000007d593:
	mov -1664(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d596:
	mov -1544(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d599:
	mov -1536(%RBP),%RSP
	add $-1776, %RSP
	mov -1528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d758
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5b2
	jmp uuid_000000000007d5b4
uuid_000000000007d5b2:
	push %RBP
	mov -1848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5a0
	jmp uuid_000000000007d5a2
uuid_000000000007d5a0:
	push %RBP
	jmp uuid_000000000007d59d
	jmp uuid_000000000007d59f
uuid_000000000007d59d:
	push %RBP
	mov -1888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d59a
	jmp uuid_000000000007d59c
uuid_000000000007d59a:
	movb $1, -1960(%rbp)
uuid_000000000007d59c:
	mov -1984(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007d59f:
	mov -1976(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007d5a2:
	mov -1968(%RBP),%RSP
	add $-1992, %RSP
	mov -1960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5af
	jmp uuid_000000000007d5b1
uuid_000000000007d5af:
	push %RBP
	mov -1840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5a9
	jmp uuid_000000000007d5ab
uuid_000000000007d5a9:
	push %RBP
	jmp uuid_000000000007d5a6
	jmp uuid_000000000007d5a8
uuid_000000000007d5a6:
	push %RBP
	mov -2008(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_000000000007a795
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5a3
	jmp uuid_000000000007d5a5
uuid_000000000007d5a3:
	movb $1, -2080(%rbp)
uuid_000000000007d5a5:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d5a8:
	mov -2096(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d5ab:
	mov -2088(%RBP),%RSP
	add $-2112, %RSP
	mov -2080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5ac
	jmp uuid_000000000007d5ae
uuid_000000000007d5ac:
	movb $1, -1864(%rbp)
uuid_000000000007d5ae:
	mov -2000(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d5b1:
	mov -1880(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d5b4:
	mov -1872(%RBP),%RSP
	add $-2112, %RSP
	mov -1864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d755
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5c4
	jmp uuid_000000000007d5c6
uuid_000000000007d5c4:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d5c1
	jmp uuid_000000000007d5c3
uuid_000000000007d5c1:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5bb
	jmp uuid_000000000007d5bd
uuid_000000000007d5bb:
	push %RBP
	jmp uuid_000000000007d5b8
	jmp uuid_000000000007d5ba
uuid_000000000007d5b8:
	push %RBP
	mov -2304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2408(%rbp)
	pushq $uuid_000000000007a845
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5b5
	jmp uuid_000000000007d5b7
uuid_000000000007d5b5:
	movb $1, -2376(%rbp)
uuid_000000000007d5b7:
	mov -2400(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007d5ba:
	mov -2392(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007d5bd:
	mov -2384(%RBP),%RSP
	add $-2408, %RSP
	mov -2376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5be
	jmp uuid_000000000007d5c0
uuid_000000000007d5be:
	movb $1, -2200(%rbp)
uuid_000000000007d5c0:
	mov -2296(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007d5c3:
	mov -2216(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007d5c6:
	mov -2208(%RBP),%RSP
	add $-2408, %RSP
	mov -2200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d752
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5d6
	jmp uuid_000000000007d5d8
uuid_000000000007d5d6:
	push %RBP
	mov -2480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d5d3
	jmp uuid_000000000007d5d5
uuid_000000000007d5d3:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5cd
	jmp uuid_000000000007d5cf
uuid_000000000007d5cd:
	push %RBP
	jmp uuid_000000000007d5ca
	jmp uuid_000000000007d5cc
uuid_000000000007d5ca:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq $uuid_000000000007a858
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5c7
	jmp uuid_000000000007d5c9
uuid_000000000007d5c7:
	movb $1, -2672(%rbp)
uuid_000000000007d5c9:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007d5cc:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007d5cf:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5d0
	jmp uuid_000000000007d5d2
uuid_000000000007d5d0:
	movb $1, -2496(%rbp)
uuid_000000000007d5d2:
	mov -2592(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007d5d5:
	mov -2512(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007d5d8:
	mov -2504(%RBP),%RSP
	add $-2704, %RSP
	mov -2496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d74f
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d62e
	jmp uuid_000000000007d630
uuid_000000000007d62e:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d61c
	jmp uuid_000000000007d61e
uuid_000000000007d61c:
	push %RBP
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	jmp uuid_000000000007d619
	jmp uuid_000000000007d61b
uuid_000000000007d619:
	movb $1, -2888(%rbp)
uuid_000000000007d61b:
	mov -2904(%RBP),%RSP
	add $-2928, %RSP
uuid_000000000007d61e:
	mov -2896(%RBP),%RSP
	add $-2928, %RSP
	mov -2888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d62b
	jmp uuid_000000000007d62d
uuid_000000000007d62b:
	push %RBP
	mov -2768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d625
	jmp uuid_000000000007d627
uuid_000000000007d625:
	push %RBP
	jmp uuid_000000000007d622
	jmp uuid_000000000007d624
uuid_000000000007d622:
	push %RBP
	mov -2944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq $uuid_000000000007a824
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d61f
	jmp uuid_000000000007d621
uuid_000000000007d61f:
	movb $1, -3016(%rbp)
uuid_000000000007d621:
	mov -3040(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007d624:
	mov -3032(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007d627:
	mov -3024(%RBP),%RSP
	add $-3048, %RSP
	mov -3016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d628
	jmp uuid_000000000007d62a
uuid_000000000007d628:
	movb $1, -2792(%rbp)
uuid_000000000007d62a:
	mov -2936(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007d62d:
	mov -2808(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007d630:
	mov -2800(%RBP),%RSP
	add $-3048, %RSP
	mov -2792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d74c
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d64f
	jmp uuid_000000000007d651
uuid_000000000007d64f:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d63d
	jmp uuid_000000000007d63f
uuid_000000000007d63d:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d634
	jmp uuid_000000000007d636
uuid_000000000007d634:
	push %RBP
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	jmp uuid_000000000007d631
	jmp uuid_000000000007d633
uuid_000000000007d631:
	movb $1, -3328(%rbp)
uuid_000000000007d633:
	mov -3344(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007d636:
	mov -3336(%RBP),%RSP
	add $-3368, %RSP
	mov -3328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d63a
	jmp uuid_000000000007d63c
uuid_000000000007d63a:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d637
	jmp uuid_000000000007d639
uuid_000000000007d637:
	movb $1, -3232(%rbp)
uuid_000000000007d639:
	mov -3376(%RBP),%RSP
	add $-3448, %RSP
uuid_000000000007d63c:
	mov -3248(%RBP),%RSP
	add $-3448, %RSP
uuid_000000000007d63f:
	mov -3240(%RBP),%RSP
	add $-3448, %RSP
	mov -3232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d64c
	jmp uuid_000000000007d64e
uuid_000000000007d64c:
	push %RBP
	mov -3112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d646
	jmp uuid_000000000007d648
uuid_000000000007d646:
	push %RBP
	jmp uuid_000000000007d643
	jmp uuid_000000000007d645
uuid_000000000007d643:
	push %RBP
	mov -3464(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3568(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d640
	jmp uuid_000000000007d642
uuid_000000000007d640:
	movb $1, -3536(%rbp)
uuid_000000000007d642:
	mov -3560(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007d645:
	mov -3552(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007d648:
	mov -3544(%RBP),%RSP
	add $-3568, %RSP
	mov -3536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d649
	jmp uuid_000000000007d64b
uuid_000000000007d649:
	movb $1, -3136(%rbp)
uuid_000000000007d64b:
	mov -3456(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007d64e:
	mov -3152(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007d651:
	mov -3144(%RBP),%RSP
	add $-3568, %RSP
	mov -3136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d749
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d673
	jmp uuid_000000000007d675
uuid_000000000007d673:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d670
	jmp uuid_000000000007d672
uuid_000000000007d670:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d66a
	jmp uuid_000000000007d66c
uuid_000000000007d66a:
	push %RBP
	mov -3816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d667
	jmp uuid_000000000007d669
uuid_000000000007d667:
	push %RBP
	mov -3808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d661
	jmp uuid_000000000007d663
uuid_000000000007d661:
	push %RBP
	mov -3992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d65e
	jmp uuid_000000000007d660
uuid_000000000007d65e:
	push %RBP
	mov -3984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d658
	jmp uuid_000000000007d65a
uuid_000000000007d658:
	push %RBP
	jmp uuid_000000000007d655
	jmp uuid_000000000007d657
uuid_000000000007d655:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	pushq $uuid_000000000007a7a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d652
	jmp uuid_000000000007d654
uuid_000000000007d652:
	movb $1, -4184(%rbp)
uuid_000000000007d654:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d657:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d65a:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
	mov -4184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d65b
	jmp uuid_000000000007d65d
uuid_000000000007d65b:
	movb $1, -4008(%rbp)
uuid_000000000007d65d:
	mov -4104(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d660:
	mov -4024(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d663:
	mov -4016(%RBP),%RSP
	add $-4216, %RSP
	mov -4008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d664
	jmp uuid_000000000007d666
uuid_000000000007d664:
	movb $1, -3832(%rbp)
uuid_000000000007d666:
	mov -3928(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d669:
	mov -3848(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d66c:
	mov -3840(%RBP),%RSP
	add $-4216, %RSP
	mov -3832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d66d
	jmp uuid_000000000007d66f
uuid_000000000007d66d:
	movb $1, -3656(%rbp)
uuid_000000000007d66f:
	mov -3752(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d672:
	mov -3672(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d675:
	mov -3664(%RBP),%RSP
	add $-4216, %RSP
	mov -3656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d746
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d69b
	jmp uuid_000000000007d69d
uuid_000000000007d69b:
	push %RBP
	mov -4288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d698
	jmp uuid_000000000007d69a
uuid_000000000007d698:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d692
	jmp uuid_000000000007d694
uuid_000000000007d692:
	push %RBP
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq -4464(%RBP)
	jmp uuid_000000000007d68f
	jmp uuid_000000000007d691
uuid_000000000007d68f:
	push %RBP
	mov -4440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d68c
	jmp uuid_000000000007d68e
uuid_000000000007d68c:
	push %RBP
	mov -4432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq $0
	push %RBP
	mov -4752(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d686
	jmp uuid_000000000007d688
uuid_000000000007d686:
	push %RBP
	jmp uuid_000000000007d683
	jmp uuid_000000000007d685
uuid_000000000007d683:
	push %RBP
	mov -4688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d680
	jmp uuid_000000000007d682
uuid_000000000007d680:
	movb $1, -4760(%rbp)
uuid_000000000007d682:
	mov -4784(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d685:
	mov -4776(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d688:
	mov -4768(%RBP),%RSP
	add $-4792, %RSP
	mov -4760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d689
	jmp uuid_000000000007d68b
uuid_000000000007d689:
	movb $1, -4480(%rbp)
uuid_000000000007d68b:
	mov -4608(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d68e:
	mov -4528(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d691:
	mov -4496(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d694:
	mov -4488(%RBP),%RSP
	add $-4792, %RSP
	mov -4480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d695
	jmp uuid_000000000007d697
uuid_000000000007d695:
	movb $1, -4304(%rbp)
uuid_000000000007d697:
	mov -4400(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d69a:
	mov -4320(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007d69d:
	mov -4312(%RBP),%RSP
	add $-4792, %RSP
	mov -4304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d743
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6c3
	jmp uuid_000000000007d6c5
uuid_000000000007d6c3:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d6c0
	jmp uuid_000000000007d6c2
uuid_000000000007d6c0:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d6bd
	jmp uuid_000000000007d6bf
uuid_000000000007d6bd:
	movb $1, -4880(%rbp)
uuid_000000000007d6bf:
	mov -4976(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007d6c2:
	mov -4896(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007d6c5:
	mov -4888(%RBP),%RSP
	add $-5048, %RSP
	mov -4880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d740
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d73f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d742
uuid_000000000007d740:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d73c
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d739
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007d73b
uuid_000000000007d739:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d73b:
	mov -5064(%RBP),%RSP
	add $-5368, %RSP
	jmp uuid_000000000007d73e
uuid_000000000007d73c:
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6cc
	jmp uuid_000000000007d6ce
uuid_000000000007d6cc:
	push %RBP
	jmp uuid_000000000007d6c9
	jmp uuid_000000000007d6cb
uuid_000000000007d6c9:
	push %RBP
	mov -5144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6c6
	jmp uuid_000000000007d6c8
uuid_000000000007d6c6:
	movb $1, -5216(%rbp)
uuid_000000000007d6c8:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007d6cb:
	mov -5232(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007d6ce:
	mov -5224(%RBP),%RSP
	add $-5248, %RSP
	mov -5216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d736
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6f6
	jmp uuid_000000000007d6f8
uuid_000000000007d6f6:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5424(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6e4
	jmp uuid_000000000007d6e6
uuid_000000000007d6e4:
	push %RBP
	mov -5416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6d2
	jmp uuid_000000000007d6d4
uuid_000000000007d6d2:
	push %RBP
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	jmp uuid_000000000007d6cf
	jmp uuid_000000000007d6d1
uuid_000000000007d6cf:
	movb $1, -5528(%rbp)
uuid_000000000007d6d1:
	mov -5544(%RBP),%RSP
	add $-5568, %RSP
uuid_000000000007d6d4:
	mov -5536(%RBP),%RSP
	add $-5568, %RSP
	mov -5528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6e1
	jmp uuid_000000000007d6e3
uuid_000000000007d6e1:
	push %RBP
	mov -5408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5648(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6db
	jmp uuid_000000000007d6dd
uuid_000000000007d6db:
	push %RBP
	jmp uuid_000000000007d6d8
	jmp uuid_000000000007d6da
uuid_000000000007d6d8:
	push %RBP
	mov -5584(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6d5
	jmp uuid_000000000007d6d7
uuid_000000000007d6d5:
	movb $1, -5656(%rbp)
uuid_000000000007d6d7:
	mov -5680(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007d6da:
	mov -5672(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007d6dd:
	mov -5664(%RBP),%RSP
	add $-5688, %RSP
	mov -5656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6de
	jmp uuid_000000000007d6e0
uuid_000000000007d6de:
	movb $1, -5432(%rbp)
uuid_000000000007d6e0:
	mov -5576(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007d6e3:
	mov -5448(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007d6e6:
	mov -5440(%RBP),%RSP
	add $-5688, %RSP
	mov -5432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6f3
	jmp uuid_000000000007d6f5
uuid_000000000007d6f3:
	push %RBP
	mov -5312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ed
	jmp uuid_000000000007d6ef
uuid_000000000007d6ed:
	push %RBP
	jmp uuid_000000000007d6ea
	jmp uuid_000000000007d6ec
uuid_000000000007d6ea:
	push %RBP
	mov -5704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d6e7
	jmp uuid_000000000007d6e9
uuid_000000000007d6e7:
	movb $1, -5776(%rbp)
uuid_000000000007d6e9:
	mov -5800(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007d6ec:
	mov -5792(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007d6ef:
	mov -5784(%RBP),%RSP
	add $-5808, %RSP
	mov -5776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6f0
	jmp uuid_000000000007d6f2
uuid_000000000007d6f0:
	movb $1, -5336(%rbp)
uuid_000000000007d6f2:
	mov -5696(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007d6f5:
	mov -5352(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007d6f8:
	mov -5344(%RBP),%RSP
	add $-5808, %RSP
	mov -5336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d733
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5888(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ff
	jmp uuid_000000000007d701
uuid_000000000007d6ff:
	push %RBP
	jmp uuid_000000000007d6fc
	jmp uuid_000000000007d6fe
uuid_000000000007d6fc:
	push %RBP
	mov -5824(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6f9
	jmp uuid_000000000007d6fb
uuid_000000000007d6f9:
	movb $1, -5896(%rbp)
uuid_000000000007d6fb:
	mov -5920(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007d6fe:
	mov -5912(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007d701:
	mov -5904(%RBP),%RSP
	add $-5928, %RSP
	mov -5896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d730
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -6008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d729
	jmp uuid_000000000007d72b
uuid_000000000007d729:
	push %RBP
	mov -6000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6104(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d717
	jmp uuid_000000000007d719
uuid_000000000007d717:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6200(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d705
	jmp uuid_000000000007d707
uuid_000000000007d705:
	push %RBP
	pushq -6176(%RBP)
	pushq -6184(%RBP)
	pushq -6192(%RBP)
	jmp uuid_000000000007d702
	jmp uuid_000000000007d704
uuid_000000000007d702:
	movb $1, -6208(%rbp)
uuid_000000000007d704:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007d707:
	mov -6216(%RBP),%RSP
	add $-6248, %RSP
	mov -6208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d714
	jmp uuid_000000000007d716
uuid_000000000007d714:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d70e
	jmp uuid_000000000007d710
uuid_000000000007d70e:
	push %RBP
	jmp uuid_000000000007d70b
	jmp uuid_000000000007d70d
uuid_000000000007d70b:
	push %RBP
	mov -6264(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d708
	jmp uuid_000000000007d70a
uuid_000000000007d708:
	movb $1, -6336(%rbp)
uuid_000000000007d70a:
	mov -6360(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007d70d:
	mov -6352(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007d710:
	mov -6344(%RBP),%RSP
	add $-6368, %RSP
	mov -6336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d711
	jmp uuid_000000000007d713
uuid_000000000007d711:
	movb $1, -6112(%rbp)
uuid_000000000007d713:
	mov -6256(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007d716:
	mov -6128(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007d719:
	mov -6120(%RBP),%RSP
	add $-6368, %RSP
	mov -6112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d726
	jmp uuid_000000000007d728
uuid_000000000007d726:
	push %RBP
	mov -5992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d720
	jmp uuid_000000000007d722
uuid_000000000007d720:
	push %RBP
	jmp uuid_000000000007d71d
	jmp uuid_000000000007d71f
uuid_000000000007d71d:
	push %RBP
	mov -6384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6488(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d71a
	jmp uuid_000000000007d71c
uuid_000000000007d71a:
	movb $1, -6456(%rbp)
uuid_000000000007d71c:
	mov -6480(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007d71f:
	mov -6472(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007d722:
	mov -6464(%RBP),%RSP
	add $-6488, %RSP
	mov -6456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d723
	jmp uuid_000000000007d725
uuid_000000000007d723:
	movb $1, -6016(%rbp)
uuid_000000000007d725:
	mov -6376(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007d728:
	mov -6032(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007d72b:
	mov -6024(%RBP),%RSP
	add $-6488, %RSP
	mov -6016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d72d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d72c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d72f
uuid_000000000007d72d:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -6368(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d72f:
	mov -5936(%RBP),%RSP
	add $-6488, %RSP
	jmp uuid_000000000007d732
uuid_000000000007d730:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5928(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d732:
	mov -5816(%RBP),%RSP
	add $-5928, %RSP
	jmp uuid_000000000007d735
uuid_000000000007d733:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d735:
	mov -5256(%RBP),%RSP
	add $-5808, %RSP
	jmp uuid_000000000007d738
uuid_000000000007d736:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5248(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d738:
	mov -5136(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007d73e:
	mov -5056(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007d742:
	mov -4800(%RBP),%RSP
	add $-5248, %RSP
	jmp uuid_000000000007d745
uuid_000000000007d743:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4832(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $0
	push %RBP
	mov -5008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6b0
	jmp uuid_000000000007d6b2
uuid_000000000007d6b0:
	push %RBP
	jmp uuid_000000000007d6ad
	jmp uuid_000000000007d6af
uuid_000000000007d6ad:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6a7
	jmp uuid_000000000007d6a9
uuid_000000000007d6a7:
	push %RBP
	jmp uuid_000000000007d6a4
	jmp uuid_000000000007d6a6
uuid_000000000007d6a4:
	push %RBP
	jmp uuid_000000000007d6a1
	jmp uuid_000000000007d6a3
uuid_000000000007d6a1:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d69e
	jmp uuid_000000000007d6a0
uuid_000000000007d69e:
	movb $1, -5120(%rbp)
uuid_000000000007d6a0:
	mov -5152(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007d6a3:
	mov -5144(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007d6a6:
	mov -5136(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007d6a9:
	mov -5128(%RBP),%RSP
	add $-5224, %RSP
	mov -5120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6aa
	jmp uuid_000000000007d6ac
uuid_000000000007d6aa:
	movb $1, -5016(%rbp)
uuid_000000000007d6ac:
	mov -5040(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007d6af:
	mov -5032(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007d6b2:
	mov -5024(%RBP),%RSP
	add $-5224, %RSP
	mov -5016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d6b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d6b9
uuid_000000000007d6b7:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a8f0
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -5320(%RBP)
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d6b3
	jmp uuid_000000000007d6b5
uuid_000000000007d6b3:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a8f0
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq $uuid_000000000007aed5
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -4856(%RBP)
	popq -4848(%RBP)
	popq -4840(%RBP)
uuid_000000000007d6b5:
	mov -5408(%RBP),%RSP
	add $-5560, %RSP
uuid_000000000007d6b9:
	mov -4936(%RBP),%RSP
	add $-5560, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007a8f0
	pushq -4840(%rbp)
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007d6ba
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007d6ba
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d6bb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d6bc
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4832(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d745:
	mov -4224(%RBP),%RSP
	add $-5560, %RSP
	jmp uuid_000000000007d748
uuid_000000000007d746:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $-8
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d676
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -4464(%RBP), %RAX
	push %RAX
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4464(%RBP), %RAX
	push %RAX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4656(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4624(%RBP), %RAX
	push %RAX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007d677
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007d678
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007d679
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d67a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d67b
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d67a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a32d
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc43
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d2ae
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a330
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d67a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cc43
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d67c
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -280(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d67d
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007d67f
uuid_000000000007d67d:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d67f:
	mov -4872(%RBP),%RSP
	add $-4872, %RSP
uuid_000000000007d748:
	mov -3576(%RBP),%RSP
	add $-4872, %RSP
	jmp uuid_000000000007d74b
uuid_000000000007d749:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d74b:
	mov -3056(%RBP),%RSP
	add $-3568, %RSP
	jmp uuid_000000000007d74e
uuid_000000000007d74c:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b88f
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad14
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a837
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a917
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a329
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d74e:
	mov -2712(%RBP),%RSP
	add $-3080, %RSP
	jmp uuid_000000000007d751
uuid_000000000007d74f:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5f1
	jmp uuid_000000000007d5f3
uuid_000000000007d5f1:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5e8
	jmp uuid_000000000007d5ea
uuid_000000000007d5e8:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5df
	jmp uuid_000000000007d5e1
uuid_000000000007d5df:
	push %RBP
	mov -2904(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5dc
	jmp uuid_000000000007d5de
uuid_000000000007d5dc:
	push %RBP
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5d9
	jmp uuid_000000000007d5db
uuid_000000000007d5d9:
	movb $1, -2920(%rbp)
uuid_000000000007d5db:
	mov -2984(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007d5de:
	mov -2936(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007d5e1:
	mov -2928(%RBP),%RSP
	add $-3008, %RSP
	mov -2920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5e5
	jmp uuid_000000000007d5e7
uuid_000000000007d5e5:
	push %RBP
	jmp uuid_000000000007d5e2
	jmp uuid_000000000007d5e4
uuid_000000000007d5e2:
	movb $1, -2856(%rbp)
uuid_000000000007d5e4:
	mov -3016(%RBP),%RSP
	add $-3016, %RSP
uuid_000000000007d5e7:
	mov -2872(%RBP),%RSP
	add $-3016, %RSP
uuid_000000000007d5ea:
	mov -2864(%RBP),%RSP
	add $-3016, %RSP
	mov -2856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5ee
	jmp uuid_000000000007d5f0
uuid_000000000007d5ee:
	push %RBP
	mov -2768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3032(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5eb
	jmp uuid_000000000007d5ed
uuid_000000000007d5eb:
	movb $1, -2792(%rbp)
uuid_000000000007d5ed:
	mov -3024(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007d5f0:
	mov -2808(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007d5f3:
	mov -2800(%RBP),%RSP
	add $-3032, %RSP
	mov -2792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d616
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -3064(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d60c
	jmp uuid_000000000007d60e
uuid_000000000007d60c:
	push %RBP
	mov -3056(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d603
	jmp uuid_000000000007d605
uuid_000000000007d603:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5fa
	jmp uuid_000000000007d5fc
uuid_000000000007d5fa:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5f7
	jmp uuid_000000000007d5f9
uuid_000000000007d5f7:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	jmp uuid_000000000007d5f4
	jmp uuid_000000000007d5f6
uuid_000000000007d5f4:
	movb $1, -3200(%rbp)
uuid_000000000007d5f6:
	mov -3264(%RBP),%RSP
	add $-3288, %RSP
uuid_000000000007d5f9:
	mov -3216(%RBP),%RSP
	add $-3288, %RSP
uuid_000000000007d5fc:
	mov -3208(%RBP),%RSP
	add $-3288, %RSP
	mov -3200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d600
	jmp uuid_000000000007d602
uuid_000000000007d600:
	push %RBP
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5fd
	jmp uuid_000000000007d5ff
uuid_000000000007d5fd:
	movb $1, -3136(%rbp)
uuid_000000000007d5ff:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007d602:
	mov -3152(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007d605:
	mov -3144(%RBP),%RSP
	add $-3320, %RSP
	mov -3136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d609
	jmp uuid_000000000007d60b
uuid_000000000007d609:
	push %RBP
	mov -3048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_000000000007a86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d606
	jmp uuid_000000000007d608
uuid_000000000007d606:
	movb $1, -3072(%rbp)
uuid_000000000007d608:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007d60b:
	mov -3088(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007d60e:
	mov -3080(%RBP),%RSP
	add $-3336, %RSP
	mov -3072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d613
	push %RBP
	jmp uuid_000000000007d610
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d60f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d612
uuid_000000000007d610:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d612:
	mov -3344(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_000000000007d615
uuid_000000000007d613:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a8a2
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3344(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d615:
	mov -3040(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_000000000007d618
uuid_000000000007d616:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d618:
	mov -2760(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007d751:
	mov -2416(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_000000000007d754
uuid_000000000007d752:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d754:
	mov -2120(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_000000000007d757
uuid_000000000007d755:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1992(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a78b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq $uuid_000000000007c715
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a51c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007aed5
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d757:
	mov -1784(%RBP),%RSP
	add $-2288, %RSP
	jmp uuid_000000000007d75a
uuid_000000000007d758:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1656(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a78b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::label : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_label_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d75a:
	mov -1448(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_000000000007d75d
uuid_000000000007d75b:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d75d:
	mov -928(%RBP),%RSP
	add $-1440, %RSP
	jmp uuid_000000000007d760
uuid_000000000007d75e:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d55b
	pushq $0
	push %RBP
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d517
	jmp uuid_000000000007d519
uuid_000000000007d517:
	movb $1, -960(%rbp)
uuid_000000000007d519:
	mov -968(%RBP),%RSP
	add $-968, %RSP
	push %RBP
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d51a
	jmp uuid_000000000007d51c
uuid_000000000007d51a:
	movb $1, -960(%rbp)
uuid_000000000007d51c:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	push %RBP
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d51d
	jmp uuid_000000000007d51f
uuid_000000000007d51d:
	movb $1, -960(%rbp)
uuid_000000000007d51f:
	mov -984(%RBP),%RSP
	add $-984, %RSP
	push %RBP
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d520
	jmp uuid_000000000007d522
uuid_000000000007d520:
	movb $1, -960(%rbp)
uuid_000000000007d522:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	push %RBP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d558
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function class-of-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call class_SB_of_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d555
	pushq -920(%rbp)
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq $uuid_000000000007d523
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d552
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq $uuid_000000000007d524
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d54f
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_000000000007d525
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d54c
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq $uuid_000000000007a4cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d549
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq $uuid_000000000007d527
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d546
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_000000000007d529
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d543
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $uuid_000000000007d52b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d540
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq $uuid_000000000007d52d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d53d
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007d52f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d53a
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_000000000007d531
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d537
	push %RBP
	jmp uuid_000000000007d534
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d533
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d536
uuid_000000000007d534:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d536:
	mov -1184(%RBP),%RSP
	add $-1184, %RSP
	jmp uuid_000000000007d539
uuid_000000000007d537:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d532
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d539:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_000000000007d53c
uuid_000000000007d53a:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d530
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d53c:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_000000000007d53f
uuid_000000000007d53d:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d52e
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d53f:
	mov -1136(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_000000000007d542
uuid_000000000007d540:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d52c
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d542:
	mov -1120(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007d545
uuid_000000000007d543:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d52a
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d545:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007d548
uuid_000000000007d546:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d528
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d548:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007d54b
uuid_000000000007d549:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d526
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d54b:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007d54e
uuid_000000000007d54c:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a32a
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d54e:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007d551
uuid_000000000007d54f:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2e9
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d551:
	mov -1040(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_000000000007d554
uuid_000000000007d552:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a322
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d554:
	mov -1024(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007d557
uuid_000000000007d555:
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007aed5
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d557:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
	jmp uuid_000000000007d55a
uuid_000000000007d558:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d55a:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007d55d
uuid_000000000007d55b:
#call function compile-declare-cstring : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call compile_SB_declare_SB_cstring_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d55d:
	mov -952(%RBP),%RSP
	add $-952, %RSP
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d760:
	mov -808(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007d763
uuid_000000000007d761:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -800(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d763:
	mov -688(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007d766
uuid_000000000007d764:
uuid_000000000007d766:
	mov -608(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007d769
uuid_000000000007d767:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d769:
	mov -528(%RBP),%RSP
	add $-600, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -288(%rbp)
	push %RBP
	pushq -456(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d76e
	push %RBP
	jmp uuid_000000000007d76b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d76a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d76d
uuid_000000000007d76b:
#call function compile-expr-direct : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d76d:
	mov -480(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007d770
uuid_000000000007d76e:
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a959
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d770:
	mov -464(%RBP),%RSP
	add $-472, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d789
	jmp uuid_000000000007d78b
uuid_000000000007d789:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d780
	jmp uuid_000000000007d782
uuid_000000000007d780:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d777
	jmp uuid_000000000007d779
uuid_000000000007d777:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d774
	jmp uuid_000000000007d776
uuid_000000000007d774:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_000000000007d771
	jmp uuid_000000000007d773
uuid_000000000007d771:
	movb $1, -672(%rbp)
uuid_000000000007d773:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d776:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d779:
	mov -680(%RBP),%RSP
	add $-760, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d77d
	jmp uuid_000000000007d77f
uuid_000000000007d77d:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007d77a
	jmp uuid_000000000007d77c
uuid_000000000007d77a:
	movb $1, -608(%rbp)
uuid_000000000007d77c:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d77f:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d782:
	mov -616(%RBP),%RSP
	add $-792, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d786
	jmp uuid_000000000007d788
uuid_000000000007d786:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d783
	jmp uuid_000000000007d785
uuid_000000000007d783:
	movb $1, -544(%rbp)
uuid_000000000007d785:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007d788:
	mov -560(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007d78b:
	mov -552(%RBP),%RSP
	add $-808, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7a9
	push %RBP
	jmp uuid_000000000007d7a6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d7a5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7a8
uuid_000000000007d7a6:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d7a2
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	jmp uuid_000000000007d7a4
uuid_000000000007d7a2:
uuid_000000000007d7a4:
	mov -976(%RBP),%RSP
	add $-976, %RSP
#call function close : Arrow<FragmentList+CaseNumber<1>,Array<FragmentList+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007d7a8:
	mov -816(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007d7ab
uuid_000000000007d7a9:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d792
	jmp uuid_000000000007d794
uuid_000000000007d792:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d78f
	jmp uuid_000000000007d791
uuid_000000000007d78f:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d78c
	jmp uuid_000000000007d78e
uuid_000000000007d78c:
	movb $1, -968(%rbp)
uuid_000000000007d78e:
	mov -1064(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007d791:
	mov -984(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007d794:
	mov -976(%RBP),%RSP
	add $-1136, %RSP
	mov -968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d79f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d79e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7a1
uuid_000000000007d79f:
#call function compile-fragment-args : Arrow<Cons<Cons<Cons<FContext,Type>,AST>,I64>,FragmentList>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007af3b
	pushq $uuid_000000000007cbe5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d795
	jmp uuid_000000000007d797
uuid_000000000007d795:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_000000000007d797:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007af3b
	pushq $uuid_000000000007cbe5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d798
	jmp uuid_000000000007d79a
uuid_000000000007d798:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_000000000007d79a:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d79b
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	jmp uuid_000000000007d79d
uuid_000000000007d79b:
uuid_000000000007d79d:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007d7a1:
	mov -888(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d7ab:
	mov -512(%RBP),%RSP
	add $-1480, %RSP
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_global_CL_ArrowNilConsASTConsStringFContext:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7b5
	jmp uuid_000000000007d7b7
uuid_000000000007d7b5:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007d7b2
	jmp uuid_000000000007d7b4
uuid_000000000007d7b2:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7af
	jmp uuid_000000000007d7b1
uuid_000000000007d7af:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7ac
	jmp uuid_000000000007d7ae
uuid_000000000007d7ac:
	movb $1, -472(%rbp)
uuid_000000000007d7ae:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007d7b1:
	mov -520(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007d7b4:
	mov -488(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007d7b7:
	mov -480(%RBP),%RSP
	add $-672, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7fd
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7f5
	jmp uuid_000000000007d7f7
uuid_000000000007d7f5:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7e3
	jmp uuid_000000000007d7e5
uuid_000000000007d7e3:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7da
	jmp uuid_000000000007d7dc
uuid_000000000007d7da:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007d7d7
	jmp uuid_000000000007d7d9
uuid_000000000007d7d7:
	movb $1, -952(%rbp)
uuid_000000000007d7d9:
	mov -968(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007d7dc:
	mov -960(%RBP),%RSP
	add $-992, %RSP
	mov -952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7e0
	jmp uuid_000000000007d7e2
uuid_000000000007d7e0:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7dd
	jmp uuid_000000000007d7df
uuid_000000000007d7dd:
	movb $1, -856(%rbp)
uuid_000000000007d7df:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7e2:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7e5:
	mov -864(%RBP),%RSP
	add $-1072, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7f2
	jmp uuid_000000000007d7f4
uuid_000000000007d7f2:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7ec
	jmp uuid_000000000007d7ee
uuid_000000000007d7ec:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_000000000007d7e9
	jmp uuid_000000000007d7eb
uuid_000000000007d7e9:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d7e6
	jmp uuid_000000000007d7e8
uuid_000000000007d7e6:
	movb $1, -1160(%rbp)
uuid_000000000007d7e8:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d7eb:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d7ee:
	mov -1168(%RBP),%RSP
	add $-1248, %RSP
	mov -1160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7ef
	jmp uuid_000000000007d7f1
uuid_000000000007d7ef:
	movb $1, -760(%rbp)
uuid_000000000007d7f1:
	mov -1080(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d7f4:
	mov -776(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d7f7:
	mov -768(%RBP),%RSP
	add $-1248, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7fa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d7f9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7fc
uuid_000000000007d7fa:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -1280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d7f8
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a2bb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	pushq -208(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq $7
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6eb
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007a6ec
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6cf
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq $-8
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $uuid_000000000007aed5
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007d7fc:
	mov -680(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007d7ff
uuid_000000000007d7fd:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $uuid_000000000007be08
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7d4
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_000000000007d7b8
	pushq $0
	pushq $0
	pushq $3
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq $0
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $8
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -712(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007c744
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d7c0
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	jmp uuid_000000000007d7c2
uuid_000000000007d7c0:
	mov $main_SB_with_CL_U8, %r15
	movb $1, 0(%r15)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	push %RBP
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7bd
	push %RBP
	jmp uuid_000000000007d7ba
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d7b9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7bc
uuid_000000000007d7ba:
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007d7bc:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007d7bf
uuid_000000000007d7bd:
uuid_000000000007d7bf:
	mov -984(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c744
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
uuid_000000000007d7c2:
	mov -904(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a51c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	push %RBP
	mov $config_SB_profile_SB_invocations_CL_U8, %R13
	mov 0(%R13), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7ce
	jmp uuid_000000000007d7d0
uuid_000000000007d7ce:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	pushq $0
	pushq $uuid_000000000007d7c3
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007d7c4
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007d7c5
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007d7c6
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d7c7
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007d7c8
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007d7c9
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d7c7
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007d7c8
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007d7ca
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d7cb
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007d7cc
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007d7cd
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007d7d0:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007d7d1
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007aed5
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c666
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d7d2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -712(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d6bc
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d7d3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_000000000007d7d6
uuid_000000000007d7d4:
uuid_000000000007d7d6:
	mov -680(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007d7ff:
	mov -392(%RBP),%RSP
	add $-680, %RSP
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext:
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d800
	movq -384(%rbp), %r15
	movq %r15, -488(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -472(%rbp)
	jmp uuid_000000000007d802
uuid_000000000007d800:
uuid_000000000007d802:
	mov -496(%RBP),%RSP
	add $-496, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d809
	jmp uuid_000000000007d80b
uuid_000000000007d809:
	push %RBP
	jmp uuid_000000000007d806
	jmp uuid_000000000007d808
uuid_000000000007d806:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d803
	jmp uuid_000000000007d805
uuid_000000000007d803:
	movb $1, -560(%rbp)
uuid_000000000007d805:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d808:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d80b:
	mov -568(%RBP),%RSP
	add $-592, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d810
	push %RBP
	jmp uuid_000000000007d80d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d80c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d80f
uuid_000000000007d80d:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007d47c
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007a919
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -208(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a8a3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007d80f:
	mov -600(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007d812
uuid_000000000007d810:
uuid_000000000007d812:
	mov -528(%RBP),%RSP
	add $-592, %RSP
	subq $152, %rsp
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $464, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d82b
	jmp uuid_000000000007d82d
uuid_000000000007d82b:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d822
	jmp uuid_000000000007d824
uuid_000000000007d822:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d819
	jmp uuid_000000000007d81b
uuid_000000000007d819:
	push %RBP
	mov -624(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d816
	jmp uuid_000000000007d818
uuid_000000000007d816:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_000000000007d813
	jmp uuid_000000000007d815
uuid_000000000007d813:
	movb $1, -640(%rbp)
uuid_000000000007d815:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007d818:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007d81b:
	mov -648(%RBP),%RSP
	add $-728, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d81f
	jmp uuid_000000000007d821
uuid_000000000007d81f:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007d81c
	jmp uuid_000000000007d81e
uuid_000000000007d81c:
	movb $1, -576(%rbp)
uuid_000000000007d81e:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d821:
	mov -592(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d824:
	mov -584(%RBP),%RSP
	add $-760, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d828
	jmp uuid_000000000007d82a
uuid_000000000007d828:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq $uuid_000000000007a6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d825
	jmp uuid_000000000007d827
uuid_000000000007d825:
	movb $1, -512(%rbp)
uuid_000000000007d827:
	mov -768(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d82a:
	mov -528(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d82d:
	mov -520(%RBP),%RSP
	add $-776, %RSP
	mov -512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d84e
	push %RBP
	jmp uuid_000000000007d84b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d84a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d84d
uuid_000000000007d84b:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -792(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d847
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d844
	jmp uuid_000000000007d846
uuid_000000000007d844:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $uuid_000000000007a906
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d841
	jmp uuid_000000000007d843
uuid_000000000007d841:
	pushq $uuid_000000000007a907
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a907
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d843:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007d846:
	mov -808(%RBP),%RSP
	add $-912, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -384(%RBP), %RAX
	push %RAX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007d849
uuid_000000000007d847:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007aed5
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d849:
	mov -800(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d84d:
	mov -784(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007d850
uuid_000000000007d84e:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d834
	jmp uuid_000000000007d836
uuid_000000000007d834:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d831
	jmp uuid_000000000007d833
uuid_000000000007d831:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d82e
	jmp uuid_000000000007d830
uuid_000000000007d82e:
	movb $1, -936(%rbp)
uuid_000000000007d830:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007d833:
	mov -952(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007d836:
	mov -944(%RBP),%RSP
	add $-1104, %RSP
	mov -936(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d83e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d83d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d840
uuid_000000000007d83e:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d83a
	jmp uuid_000000000007d83c
uuid_000000000007d83a:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $uuid_000000000007a906
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d837
	jmp uuid_000000000007d839
uuid_000000000007d837:
	pushq $uuid_000000000007a907
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a907
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a958
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d839:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007d83c:
	mov -1264(%RBP),%RSP
	add $-1368, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov -1192(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1456(%RBP), %RAX
	push %RAX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d840:
	mov -856(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007d850:
	mov -480(%RBP),%RSP
	add $-1528, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	subq $152, %rsp
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq $uuid_000000000007be08
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d865
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d851
	jmp uuid_000000000007d853
uuid_000000000007d851:
	pushq $4
	popq -472(%RBP)
uuid_000000000007d853:
	mov -872(%RBP),%RSP
	add $-872, %RSP
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d854
	jmp uuid_000000000007d856
uuid_000000000007d854:
	pushq $4
	popq -472(%RBP)
uuid_000000000007d856:
	mov -880(%RBP),%RSP
	add $-880, %RSP
#call function compile-stack-call-push-args : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d857
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1032(%RBP)
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	pushq $0
	pushq $0
	pushq $3
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d858
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d859
	pushq $0
	pushq -360(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d85a
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d858
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d679
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d85b
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007d85c
	pushq $0
#call function to-string : Arrow<IsUsed,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringIsUsed
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d67a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d67b
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d67a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d85d
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d85e
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a6ed
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d67a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -464(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	push %RBP
	movq -1072(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d862
	jmp uuid_000000000007d864
uuid_000000000007d862:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $4
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d85f
	jmp uuid_000000000007d861
uuid_000000000007d85f:
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_000000000007d861:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d864:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	jmp uuid_000000000007d867
uuid_000000000007d865:
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -360(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_000000000007d867:
	mov -864(%RBP),%RSP
	add $-864, %RSP
	subq $152, %rsp
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	pushq -728(%rbp)
	pushq -720(%rbp)
	pushq -712(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $480, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
uuid_000000000007d875:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d876
	jmp uuid_000000000007d877
uuid_000000000007d876:
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d86e
	jmp uuid_000000000007d870
uuid_000000000007d86e:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d86b
	jmp uuid_000000000007d86d
uuid_000000000007d86b:
	push %RBP
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_000000000007d868
	jmp uuid_000000000007d86a
uuid_000000000007d868:
	movb $1, -1168(%rbp)
uuid_000000000007d86a:
	mov -1360(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007d86d:
	mov -1184(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007d870:
	mov -1176(%RBP),%RSP
	add $-1512, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d872
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d871
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d874
uuid_000000000007d872:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1352(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -752(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -656(%rbp)
uuid_000000000007d874:
	mov -992(%RBP),%RSP
	add $-1512, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d875
uuid_000000000007d877:
	subq $152, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8a2
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d884
	jmp uuid_000000000007d886
uuid_000000000007d884:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007d881
	jmp uuid_000000000007d883
uuid_000000000007d881:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007d87e
	jmp uuid_000000000007d880
uuid_000000000007d87e:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d87b
	jmp uuid_000000000007d87d
uuid_000000000007d87b:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d878
	jmp uuid_000000000007d87a
uuid_000000000007d878:
	movb $1, -840(%rbp)
uuid_000000000007d87a:
	mov -1064(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d87d:
	mov -1048(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d880:
	mov -1016(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d883:
	mov -856(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d886:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
	mov -840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d89f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d89e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8a1
uuid_000000000007d89f:
#call function translate-local-variables : Arrow<Cons<FContext,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
	popq -1072(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007c6ae
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d88a
	jmp uuid_000000000007d88c
uuid_000000000007d88a:
	push %RBP
	mov -1312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq $uuid_000000000007ad7a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d887
	jmp uuid_000000000007d889
uuid_000000000007d887:
	movb $1, -1328(%rbp)
uuid_000000000007d889:
	mov -1344(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007d88c:
	mov -1336(%RBP),%RSP
	add $-1352, %RSP
	mov -1328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d89b
	push %RBP
	jmp uuid_000000000007d898
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d897
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d89a
uuid_000000000007d898:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d89a:
	mov -1360(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007d89d
uuid_000000000007d89b:
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007c715
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d890
	jmp uuid_000000000007d892
uuid_000000000007d890:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d88d
	jmp uuid_000000000007d88f
uuid_000000000007d88d:
	movb $1, -1416(%rbp)
uuid_000000000007d88f:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d892:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
	mov -1416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d894
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d893
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d896
uuid_000000000007d894:
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1448(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d896:
	mov -1384(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d89d:
	mov -1296(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d8a1:
	mov -632(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007d8a4
uuid_000000000007d8a2:
uuid_000000000007d8a4:
	mov -424(%RBP),%RSP
	add $-624, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $216, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	push %RBP
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8ae
	jmp uuid_000000000007d8b0
uuid_000000000007d8ae:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007d8ab
	jmp uuid_000000000007d8ad
uuid_000000000007d8ab:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8a8
	jmp uuid_000000000007d8aa
uuid_000000000007d8a8:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8a5
	jmp uuid_000000000007d8a7
uuid_000000000007d8a5:
	movb $1, -760(%rbp)
uuid_000000000007d8a7:
	mov -888(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007d8aa:
	mov -808(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007d8ad:
	mov -776(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007d8b0:
	mov -768(%RBP),%RSP
	add $-960, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8b6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d8b5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8b8
uuid_000000000007d8b6:
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	mov -968(%RBP), %RAX
	movq %RAX, -288(%rbp)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007a959
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d8b2
	jmp uuid_000000000007d8b4
uuid_000000000007d8b2:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007d7b8
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq $uuid_000000000007d7b8
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d8b1
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -1992(%RBP)
	popq -1984(%RBP)
	popq -1976(%RBP)
	popq -1968(%RBP)
	popq -1960(%RBP)
	popq -1952(%RBP)
	popq -1944(%RBP)
	popq -1936(%RBP)
	popq -1928(%RBP)
	popq -1920(%RBP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
	popq -1840(%RBP)
	popq -1832(%RBP)
	popq -1824(%RBP)
	popq -1816(%RBP)
	popq -1808(%RBP)
	popq -1800(%RBP)
uuid_000000000007d8b4:
	mov -2000(%RBP),%RSP
	add $-2152, %RSP
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
uuid_000000000007d8b8:
	mov -680(%RBP),%RSP
	add $-2224, %RSP
	subq $152, %rsp
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8c2
	jmp uuid_000000000007d8c4
uuid_000000000007d8c2:
	push %RBP
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	jmp uuid_000000000007d8bf
	jmp uuid_000000000007d8c1
uuid_000000000007d8bf:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8bc
	jmp uuid_000000000007d8be
uuid_000000000007d8bc:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8b9
	jmp uuid_000000000007d8bb
uuid_000000000007d8b9:
	movb $1, -784(%rbp)
uuid_000000000007d8bb:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d8be:
	mov -832(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d8c1:
	mov -800(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d8c4:
	mov -792(%RBP),%RSP
	add $-984, %RSP
	mov -784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d8c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8c8
uuid_000000000007d8c6:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
uuid_000000000007d8c8:
	mov -704(%RBP),%RSP
	add $-1056, %RSP
	subq $152, %rsp
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext:
	pushq -552(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8f9
	jmp uuid_000000000007d8fb
uuid_000000000007d8f9:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8f0
	jmp uuid_000000000007d8f2
uuid_000000000007d8f0:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8de
	jmp uuid_000000000007d8e0
uuid_000000000007d8de:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8cc
	jmp uuid_000000000007d8ce
uuid_000000000007d8cc:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007d8c9
	jmp uuid_000000000007d8cb
uuid_000000000007d8c9:
	movb $1, -1016(%rbp)
uuid_000000000007d8cb:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007d8ce:
	mov -1024(%RBP),%RSP
	add $-1056, %RSP
	mov -1016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8db
	jmp uuid_000000000007d8dd
uuid_000000000007d8db:
	push %RBP
	mov -896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8d5
	jmp uuid_000000000007d8d7
uuid_000000000007d8d5:
	push %RBP
	jmp uuid_000000000007d8d2
	jmp uuid_000000000007d8d4
uuid_000000000007d8d2:
	push %RBP
	mov -1072(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d8cf
	jmp uuid_000000000007d8d1
uuid_000000000007d8cf:
	movb $1, -1144(%rbp)
uuid_000000000007d8d1:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d8d4:
	mov -1160(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d8d7:
	mov -1152(%RBP),%RSP
	add $-1176, %RSP
	mov -1144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8d8
	jmp uuid_000000000007d8da
uuid_000000000007d8d8:
	movb $1, -920(%rbp)
uuid_000000000007d8da:
	mov -1064(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d8dd:
	mov -936(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d8e0:
	mov -928(%RBP),%RSP
	add $-1176, %RSP
	mov -920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8ed
	jmp uuid_000000000007d8ef
uuid_000000000007d8ed:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8e7
	jmp uuid_000000000007d8e9
uuid_000000000007d8e7:
	push %RBP
	jmp uuid_000000000007d8e4
	jmp uuid_000000000007d8e6
uuid_000000000007d8e4:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d8e1
	jmp uuid_000000000007d8e3
uuid_000000000007d8e1:
	movb $1, -1264(%rbp)
uuid_000000000007d8e3:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d8e6:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d8e9:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8ea
	jmp uuid_000000000007d8ec
uuid_000000000007d8ea:
	movb $1, -824(%rbp)
uuid_000000000007d8ec:
	mov -1184(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d8ef:
	mov -840(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d8f2:
	mov -832(%RBP),%RSP
	add $-1296, %RSP
	mov -824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8f6
	jmp uuid_000000000007d8f8
uuid_000000000007d8f6:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8f3
	jmp uuid_000000000007d8f5
uuid_000000000007d8f3:
	movb $1, -728(%rbp)
uuid_000000000007d8f5:
	mov -1304(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007d8f8:
	mov -744(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007d8fb:
	mov -736(%RBP),%RSP
	add $-1376, %RSP
	mov -728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d98a
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -1456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d95d
	jmp uuid_000000000007d95f
uuid_000000000007d95d:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d94b
	jmp uuid_000000000007d94d
uuid_000000000007d94b:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d939
	jmp uuid_000000000007d93b
uuid_000000000007d939:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	jmp uuid_000000000007d936
	jmp uuid_000000000007d938
uuid_000000000007d936:
	movb $1, -1656(%rbp)
uuid_000000000007d938:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007d93b:
	mov -1664(%RBP),%RSP
	add $-1696, %RSP
	mov -1656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d948
	jmp uuid_000000000007d94a
uuid_000000000007d948:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d942
	jmp uuid_000000000007d944
uuid_000000000007d942:
	push %RBP
	jmp uuid_000000000007d93f
	jmp uuid_000000000007d941
uuid_000000000007d93f:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d93c
	jmp uuid_000000000007d93e
uuid_000000000007d93c:
	movb $1, -1784(%rbp)
uuid_000000000007d93e:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007d941:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007d944:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
	mov -1784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d945
	jmp uuid_000000000007d947
uuid_000000000007d945:
	movb $1, -1560(%rbp)
uuid_000000000007d947:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007d94a:
	mov -1576(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007d94d:
	mov -1568(%RBP),%RSP
	add $-1816, %RSP
	mov -1560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d95a
	jmp uuid_000000000007d95c
uuid_000000000007d95a:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d954
	jmp uuid_000000000007d956
uuid_000000000007d954:
	push %RBP
	jmp uuid_000000000007d951
	jmp uuid_000000000007d953
uuid_000000000007d951:
	push %RBP
	mov -1832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d94e
	jmp uuid_000000000007d950
uuid_000000000007d94e:
	movb $1, -1904(%rbp)
uuid_000000000007d950:
	mov -1928(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007d953:
	mov -1920(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007d956:
	mov -1912(%RBP),%RSP
	add $-1936, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d957
	jmp uuid_000000000007d959
uuid_000000000007d957:
	movb $1, -1464(%rbp)
uuid_000000000007d959:
	mov -1824(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007d95c:
	mov -1480(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007d95f:
	mov -1472(%RBP),%RSP
	add $-1936, %RSP
	mov -1464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d987
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d984
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d983
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d986
uuid_000000000007d984:
uuid_000000000007d986:
	mov -1944(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_000000000007d989
uuid_000000000007d987:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d980
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d97d
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d977
	jmp uuid_000000000007d979
uuid_000000000007d977:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d979:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d97a
	jmp uuid_000000000007d97c
uuid_000000000007d97a:
	mov -2048(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007d97c:
	mov -2120(%RBP),%RSP
	add $-2120, %RSP
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d97f
uuid_000000000007d97d:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d974
	jmp uuid_000000000007d976
uuid_000000000007d974:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d976:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d97f:
	mov -1952(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_000000000007d982
uuid_000000000007d980:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq $0
	push %RBP
	mov -2096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d966
	jmp uuid_000000000007d968
uuid_000000000007d966:
	push %RBP
	mov -2088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d963
	jmp uuid_000000000007d965
uuid_000000000007d963:
	push %RBP
	mov -2080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d960
	jmp uuid_000000000007d962
uuid_000000000007d960:
	movb $1, -2104(%rbp)
uuid_000000000007d962:
	mov -2200(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007d965:
	mov -2120(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007d968:
	mov -2112(%RBP),%RSP
	add $-2272, %RSP
	mov -2104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d971
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d970
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d973
uuid_000000000007d971:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d96d
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d96c
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d96f
uuid_000000000007d96d:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d969
	jmp uuid_000000000007d96b
uuid_000000000007d969:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d96b:
	mov -2288(%RBP),%RSP
	add $-2288, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2408(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	pushq -3152(%RBP)
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	pushq -3216(%RBP)
	pushq -3224(%RBP)
	pushq -3232(%RBP)
	pushq -3240(%RBP)
	pushq -3248(%RBP)
	pushq -3256(%RBP)
	pushq -3264(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -2448(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007d96f:
	mov -2280(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007d973:
	mov -2024(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007d982:
	mov -1944(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007d989:
	mov -1384(%RBP),%RSP
	add $-3272, %RSP
	jmp uuid_000000000007d98c
uuid_000000000007d98a:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d930
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d92d
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d927
	jmp uuid_000000000007d929
uuid_000000000007d927:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d929:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d92a
	jmp uuid_000000000007d92c
uuid_000000000007d92a:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007d92c:
	mov -1560(%RBP),%RSP
	add $-1560, %RSP
	mov -1520(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d92f
uuid_000000000007d92d:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d924
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1408(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007d926
uuid_000000000007d924:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d91e
	jmp uuid_000000000007d920
uuid_000000000007d91e:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d920:
	mov -1408(%RBP),%RSP
	add $-1408, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d921
	jmp uuid_000000000007d923
uuid_000000000007d921:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007d923:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
	mov -1528(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d926:
	mov -1400(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007d92f:
	mov -1392(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007d932
uuid_000000000007d930:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d902
	jmp uuid_000000000007d904
uuid_000000000007d902:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8ff
	jmp uuid_000000000007d901
uuid_000000000007d8ff:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8fc
	jmp uuid_000000000007d8fe
uuid_000000000007d8fc:
	movb $1, -1544(%rbp)
uuid_000000000007d8fe:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d901:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d904:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d91b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007d91a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d91d
uuid_000000000007d91b:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d917
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d90e
	jmp uuid_000000000007d910
uuid_000000000007d90e:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d910:
	mov -1728(%RBP),%RSP
	add $-1728, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d911
	jmp uuid_000000000007d913
uuid_000000000007d911:
	mov -1816(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007d913:
	mov -1888(%RBP),%RSP
	add $-1888, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d914
	jmp uuid_000000000007d916
uuid_000000000007d914:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007d916:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1848(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007d919
uuid_000000000007d917:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d90b
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1736(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007d90d
uuid_000000000007d90b:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d905
	jmp uuid_000000000007d907
uuid_000000000007d905:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d907:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d908
	jmp uuid_000000000007d90a
uuid_000000000007d908:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007d90a:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1856(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007d90d:
	mov -1728(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007d919:
	mov -1720(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007d91d:
	mov -1464(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007d932:
	mov -1384(%RBP),%RSP
	add $-2728, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d933
	jmp uuid_000000000007d935
uuid_000000000007d933:
	movq -568(%rbp), %r15
	movq %r15, -552(%rbp)
	mov -568(%rbp), %r15
	mov %r15, -552(%rbp)
uuid_000000000007d935:
	mov -2736(%RBP),%RSP
	add $-2736, %RSP
uuid_000000000007d98c:
	mov -648(%RBP),%RSP
	add $-2736, %RSP
	pushq -552(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	pushq $0
	subq $424, %rsp
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	pushq 696(%rsp)
	pushq 712(%rsp)
	pushq 728(%rsp)
	pushq 744(%rsp)
	pushq 760(%rsp)
	pushq 776(%rsp)
	pushq 792(%rsp)
	pushq 808(%rsp)
	pushq 824(%rsp)
	pushq 840(%rsp)
	pushq 856(%rsp)
	pushq 872(%rsp)
	pushq 888(%rsp)
	pushq 904(%rsp)
	pushq 920(%rsp)
	pushq 936(%rsp)
	pushq 952(%rsp)
	pushq 968(%rsp)
	pushq 984(%rsp)
	pushq 1000(%rsp)
	pushq 1016(%rsp)
	pushq 1032(%rsp)
	pushq 1048(%rsp)
	pushq 1064(%rsp)
	pushq 1080(%rsp)
	pushq 1096(%rsp)
	pushq 1112(%rsp)
	pushq 1128(%rsp)
	pushq 1144(%rsp)
	pushq 1160(%rsp)
	pushq 1176(%rsp)
	pushq 1192(%rsp)
	pushq 1208(%rsp)
	pushq 1224(%rsp)
	pushq 1240(%rsp)
	pushq 1256(%rsp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	popq -640(%rbp)
	popq -648(%rbp)
	popq -656(%rbp)
	popq -664(%rbp)
	popq -672(%rbp)
	popq -680(%rbp)
	popq -688(%rbp)
	popq -696(%rbp)
	popq -704(%rbp)
	popq -712(%rbp)
	popq -720(%rbp)
	popq -728(%rbp)
	popq -736(%rbp)
	popq -744(%rbp)
	popq -752(%rbp)
	popq -760(%rbp)
	popq -768(%rbp)
	popq -776(%rbp)
	popq -784(%rbp)
	popq -792(%rbp)
	popq -800(%rbp)
	popq -808(%rbp)
	popq -816(%rbp)
	popq -824(%rbp)
	popq -832(%rbp)
	popq -840(%rbp)
	popq -848(%rbp)
	popq -856(%rbp)
	popq -864(%rbp)
	popq -872(%rbp)
	popq -880(%rbp)
	popq -888(%rbp)
	popq -896(%rbp)
	popq -904(%rbp)
	popq -912(%rbp)
	popq -920(%rbp)
	popq -928(%rbp)
	popq -936(%rbp)
	popq -944(%rbp)
	popq -952(%rbp)
	popq -960(%rbp)
	popq -968(%rbp)
	popq -976(%rbp)
	popq -984(%rbp)
	addq $424, %rsp
	mov %rbp, %rsp
	sub $560, %rsp
	ret
blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext:
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dca3
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dca0
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d993
	jmp uuid_000000000007d995
uuid_000000000007d993:
	push %RBP
	jmp uuid_000000000007d990
	jmp uuid_000000000007d992
uuid_000000000007d990:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d98d
	jmp uuid_000000000007d98f
uuid_000000000007d98d:
	movb $1, -640(%rbp)
uuid_000000000007d98f:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007d992:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007d995:
	mov -648(%RBP),%RSP
	add $-672, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc9d
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d99c
	jmp uuid_000000000007d99e
uuid_000000000007d99c:
	push %RBP
	jmp uuid_000000000007d999
	jmp uuid_000000000007d99b
uuid_000000000007d999:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d996
	jmp uuid_000000000007d998
uuid_000000000007d996:
	movb $1, -760(%rbp)
uuid_000000000007d998:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d99b:
	mov -776(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d99e:
	mov -768(%RBP),%RSP
	add $-792, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc9a
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9bd
	jmp uuid_000000000007d9bf
uuid_000000000007d9bd:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9ab
	jmp uuid_000000000007d9ad
uuid_000000000007d9ab:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9a2
	jmp uuid_000000000007d9a4
uuid_000000000007d9a2:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	jmp uuid_000000000007d99f
	jmp uuid_000000000007d9a1
uuid_000000000007d99f:
	movb $1, -1072(%rbp)
uuid_000000000007d9a1:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007d9a4:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
	mov -1072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9a8
	jmp uuid_000000000007d9aa
uuid_000000000007d9a8:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9a5
	jmp uuid_000000000007d9a7
uuid_000000000007d9a5:
	movb $1, -976(%rbp)
uuid_000000000007d9a7:
	mov -1120(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007d9aa:
	mov -992(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007d9ad:
	mov -984(%RBP),%RSP
	add $-1192, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9ba
	jmp uuid_000000000007d9bc
uuid_000000000007d9ba:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9b4
	jmp uuid_000000000007d9b6
uuid_000000000007d9b4:
	push %RBP
	jmp uuid_000000000007d9b1
	jmp uuid_000000000007d9b3
uuid_000000000007d9b1:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1312(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d9ae
	jmp uuid_000000000007d9b0
uuid_000000000007d9ae:
	movb $1, -1280(%rbp)
uuid_000000000007d9b0:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007d9b3:
	mov -1296(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007d9b6:
	mov -1288(%RBP),%RSP
	add $-1312, %RSP
	mov -1280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9b7
	jmp uuid_000000000007d9b9
uuid_000000000007d9b7:
	movb $1, -880(%rbp)
uuid_000000000007d9b9:
	mov -1200(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007d9bc:
	mov -896(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007d9bf:
	mov -888(%RBP),%RSP
	add $-1312, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc97
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9de
	jmp uuid_000000000007d9e0
uuid_000000000007d9de:
	push %RBP
	mov -1384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9cc
	jmp uuid_000000000007d9ce
uuid_000000000007d9cc:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1584(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9c3
	jmp uuid_000000000007d9c5
uuid_000000000007d9c3:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007d9c0
	jmp uuid_000000000007d9c2
uuid_000000000007d9c0:
	movb $1, -1592(%rbp)
uuid_000000000007d9c2:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007d9c5:
	mov -1600(%RBP),%RSP
	add $-1632, %RSP
	mov -1592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9c9
	jmp uuid_000000000007d9cb
uuid_000000000007d9c9:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9c6
	jmp uuid_000000000007d9c8
uuid_000000000007d9c6:
	movb $1, -1496(%rbp)
uuid_000000000007d9c8:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d9cb:
	mov -1512(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d9ce:
	mov -1504(%RBP),%RSP
	add $-1712, %RSP
	mov -1496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9db
	jmp uuid_000000000007d9dd
uuid_000000000007d9db:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9d5
	jmp uuid_000000000007d9d7
uuid_000000000007d9d5:
	push %RBP
	jmp uuid_000000000007d9d2
	jmp uuid_000000000007d9d4
uuid_000000000007d9d2:
	push %RBP
	mov -1728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d9cf
	jmp uuid_000000000007d9d1
uuid_000000000007d9cf:
	movb $1, -1800(%rbp)
uuid_000000000007d9d1:
	mov -1824(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007d9d4:
	mov -1816(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007d9d7:
	mov -1808(%RBP),%RSP
	add $-1832, %RSP
	mov -1800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9d8
	jmp uuid_000000000007d9da
uuid_000000000007d9d8:
	movb $1, -1400(%rbp)
uuid_000000000007d9da:
	mov -1720(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007d9dd:
	mov -1416(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007d9e0:
	mov -1408(%RBP),%RSP
	add $-1832, %RSP
	mov -1400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc94
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9f0
	jmp uuid_000000000007d9f2
uuid_000000000007d9f0:
	push %RBP
	mov -1904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9ed
	jmp uuid_000000000007d9ef
uuid_000000000007d9ed:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2088(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9e7
	jmp uuid_000000000007d9e9
uuid_000000000007d9e7:
	push %RBP
	jmp uuid_000000000007d9e4
	jmp uuid_000000000007d9e6
uuid_000000000007d9e4:
	push %RBP
	mov -2024(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq $uuid_000000000007a845
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d9e1
	jmp uuid_000000000007d9e3
uuid_000000000007d9e1:
	movb $1, -2096(%rbp)
uuid_000000000007d9e3:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007d9e6:
	mov -2112(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007d9e9:
	mov -2104(%RBP),%RSP
	add $-2128, %RSP
	mov -2096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9ea
	jmp uuid_000000000007d9ec
uuid_000000000007d9ea:
	movb $1, -1920(%rbp)
uuid_000000000007d9ec:
	mov -2016(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007d9ef:
	mov -1936(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007d9f2:
	mov -1928(%RBP),%RSP
	add $-2128, %RSP
	mov -1920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc91
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da67
	jmp uuid_000000000007da69
uuid_000000000007da67:
	push %RBP
	mov -2200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da33
	jmp uuid_000000000007da35
uuid_000000000007da33:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da30
	jmp uuid_000000000007da32
uuid_000000000007da30:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da2a
	jmp uuid_000000000007da2c
uuid_000000000007da2a:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da0c
	jmp uuid_000000000007da0e
uuid_000000000007da0c:
	push %RBP
	mov -2568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9f9
	jmp uuid_000000000007d9fb
uuid_000000000007d9f9:
	push %RBP
	jmp uuid_000000000007d9f6
	jmp uuid_000000000007d9f8
uuid_000000000007d9f6:
	push %RBP
	mov -2608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d9f3
	jmp uuid_000000000007d9f5
uuid_000000000007d9f3:
	movb $1, -2680(%rbp)
uuid_000000000007d9f5:
	mov -2704(%RBP),%RSP
	add $-2712, %RSP
uuid_000000000007d9f8:
	mov -2696(%RBP),%RSP
	add $-2712, %RSP
uuid_000000000007d9fb:
	mov -2688(%RBP),%RSP
	add $-2712, %RSP
	mov -2680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da09
	jmp uuid_000000000007da0b
uuid_000000000007da09:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da03
	jmp uuid_000000000007da05
uuid_000000000007da03:
	push %RBP
	jmp uuid_000000000007da00
	jmp uuid_000000000007da02
uuid_000000000007da00:
	push %RBP
	mov -2728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2832(%rbp)
	pushq $uuid_000000000007d9fc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d9fd
	jmp uuid_000000000007d9ff
uuid_000000000007d9fd:
	movb $1, -2800(%rbp)
uuid_000000000007d9ff:
	mov -2824(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007da02:
	mov -2816(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007da05:
	mov -2808(%RBP),%RSP
	add $-2832, %RSP
	mov -2800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da06
	jmp uuid_000000000007da08
uuid_000000000007da06:
	movb $1, -2584(%rbp)
uuid_000000000007da08:
	mov -2720(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007da0b:
	mov -2600(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007da0e:
	mov -2592(%RBP),%RSP
	add $-2832, %RSP
	mov -2584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da27
	jmp uuid_000000000007da29
uuid_000000000007da27:
	push %RBP
	mov -2464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da21
	jmp uuid_000000000007da23
uuid_000000000007da21:
	push %RBP
	jmp uuid_000000000007da1e
	jmp uuid_000000000007da20
uuid_000000000007da1e:
	push %RBP
	mov -2880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da1b
	jmp uuid_000000000007da1d
uuid_000000000007da1b:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da15
	jmp uuid_000000000007da17
uuid_000000000007da15:
	push %RBP
	jmp uuid_000000000007da12
	jmp uuid_000000000007da14
uuid_000000000007da12:
	push %RBP
	mov -3032(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007da0f
	jmp uuid_000000000007da11
uuid_000000000007da0f:
	movb $1, -3104(%rbp)
uuid_000000000007da11:
	mov -3128(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da14:
	mov -3120(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da17:
	mov -3112(%RBP),%RSP
	add $-3136, %RSP
	mov -3104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da18
	jmp uuid_000000000007da1a
uuid_000000000007da18:
	movb $1, -2920(%rbp)
uuid_000000000007da1a:
	mov -3024(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da1d:
	mov -2944(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da20:
	mov -2936(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da23:
	mov -2928(%RBP),%RSP
	add $-3136, %RSP
	mov -2920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da24
	jmp uuid_000000000007da26
uuid_000000000007da24:
	movb $1, -2488(%rbp)
uuid_000000000007da26:
	mov -2840(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da29:
	mov -2504(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da2c:
	mov -2496(%RBP),%RSP
	add $-3136, %RSP
	mov -2488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da2d
	jmp uuid_000000000007da2f
uuid_000000000007da2d:
	movb $1, -2312(%rbp)
uuid_000000000007da2f:
	mov -2408(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da32:
	mov -2328(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007da35:
	mov -2320(%RBP),%RSP
	add $-3136, %RSP
	mov -2312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da64
	jmp uuid_000000000007da66
uuid_000000000007da64:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da5e
	jmp uuid_000000000007da60
uuid_000000000007da5e:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3312(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da4c
	jmp uuid_000000000007da4e
uuid_000000000007da4c:
	push %RBP
	mov -3304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3408(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da39
	jmp uuid_000000000007da3b
uuid_000000000007da39:
	push %RBP
	jmp uuid_000000000007da36
	jmp uuid_000000000007da38
uuid_000000000007da36:
	movb $1, -3416(%rbp)
uuid_000000000007da38:
	mov -3432(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007da3b:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
	mov -3416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da49
	jmp uuid_000000000007da4b
uuid_000000000007da49:
	push %RBP
	mov -3296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da43
	jmp uuid_000000000007da45
uuid_000000000007da43:
	push %RBP
	jmp uuid_000000000007da40
	jmp uuid_000000000007da42
uuid_000000000007da40:
	push %RBP
	mov -3448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3552(%rbp)
	pushq $uuid_000000000007da3c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da3d
	jmp uuid_000000000007da3f
uuid_000000000007da3d:
	movb $1, -3520(%rbp)
uuid_000000000007da3f:
	mov -3544(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007da42:
	mov -3536(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007da45:
	mov -3528(%RBP),%RSP
	add $-3552, %RSP
	mov -3520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da46
	jmp uuid_000000000007da48
uuid_000000000007da46:
	movb $1, -3320(%rbp)
uuid_000000000007da48:
	mov -3440(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007da4b:
	mov -3336(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007da4e:
	mov -3328(%RBP),%RSP
	add $-3552, %RSP
	mov -3320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da5b
	jmp uuid_000000000007da5d
uuid_000000000007da5b:
	push %RBP
	mov -3200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3632(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da55
	jmp uuid_000000000007da57
uuid_000000000007da55:
	push %RBP
	jmp uuid_000000000007da52
	jmp uuid_000000000007da54
uuid_000000000007da52:
	push %RBP
	mov -3568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3672(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da4f
	jmp uuid_000000000007da51
uuid_000000000007da4f:
	movb $1, -3640(%rbp)
uuid_000000000007da51:
	mov -3664(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007da54:
	mov -3656(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007da57:
	mov -3648(%RBP),%RSP
	add $-3672, %RSP
	mov -3640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da58
	jmp uuid_000000000007da5a
uuid_000000000007da58:
	movb $1, -3224(%rbp)
uuid_000000000007da5a:
	mov -3560(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007da5d:
	mov -3240(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007da60:
	mov -3232(%RBP),%RSP
	add $-3672, %RSP
	mov -3224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da61
	jmp uuid_000000000007da63
uuid_000000000007da61:
	movb $1, -2216(%rbp)
uuid_000000000007da63:
	mov -3144(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007da66:
	mov -2232(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007da69:
	mov -2224(%RBP),%RSP
	add $-3672, %RSP
	mov -2216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc8e
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dad2
	jmp uuid_000000000007dad4
uuid_000000000007dad2:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da9e
	jmp uuid_000000000007daa0
uuid_000000000007da9e:
	push %RBP
	mov -3840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da9b
	jmp uuid_000000000007da9d
uuid_000000000007da9b:
	push %RBP
	mov -3832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da95
	jmp uuid_000000000007da97
uuid_000000000007da95:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da92
	jmp uuid_000000000007da94
uuid_000000000007da92:
	push %RBP
	mov -4008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da8c
	jmp uuid_000000000007da8e
uuid_000000000007da8c:
	push %RBP
	jmp uuid_000000000007da89
	jmp uuid_000000000007da8b
uuid_000000000007da89:
	push %RBP
	mov -4168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4304(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da86
	jmp uuid_000000000007da88
uuid_000000000007da86:
	push %RBP
	mov -4160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da80
	jmp uuid_000000000007da82
uuid_000000000007da80:
	push %RBP
	jmp uuid_000000000007da7d
	jmp uuid_000000000007da7f
uuid_000000000007da7d:
	push %RBP
	mov -4320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007da7a
	jmp uuid_000000000007da7c
uuid_000000000007da7a:
	movb $1, -4392(%rbp)
uuid_000000000007da7c:
	mov -4416(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da7f:
	mov -4408(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da82:
	mov -4400(%RBP),%RSP
	add $-4424, %RSP
	mov -4392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da83
	jmp uuid_000000000007da85
uuid_000000000007da83:
	movb $1, -4208(%rbp)
uuid_000000000007da85:
	mov -4312(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da88:
	mov -4232(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da8b:
	mov -4224(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da8e:
	mov -4216(%RBP),%RSP
	add $-4424, %RSP
	mov -4208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da8f
	jmp uuid_000000000007da91
uuid_000000000007da8f:
	movb $1, -4032(%rbp)
uuid_000000000007da91:
	mov -4128(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da94:
	mov -4048(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da97:
	mov -4040(%RBP),%RSP
	add $-4424, %RSP
	mov -4032(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da98
	jmp uuid_000000000007da9a
uuid_000000000007da98:
	movb $1, -3856(%rbp)
uuid_000000000007da9a:
	mov -3952(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007da9d:
	mov -3872(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007daa0:
	mov -3864(%RBP),%RSP
	add $-4424, %RSP
	mov -3856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dacf
	jmp uuid_000000000007dad1
uuid_000000000007dacf:
	push %RBP
	mov -3736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dac9
	jmp uuid_000000000007dacb
uuid_000000000007dac9:
	push %RBP
	mov -4496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dab7
	jmp uuid_000000000007dab9
uuid_000000000007dab7:
	push %RBP
	mov -4592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4696(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daa4
	jmp uuid_000000000007daa6
uuid_000000000007daa4:
	push %RBP
	jmp uuid_000000000007daa1
	jmp uuid_000000000007daa3
uuid_000000000007daa1:
	movb $1, -4704(%rbp)
uuid_000000000007daa3:
	mov -4720(%RBP),%RSP
	add $-4720, %RSP
uuid_000000000007daa6:
	mov -4712(%RBP),%RSP
	add $-4720, %RSP
	mov -4704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dab4
	jmp uuid_000000000007dab6
uuid_000000000007dab4:
	push %RBP
	mov -4584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4800(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daae
	jmp uuid_000000000007dab0
uuid_000000000007daae:
	push %RBP
	jmp uuid_000000000007daab
	jmp uuid_000000000007daad
uuid_000000000007daab:
	push %RBP
	mov -4736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4840(%rbp)
	pushq $uuid_000000000007daa7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007daa8
	jmp uuid_000000000007daaa
uuid_000000000007daa8:
	movb $1, -4808(%rbp)
uuid_000000000007daaa:
	mov -4832(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007daad:
	mov -4824(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007dab0:
	mov -4816(%RBP),%RSP
	add $-4840, %RSP
	mov -4808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dab1
	jmp uuid_000000000007dab3
uuid_000000000007dab1:
	movb $1, -4608(%rbp)
uuid_000000000007dab3:
	mov -4728(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007dab6:
	mov -4624(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007dab9:
	mov -4616(%RBP),%RSP
	add $-4840, %RSP
	mov -4608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dac6
	jmp uuid_000000000007dac8
uuid_000000000007dac6:
	push %RBP
	mov -4488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4920(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dac0
	jmp uuid_000000000007dac2
uuid_000000000007dac0:
	push %RBP
	jmp uuid_000000000007dabd
	jmp uuid_000000000007dabf
uuid_000000000007dabd:
	push %RBP
	mov -4856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007daba
	jmp uuid_000000000007dabc
uuid_000000000007daba:
	movb $1, -4928(%rbp)
uuid_000000000007dabc:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007dabf:
	mov -4944(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007dac2:
	mov -4936(%RBP),%RSP
	add $-4960, %RSP
	mov -4928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dac3
	jmp uuid_000000000007dac5
uuid_000000000007dac3:
	movb $1, -4512(%rbp)
uuid_000000000007dac5:
	mov -4848(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007dac8:
	mov -4528(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007dacb:
	mov -4520(%RBP),%RSP
	add $-4960, %RSP
	mov -4512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dacc
	jmp uuid_000000000007dace
uuid_000000000007dacc:
	movb $1, -3760(%rbp)
uuid_000000000007dace:
	mov -4432(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007dad1:
	mov -3776(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007dad4:
	mov -3768(%RBP),%RSP
	add $-4960, %RSP
	mov -3760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc8b
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db01
	jmp uuid_000000000007db03
uuid_000000000007db01:
	push %RBP
	mov -5032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5136(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daee
	jmp uuid_000000000007daf0
uuid_000000000007daee:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007daeb
	jmp uuid_000000000007daed
uuid_000000000007daeb:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dae8
	jmp uuid_000000000007daea
uuid_000000000007dae8:
	movb $1, -5144(%rbp)
uuid_000000000007daea:
	mov -5240(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007daed:
	mov -5160(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007daf0:
	mov -5152(%RBP),%RSP
	add $-5312, %RSP
	mov -5144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dafe
	jmp uuid_000000000007db00
uuid_000000000007dafe:
	push %RBP
	mov -5024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daf8
	jmp uuid_000000000007dafa
uuid_000000000007daf8:
	push %RBP
	jmp uuid_000000000007daf5
	jmp uuid_000000000007daf7
uuid_000000000007daf5:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5432(%rbp)
	pushq $uuid_000000000007daf1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007daf2
	jmp uuid_000000000007daf4
uuid_000000000007daf2:
	movb $1, -5400(%rbp)
uuid_000000000007daf4:
	mov -5424(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007daf7:
	mov -5416(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007dafa:
	mov -5408(%RBP),%RSP
	add $-5432, %RSP
	mov -5400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dafb
	jmp uuid_000000000007dafd
uuid_000000000007dafb:
	movb $1, -5048(%rbp)
uuid_000000000007dafd:
	mov -5320(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007db00:
	mov -5064(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007db03:
	mov -5056(%RBP),%RSP
	add $-5432, %RSP
	mov -5048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc88
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db17
	jmp uuid_000000000007db19
uuid_000000000007db17:
	push %RBP
	jmp uuid_000000000007db14
	jmp uuid_000000000007db16
uuid_000000000007db14:
	push %RBP
	mov -5496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db0e
	jmp uuid_000000000007db10
uuid_000000000007db0e:
	push %RBP
	jmp uuid_000000000007db0b
	jmp uuid_000000000007db0d
uuid_000000000007db0b:
	push %RBP
	mov -5552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5656(%rbp)
	pushq $uuid_000000000007db07
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db08
	jmp uuid_000000000007db0a
uuid_000000000007db08:
	movb $1, -5624(%rbp)
uuid_000000000007db0a:
	mov -5648(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007db0d:
	mov -5640(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007db10:
	mov -5632(%RBP),%RSP
	add $-5656, %RSP
	mov -5624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db11
	jmp uuid_000000000007db13
uuid_000000000007db11:
	movb $1, -5520(%rbp)
uuid_000000000007db13:
	mov -5544(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007db16:
	mov -5536(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007db19:
	mov -5528(%RBP),%RSP
	add $-5656, %RSP
	mov -5520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc85
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db2a
	jmp uuid_000000000007db2c
uuid_000000000007db2a:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db27
	jmp uuid_000000000007db29
uuid_000000000007db27:
	push %RBP
	mov -5720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5912(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db21
	jmp uuid_000000000007db23
uuid_000000000007db21:
	push %RBP
	jmp uuid_000000000007db1e
	jmp uuid_000000000007db20
uuid_000000000007db1e:
	push %RBP
	mov -5848(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq $uuid_000000000007db1a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db1b
	jmp uuid_000000000007db1d
uuid_000000000007db1b:
	movb $1, -5920(%rbp)
uuid_000000000007db1d:
	mov -5944(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007db20:
	mov -5936(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007db23:
	mov -5928(%RBP),%RSP
	add $-5952, %RSP
	mov -5920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db24
	jmp uuid_000000000007db26
uuid_000000000007db24:
	movb $1, -5744(%rbp)
uuid_000000000007db26:
	mov -5840(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007db29:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007db2c:
	mov -5752(%RBP),%RSP
	add $-5952, %RSP
	mov -5744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc82
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db46
	jmp uuid_000000000007db48
uuid_000000000007db46:
	push %RBP
	mov -6024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db33
	jmp uuid_000000000007db35
uuid_000000000007db33:
	push %RBP
	mov -6120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db30
	jmp uuid_000000000007db32
uuid_000000000007db30:
	push %RBP
	mov -6112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db2d
	jmp uuid_000000000007db2f
uuid_000000000007db2d:
	movb $1, -6136(%rbp)
uuid_000000000007db2f:
	mov -6232(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007db32:
	mov -6152(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007db35:
	mov -6144(%RBP),%RSP
	add $-6304, %RSP
	mov -6136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db43
	jmp uuid_000000000007db45
uuid_000000000007db43:
	push %RBP
	mov -6016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db3d
	jmp uuid_000000000007db3f
uuid_000000000007db3d:
	push %RBP
	jmp uuid_000000000007db3a
	jmp uuid_000000000007db3c
uuid_000000000007db3a:
	push %RBP
	mov -6320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6424(%rbp)
	pushq $uuid_000000000007db36
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db37
	jmp uuid_000000000007db39
uuid_000000000007db37:
	movb $1, -6392(%rbp)
uuid_000000000007db39:
	mov -6416(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007db3c:
	mov -6408(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007db3f:
	mov -6400(%RBP),%RSP
	add $-6424, %RSP
	mov -6392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db40
	jmp uuid_000000000007db42
uuid_000000000007db40:
	movb $1, -6040(%rbp)
uuid_000000000007db42:
	mov -6312(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007db45:
	mov -6056(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007db48:
	mov -6048(%RBP),%RSP
	add $-6424, %RSP
	mov -6040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc7f
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db64
	jmp uuid_000000000007db66
uuid_000000000007db64:
	push %RBP
	mov -6496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db52
	jmp uuid_000000000007db54
uuid_000000000007db52:
	push %RBP
	mov -6592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db4f
	jmp uuid_000000000007db51
uuid_000000000007db4f:
	push %RBP
	mov -6584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db4c
	jmp uuid_000000000007db4e
uuid_000000000007db4c:
	movb $1, -6608(%rbp)
uuid_000000000007db4e:
	mov -6704(%RBP),%RSP
	add $-6776, %RSP
uuid_000000000007db51:
	mov -6624(%RBP),%RSP
	add $-6776, %RSP
uuid_000000000007db54:
	mov -6616(%RBP),%RSP
	add $-6776, %RSP
	mov -6608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db61
	jmp uuid_000000000007db63
uuid_000000000007db61:
	push %RBP
	mov -6488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6856(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db5b
	jmp uuid_000000000007db5d
uuid_000000000007db5b:
	push %RBP
	jmp uuid_000000000007db58
	jmp uuid_000000000007db5a
uuid_000000000007db58:
	push %RBP
	mov -6792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6896(%rbp)
	pushq $uuid_000000000007a63f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db55
	jmp uuid_000000000007db57
uuid_000000000007db55:
	movb $1, -6864(%rbp)
uuid_000000000007db57:
	mov -6888(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007db5a:
	mov -6880(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007db5d:
	mov -6872(%RBP),%RSP
	add $-6896, %RSP
	mov -6864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db5e
	jmp uuid_000000000007db60
uuid_000000000007db5e:
	movb $1, -6512(%rbp)
uuid_000000000007db60:
	mov -6784(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007db63:
	mov -6528(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007db66:
	mov -6520(%RBP),%RSP
	add $-6896, %RSP
	mov -6512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc7c
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6976(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db83
	jmp uuid_000000000007db85
uuid_000000000007db83:
	push %RBP
	mov -6968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db70
	jmp uuid_000000000007db72
uuid_000000000007db70:
	push %RBP
	mov -7064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db6d
	jmp uuid_000000000007db6f
uuid_000000000007db6d:
	push %RBP
	mov -7056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db6a
	jmp uuid_000000000007db6c
uuid_000000000007db6a:
	movb $1, -7080(%rbp)
uuid_000000000007db6c:
	mov -7176(%RBP),%RSP
	add $-7248, %RSP
uuid_000000000007db6f:
	mov -7096(%RBP),%RSP
	add $-7248, %RSP
uuid_000000000007db72:
	mov -7088(%RBP),%RSP
	add $-7248, %RSP
	mov -7080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db80
	jmp uuid_000000000007db82
uuid_000000000007db80:
	push %RBP
	mov -6960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db7a
	jmp uuid_000000000007db7c
uuid_000000000007db7a:
	push %RBP
	jmp uuid_000000000007db77
	jmp uuid_000000000007db79
uuid_000000000007db77:
	push %RBP
	mov -7264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7368(%rbp)
	pushq $uuid_000000000007db73
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db74
	jmp uuid_000000000007db76
uuid_000000000007db74:
	movb $1, -7336(%rbp)
uuid_000000000007db76:
	mov -7360(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007db79:
	mov -7352(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007db7c:
	mov -7344(%RBP),%RSP
	add $-7368, %RSP
	mov -7336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db7d
	jmp uuid_000000000007db7f
uuid_000000000007db7d:
	movb $1, -6984(%rbp)
uuid_000000000007db7f:
	mov -7256(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007db82:
	mov -7000(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007db85:
	mov -6992(%RBP),%RSP
	add $-7368, %RSP
	mov -6984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc79
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db9f
	jmp uuid_000000000007dba1
uuid_000000000007db9f:
	push %RBP
	mov -7440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db8c
	jmp uuid_000000000007db8e
uuid_000000000007db8c:
	push %RBP
	mov -7536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db89
	jmp uuid_000000000007db8b
uuid_000000000007db89:
	push %RBP
	mov -7528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db86
	jmp uuid_000000000007db88
uuid_000000000007db86:
	movb $1, -7552(%rbp)
uuid_000000000007db88:
	mov -7648(%RBP),%RSP
	add $-7720, %RSP
uuid_000000000007db8b:
	mov -7568(%RBP),%RSP
	add $-7720, %RSP
uuid_000000000007db8e:
	mov -7560(%RBP),%RSP
	add $-7720, %RSP
	mov -7552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db9c
	jmp uuid_000000000007db9e
uuid_000000000007db9c:
	push %RBP
	mov -7432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db96
	jmp uuid_000000000007db98
uuid_000000000007db96:
	push %RBP
	jmp uuid_000000000007db93
	jmp uuid_000000000007db95
uuid_000000000007db93:
	push %RBP
	mov -7736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7840(%rbp)
	pushq $uuid_000000000007db8f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db90
	jmp uuid_000000000007db92
uuid_000000000007db90:
	movb $1, -7808(%rbp)
uuid_000000000007db92:
	mov -7832(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007db95:
	mov -7824(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007db98:
	mov -7816(%RBP),%RSP
	add $-7840, %RSP
	mov -7808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db99
	jmp uuid_000000000007db9b
uuid_000000000007db99:
	movb $1, -7456(%rbp)
uuid_000000000007db9b:
	mov -7728(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007db9e:
	mov -7472(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007dba1:
	mov -7464(%RBP),%RSP
	add $-7840, %RSP
	mov -7456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc76
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbbb
	jmp uuid_000000000007dbbd
uuid_000000000007dbbb:
	push %RBP
	mov -7912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dba8
	jmp uuid_000000000007dbaa
uuid_000000000007dba8:
	push %RBP
	mov -8008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dba5
	jmp uuid_000000000007dba7
uuid_000000000007dba5:
	push %RBP
	mov -8000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dba2
	jmp uuid_000000000007dba4
uuid_000000000007dba2:
	movb $1, -8024(%rbp)
uuid_000000000007dba4:
	mov -8120(%RBP),%RSP
	add $-8192, %RSP
uuid_000000000007dba7:
	mov -8040(%RBP),%RSP
	add $-8192, %RSP
uuid_000000000007dbaa:
	mov -8032(%RBP),%RSP
	add $-8192, %RSP
	mov -8024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbb8
	jmp uuid_000000000007dbba
uuid_000000000007dbb8:
	push %RBP
	mov -7904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbb2
	jmp uuid_000000000007dbb4
uuid_000000000007dbb2:
	push %RBP
	jmp uuid_000000000007dbaf
	jmp uuid_000000000007dbb1
uuid_000000000007dbaf:
	push %RBP
	mov -8208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8312(%rbp)
	pushq $uuid_000000000007dbab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbac
	jmp uuid_000000000007dbae
uuid_000000000007dbac:
	movb $1, -8280(%rbp)
uuid_000000000007dbae:
	mov -8304(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007dbb1:
	mov -8296(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007dbb4:
	mov -8288(%RBP),%RSP
	add $-8312, %RSP
	mov -8280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbb5
	jmp uuid_000000000007dbb7
uuid_000000000007dbb5:
	movb $1, -7928(%rbp)
uuid_000000000007dbb7:
	mov -8200(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007dbba:
	mov -7944(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007dbbd:
	mov -7936(%RBP),%RSP
	add $-8312, %RSP
	mov -7928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc73
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbd6
	jmp uuid_000000000007dbd8
uuid_000000000007dbd6:
	push %RBP
	mov -8384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbc4
	jmp uuid_000000000007dbc6
uuid_000000000007dbc4:
	push %RBP
	mov -8480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dbc1
	jmp uuid_000000000007dbc3
uuid_000000000007dbc1:
	push %RBP
	mov -8472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dbbe
	jmp uuid_000000000007dbc0
uuid_000000000007dbbe:
	movb $1, -8496(%rbp)
uuid_000000000007dbc0:
	mov -8592(%RBP),%RSP
	add $-8664, %RSP
uuid_000000000007dbc3:
	mov -8512(%RBP),%RSP
	add $-8664, %RSP
uuid_000000000007dbc6:
	mov -8504(%RBP),%RSP
	add $-8664, %RSP
	mov -8496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbd3
	jmp uuid_000000000007dbd5
uuid_000000000007dbd3:
	push %RBP
	mov -8376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8744(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbcd
	jmp uuid_000000000007dbcf
uuid_000000000007dbcd:
	push %RBP
	jmp uuid_000000000007dbca
	jmp uuid_000000000007dbcc
uuid_000000000007dbca:
	push %RBP
	mov -8680(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8784(%rbp)
	pushq $uuid_000000000007a618
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbc7
	jmp uuid_000000000007dbc9
uuid_000000000007dbc7:
	movb $1, -8752(%rbp)
uuid_000000000007dbc9:
	mov -8776(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007dbcc:
	mov -8768(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007dbcf:
	mov -8760(%RBP),%RSP
	add $-8784, %RSP
	mov -8752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbd0
	jmp uuid_000000000007dbd2
uuid_000000000007dbd0:
	movb $1, -8400(%rbp)
uuid_000000000007dbd2:
	mov -8672(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007dbd5:
	mov -8416(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007dbd8:
	mov -8408(%RBP),%RSP
	add $-8784, %RSP
	mov -8400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc70
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8864(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbf1
	jmp uuid_000000000007dbf3
uuid_000000000007dbf1:
	push %RBP
	mov -8856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbdf
	jmp uuid_000000000007dbe1
uuid_000000000007dbdf:
	push %RBP
	mov -8952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dbdc
	jmp uuid_000000000007dbde
uuid_000000000007dbdc:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dbd9
	jmp uuid_000000000007dbdb
uuid_000000000007dbd9:
	movb $1, -8968(%rbp)
uuid_000000000007dbdb:
	mov -9064(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007dbde:
	mov -8984(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007dbe1:
	mov -8976(%RBP),%RSP
	add $-9136, %RSP
	mov -8968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbee
	jmp uuid_000000000007dbf0
uuid_000000000007dbee:
	push %RBP
	mov -8848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9216(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbe8
	jmp uuid_000000000007dbea
uuid_000000000007dbe8:
	push %RBP
	jmp uuid_000000000007dbe5
	jmp uuid_000000000007dbe7
uuid_000000000007dbe5:
	push %RBP
	mov -9152(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9256(%rbp)
	pushq $uuid_000000000007a2ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbe2
	jmp uuid_000000000007dbe4
uuid_000000000007dbe2:
	movb $1, -9224(%rbp)
uuid_000000000007dbe4:
	mov -9248(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007dbe7:
	mov -9240(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007dbea:
	mov -9232(%RBP),%RSP
	add $-9256, %RSP
	mov -9224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbeb
	jmp uuid_000000000007dbed
uuid_000000000007dbeb:
	movb $1, -8872(%rbp)
uuid_000000000007dbed:
	mov -9144(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007dbf0:
	mov -8888(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007dbf3:
	mov -8880(%RBP),%RSP
	add $-9256, %RSP
	mov -8872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc6d
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc15
	jmp uuid_000000000007dc17
uuid_000000000007dc15:
	push %RBP
	mov -9328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc12
	jmp uuid_000000000007dc14
uuid_000000000007dc12:
	push %RBP
	mov -9320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc0c
	jmp uuid_000000000007dc0e
uuid_000000000007dc0c:
	push %RBP
	mov -9504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc09
	jmp uuid_000000000007dc0b
uuid_000000000007dc09:
	push %RBP
	mov -9496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc03
	jmp uuid_000000000007dc05
uuid_000000000007dc03:
	push %RBP
	mov -9680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc00
	jmp uuid_000000000007dc02
uuid_000000000007dc00:
	push %RBP
	mov -9672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbfa
	jmp uuid_000000000007dbfc
uuid_000000000007dbfa:
	push %RBP
	jmp uuid_000000000007dbf7
	jmp uuid_000000000007dbf9
uuid_000000000007dbf7:
	push %RBP
	mov -9800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9904(%rbp)
	pushq $uuid_000000000007a7a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbf4
	jmp uuid_000000000007dbf6
uuid_000000000007dbf4:
	movb $1, -9872(%rbp)
uuid_000000000007dbf6:
	mov -9896(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dbf9:
	mov -9888(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dbfc:
	mov -9880(%RBP),%RSP
	add $-9904, %RSP
	mov -9872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbfd
	jmp uuid_000000000007dbff
uuid_000000000007dbfd:
	movb $1, -9696(%rbp)
uuid_000000000007dbff:
	mov -9792(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dc02:
	mov -9712(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dc05:
	mov -9704(%RBP),%RSP
	add $-9904, %RSP
	mov -9696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc06
	jmp uuid_000000000007dc08
uuid_000000000007dc06:
	movb $1, -9520(%rbp)
uuid_000000000007dc08:
	mov -9616(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dc0b:
	mov -9536(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dc0e:
	mov -9528(%RBP),%RSP
	add $-9904, %RSP
	mov -9520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc0f
	jmp uuid_000000000007dc11
uuid_000000000007dc0f:
	movb $1, -9344(%rbp)
uuid_000000000007dc11:
	mov -9440(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dc14:
	mov -9360(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007dc17:
	mov -9352(%RBP),%RSP
	add $-9904, %RSP
	mov -9344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc6a
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc40
	jmp uuid_000000000007dc42
uuid_000000000007dc40:
	push %RBP
	mov -9976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc3d
	jmp uuid_000000000007dc3f
uuid_000000000007dc3d:
	push %RBP
	mov -9968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc37
	jmp uuid_000000000007dc39
uuid_000000000007dc37:
	push %RBP
	pushq -10136(%RBP)
	pushq -10144(%RBP)
	pushq -10152(%RBP)
	jmp uuid_000000000007dc34
	jmp uuid_000000000007dc36
uuid_000000000007dc34:
	push %RBP
	mov -10128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -10288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc31
	jmp uuid_000000000007dc33
uuid_000000000007dc31:
	push %RBP
	mov -10120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc2b
	jmp uuid_000000000007dc2d
uuid_000000000007dc2b:
	push %RBP
	jmp uuid_000000000007dc28
	jmp uuid_000000000007dc2a
uuid_000000000007dc28:
	push %RBP
	mov -10304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dc25
	jmp uuid_000000000007dc27
uuid_000000000007dc25:
	movb $1, -10376(%rbp)
uuid_000000000007dc27:
	mov -10400(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc2a:
	mov -10392(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc2d:
	mov -10384(%RBP),%RSP
	add $-10408, %RSP
	mov -10376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc2e
	jmp uuid_000000000007dc30
uuid_000000000007dc2e:
	movb $1, -10168(%rbp)
uuid_000000000007dc30:
	mov -10296(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc33:
	mov -10216(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc36:
	mov -10184(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc39:
	mov -10176(%RBP),%RSP
	add $-10408, %RSP
	mov -10168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc3a
	jmp uuid_000000000007dc3c
uuid_000000000007dc3a:
	movb $1, -9992(%rbp)
uuid_000000000007dc3c:
	mov -10088(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc3f:
	mov -10008(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007dc42:
	mov -10000(%RBP),%RSP
	add $-10408, %RSP
	mov -9992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc67
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -10488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc49
	jmp uuid_000000000007dc4b
uuid_000000000007dc49:
	push %RBP
	mov -10480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc46
	jmp uuid_000000000007dc48
uuid_000000000007dc46:
	push %RBP
	mov -10472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc43
	jmp uuid_000000000007dc45
uuid_000000000007dc43:
	movb $1, -10496(%rbp)
uuid_000000000007dc45:
	mov -10592(%RBP),%RSP
	add $-10664, %RSP
uuid_000000000007dc48:
	mov -10512(%RBP),%RSP
	add $-10664, %RSP
uuid_000000000007dc4b:
	mov -10504(%RBP),%RSP
	add $-10664, %RSP
	mov -10496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc64
	push %RBP
	jmp uuid_000000000007dc61
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dc60
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dc63
uuid_000000000007dc61:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dc5f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007dc63:
	mov -10672(%RBP),%RSP
	add $-10672, %RSP
	jmp uuid_000000000007dc66
uuid_000000000007dc64:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc5c
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10680(%RBP)
	pushq -10688(%RBP)
	pushq -10696(%RBP)
	pushq -10704(%RBP)
	pushq -10712(%RBP)
	pushq -10720(%RBP)
	pushq -10728(%RBP)
	pushq -10736(%RBP)
	pushq -10744(%RBP)
	pushq -10752(%RBP)
	pushq -10760(%RBP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
	pushq -10792(%RBP)
	pushq -10800(%RBP)
	pushq -10808(%RBP)
	pushq -10816(%RBP)
	pushq -10824(%RBP)
	pushq -10832(%RBP)
	pushq -10840(%RBP)
	pushq -10848(%RBP)
	pushq -10856(%RBP)
	pushq -10864(%RBP)
	pushq -10872(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10912(%RBP)
	pushq -10920(%RBP)
	pushq -10928(%RBP)
	pushq -10936(%RBP)
	pushq -10944(%RBP)
	pushq -10952(%RBP)
	pushq -10960(%RBP)
	pushq -10968(%RBP)
	pushq -10976(%RBP)
	pushq -10984(%RBP)
	pushq -10992(%RBP)
	pushq -11000(%RBP)
	pushq -11008(%RBP)
	pushq -11016(%RBP)
	pushq -11024(%RBP)
	pushq -11032(%RBP)
	pushq -11040(%RBP)
	pushq -11048(%RBP)
	pushq -11056(%RBP)
	pushq -11064(%RBP)
	pushq -11072(%RBP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	pushq -11104(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -10880(%RBP)
	pushq -10888(%RBP)
	pushq -10896(%RBP)
	pushq -11112(%RBP)
	pushq -11120(%RBP)
	pushq -11128(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -11144(%rbp)
	pushq -11152(%rbp)
	pushq -11160(%rbp)
	pushq -11168(%rbp)
	pushq -11176(%rbp)
	pushq -11184(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007dc5e
uuid_000000000007dc5c:
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	push %RBP
	pushq -10680(%rbp)
	pushq -10688(%rbp)
	pushq -10696(%rbp)
	pushq -10704(%rbp)
	pushq -10712(%rbp)
	pushq -10720(%rbp)
	pushq -10728(%rbp)
	pushq -10736(%rbp)
	pushq -10744(%rbp)
	pushq $0
	push %RBP
	mov -10824(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc52
	jmp uuid_000000000007dc54
uuid_000000000007dc52:
	push %RBP
	jmp uuid_000000000007dc4f
	jmp uuid_000000000007dc51
uuid_000000000007dc4f:
	push %RBP
	mov -10760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dc4c
	jmp uuid_000000000007dc4e
uuid_000000000007dc4c:
	movb $1, -10832(%rbp)
uuid_000000000007dc4e:
	mov -10856(%RBP),%RSP
	add $-10864, %RSP
uuid_000000000007dc51:
	mov -10848(%RBP),%RSP
	add $-10864, %RSP
uuid_000000000007dc54:
	mov -10840(%RBP),%RSP
	add $-10864, %RSP
	mov -10832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc59
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dc58
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dc5b
uuid_000000000007dc59:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10864(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc55
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10864(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10880(%rbp)
	pushq -10888(%rbp)
	pushq -10896(%rbp)
	pushq -10904(%rbp)
	pushq -10912(%rbp)
	pushq -10920(%rbp)
	pushq -10928(%rbp)
	pushq -10936(%rbp)
	pushq -10944(%rbp)
	pushq -10952(%rbp)
	pushq -10960(%rbp)
	pushq -10968(%rbp)
	pushq -10976(%rbp)
	pushq -10984(%rbp)
	pushq -10992(%rbp)
	pushq -11000(%rbp)
	pushq -11008(%rbp)
	pushq -11016(%rbp)
	pushq -11024(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007dc57
uuid_000000000007dc55:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -10864(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc57:
	mov -10872(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007dc5b:
	mov -10752(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007dc5e:
	mov -10672(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007dc66:
	mov -10416(%RBP),%RSP
	add $-11104, %RSP
	jmp uuid_000000000007dc69
uuid_000000000007dc67:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -208(%rbp)
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq $uuid_000000000007c715
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10408(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dc69:
	mov -9912(%RBP),%RSP
	add $-10816, %RSP
	jmp uuid_000000000007dc6c
uuid_000000000007dc6a:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9720(%rbp)
	pushq -9728(%rbp)
	pushq -9736(%rbp)
	pushq -9744(%rbp)
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10112(%RBP)
	pushq -10120(%RBP)
	pushq -10128(%RBP)
	pushq -10144(%rbp)
	pushq -10152(%rbp)
	pushq -10160(%rbp)
	push %RBP
	pushq -10168(%rbp)
	pushq -10176(%rbp)
	pushq -10184(%rbp)
	pushq $0
	push %RBP
	mov -10216(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc1b
	jmp uuid_000000000007dc1d
uuid_000000000007dc1b:
	push %RBP
	mov -10208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10248(%rbp)
	pushq $uuid_000000000007a322
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc18
	jmp uuid_000000000007dc1a
uuid_000000000007dc18:
	movb $1, -10224(%rbp)
uuid_000000000007dc1a:
	mov -10240(%RBP),%RSP
	add $-10248, %RSP
uuid_000000000007dc1d:
	mov -10232(%RBP),%RSP
	add $-10248, %RSP
	mov -10224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc22
	push %RBP
	jmp uuid_000000000007dc1f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dc1e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dc21
uuid_000000000007dc1f:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9368(%rbp)
	pushq -9376(%rbp)
	pushq -9384(%rbp)
	pushq -9392(%rbp)
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	pushq -10480(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc21:
	mov -10256(%RBP),%RSP
	add $-10488, %RSP
	jmp uuid_000000000007dc24
uuid_000000000007dc22:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9544(%rbp)
	pushq -9552(%rbp)
	pushq -9560(%rbp)
	pushq -9568(%rbp)
	pushq -9576(%rbp)
	pushq -9584(%rbp)
	pushq -9592(%rbp)
	pushq -9600(%rbp)
	pushq -9608(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10456(%RBP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc24:
	mov -10192(%RBP),%RSP
	add $-10480, %RSP
uuid_000000000007dc6c:
	mov -9264(%RBP),%RSP
	add $-10480, %RSP
	jmp uuid_000000000007dc6f
uuid_000000000007dc6d:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9072(%rbp)
	pushq -9080(%rbp)
	pushq -9088(%rbp)
	pushq -9096(%rbp)
	pushq -9104(%rbp)
	pushq -9112(%rbp)
	pushq -9120(%rbp)
	pushq -9128(%rbp)
	pushq -9136(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9464(%RBP)
	pushq -9472(%RBP)
	pushq -9480(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8992(%rbp)
	pushq -9000(%rbp)
	pushq -9008(%rbp)
	pushq -9016(%rbp)
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	pushq -9048(%rbp)
	pushq -9056(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9720(%RBP)
	pushq -9728(%RBP)
	pushq -9736(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9496(%rbp)
	pushq -9504(%rbp)
	pushq -9512(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc6f:
	mov -8792(%RBP),%RSP
	add $-9784, %RSP
	jmp uuid_000000000007dc72
uuid_000000000007dc70:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -8648(%rbp)
	pushq -8656(%rbp)
	pushq -8664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8992(%RBP)
	pushq -9000(%RBP)
	pushq -9008(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8520(%rbp)
	pushq -8528(%rbp)
	pushq -8536(%rbp)
	pushq -8544(%rbp)
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	pushq -8576(%rbp)
	pushq -8584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9280(%rbp)
	pushq -9288(%rbp)
	pushq -9296(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9304(%rbp)
	pushq -9312(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc72:
	mov -8320(%RBP),%RSP
	add $-9312, %RSP
	jmp uuid_000000000007dc75
uuid_000000000007dc73:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8128(%rbp)
	pushq -8136(%rbp)
	pushq -8144(%rbp)
	pushq -8152(%rbp)
	pushq -8160(%rbp)
	pushq -8168(%rbp)
	pushq -8176(%rbp)
	pushq -8184(%rbp)
	pushq -8192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8048(%rbp)
	pushq -8056(%rbp)
	pushq -8064(%rbp)
	pushq -8072(%rbp)
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	pushq -8104(%rbp)
	pushq -8112(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8776(%RBP)
	pushq -8784(%RBP)
	pushq -8792(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8808(%rbp)
	pushq -8816(%rbp)
	pushq -8824(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8832(%rbp)
	pushq -8840(%rbp)
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc75:
	mov -7848(%RBP),%RSP
	add $-8840, %RSP
	jmp uuid_000000000007dc78
uuid_000000000007dc76:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7656(%rbp)
	pushq -7664(%rbp)
	pushq -7672(%rbp)
	pushq -7680(%rbp)
	pushq -7688(%rbp)
	pushq -7696(%rbp)
	pushq -7704(%rbp)
	pushq -7712(%rbp)
	pushq -7720(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8048(%RBP)
	pushq -8056(%RBP)
	pushq -8064(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7576(%rbp)
	pushq -7584(%rbp)
	pushq -7592(%rbp)
	pushq -7600(%rbp)
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	pushq -7632(%rbp)
	pushq -7640(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8304(%RBP)
	pushq -8312(%RBP)
	pushq -8320(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8336(%rbp)
	pushq -8344(%rbp)
	pushq -8352(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function * : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8360(%rbp)
	pushq -8368(%rbp)
	mov %RBX, %RBP
	call _ML__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc78:
	mov -7376(%RBP),%RSP
	add $-8368, %RSP
	jmp uuid_000000000007dc7b
uuid_000000000007dc79:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7184(%rbp)
	pushq -7192(%rbp)
	pushq -7200(%rbp)
	pushq -7208(%rbp)
	pushq -7216(%rbp)
	pushq -7224(%rbp)
	pushq -7232(%rbp)
	pushq -7240(%rbp)
	pushq -7248(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7576(%RBP)
	pushq -7584(%RBP)
	pushq -7592(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7104(%rbp)
	pushq -7112(%rbp)
	pushq -7120(%rbp)
	pushq -7128(%rbp)
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	pushq -7160(%rbp)
	pushq -7168(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7864(%rbp)
	pushq -7872(%rbp)
	pushq -7880(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7888(%rbp)
	pushq -7896(%rbp)
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc7b:
	mov -6904(%RBP),%RSP
	add $-7896, %RSP
	jmp uuid_000000000007dc7e
uuid_000000000007dc7c:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	pushq -6744(%rbp)
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6632(%rbp)
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7360(%RBP)
	pushq -7368(%RBP)
	pushq -7376(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7392(%rbp)
	pushq -7400(%rbp)
	pushq -7408(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7416(%rbp)
	pushq -7424(%rbp)
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db67
	pushq $0
	pushq $uuid_000000000007a2e9
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007db69
uuid_000000000007db67:
	pushq $0
	pushq $uuid_000000000007a322
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007db69:
	mov -7432(%RBP),%RSP
	add $-7432, %RSP
uuid_000000000007dc7e:
	mov -6432(%RBP),%RSP
	add $-7432, %RSP
	jmp uuid_000000000007dc81
uuid_000000000007dc7f:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	pushq -6288(%rbp)
	pushq -6296(%rbp)
	pushq -6304(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6632(%RBP)
	pushq -6640(%RBP)
	pushq -6648(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6888(%RBP)
	pushq -6896(%RBP)
	pushq -6904(%RBP)
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6920(%rbp)
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db49
	pushq $0
	pushq $uuid_000000000007a2e9
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007db4b
uuid_000000000007db49:
	pushq $0
	pushq $uuid_000000000007a322
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007db4b:
	mov -6944(%RBP),%RSP
	add $-6944, %RSP
uuid_000000000007dc81:
	mov -5960(%RBP),%RSP
	add $-6944, %RSP
	jmp uuid_000000000007dc84
uuid_000000000007dc82:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5768(%rbp)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6160(%RBP)
	pushq -6168(%RBP)
	pushq -6176(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function align : Arrow<I64,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6216(%rbp)
	mov %RBX, %RBP
	call align_CL_ArrowI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc84:
	mov -5664(%RBP),%RSP
	add $-6216, %RSP
	jmp uuid_000000000007dc87
uuid_000000000007dc85:
	pushq $0
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc87:
	mov -5440(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_000000000007dc8a
uuid_000000000007dc88:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5640(%RBP)
	pushq -5648(%RBP)
	pushq -5656(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007db04:
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db05
	jmp uuid_000000000007db06
uuid_000000000007db05:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -5960(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007db04
uuid_000000000007db06:
uuid_000000000007dc8a:
	mov -4968(%RBP),%RSP
	add $-5960, %RSP
	jmp uuid_000000000007dc8d
uuid_000000000007dc8b:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
uuid_000000000007dae5:
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dae6
	jmp uuid_000000000007dae7
uuid_000000000007dae6:
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	push %RBP
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dadb
	jmp uuid_000000000007dadd
uuid_000000000007dadb:
	push %RBP
	mov -5264(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dad8
	jmp uuid_000000000007dada
uuid_000000000007dad8:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dad5
	jmp uuid_000000000007dad7
uuid_000000000007dad5:
	movb $1, -5280(%rbp)
uuid_000000000007dad7:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007dada:
	mov -5296(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007dadd:
	mov -5288(%RBP),%RSP
	add $-5352, %RSP
	mov -5280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dae2
	push %RBP
	jmp uuid_000000000007dadf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dade
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dae1
uuid_000000000007dadf:
	pushq $0
	pushq $0
	pushq $3
	popq -5216(%RBP)
	popq -5208(%RBP)
	popq -5200(%RBP)
uuid_000000000007dae1:
	mov -5360(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_000000000007dae4
uuid_000000000007dae2:
#call function fragment::expression : Arrow<S,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4424(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d8b1
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	pushq -5376(%rbp)
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	pushq -5408(%rbp)
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	pushq -5696(%rbp)
	pushq -5704(%rbp)
	pushq -208(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -5320(%rbp), %r15
	movq %r15, -5216(%rbp)
	movq -5312(%rbp), %r15
	movq %r15, -5208(%rbp)
	movq -5304(%rbp), %r15
	movq %r15, -5200(%rbp)
uuid_000000000007dae4:
	mov -5248(%RBP),%RSP
	add $-5960, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007dae5
uuid_000000000007dae7:
uuid_000000000007dc8d:
	mov -3680(%RBP),%RSP
	add $-5216, %RSP
	jmp uuid_000000000007dc90
uuid_000000000007dc8e:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2712(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
uuid_000000000007da77:
#call function non-zero : Arrow<List<Array<Fragment,?>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da78
	jmp uuid_000000000007da79
uuid_000000000007da78:
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	push %RBP
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da70
	jmp uuid_000000000007da72
uuid_000000000007da70:
	push %RBP
	mov -3896(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da6d
	jmp uuid_000000000007da6f
uuid_000000000007da6d:
	push %RBP
	mov -3888(%RBP), %RAX
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da6a
	jmp uuid_000000000007da6c
uuid_000000000007da6a:
	movb $1, -3912(%rbp)
uuid_000000000007da6c:
	mov -3960(%RBP),%RSP
	add $-4112, %RSP
uuid_000000000007da6f:
	mov -3928(%RBP),%RSP
	add $-4112, %RSP
uuid_000000000007da72:
	mov -3920(%RBP),%RSP
	add $-4112, %RSP
	mov -3912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da74
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007da73
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007da76
uuid_000000000007da74:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3136(%rbp)
	pushq -3768(%RBP)
	pushq -3776(%RBP)
	pushq -3784(%RBP)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -208(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -4520(%RBP)
	pushq -4528(%RBP)
	pushq -4536(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -3952(%rbp), %r15
	movq %r15, -3848(%rbp)
	movq -3944(%rbp), %r15
	movq %r15, -3840(%rbp)
	movq -3936(%rbp), %r15
	movq %r15, -3832(%rbp)
uuid_000000000007da76:
	mov -3880(%RBP),%RSP
	add $-4568, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007da77
uuid_000000000007da79:
uuid_000000000007dc90:
	mov -2136(%RBP),%RSP
	add $-3848, %RSP
	jmp uuid_000000000007dc93
uuid_000000000007dc91:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc93:
	mov -1840(%RBP),%RSP
	add $-2360, %RSP
	jmp uuid_000000000007dc96
uuid_000000000007dc94:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc96:
	mov -1320(%RBP),%RSP
	add $-2064, %RSP
	jmp uuid_000000000007dc99
uuid_000000000007dc97:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc99:
	mov -800(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007dc9c
uuid_000000000007dc9a:
	pushq $0
	pushq -792(%rbp)
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc9c:
	mov -680(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007dc9f
uuid_000000000007dc9d:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -672(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007dc9f:
	mov -560(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007dca2
uuid_000000000007dca0:
uuid_000000000007dca2:
	mov -480(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007dca5
uuid_000000000007dca3:
uuid_000000000007dca5:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	subq $232, %rsp
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $232, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcc4
	jmp uuid_000000000007dcc6
uuid_000000000007dcc4:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcb2
	jmp uuid_000000000007dcb4
uuid_000000000007dcb2:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dca9
	jmp uuid_000000000007dcab
uuid_000000000007dca9:
	push %RBP
	jmp uuid_000000000007dca6
	jmp uuid_000000000007dca8
uuid_000000000007dca6:
	movb $1, -792(%rbp)
uuid_000000000007dca8:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007dcab:
	mov -800(%RBP),%RSP
	add $-808, %RSP
	mov -792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcaf
	jmp uuid_000000000007dcb1
uuid_000000000007dcaf:
	push %RBP
	mov -672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dcac
	jmp uuid_000000000007dcae
uuid_000000000007dcac:
	movb $1, -696(%rbp)
uuid_000000000007dcae:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007dcb1:
	mov -712(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007dcb4:
	mov -704(%RBP),%RSP
	add $-888, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcc1
	jmp uuid_000000000007dcc3
uuid_000000000007dcc1:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcbb
	jmp uuid_000000000007dcbd
uuid_000000000007dcbb:
	push %RBP
	jmp uuid_000000000007dcb8
	jmp uuid_000000000007dcba
uuid_000000000007dcb8:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dcb5
	jmp uuid_000000000007dcb7
uuid_000000000007dcb5:
	movb $1, -976(%rbp)
uuid_000000000007dcb7:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007dcba:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007dcbd:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcbe
	jmp uuid_000000000007dcc0
uuid_000000000007dcbe:
	movb $1, -600(%rbp)
uuid_000000000007dcc0:
	mov -896(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007dcc3:
	mov -616(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007dcc6:
	mov -608(%RBP),%RSP
	add $-1008, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd04
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcd6
	jmp uuid_000000000007dcd8
uuid_000000000007dcd6:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dcd3
	jmp uuid_000000000007dcd5
uuid_000000000007dcd3:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dccd
	jmp uuid_000000000007dccf
uuid_000000000007dccd:
	push %RBP
	jmp uuid_000000000007dcca
	jmp uuid_000000000007dccc
uuid_000000000007dcca:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dcc7
	jmp uuid_000000000007dcc9
uuid_000000000007dcc7:
	movb $1, -1272(%rbp)
uuid_000000000007dcc9:
	mov -1296(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007dccc:
	mov -1288(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007dccf:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
	mov -1272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcd0
	jmp uuid_000000000007dcd2
uuid_000000000007dcd0:
	movb $1, -1096(%rbp)
uuid_000000000007dcd2:
	mov -1192(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007dcd5:
	mov -1112(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007dcd8:
	mov -1104(%RBP),%RSP
	add $-1304, %RSP
	mov -1096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd01
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcf4
	jmp uuid_000000000007dcf6
uuid_000000000007dcf4:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dceb
	jmp uuid_000000000007dced
uuid_000000000007dceb:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dce8
	jmp uuid_000000000007dcea
uuid_000000000007dce8:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dce2
	jmp uuid_000000000007dce4
uuid_000000000007dce2:
	push %RBP
	jmp uuid_000000000007dcdf
	jmp uuid_000000000007dce1
uuid_000000000007dcdf:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dcdc
	jmp uuid_000000000007dcde
uuid_000000000007dcdc:
	movb $1, -1664(%rbp)
uuid_000000000007dcde:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007dce1:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007dce4:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dce5
	jmp uuid_000000000007dce7
uuid_000000000007dce5:
	movb $1, -1488(%rbp)
uuid_000000000007dce7:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007dcea:
	mov -1504(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007dced:
	mov -1496(%RBP),%RSP
	add $-1696, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcf1
	jmp uuid_000000000007dcf3
uuid_000000000007dcf1:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dcee
	jmp uuid_000000000007dcf0
uuid_000000000007dcee:
	movb $1, -1392(%rbp)
uuid_000000000007dcf0:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007dcf3:
	mov -1408(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007dcf6:
	mov -1400(%RBP),%RSP
	add $-1776, %RSP
	mov -1392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcfe
	push %RBP
	jmp uuid_000000000007dcfb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dcfa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dcfd
uuid_000000000007dcfb:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c715
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007c715
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007dcfd:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007dd00
uuid_000000000007dcfe:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dcf7
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c715
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007c715
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_000000000007dcf9
uuid_000000000007dcf7:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1696(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -1696(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007dcf9:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007dd00:
	mov -1312(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007dd03
uuid_000000000007dd01:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dcd9
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c715
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007c715
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_000000000007dcdb
uuid_000000000007dcd9:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1304(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -1304(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007dcdb:
	mov -1312(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007dd03:
	mov -1016(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007dd06
uuid_000000000007dd04:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007dd06:
	mov -520(%RBP),%RSP
	add $-1008, %RSP
	subq $152, %rsp
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $440, %rsp
	ret
extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd1f
	jmp uuid_000000000007dd21
uuid_000000000007dd1f:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd0d
	jmp uuid_000000000007dd0f
uuid_000000000007dd0d:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	jmp uuid_000000000007dd0a
	jmp uuid_000000000007dd0c
uuid_000000000007dd0a:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd07
	jmp uuid_000000000007dd09
uuid_000000000007dd07:
	movb $1, -560(%rbp)
uuid_000000000007dd09:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007dd0c:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007dd0f:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd1c
	jmp uuid_000000000007dd1e
uuid_000000000007dd1c:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd16
	jmp uuid_000000000007dd18
uuid_000000000007dd16:
	push %RBP
	jmp uuid_000000000007dd13
	jmp uuid_000000000007dd15
uuid_000000000007dd13:
	push %RBP
	mov -664(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $uuid_000000000007db07
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dd10
	jmp uuid_000000000007dd12
uuid_000000000007dd10:
	movb $1, -736(%rbp)
uuid_000000000007dd12:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dd15:
	mov -752(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dd18:
	mov -744(%RBP),%RSP
	add $-768, %RSP
	mov -736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd19
	jmp uuid_000000000007dd1b
uuid_000000000007dd19:
	movb $1, -464(%rbp)
uuid_000000000007dd1b:
	mov -656(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dd1e:
	mov -480(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dd21:
	mov -472(%RBP),%RSP
	add $-768, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd89
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd28
	jmp uuid_000000000007dd2a
uuid_000000000007dd28:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd25
	jmp uuid_000000000007dd27
uuid_000000000007dd25:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd22
	jmp uuid_000000000007dd24
uuid_000000000007dd22:
	movb $1, -856(%rbp)
uuid_000000000007dd24:
	mov -952(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007dd27:
	mov -872(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007dd2a:
	mov -864(%RBP),%RSP
	add $-1024, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd86
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd34
	jmp uuid_000000000007dd36
uuid_000000000007dd34:
	push %RBP
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007dd31
	jmp uuid_000000000007dd33
uuid_000000000007dd31:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd2e
	jmp uuid_000000000007dd30
uuid_000000000007dd2e:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd2b
	jmp uuid_000000000007dd2d
uuid_000000000007dd2b:
	movb $1, -1112(%rbp)
uuid_000000000007dd2d:
	mov -1240(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007dd30:
	mov -1160(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007dd33:
	mov -1128(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007dd36:
	mov -1120(%RBP),%RSP
	add $-1312, %RSP
	mov -1112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd83
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd80
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd7d
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd3a
	jmp uuid_000000000007dd3c
uuid_000000000007dd3a:
	push %RBP
	jmp uuid_000000000007dd37
	jmp uuid_000000000007dd39
uuid_000000000007dd37:
	movb $1, -1560(%rbp)
uuid_000000000007dd39:
	mov -1576(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007dd3c:
	mov -1568(%RBP),%RSP
	add $-1576, %RSP
	mov -1560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd7a
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd43
	jmp uuid_000000000007dd45
uuid_000000000007dd43:
	push %RBP
	jmp uuid_000000000007dd40
	jmp uuid_000000000007dd42
uuid_000000000007dd40:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd3d
	jmp uuid_000000000007dd3f
uuid_000000000007dd3d:
	movb $1, -1664(%rbp)
uuid_000000000007dd3f:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007dd42:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007dd45:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd77
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd4c
	jmp uuid_000000000007dd4e
uuid_000000000007dd4c:
	push %RBP
	jmp uuid_000000000007dd49
	jmp uuid_000000000007dd4b
uuid_000000000007dd49:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd46
	jmp uuid_000000000007dd48
uuid_000000000007dd46:
	movb $1, -1784(%rbp)
uuid_000000000007dd48:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007dd4b:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007dd4e:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
	mov -1784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd74
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd55
	jmp uuid_000000000007dd57
uuid_000000000007dd55:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd52
	jmp uuid_000000000007dd54
uuid_000000000007dd52:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd4f
	jmp uuid_000000000007dd51
uuid_000000000007dd4f:
	movb $1, -1904(%rbp)
uuid_000000000007dd51:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007dd54:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007dd57:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd71
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd5e
	jmp uuid_000000000007dd60
uuid_000000000007dd5e:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd5b
	jmp uuid_000000000007dd5d
uuid_000000000007dd5b:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd58
	jmp uuid_000000000007dd5a
uuid_000000000007dd58:
	movb $1, -2160(%rbp)
uuid_000000000007dd5a:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007dd5d:
	mov -2176(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007dd60:
	mov -2168(%RBP),%RSP
	add $-2328, %RSP
	mov -2160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd6e
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd67
	jmp uuid_000000000007dd69
uuid_000000000007dd67:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd64
	jmp uuid_000000000007dd66
uuid_000000000007dd64:
	push %RBP
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	jmp uuid_000000000007dd61
	jmp uuid_000000000007dd63
uuid_000000000007dd61:
	movb $1, -2416(%rbp)
uuid_000000000007dd63:
	mov -2512(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007dd66:
	mov -2432(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007dd69:
	mov -2424(%RBP),%RSP
	add $-2568, %RSP
	mov -2416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd6b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dd6a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dd6d
uuid_000000000007dd6b:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2664(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2656(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2648(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2640(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2632(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2624(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2616(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2608(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2600(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2592(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2584(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2576(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007dd6d:
	mov -2336(%RBP),%RSP
	add $-2664, %RSP
	jmp uuid_000000000007dd70
uuid_000000000007dd6e:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2520(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2512(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2504(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2496(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2488(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2480(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007dd70:
	mov -2080(%RBP),%RSP
	add $-2520, %RSP
	jmp uuid_000000000007dd73
uuid_000000000007dd71:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2264(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2216(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2208(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2200(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2192(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2184(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2176(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007dd73:
	mov -1824(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_000000000007dd76
uuid_000000000007dd74:
uuid_000000000007dd76:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_000000000007dd79
uuid_000000000007dd77:
uuid_000000000007dd79:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_000000000007dd7c
uuid_000000000007dd7a:
uuid_000000000007dd7c:
	mov -1480(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007dd7f
uuid_000000000007dd7d:
uuid_000000000007dd7f:
	mov -1400(%RBP),%RSP
	add $-1472, %RSP
	jmp uuid_000000000007dd82
uuid_000000000007dd80:
uuid_000000000007dd82:
	mov -1320(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007dd85
uuid_000000000007dd83:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1504(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007dd85:
	mov -1032(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_000000000007dd88
uuid_000000000007dd86:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1216(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007dd88:
	mov -776(%RBP),%RSP
	add $-1216, %RSP
	jmp uuid_000000000007dd8b
uuid_000000000007dd89:
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -648(%rbp)
	pushq -776(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	pushq $0
	movq -872(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007dd8b:
	mov -384(%RBP),%RSP
	add $-872, %RSP
	subq $96, %rsp
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
index_SB_typedefs_CL_ArrowNilAST:
uuid_000000000007ddb1:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddb2
	jmp uuid_000000000007ddb3
uuid_000000000007ddb2:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd9b
	jmp uuid_000000000007dd9d
uuid_000000000007dd9b:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd92
	jmp uuid_000000000007dd94
uuid_000000000007dd92:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd8f
	jmp uuid_000000000007dd91
uuid_000000000007dd8f:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd8c
	jmp uuid_000000000007dd8e
uuid_000000000007dd8c:
	movb $1, -336(%rbp)
uuid_000000000007dd8e:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007dd91:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007dd94:
	mov -344(%RBP),%RSP
	add $-504, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd98
	jmp uuid_000000000007dd9a
uuid_000000000007dd98:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd95
	jmp uuid_000000000007dd97
uuid_000000000007dd95:
	movb $1, -240(%rbp)
uuid_000000000007dd97:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007dd9a:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007dd9d:
	mov -248(%RBP),%RSP
	add $-584, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddae
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dda4
	jmp uuid_000000000007dda6
uuid_000000000007dda4:
	push %RBP
	jmp uuid_000000000007dda1
	jmp uuid_000000000007dda3
uuid_000000000007dda1:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd9e
	jmp uuid_000000000007dda0
uuid_000000000007dd9e:
	movb $1, -672(%rbp)
uuid_000000000007dda0:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dda3:
	mov -688(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dda6:
	mov -680(%RBP),%RSP
	add $-768, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddab
	push %RBP
	jmp uuid_000000000007dda8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dda7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ddaa
uuid_000000000007dda8:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ddaa:
	mov -776(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_000000000007ddad
uuid_000000000007ddab:
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007ddad:
	mov -592(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_000000000007ddb0
uuid_000000000007ddae:
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -584(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007ddb0:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ddb1
uuid_000000000007ddb3:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
index_SB_typedefs_CL_ArrowNilConsU64AST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddd5
	jmp uuid_000000000007ddd7
uuid_000000000007ddd5:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddba
	jmp uuid_000000000007ddbc
uuid_000000000007ddba:
	push %RBP
	jmp uuid_000000000007ddb7
	jmp uuid_000000000007ddb9
uuid_000000000007ddb7:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ddb4
	jmp uuid_000000000007ddb6
uuid_000000000007ddb4:
	movb $1, -344(%rbp)
uuid_000000000007ddb6:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ddb9:
	mov -360(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ddbc:
	mov -352(%RBP),%RSP
	add $-376, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddd2
	jmp uuid_000000000007ddd4
uuid_000000000007ddd2:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddcc
	jmp uuid_000000000007ddce
uuid_000000000007ddcc:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddc3
	jmp uuid_000000000007ddc5
uuid_000000000007ddc3:
	push %RBP
	jmp uuid_000000000007ddc0
	jmp uuid_000000000007ddc2
uuid_000000000007ddc0:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007be8e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddbd
	jmp uuid_000000000007ddbf
uuid_000000000007ddbd:
	movb $1, -560(%rbp)
uuid_000000000007ddbf:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007ddc2:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007ddc5:
	mov -568(%RBP),%RSP
	add $-592, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddc9
	jmp uuid_000000000007ddcb
uuid_000000000007ddc9:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ddc6
	jmp uuid_000000000007ddc8
uuid_000000000007ddc6:
	movb $1, -464(%rbp)
uuid_000000000007ddc8:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ddcb:
	mov -480(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ddce:
	mov -472(%RBP),%RSP
	add $-672, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddcf
	jmp uuid_000000000007ddd1
uuid_000000000007ddcf:
	movb $1, -248(%rbp)
uuid_000000000007ddd1:
	mov -384(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ddd4:
	mov -264(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ddd7:
	mov -256(%RBP),%RSP
	add $-672, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de31
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de02
	jmp uuid_000000000007de04
uuid_000000000007de02:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dde7
	jmp uuid_000000000007dde9
uuid_000000000007dde7:
	push %RBP
	jmp uuid_000000000007dde4
	jmp uuid_000000000007dde6
uuid_000000000007dde4:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddde
	jmp uuid_000000000007dde0
uuid_000000000007ddde:
	push %RBP
	jmp uuid_000000000007dddb
	jmp uuid_000000000007dddd
uuid_000000000007dddb:
	push %RBP
	mov -888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ddd8
	jmp uuid_000000000007ddda
uuid_000000000007ddd8:
	movb $1, -960(%rbp)
uuid_000000000007ddda:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007dddd:
	mov -976(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007dde0:
	mov -968(%RBP),%RSP
	add $-992, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dde1
	jmp uuid_000000000007dde3
uuid_000000000007dde1:
	movb $1, -856(%rbp)
uuid_000000000007dde3:
	mov -880(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007dde6:
	mov -872(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007dde9:
	mov -864(%RBP),%RSP
	add $-992, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddff
	jmp uuid_000000000007de01
uuid_000000000007ddff:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddf9
	jmp uuid_000000000007ddfb
uuid_000000000007ddf9:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ddf0
	jmp uuid_000000000007ddf2
uuid_000000000007ddf0:
	push %RBP
	jmp uuid_000000000007dded
	jmp uuid_000000000007ddef
uuid_000000000007dded:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $uuid_000000000007be8e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddea
	jmp uuid_000000000007ddec
uuid_000000000007ddea:
	movb $1, -1176(%rbp)
uuid_000000000007ddec:
	mov -1200(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007ddef:
	mov -1192(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007ddf2:
	mov -1184(%RBP),%RSP
	add $-1208, %RSP
	mov -1176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddf6
	jmp uuid_000000000007ddf8
uuid_000000000007ddf6:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ddf3
	jmp uuid_000000000007ddf5
uuid_000000000007ddf3:
	movb $1, -1080(%rbp)
uuid_000000000007ddf5:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007ddf8:
	mov -1096(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007ddfb:
	mov -1088(%RBP),%RSP
	add $-1288, %RSP
	mov -1080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddfc
	jmp uuid_000000000007ddfe
uuid_000000000007ddfc:
	movb $1, -760(%rbp)
uuid_000000000007ddfe:
	mov -1000(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007de01:
	mov -776(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007de04:
	mov -768(%RBP),%RSP
	add $-1288, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de2e
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de0b
	jmp uuid_000000000007de0d
uuid_000000000007de0b:
	push %RBP
	jmp uuid_000000000007de08
	jmp uuid_000000000007de0a
uuid_000000000007de08:
	push %RBP
	mov -1304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007de05
	jmp uuid_000000000007de07
uuid_000000000007de05:
	movb $1, -1376(%rbp)
uuid_000000000007de07:
	mov -1400(%RBP),%RSP
	add $-1408, %RSP
uuid_000000000007de0a:
	mov -1392(%RBP),%RSP
	add $-1408, %RSP
uuid_000000000007de0d:
	mov -1384(%RBP),%RSP
	add $-1408, %RSP
	mov -1376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de2b
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de1d
	jmp uuid_000000000007de1f
uuid_000000000007de1d:
	push %RBP
	jmp uuid_000000000007de1a
	jmp uuid_000000000007de1c
uuid_000000000007de1a:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de14
	jmp uuid_000000000007de16
uuid_000000000007de14:
	push %RBP
	jmp uuid_000000000007de11
	jmp uuid_000000000007de13
uuid_000000000007de11:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007de0e
	jmp uuid_000000000007de10
uuid_000000000007de0e:
	movb $1, -1600(%rbp)
uuid_000000000007de10:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007de13:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007de16:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
	mov -1600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de17
	jmp uuid_000000000007de19
uuid_000000000007de17:
	movb $1, -1496(%rbp)
uuid_000000000007de19:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007de1c:
	mov -1512(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007de1f:
	mov -1504(%RBP),%RSP
	add $-1632, %RSP
	mov -1496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de28
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de25
	push %RBP
	jmp uuid_000000000007de22
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007de21
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007de24
uuid_000000000007de22:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007de20
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007de24:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_000000000007de27
uuid_000000000007de25:
uuid_000000000007de27:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007de2a
uuid_000000000007de28:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007de2a:
	mov -1416(%RBP),%RSP
	add $-1632, %RSP
	jmp uuid_000000000007de2d
uuid_000000000007de2b:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007de2d:
	mov -1296(%RBP),%RSP
	add $-1408, %RSP
	jmp uuid_000000000007de30
uuid_000000000007de2e:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007de30:
	mov -680(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_000000000007de33
uuid_000000000007de31:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007de33:
	mov -168(%RBP),%RSP
	add $-672, %RSP
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_macro_SB_head_CL_ArrowU64ConsU64String:
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_000000000007dea8:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dea9
	jmp uuid_000000000007deaa
uuid_000000000007dea9:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de55
	jmp uuid_000000000007de57
uuid_000000000007de55:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de4c
	jmp uuid_000000000007de4e
uuid_000000000007de4c:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_000000000007de49
	jmp uuid_000000000007de4b
uuid_000000000007de49:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de43
	jmp uuid_000000000007de45
uuid_000000000007de43:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de40
	jmp uuid_000000000007de42
uuid_000000000007de40:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de3a
	jmp uuid_000000000007de3c
uuid_000000000007de3a:
	push %RBP
	jmp uuid_000000000007de37
	jmp uuid_000000000007de39
uuid_000000000007de37:
	push %RBP
	mov -1008(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007de34
	jmp uuid_000000000007de36
uuid_000000000007de34:
	movb $1, -1080(%rbp)
uuid_000000000007de36:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007de39:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007de3c:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
	mov -1080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de3d
	jmp uuid_000000000007de3f
uuid_000000000007de3d:
	movb $1, -904(%rbp)
uuid_000000000007de3f:
	mov -1000(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007de42:
	mov -920(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007de45:
	mov -912(%RBP),%RSP
	add $-1112, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de46
	jmp uuid_000000000007de48
uuid_000000000007de46:
	movb $1, -728(%rbp)
uuid_000000000007de48:
	mov -824(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007de4b:
	mov -744(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007de4e:
	mov -736(%RBP),%RSP
	add $-1112, %RSP
	mov -728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de52
	jmp uuid_000000000007de54
uuid_000000000007de52:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de4f
	jmp uuid_000000000007de51
uuid_000000000007de4f:
	movb $1, -552(%rbp)
uuid_000000000007de51:
	mov -1120(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007de54:
	mov -568(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007de57:
	mov -560(%RBP),%RSP
	add $-1288, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dea5
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de85
	jmp uuid_000000000007de87
uuid_000000000007de85:
	push %RBP
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de7c
	jmp uuid_000000000007de7e
uuid_000000000007de7c:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	jmp uuid_000000000007de79
	jmp uuid_000000000007de7b
uuid_000000000007de79:
	push %RBP
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de73
	jmp uuid_000000000007de75
uuid_000000000007de73:
	push %RBP
	mov -1808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de70
	jmp uuid_000000000007de72
uuid_000000000007de70:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de6a
	jmp uuid_000000000007de6c
uuid_000000000007de6a:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de67
	jmp uuid_000000000007de69
uuid_000000000007de67:
	push %RBP
	mov -1976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de61
	jmp uuid_000000000007de63
uuid_000000000007de61:
	push %RBP
	jmp uuid_000000000007de5e
	jmp uuid_000000000007de60
uuid_000000000007de5e:
	push %RBP
	mov -2104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007de5b
	jmp uuid_000000000007de5d
uuid_000000000007de5b:
	movb $1, -2176(%rbp)
uuid_000000000007de5d:
	mov -2200(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de60:
	mov -2192(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de63:
	mov -2184(%RBP),%RSP
	add $-2208, %RSP
	mov -2176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de64
	jmp uuid_000000000007de66
uuid_000000000007de64:
	movb $1, -2000(%rbp)
uuid_000000000007de66:
	mov -2096(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de69:
	mov -2016(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de6c:
	mov -2008(%RBP),%RSP
	add $-2208, %RSP
	mov -2000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de6d
	jmp uuid_000000000007de6f
uuid_000000000007de6d:
	movb $1, -1824(%rbp)
uuid_000000000007de6f:
	mov -1920(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de72:
	mov -1840(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de75:
	mov -1832(%RBP),%RSP
	add $-2208, %RSP
	mov -1824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de76
	jmp uuid_000000000007de78
uuid_000000000007de76:
	movb $1, -1648(%rbp)
uuid_000000000007de78:
	mov -1744(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de7b:
	mov -1664(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007de7e:
	mov -1656(%RBP),%RSP
	add $-2208, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de82
	jmp uuid_000000000007de84
uuid_000000000007de82:
	push %RBP
	mov -1304(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de7f
	jmp uuid_000000000007de81
uuid_000000000007de7f:
	movb $1, -1472(%rbp)
uuid_000000000007de81:
	mov -2216(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007de84:
	mov -1488(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007de87:
	mov -1480(%RBP),%RSP
	add $-2384, %RSP
	mov -1472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dea2
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de9a
	jmp uuid_000000000007de9c
uuid_000000000007de9a:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de91
	jmp uuid_000000000007de93
uuid_000000000007de91:
	push %RBP
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	jmp uuid_000000000007de8e
	jmp uuid_000000000007de90
uuid_000000000007de8e:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	jmp uuid_000000000007de8b
	jmp uuid_000000000007de8d
uuid_000000000007de8b:
	movb $1, -2744(%rbp)
uuid_000000000007de8d:
	mov -2840(%RBP),%RSP
	add $-2912, %RSP
uuid_000000000007de90:
	mov -2760(%RBP),%RSP
	add $-2912, %RSP
uuid_000000000007de93:
	mov -2752(%RBP),%RSP
	add $-2912, %RSP
	mov -2744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de97
	jmp uuid_000000000007de99
uuid_000000000007de97:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de94
	jmp uuid_000000000007de96
uuid_000000000007de94:
	movb $1, -2568(%rbp)
uuid_000000000007de96:
	mov -2920(%RBP),%RSP
	add $-3088, %RSP
uuid_000000000007de99:
	mov -2584(%RBP),%RSP
	add $-3088, %RSP
uuid_000000000007de9c:
	mov -2576(%RBP),%RSP
	add $-3088, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de9f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007de9e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dea1
uuid_000000000007de9f:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007de9d
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007dea1:
	mov -2392(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_000000000007dea4
uuid_000000000007dea2:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de88
	jmp uuid_000000000007de8a
uuid_000000000007de88:
	movq $1, -200(%rbp)
uuid_000000000007de8a:
	mov -2392(%RBP),%RSP
	add $-2392, %RSP
	movq -2384(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2264(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007dea4:
	mov -1296(%RBP),%RSP
	add $-2392, %RSP
	jmp uuid_000000000007dea7
uuid_000000000007dea5:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de58
	jmp uuid_000000000007de5a
uuid_000000000007de58:
	movq $1, -200(%rbp)
uuid_000000000007de5a:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007dea7:
	mov -376(%RBP),%RSP
	add $-1296, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dea8
uuid_000000000007deaa:
	mov -200(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String:
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_000000000007df0b:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df0c
	jmp uuid_000000000007df0d
uuid_000000000007df0c:
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007deba
	jmp uuid_000000000007debc
uuid_000000000007deba:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007deb1
	jmp uuid_000000000007deb3
uuid_000000000007deb1:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	jmp uuid_000000000007deae
	jmp uuid_000000000007deb0
uuid_000000000007deae:
	push %RBP
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007deab
	jmp uuid_000000000007dead
uuid_000000000007deab:
	movb $1, -872(%rbp)
uuid_000000000007dead:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007deb0:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007deb3:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007deb7
	jmp uuid_000000000007deb9
uuid_000000000007deb7:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007deb4
	jmp uuid_000000000007deb6
uuid_000000000007deb4:
	movb $1, -696(%rbp)
uuid_000000000007deb6:
	mov -1048(%RBP),%RSP
	add $-1216, %RSP
uuid_000000000007deb9:
	mov -712(%RBP),%RSP
	add $-1216, %RSP
uuid_000000000007debc:
	mov -704(%RBP),%RSP
	add $-1216, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df08
	push %RBP
	jmp uuid_000000000007df05
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007df04
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007df07
uuid_000000000007df05:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007df07:
	mov -1224(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_000000000007df0a
uuid_000000000007df08:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007decc
	jmp uuid_000000000007dece
uuid_000000000007decc:
	push %RBP
	jmp uuid_000000000007dec9
	jmp uuid_000000000007decb
uuid_000000000007dec9:
	push %RBP
	mov -1360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dec3
	jmp uuid_000000000007dec5
uuid_000000000007dec3:
	push %RBP
	jmp uuid_000000000007dec0
	jmp uuid_000000000007dec2
uuid_000000000007dec0:
	push %RBP
	mov -1416(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007debd
	jmp uuid_000000000007debf
uuid_000000000007debd:
	movb $1, -1488(%rbp)
uuid_000000000007debf:
	mov -1512(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007dec2:
	mov -1504(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007dec5:
	mov -1496(%RBP),%RSP
	add $-1520, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dec6
	jmp uuid_000000000007dec8
uuid_000000000007dec6:
	movb $1, -1384(%rbp)
uuid_000000000007dec8:
	mov -1408(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007decb:
	mov -1400(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007dece:
	mov -1392(%RBP),%RSP
	add $-1520, %RSP
	mov -1384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007def4
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007deea
	jmp uuid_000000000007deec
uuid_000000000007deea:
	push %RBP
	jmp uuid_000000000007dee7
	jmp uuid_000000000007dee9
uuid_000000000007dee7:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dee1
	jmp uuid_000000000007dee3
uuid_000000000007dee1:
	push %RBP
	jmp uuid_000000000007dede
	jmp uuid_000000000007dee0
uuid_000000000007dede:
	push %RBP
	mov -1688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ded8
	jmp uuid_000000000007deda
uuid_000000000007ded8:
	push %RBP
	jmp uuid_000000000007ded5
	jmp uuid_000000000007ded7
uuid_000000000007ded5:
	push %RBP
	mov -1744(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ded2
	jmp uuid_000000000007ded4
uuid_000000000007ded2:
	movb $1, -1816(%rbp)
uuid_000000000007ded4:
	mov -1840(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007ded7:
	mov -1832(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007deda:
	mov -1824(%RBP),%RSP
	add $-1848, %RSP
	mov -1816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dedb
	jmp uuid_000000000007dedd
uuid_000000000007dedb:
	movb $1, -1712(%rbp)
uuid_000000000007dedd:
	mov -1736(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007dee0:
	mov -1728(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007dee3:
	mov -1720(%RBP),%RSP
	add $-1848, %RSP
	mov -1712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dee4
	jmp uuid_000000000007dee6
uuid_000000000007dee4:
	movb $1, -1608(%rbp)
uuid_000000000007dee6:
	mov -1632(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007dee9:
	mov -1624(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007deec:
	mov -1616(%RBP),%RSP
	add $-1848, %RSP
	mov -1608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007def1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007def0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007def3
uuid_000000000007def1:
	push %RBP
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007deed
	jmp uuid_000000000007deef
uuid_000000000007deed:
	movb $1, -1224(%rbp)
uuid_000000000007deef:
	mov -1856(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007def3:
	mov -1528(%RBP),%RSP
	add $-1856, %RSP
	jmp uuid_000000000007def6
uuid_000000000007def4:
	push %RBP
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007decf
	jmp uuid_000000000007ded1
uuid_000000000007decf:
	movb $1, -1224(%rbp)
uuid_000000000007ded1:
	mov -1528(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007def6:
	mov -1304(%RBP),%RSP
	add $-1528, %RSP
	push %RBP
	mov -1224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df01
	jmp uuid_000000000007df03
uuid_000000000007df01:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007defe
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	jmp uuid_000000000007defb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007defa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007defd
uuid_000000000007defb:
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007def7
	jmp uuid_000000000007def9
uuid_000000000007def7:
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
uuid_000000000007def9:
	mov -2016(%RBP),%RSP
	add $-2016, %RSP
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movb $1, -344(%rbp)
uuid_000000000007defd:
	mov -1744(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_000000000007df00
uuid_000000000007defe:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
uuid_000000000007df00:
	mov -1640(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007df03:
	mov -1536(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007df0a:
	mov -520(%RBP),%RSP
	add $-1736, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007df0b
uuid_000000000007df0d:
	push %RBP
#call function not : Arrow<U8,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call not_CL_ArrowU64U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df0f
	jmp uuid_000000000007df11
uuid_000000000007df0f:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df0e
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007df11:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
preprocess_SB_apply_SB_literals_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df33
	jmp uuid_000000000007df35
uuid_000000000007df33:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df18
	jmp uuid_000000000007df1a
uuid_000000000007df18:
	push %RBP
	jmp uuid_000000000007df15
	jmp uuid_000000000007df17
uuid_000000000007df15:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007df12
	jmp uuid_000000000007df14
uuid_000000000007df12:
	movb $1, -408(%rbp)
uuid_000000000007df14:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007df17:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007df1a:
	mov -416(%RBP),%RSP
	add $-440, %RSP
	mov -408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df30
	jmp uuid_000000000007df32
uuid_000000000007df30:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df2a
	jmp uuid_000000000007df2c
uuid_000000000007df2a:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df27
	jmp uuid_000000000007df29
uuid_000000000007df27:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df21
	jmp uuid_000000000007df23
uuid_000000000007df21:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007df1e
	jmp uuid_000000000007df20
uuid_000000000007df1e:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df1b
	jmp uuid_000000000007df1d
uuid_000000000007df1b:
	movb $1, -704(%rbp)
uuid_000000000007df1d:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007df20:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007df23:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df24
	jmp uuid_000000000007df26
uuid_000000000007df24:
	movb $1, -528(%rbp)
uuid_000000000007df26:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007df29:
	mov -544(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007df2c:
	mov -536(%RBP),%RSP
	add $-792, %RSP
	mov -528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df2d
	jmp uuid_000000000007df2f
uuid_000000000007df2d:
	movb $1, -312(%rbp)
uuid_000000000007df2f:
	mov -448(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007df32:
	mov -328(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007df35:
	mov -320(%RBP),%RSP
	add $-792, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfc2
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df57
	jmp uuid_000000000007df59
uuid_000000000007df57:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df3c
	jmp uuid_000000000007df3e
uuid_000000000007df3c:
	push %RBP
	jmp uuid_000000000007df39
	jmp uuid_000000000007df3b
uuid_000000000007df39:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007df36
	jmp uuid_000000000007df38
uuid_000000000007df36:
	movb $1, -976(%rbp)
uuid_000000000007df38:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007df3b:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007df3e:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df54
	jmp uuid_000000000007df56
uuid_000000000007df54:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df4e
	jmp uuid_000000000007df50
uuid_000000000007df4e:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df4b
	jmp uuid_000000000007df4d
uuid_000000000007df4b:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df45
	jmp uuid_000000000007df47
uuid_000000000007df45:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_000000000007df42
	jmp uuid_000000000007df44
uuid_000000000007df42:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df3f
	jmp uuid_000000000007df41
uuid_000000000007df3f:
	movb $1, -1272(%rbp)
uuid_000000000007df41:
	mov -1352(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007df44:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007df47:
	mov -1280(%RBP),%RSP
	add $-1360, %RSP
	mov -1272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df48
	jmp uuid_000000000007df4a
uuid_000000000007df48:
	movb $1, -1096(%rbp)
uuid_000000000007df4a:
	mov -1192(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007df4d:
	mov -1112(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007df50:
	mov -1104(%RBP),%RSP
	add $-1360, %RSP
	mov -1096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df51
	jmp uuid_000000000007df53
uuid_000000000007df51:
	movb $1, -880(%rbp)
uuid_000000000007df53:
	mov -1016(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007df56:
	mov -896(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007df59:
	mov -888(%RBP),%RSP
	add $-1360, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfbf
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df60
	jmp uuid_000000000007df62
uuid_000000000007df60:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	jmp uuid_000000000007df5d
	jmp uuid_000000000007df5f
uuid_000000000007df5d:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007df5a
	jmp uuid_000000000007df5c
uuid_000000000007df5a:
	movb $1, -1448(%rbp)
uuid_000000000007df5c:
	mov -1528(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007df5f:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007df62:
	mov -1456(%RBP),%RSP
	add $-1536, %RSP
	mov -1448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfbc
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df70
	jmp uuid_000000000007df72
uuid_000000000007df70:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007df6d
	jmp uuid_000000000007df6f
uuid_000000000007df6d:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007df6a
	jmp uuid_000000000007df6c
uuid_000000000007df6a:
	movb $1, -1624(%rbp)
uuid_000000000007df6c:
	mov -1704(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007df6f:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007df72:
	mov -1632(%RBP),%RSP
	add $-1712, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfb9
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df7c
	jmp uuid_000000000007df7e
uuid_000000000007df7c:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df79
	jmp uuid_000000000007df7b
uuid_000000000007df79:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df76
	jmp uuid_000000000007df78
uuid_000000000007df76:
	movb $1, -1800(%rbp)
uuid_000000000007df78:
	mov -1896(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007df7b:
	mov -1816(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007df7e:
	mov -1808(%RBP),%RSP
	add $-1968, %RSP
	mov -1800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfb6
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df85
	jmp uuid_000000000007df87
uuid_000000000007df85:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df82
	jmp uuid_000000000007df84
uuid_000000000007df82:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df7f
	jmp uuid_000000000007df81
uuid_000000000007df7f:
	movb $1, -2056(%rbp)
uuid_000000000007df81:
	mov -2152(%RBP),%RSP
	add $-2224, %RSP
uuid_000000000007df84:
	mov -2072(%RBP),%RSP
	add $-2224, %RSP
uuid_000000000007df87:
	mov -2064(%RBP),%RSP
	add $-2224, %RSP
	mov -2056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfb3
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df8e
	jmp uuid_000000000007df90
uuid_000000000007df8e:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df8b
	jmp uuid_000000000007df8d
uuid_000000000007df8b:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df88
	jmp uuid_000000000007df8a
uuid_000000000007df88:
	movb $1, -2312(%rbp)
uuid_000000000007df8a:
	mov -2408(%RBP),%RSP
	add $-2480, %RSP
uuid_000000000007df8d:
	mov -2328(%RBP),%RSP
	add $-2480, %RSP
uuid_000000000007df90:
	mov -2320(%RBP),%RSP
	add $-2480, %RSP
	mov -2312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfb0
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df9a
	jmp uuid_000000000007df9c
uuid_000000000007df9a:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_000000000007df97
	jmp uuid_000000000007df99
uuid_000000000007df97:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df94
	jmp uuid_000000000007df96
uuid_000000000007df94:
	push %RBP
	mov -2520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df91
	jmp uuid_000000000007df93
uuid_000000000007df91:
	movb $1, -2568(%rbp)
uuid_000000000007df93:
	mov -2696(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007df96:
	mov -2616(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007df99:
	mov -2584(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007df9c:
	mov -2576(%RBP),%RSP
	add $-2768, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfad
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfa3
	jmp uuid_000000000007dfa5
uuid_000000000007dfa3:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dfa0
	jmp uuid_000000000007dfa2
uuid_000000000007dfa0:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	jmp uuid_000000000007df9d
	jmp uuid_000000000007df9f
uuid_000000000007df9d:
	movb $1, -2856(%rbp)
uuid_000000000007df9f:
	mov -2952(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007dfa2:
	mov -2872(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007dfa5:
	mov -2864(%RBP),%RSP
	add $-3008, %RSP
	mov -2856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfaa
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007dfa7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dfa6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dfa9
uuid_000000000007dfa7:
	movq -3088(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3080(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3072(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3064(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3056(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3048(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3040(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3032(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3024(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007dfa9:
	mov -3016(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_000000000007dfac
uuid_000000000007dfaa:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfac:
	mov -2776(%RBP),%RSP
	add $-3008, %RSP
	jmp uuid_000000000007dfaf
uuid_000000000007dfad:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfaf:
	mov -2488(%RBP),%RSP
	add $-2768, %RSP
	jmp uuid_000000000007dfb2
uuid_000000000007dfb0:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfb2:
	mov -2232(%RBP),%RSP
	add $-2480, %RSP
	jmp uuid_000000000007dfb5
uuid_000000000007dfb3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfb5:
	mov -1976(%RBP),%RSP
	add $-2224, %RSP
	jmp uuid_000000000007dfb8
uuid_000000000007dfb6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfb8:
	mov -1720(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_000000000007dfbb
uuid_000000000007dfb9:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_000000000007df63
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df73
	jmp uuid_000000000007df75
uuid_000000000007df73:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_000000000007df63
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df64
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007df64
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df66
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007df66
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df66
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007df66
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007df75:
	mov -1720(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007dfbb:
	mov -1544(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_000000000007dfbe
uuid_000000000007dfbc:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_000000000007df63
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df67
	jmp uuid_000000000007df69
uuid_000000000007df67:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_000000000007df63
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df64
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007df64
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1552(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df65
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df66
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007df66
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df66
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007df66
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007df69:
	mov -1544(%RBP),%RSP
	add $-1552, %RSP
uuid_000000000007dfbe:
	mov -1368(%RBP),%RSP
	add $-1552, %RSP
	jmp uuid_000000000007dfc1
uuid_000000000007dfbf:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfc1:
	mov -800(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007dfc4
uuid_000000000007dfc2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dfc4:
	mov -232(%RBP),%RSP
	add $-792, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_SB_locations_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfdf
	jmp uuid_000000000007dfe1
uuid_000000000007dfdf:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfcc
	jmp uuid_000000000007dfce
uuid_000000000007dfcc:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007dfc9
	jmp uuid_000000000007dfcb
uuid_000000000007dfc9:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $uuid_000000000007dfc5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dfc6
	jmp uuid_000000000007dfc8
uuid_000000000007dfc6:
	movb $1, -408(%rbp)
uuid_000000000007dfc8:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007dfcb:
	mov -424(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007dfce:
	mov -416(%RBP),%RSP
	add $-496, %RSP
	mov -408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfdc
	jmp uuid_000000000007dfde
uuid_000000000007dfdc:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfd6
	jmp uuid_000000000007dfd8
uuid_000000000007dfd6:
	push %RBP
	jmp uuid_000000000007dfd3
	jmp uuid_000000000007dfd5
uuid_000000000007dfd3:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007dfcf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dfd0
	jmp uuid_000000000007dfd2
uuid_000000000007dfd0:
	movb $1, -584(%rbp)
uuid_000000000007dfd2:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007dfd5:
	mov -600(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007dfd8:
	mov -592(%RBP),%RSP
	add $-616, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfd9
	jmp uuid_000000000007dfdb
uuid_000000000007dfd9:
	movb $1, -312(%rbp)
uuid_000000000007dfdb:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007dfde:
	mov -328(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007dfe1:
	mov -320(%RBP),%RSP
	add $-616, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e051
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dffc
	jmp uuid_000000000007dffe
uuid_000000000007dffc:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007dff9
	jmp uuid_000000000007dffb
uuid_000000000007dff9:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dff6
	jmp uuid_000000000007dff8
uuid_000000000007dff6:
	movb $1, -704(%rbp)
uuid_000000000007dff8:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007dffb:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007dffe:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e04e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e005
	jmp uuid_000000000007e007
uuid_000000000007e005:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	jmp uuid_000000000007e002
	jmp uuid_000000000007e004
uuid_000000000007e002:
	push %RBP
	mov -808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfff
	jmp uuid_000000000007e001
uuid_000000000007dfff:
	movb $1, -880(%rbp)
uuid_000000000007e001:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007e004:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007e007:
	mov -888(%RBP),%RSP
	add $-968, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e04b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e00e
	jmp uuid_000000000007e010
uuid_000000000007e00e:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e00b
	jmp uuid_000000000007e00d
uuid_000000000007e00b:
	push %RBP
	mov -1032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e008
	jmp uuid_000000000007e00a
uuid_000000000007e008:
	movb $1, -1056(%rbp)
uuid_000000000007e00a:
	mov -1152(%RBP),%RSP
	add $-1224, %RSP
uuid_000000000007e00d:
	mov -1072(%RBP),%RSP
	add $-1224, %RSP
uuid_000000000007e010:
	mov -1064(%RBP),%RSP
	add $-1224, %RSP
	mov -1056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e048
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e017
	jmp uuid_000000000007e019
uuid_000000000007e017:
	push %RBP
	mov -1296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e014
	jmp uuid_000000000007e016
uuid_000000000007e014:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e011
	jmp uuid_000000000007e013
uuid_000000000007e011:
	movb $1, -1312(%rbp)
uuid_000000000007e013:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007e016:
	mov -1328(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007e019:
	mov -1320(%RBP),%RSP
	add $-1480, %RSP
	mov -1312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e045
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e020
	jmp uuid_000000000007e022
uuid_000000000007e020:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e01d
	jmp uuid_000000000007e01f
uuid_000000000007e01d:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e01a
	jmp uuid_000000000007e01c
uuid_000000000007e01a:
	movb $1, -1568(%rbp)
uuid_000000000007e01c:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007e01f:
	mov -1584(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007e022:
	mov -1576(%RBP),%RSP
	add $-1736, %RSP
	mov -1568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e042
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e02c
	jmp uuid_000000000007e02e
uuid_000000000007e02c:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	jmp uuid_000000000007e029
	jmp uuid_000000000007e02b
uuid_000000000007e029:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e026
	jmp uuid_000000000007e028
uuid_000000000007e026:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e023
	jmp uuid_000000000007e025
uuid_000000000007e023:
	movb $1, -1824(%rbp)
uuid_000000000007e025:
	mov -1952(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007e028:
	mov -1872(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007e02b:
	mov -1840(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007e02e:
	mov -1832(%RBP),%RSP
	add $-2024, %RSP
	mov -1824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e03f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e035
	jmp uuid_000000000007e037
uuid_000000000007e035:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e032
	jmp uuid_000000000007e034
uuid_000000000007e032:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	jmp uuid_000000000007e02f
	jmp uuid_000000000007e031
uuid_000000000007e02f:
	movb $1, -2112(%rbp)
uuid_000000000007e031:
	mov -2208(%RBP),%RSP
	add $-2264, %RSP
uuid_000000000007e034:
	mov -2128(%RBP),%RSP
	add $-2264, %RSP
uuid_000000000007e037:
	mov -2120(%RBP),%RSP
	add $-2264, %RSP
	mov -2112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e03c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007e039
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e038
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e03b
uuid_000000000007e039:
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007e03b:
	mov -2272(%RBP),%RSP
	add $-2344, %RSP
	jmp uuid_000000000007e03e
uuid_000000000007e03c:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e03e:
	mov -2032(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_000000000007e041
uuid_000000000007e03f:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e041:
	mov -1744(%RBP),%RSP
	add $-2024, %RSP
	jmp uuid_000000000007e044
uuid_000000000007e042:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e044:
	mov -1488(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007e047
uuid_000000000007e045:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e047:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
	jmp uuid_000000000007e04a
uuid_000000000007e048:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e04a:
	mov -976(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_000000000007e04d
uuid_000000000007e04b:
	pushq -968(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e04d:
	mov -800(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_000000000007e050
uuid_000000000007e04e:
	pushq -792(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e050:
	mov -624(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007e053
uuid_000000000007e051:
	pushq $uuid_000000000007dfe2
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfec
	jmp uuid_000000000007dfee
uuid_000000000007dfec:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfe9
	jmp uuid_000000000007dfeb
uuid_000000000007dfe9:
	push %RBP
	mov -680(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfe6
	jmp uuid_000000000007dfe8
uuid_000000000007dfe6:
	push %RBP
	mov -672(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfe3
	jmp uuid_000000000007dfe5
uuid_000000000007dfe3:
	movb $1, -704(%rbp)
uuid_000000000007dfe5:
	mov -752(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007dfe8:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007dfeb:
	mov -720(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007dfee:
	mov -712(%RBP),%RSP
	add $-760, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dff3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007dff2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dff5
uuid_000000000007dff3:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007dfef
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -760(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007dff0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007dff1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -624(%rbp)
uuid_000000000007dff5:
	mov -664(%RBP),%RSP
	add $-760, %RSP
	pushq -624(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e053:
	mov -232(%RBP),%RSP
	add $-760, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e07b
	jmp uuid_000000000007e07d
uuid_000000000007e07b:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e078
	jmp uuid_000000000007e07a
uuid_000000000007e078:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e072
	jmp uuid_000000000007e074
uuid_000000000007e072:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e060
	jmp uuid_000000000007e062
uuid_000000000007e060:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e057
	jmp uuid_000000000007e059
uuid_000000000007e057:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007e054
	jmp uuid_000000000007e056
uuid_000000000007e054:
	movb $1, -680(%rbp)
uuid_000000000007e056:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007e059:
	mov -688(%RBP),%RSP
	add $-720, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e05d
	jmp uuid_000000000007e05f
uuid_000000000007e05d:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e05a
	jmp uuid_000000000007e05c
uuid_000000000007e05a:
	movb $1, -584(%rbp)
uuid_000000000007e05c:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e05f:
	mov -600(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e062:
	mov -592(%RBP),%RSP
	add $-800, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e06f
	jmp uuid_000000000007e071
uuid_000000000007e06f:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e069
	jmp uuid_000000000007e06b
uuid_000000000007e069:
	push %RBP
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	jmp uuid_000000000007e066
	jmp uuid_000000000007e068
uuid_000000000007e066:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e063
	jmp uuid_000000000007e065
uuid_000000000007e063:
	movb $1, -888(%rbp)
uuid_000000000007e065:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007e068:
	mov -904(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007e06b:
	mov -896(%RBP),%RSP
	add $-976, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e06c
	jmp uuid_000000000007e06e
uuid_000000000007e06c:
	movb $1, -488(%rbp)
uuid_000000000007e06e:
	mov -808(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007e071:
	mov -504(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007e074:
	mov -496(%RBP),%RSP
	add $-976, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e075
	jmp uuid_000000000007e077
uuid_000000000007e075:
	movb $1, -312(%rbp)
uuid_000000000007e077:
	mov -408(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007e07a:
	mov -328(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007e07d:
	mov -320(%RBP),%RSP
	add $-976, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e237
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e09f
	jmp uuid_000000000007e0a1
uuid_000000000007e09f:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e084
	jmp uuid_000000000007e086
uuid_000000000007e084:
	push %RBP
	jmp uuid_000000000007e081
	jmp uuid_000000000007e083
uuid_000000000007e081:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e07e
	jmp uuid_000000000007e080
uuid_000000000007e07e:
	movb $1, -1160(%rbp)
uuid_000000000007e080:
	mov -1184(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007e083:
	mov -1176(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007e086:
	mov -1168(%RBP),%RSP
	add $-1192, %RSP
	mov -1160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e09c
	jmp uuid_000000000007e09e
uuid_000000000007e09c:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e096
	jmp uuid_000000000007e098
uuid_000000000007e096:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e093
	jmp uuid_000000000007e095
uuid_000000000007e093:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e08d
	jmp uuid_000000000007e08f
uuid_000000000007e08d:
	push %RBP
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	jmp uuid_000000000007e08a
	jmp uuid_000000000007e08c
uuid_000000000007e08a:
	push %RBP
	mov -1384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e087
	jmp uuid_000000000007e089
uuid_000000000007e087:
	movb $1, -1456(%rbp)
uuid_000000000007e089:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007e08c:
	mov -1472(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007e08f:
	mov -1464(%RBP),%RSP
	add $-1544, %RSP
	mov -1456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e090
	jmp uuid_000000000007e092
uuid_000000000007e090:
	movb $1, -1280(%rbp)
uuid_000000000007e092:
	mov -1376(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007e095:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007e098:
	mov -1288(%RBP),%RSP
	add $-1544, %RSP
	mov -1280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e099
	jmp uuid_000000000007e09b
uuid_000000000007e099:
	movb $1, -1064(%rbp)
uuid_000000000007e09b:
	mov -1200(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007e09e:
	mov -1080(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007e0a1:
	mov -1072(%RBP),%RSP
	add $-1544, %RSP
	mov -1064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e234
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0c3
	jmp uuid_000000000007e0c5
uuid_000000000007e0c3:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0a8
	jmp uuid_000000000007e0aa
uuid_000000000007e0a8:
	push %RBP
	jmp uuid_000000000007e0a5
	jmp uuid_000000000007e0a7
uuid_000000000007e0a5:
	push %RBP
	mov -1656(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0a2
	jmp uuid_000000000007e0a4
uuid_000000000007e0a2:
	movb $1, -1728(%rbp)
uuid_000000000007e0a4:
	mov -1752(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007e0a7:
	mov -1744(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007e0aa:
	mov -1736(%RBP),%RSP
	add $-1760, %RSP
	mov -1728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0c0
	jmp uuid_000000000007e0c2
uuid_000000000007e0c0:
	push %RBP
	mov -1608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0ba
	jmp uuid_000000000007e0bc
uuid_000000000007e0ba:
	push %RBP
	mov -1832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0b7
	jmp uuid_000000000007e0b9
uuid_000000000007e0b7:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0b1
	jmp uuid_000000000007e0b3
uuid_000000000007e0b1:
	push %RBP
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	jmp uuid_000000000007e0ae
	jmp uuid_000000000007e0b0
uuid_000000000007e0ae:
	push %RBP
	mov -1952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e0ab
	jmp uuid_000000000007e0ad
uuid_000000000007e0ab:
	movb $1, -2024(%rbp)
uuid_000000000007e0ad:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e0b0:
	mov -2040(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e0b3:
	mov -2032(%RBP),%RSP
	add $-2112, %RSP
	mov -2024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0b4
	jmp uuid_000000000007e0b6
uuid_000000000007e0b4:
	movb $1, -1848(%rbp)
uuid_000000000007e0b6:
	mov -1944(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e0b9:
	mov -1864(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e0bc:
	mov -1856(%RBP),%RSP
	add $-2112, %RSP
	mov -1848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0bd
	jmp uuid_000000000007e0bf
uuid_000000000007e0bd:
	movb $1, -1632(%rbp)
uuid_000000000007e0bf:
	mov -1768(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e0c2:
	mov -1648(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e0c5:
	mov -1640(%RBP),%RSP
	add $-2112, %RSP
	mov -1632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e231
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0ed
	jmp uuid_000000000007e0ef
uuid_000000000007e0ed:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0ea
	jmp uuid_000000000007e0ec
uuid_000000000007e0ea:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0e4
	jmp uuid_000000000007e0e6
uuid_000000000007e0e4:
	push %RBP
	mov -2360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0d2
	jmp uuid_000000000007e0d4
uuid_000000000007e0d2:
	push %RBP
	mov -2456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0c9
	jmp uuid_000000000007e0cb
uuid_000000000007e0c9:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_000000000007e0c6
	jmp uuid_000000000007e0c8
uuid_000000000007e0c6:
	movb $1, -2568(%rbp)
uuid_000000000007e0c8:
	mov -2584(%RBP),%RSP
	add $-2608, %RSP
uuid_000000000007e0cb:
	mov -2576(%RBP),%RSP
	add $-2608, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0cf
	jmp uuid_000000000007e0d1
uuid_000000000007e0cf:
	push %RBP
	mov -2448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0cc
	jmp uuid_000000000007e0ce
uuid_000000000007e0cc:
	movb $1, -2472(%rbp)
uuid_000000000007e0ce:
	mov -2616(%RBP),%RSP
	add $-2688, %RSP
uuid_000000000007e0d1:
	mov -2488(%RBP),%RSP
	add $-2688, %RSP
uuid_000000000007e0d4:
	mov -2480(%RBP),%RSP
	add $-2688, %RSP
	mov -2472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0e1
	jmp uuid_000000000007e0e3
uuid_000000000007e0e1:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0db
	jmp uuid_000000000007e0dd
uuid_000000000007e0db:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	jmp uuid_000000000007e0d8
	jmp uuid_000000000007e0da
uuid_000000000007e0d8:
	push %RBP
	mov -2704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e0d5
	jmp uuid_000000000007e0d7
uuid_000000000007e0d5:
	movb $1, -2776(%rbp)
uuid_000000000007e0d7:
	mov -2856(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007e0da:
	mov -2792(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007e0dd:
	mov -2784(%RBP),%RSP
	add $-2864, %RSP
	mov -2776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0de
	jmp uuid_000000000007e0e0
uuid_000000000007e0de:
	movb $1, -2376(%rbp)
uuid_000000000007e0e0:
	mov -2696(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007e0e3:
	mov -2392(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007e0e6:
	mov -2384(%RBP),%RSP
	add $-2864, %RSP
	mov -2376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0e7
	jmp uuid_000000000007e0e9
uuid_000000000007e0e7:
	movb $1, -2200(%rbp)
uuid_000000000007e0e9:
	mov -2296(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007e0ec:
	mov -2216(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007e0ef:
	mov -2208(%RBP),%RSP
	add $-2864, %RSP
	mov -2200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e22e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2944(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e111
	jmp uuid_000000000007e113
uuid_000000000007e111:
	push %RBP
	mov -2936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3040(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0f6
	jmp uuid_000000000007e0f8
uuid_000000000007e0f6:
	push %RBP
	jmp uuid_000000000007e0f3
	jmp uuid_000000000007e0f5
uuid_000000000007e0f3:
	push %RBP
	mov -2976(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0f0
	jmp uuid_000000000007e0f2
uuid_000000000007e0f0:
	movb $1, -3048(%rbp)
uuid_000000000007e0f2:
	mov -3072(%RBP),%RSP
	add $-3080, %RSP
uuid_000000000007e0f5:
	mov -3064(%RBP),%RSP
	add $-3080, %RSP
uuid_000000000007e0f8:
	mov -3056(%RBP),%RSP
	add $-3080, %RSP
	mov -3048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e10e
	jmp uuid_000000000007e110
uuid_000000000007e10e:
	push %RBP
	mov -2928(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e108
	jmp uuid_000000000007e10a
uuid_000000000007e108:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e105
	jmp uuid_000000000007e107
uuid_000000000007e105:
	push %RBP
	mov -3144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3336(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0ff
	jmp uuid_000000000007e101
uuid_000000000007e0ff:
	push %RBP
	pushq -3280(%RBP)
	pushq -3288(%RBP)
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	pushq -3320(%RBP)
	pushq -3328(%RBP)
	jmp uuid_000000000007e0fc
	jmp uuid_000000000007e0fe
uuid_000000000007e0fc:
	push %RBP
	mov -3272(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3432(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e0f9
	jmp uuid_000000000007e0fb
uuid_000000000007e0f9:
	movb $1, -3344(%rbp)
uuid_000000000007e0fb:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007e0fe:
	mov -3360(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007e101:
	mov -3352(%RBP),%RSP
	add $-3432, %RSP
	mov -3344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e102
	jmp uuid_000000000007e104
uuid_000000000007e102:
	movb $1, -3168(%rbp)
uuid_000000000007e104:
	mov -3264(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007e107:
	mov -3184(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007e10a:
	mov -3176(%RBP),%RSP
	add $-3432, %RSP
	mov -3168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e10b
	jmp uuid_000000000007e10d
uuid_000000000007e10b:
	movb $1, -2952(%rbp)
uuid_000000000007e10d:
	mov -3088(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007e110:
	mov -2968(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007e113:
	mov -2960(%RBP),%RSP
	add $-3432, %RSP
	mov -2952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e22b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e135
	jmp uuid_000000000007e137
uuid_000000000007e135:
	push %RBP
	mov -3504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e11a
	jmp uuid_000000000007e11c
uuid_000000000007e11a:
	push %RBP
	jmp uuid_000000000007e117
	jmp uuid_000000000007e119
uuid_000000000007e117:
	push %RBP
	mov -3544(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e114
	jmp uuid_000000000007e116
uuid_000000000007e114:
	movb $1, -3616(%rbp)
uuid_000000000007e116:
	mov -3640(%RBP),%RSP
	add $-3648, %RSP
uuid_000000000007e119:
	mov -3632(%RBP),%RSP
	add $-3648, %RSP
uuid_000000000007e11c:
	mov -3624(%RBP),%RSP
	add $-3648, %RSP
	mov -3616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e132
	jmp uuid_000000000007e134
uuid_000000000007e132:
	push %RBP
	mov -3496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e12c
	jmp uuid_000000000007e12e
uuid_000000000007e12c:
	push %RBP
	mov -3720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e129
	jmp uuid_000000000007e12b
uuid_000000000007e129:
	push %RBP
	mov -3712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e123
	jmp uuid_000000000007e125
uuid_000000000007e123:
	push %RBP
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	jmp uuid_000000000007e120
	jmp uuid_000000000007e122
uuid_000000000007e120:
	push %RBP
	mov -3840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq $uuid_000000000007a508
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e11d
	jmp uuid_000000000007e11f
uuid_000000000007e11d:
	movb $1, -3912(%rbp)
uuid_000000000007e11f:
	mov -3992(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007e122:
	mov -3928(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007e125:
	mov -3920(%RBP),%RSP
	add $-4000, %RSP
	mov -3912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e126
	jmp uuid_000000000007e128
uuid_000000000007e126:
	movb $1, -3736(%rbp)
uuid_000000000007e128:
	mov -3832(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007e12b:
	mov -3752(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007e12e:
	mov -3744(%RBP),%RSP
	add $-4000, %RSP
	mov -3736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e12f
	jmp uuid_000000000007e131
uuid_000000000007e12f:
	movb $1, -3520(%rbp)
uuid_000000000007e131:
	mov -3656(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007e134:
	mov -3536(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007e137:
	mov -3528(%RBP),%RSP
	add $-4000, %RSP
	mov -3520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e228
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e150
	jmp uuid_000000000007e152
uuid_000000000007e150:
	push %RBP
	mov -4072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e13e
	jmp uuid_000000000007e140
uuid_000000000007e13e:
	push %RBP
	jmp uuid_000000000007e13b
	jmp uuid_000000000007e13d
uuid_000000000007e13b:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e138
	jmp uuid_000000000007e13a
uuid_000000000007e138:
	movb $1, -4184(%rbp)
uuid_000000000007e13a:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e13d:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e140:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
	mov -4184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e14d
	jmp uuid_000000000007e14f
uuid_000000000007e14d:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e147
	jmp uuid_000000000007e149
uuid_000000000007e147:
	push %RBP
	pushq -4240(%RBP)
	pushq -4248(%RBP)
	pushq -4256(%RBP)
	pushq -4264(%RBP)
	pushq -4272(%RBP)
	pushq -4280(%RBP)
	pushq -4288(%RBP)
	jmp uuid_000000000007e144
	jmp uuid_000000000007e146
uuid_000000000007e144:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq $uuid_000000000007a824
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e141
	jmp uuid_000000000007e143
uuid_000000000007e141:
	movb $1, -4304(%rbp)
uuid_000000000007e143:
	mov -4384(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007e146:
	mov -4320(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007e149:
	mov -4312(%RBP),%RSP
	add $-4392, %RSP
	mov -4304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e14a
	jmp uuid_000000000007e14c
uuid_000000000007e14a:
	movb $1, -4088(%rbp)
uuid_000000000007e14c:
	mov -4224(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007e14f:
	mov -4104(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007e152:
	mov -4096(%RBP),%RSP
	add $-4392, %RSP
	mov -4088(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e225
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e16b
	jmp uuid_000000000007e16d
uuid_000000000007e16b:
	push %RBP
	mov -4464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e159
	jmp uuid_000000000007e15b
uuid_000000000007e159:
	push %RBP
	jmp uuid_000000000007e156
	jmp uuid_000000000007e158
uuid_000000000007e156:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e153
	jmp uuid_000000000007e155
uuid_000000000007e153:
	movb $1, -4576(%rbp)
uuid_000000000007e155:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007e158:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007e15b:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
	mov -4576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e168
	jmp uuid_000000000007e16a
uuid_000000000007e168:
	push %RBP
	mov -4456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e162
	jmp uuid_000000000007e164
uuid_000000000007e162:
	push %RBP
	pushq -4632(%RBP)
	pushq -4640(%RBP)
	pushq -4648(%RBP)
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	jmp uuid_000000000007e15f
	jmp uuid_000000000007e161
uuid_000000000007e15f:
	push %RBP
	mov -4624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4784(%rbp)
	pushq $uuid_000000000007a824
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e15c
	jmp uuid_000000000007e15e
uuid_000000000007e15c:
	movb $1, -4696(%rbp)
uuid_000000000007e15e:
	mov -4776(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007e161:
	mov -4712(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007e164:
	mov -4704(%RBP),%RSP
	add $-4784, %RSP
	mov -4696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e165
	jmp uuid_000000000007e167
uuid_000000000007e165:
	movb $1, -4480(%rbp)
uuid_000000000007e167:
	mov -4616(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007e16a:
	mov -4496(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007e16d:
	mov -4488(%RBP),%RSP
	add $-4784, %RSP
	mov -4480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e222
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e174
	jmp uuid_000000000007e176
uuid_000000000007e174:
	push %RBP
	pushq -4808(%RBP)
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	pushq -4848(%RBP)
	pushq -4856(%RBP)
	jmp uuid_000000000007e171
	jmp uuid_000000000007e173
uuid_000000000007e171:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e16e
	jmp uuid_000000000007e170
uuid_000000000007e16e:
	movb $1, -4872(%rbp)
uuid_000000000007e170:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007e173:
	mov -4888(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007e176:
	mov -4880(%RBP),%RSP
	add $-4960, %RSP
	mov -4872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e21f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e193
	jmp uuid_000000000007e195
uuid_000000000007e193:
	push %RBP
	pushq -4984(%RBP)
	pushq -4992(%RBP)
	pushq -5000(%RBP)
	pushq -5008(%RBP)
	pushq -5016(%RBP)
	pushq -5024(%RBP)
	pushq -5032(%RBP)
	jmp uuid_000000000007e190
	jmp uuid_000000000007e192
uuid_000000000007e190:
	push %RBP
	mov -4976(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e18d
	jmp uuid_000000000007e18f
uuid_000000000007e18d:
	movb $1, -5048(%rbp)
uuid_000000000007e18f:
	mov -5128(%RBP),%RSP
	add $-5136, %RSP
uuid_000000000007e192:
	mov -5064(%RBP),%RSP
	add $-5136, %RSP
uuid_000000000007e195:
	mov -5056(%RBP),%RSP
	add $-5136, %RSP
	mov -5048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e21c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1bb
	jmp uuid_000000000007e1bd
uuid_000000000007e1bb:
	push %RBP
	mov -5208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1b8
	jmp uuid_000000000007e1ba
uuid_000000000007e1b8:
	push %RBP
	mov -5200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1b2
	jmp uuid_000000000007e1b4
uuid_000000000007e1b2:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	jmp uuid_000000000007e1af
	jmp uuid_000000000007e1b1
uuid_000000000007e1af:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e1ac
	jmp uuid_000000000007e1ae
uuid_000000000007e1ac:
	movb $1, -5400(%rbp)
uuid_000000000007e1ae:
	mov -5480(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007e1b1:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007e1b4:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
	mov -5400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1b5
	jmp uuid_000000000007e1b7
uuid_000000000007e1b5:
	movb $1, -5224(%rbp)
uuid_000000000007e1b7:
	mov -5320(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007e1ba:
	mov -5240(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007e1bd:
	mov -5232(%RBP),%RSP
	add $-5488, %RSP
	mov -5224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e219
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1d9
	jmp uuid_000000000007e1db
uuid_000000000007e1d9:
	push %RBP
	mov -5560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1d6
	jmp uuid_000000000007e1d8
uuid_000000000007e1d6:
	push %RBP
	mov -5552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1d0
	jmp uuid_000000000007e1d2
uuid_000000000007e1d0:
	push %RBP
	mov -5736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1cd
	jmp uuid_000000000007e1cf
uuid_000000000007e1cd:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5920(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1c7
	jmp uuid_000000000007e1c9
uuid_000000000007e1c7:
	push %RBP
	pushq -5864(%RBP)
	pushq -5872(%RBP)
	pushq -5880(%RBP)
	pushq -5888(%RBP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	jmp uuid_000000000007e1c4
	jmp uuid_000000000007e1c6
uuid_000000000007e1c4:
	push %RBP
	mov -5856(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e1c1
	jmp uuid_000000000007e1c3
uuid_000000000007e1c1:
	movb $1, -5928(%rbp)
uuid_000000000007e1c3:
	mov -6008(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007e1c6:
	mov -5944(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007e1c9:
	mov -5936(%RBP),%RSP
	add $-6016, %RSP
	mov -5928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1ca
	jmp uuid_000000000007e1cc
uuid_000000000007e1ca:
	movb $1, -5752(%rbp)
uuid_000000000007e1cc:
	mov -5848(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007e1cf:
	mov -5768(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007e1d2:
	mov -5760(%RBP),%RSP
	add $-6016, %RSP
	mov -5752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1d3
	jmp uuid_000000000007e1d5
uuid_000000000007e1d3:
	movb $1, -5576(%rbp)
uuid_000000000007e1d5:
	mov -5672(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007e1d8:
	mov -5592(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007e1db:
	mov -5584(%RBP),%RSP
	add $-6016, %RSP
	mov -5576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e216
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6096(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1e5
	jmp uuid_000000000007e1e7
uuid_000000000007e1e5:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1e2
	jmp uuid_000000000007e1e4
uuid_000000000007e1e2:
	push %RBP
	mov -6080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1df
	jmp uuid_000000000007e1e1
uuid_000000000007e1df:
	movb $1, -6104(%rbp)
uuid_000000000007e1e1:
	mov -6200(%RBP),%RSP
	add $-6272, %RSP
uuid_000000000007e1e4:
	mov -6120(%RBP),%RSP
	add $-6272, %RSP
uuid_000000000007e1e7:
	mov -6112(%RBP),%RSP
	add $-6272, %RSP
	mov -6104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e213
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1ee
	jmp uuid_000000000007e1f0
uuid_000000000007e1ee:
	push %RBP
	mov -6344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1eb
	jmp uuid_000000000007e1ed
uuid_000000000007e1eb:
	push %RBP
	mov -6336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1e8
	jmp uuid_000000000007e1ea
uuid_000000000007e1e8:
	movb $1, -6360(%rbp)
uuid_000000000007e1ea:
	mov -6456(%RBP),%RSP
	add $-6528, %RSP
uuid_000000000007e1ed:
	mov -6376(%RBP),%RSP
	add $-6528, %RSP
uuid_000000000007e1f0:
	mov -6368(%RBP),%RSP
	add $-6528, %RSP
	mov -6360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e210
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6608(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1fa
	jmp uuid_000000000007e1fc
uuid_000000000007e1fa:
	push %RBP
	pushq -6584(%RBP)
	pushq -6592(%RBP)
	pushq -6600(%RBP)
	jmp uuid_000000000007e1f7
	jmp uuid_000000000007e1f9
uuid_000000000007e1f7:
	push %RBP
	mov -6576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1f4
	jmp uuid_000000000007e1f6
uuid_000000000007e1f4:
	push %RBP
	mov -6568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1f1
	jmp uuid_000000000007e1f3
uuid_000000000007e1f1:
	movb $1, -6616(%rbp)
uuid_000000000007e1f3:
	mov -6744(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007e1f6:
	mov -6664(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007e1f9:
	mov -6632(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007e1fc:
	mov -6624(%RBP),%RSP
	add $-6816, %RSP
	mov -6616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e20d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6896(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e203
	jmp uuid_000000000007e205
uuid_000000000007e203:
	push %RBP
	mov -6888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e200
	jmp uuid_000000000007e202
uuid_000000000007e200:
	push %RBP
	pushq -6832(%RBP)
	pushq -6840(%RBP)
	pushq -6848(%RBP)
	pushq -6856(%RBP)
	pushq -6864(%RBP)
	pushq -6872(%RBP)
	pushq -6880(%RBP)
	jmp uuid_000000000007e1fd
	jmp uuid_000000000007e1ff
uuid_000000000007e1fd:
	movb $1, -6904(%rbp)
uuid_000000000007e1ff:
	mov -7000(%RBP),%RSP
	add $-7056, %RSP
uuid_000000000007e202:
	mov -6920(%RBP),%RSP
	add $-7056, %RSP
uuid_000000000007e205:
	mov -6912(%RBP),%RSP
	add $-7056, %RSP
	mov -6904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e20a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007e207
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e206
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e209
uuid_000000000007e207:
	movq -7136(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -7128(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -7120(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -7112(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -7104(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -7096(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -7088(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -7080(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -7072(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007e209:
	mov -7064(%RBP),%RSP
	add $-7136, %RSP
	jmp uuid_000000000007e20c
uuid_000000000007e20a:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7008(%rbp)
	pushq -7016(%rbp)
	pushq -7024(%rbp)
	pushq -7032(%rbp)
	pushq -7040(%rbp)
	pushq -7048(%rbp)
	pushq -7056(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	pushq -6944(%rbp)
	pushq -6952(%rbp)
	pushq -6960(%rbp)
	pushq -6968(%rbp)
	pushq -6976(%rbp)
	pushq -6984(%rbp)
	pushq -6992(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e20c:
	mov -6824(%RBP),%RSP
	add $-7056, %RSP
	jmp uuid_000000000007e20f
uuid_000000000007e20d:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -6784(%rbp)
	pushq -6792(%rbp)
	pushq -6800(%rbp)
	pushq -6808(%rbp)
	pushq -6816(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -6704(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e20f:
	mov -6536(%RBP),%RSP
	add $-6816, %RSP
	jmp uuid_000000000007e212
uuid_000000000007e210:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6464(%rbp)
	pushq -6472(%rbp)
	pushq -6480(%rbp)
	pushq -6488(%rbp)
	pushq -6496(%rbp)
	pushq -6504(%rbp)
	pushq -6512(%rbp)
	pushq -6520(%rbp)
	pushq -6528(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq -6440(%rbp)
	pushq -6448(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e212:
	mov -6280(%RBP),%RSP
	add $-6528, %RSP
	jmp uuid_000000000007e215
uuid_000000000007e213:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -6232(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6128(%rbp)
	pushq -6136(%rbp)
	pushq -6144(%rbp)
	pushq -6152(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e215:
	mov -6024(%RBP),%RSP
	add $-6272, %RSP
	jmp uuid_000000000007e218
uuid_000000000007e216:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e1dc
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007e1de
uuid_000000000007e1dc:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -6096(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -6088(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -6080(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -6072(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -6064(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -6056(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -6048(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -6040(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -6032(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007e1de:
	mov -6024(%RBP),%RSP
	add $-6096, %RSP
uuid_000000000007e218:
	mov -5496(%RBP),%RSP
	add $-6096, %RSP
	jmp uuid_000000000007e21b
uuid_000000000007e219:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e1be
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007e1c0
uuid_000000000007e1be:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -5568(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -5504(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007e1c0:
	mov -5496(%RBP),%RSP
	add $-5568, %RSP
uuid_000000000007e21b:
	mov -5144(%RBP),%RSP
	add $-5568, %RSP
	jmp uuid_000000000007e21e
uuid_000000000007e21c:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007e1a9:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e1aa
	jmp uuid_000000000007e1ab
uuid_000000000007e1aa:
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	push %RBP
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq $0
	push %RBP
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e19f
	jmp uuid_000000000007e1a1
uuid_000000000007e19f:
	push %RBP
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	jmp uuid_000000000007e19c
	jmp uuid_000000000007e19e
uuid_000000000007e19c:
	push %RBP
	mov -5256(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e199
	jmp uuid_000000000007e19b
uuid_000000000007e199:
	push %RBP
	mov -5248(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e196
	jmp uuid_000000000007e198
uuid_000000000007e196:
	movb $1, -5296(%rbp)
uuid_000000000007e198:
	mov -5360(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007e19b:
	mov -5344(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007e19e:
	mov -5312(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007e1a1:
	mov -5304(%RBP),%RSP
	add $-5408, %RSP
	mov -5296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1a6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e1a5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e1a8
uuid_000000000007e1a6:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e1a2
	movq -5408(%rbp), %r15
	movq %r15, -5184(%rbp)
	movq -5400(%rbp), %r15
	movq %r15, -5176(%rbp)
	movq -5392(%rbp), %r15
	movq %r15, -5168(%rbp)
	movq -5384(%rbp), %r15
	movq %r15, -5160(%rbp)
	movq -5376(%rbp), %r15
	movq %r15, -5152(%rbp)
	movq -5368(%rbp), %r15
	movq %r15, -5144(%rbp)
	jmp uuid_000000000007e1a4
uuid_000000000007e1a2:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5424(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5184(%RBP)
	popq -5176(%RBP)
	popq -5168(%RBP)
	popq -5160(%RBP)
	popq -5152(%RBP)
	popq -5144(%RBP)
uuid_000000000007e1a4:
	mov -5416(%RBP),%RSP
	add $-5424, %RSP
uuid_000000000007e1a8:
	mov -5240(%RBP),%RSP
	add $-5424, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e1a9
uuid_000000000007e1ab:
uuid_000000000007e21e:
	mov -4968(%RBP),%RSP
	add $-5184, %RSP
	jmp uuid_000000000007e221
uuid_000000000007e21f:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007e18a:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e18b
	jmp uuid_000000000007e18c
uuid_000000000007e18b:
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	push %RBP
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e180
	jmp uuid_000000000007e182
uuid_000000000007e180:
	push %RBP
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	jmp uuid_000000000007e17d
	jmp uuid_000000000007e17f
uuid_000000000007e17d:
	push %RBP
	mov -5080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e17a
	jmp uuid_000000000007e17c
uuid_000000000007e17a:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e177
	jmp uuid_000000000007e179
uuid_000000000007e177:
	movb $1, -5120(%rbp)
uuid_000000000007e179:
	mov -5184(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007e17c:
	mov -5168(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007e17f:
	mov -5136(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007e182:
	mov -5128(%RBP),%RSP
	add $-5232, %RSP
	mov -5120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e187
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e186
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e189
uuid_000000000007e187:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e183
	movq -5232(%rbp), %r15
	movq %r15, -5008(%rbp)
	movq -5224(%rbp), %r15
	movq %r15, -5000(%rbp)
	movq -5216(%rbp), %r15
	movq %r15, -4992(%rbp)
	movq -5208(%rbp), %r15
	movq %r15, -4984(%rbp)
	movq -5200(%rbp), %r15
	movq %r15, -4976(%rbp)
	movq -5192(%rbp), %r15
	movq %r15, -4968(%rbp)
	jmp uuid_000000000007e185
uuid_000000000007e183:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -5248(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5008(%RBP)
	popq -5000(%RBP)
	popq -4992(%RBP)
	popq -4984(%RBP)
	popq -4976(%RBP)
	popq -4968(%RBP)
uuid_000000000007e185:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007e189:
	mov -5064(%RBP),%RSP
	add $-5248, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e18a
uuid_000000000007e18c:
uuid_000000000007e221:
	mov -4792(%RBP),%RSP
	add $-5008, %RSP
	jmp uuid_000000000007e224
uuid_000000000007e222:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a824
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e224:
	mov -4400(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_000000000007e227
uuid_000000000007e225:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a824
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e227:
	mov -4008(%RBP),%RSP
	add $-4392, %RSP
	jmp uuid_000000000007e22a
uuid_000000000007e228:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a508
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3648(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e22a:
	mov -3440(%RBP),%RSP
	add $-4000, %RSP
	jmp uuid_000000000007e22d
uuid_000000000007e22b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a508
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq -3376(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e22d:
	mov -2872(%RBP),%RSP
	add $-3432, %RSP
	jmp uuid_000000000007e230
uuid_000000000007e22e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a508
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e230:
	mov -2120(%RBP),%RSP
	add $-2864, %RSP
	jmp uuid_000000000007e233
uuid_000000000007e231:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e233:
	mov -1552(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_000000000007e236
uuid_000000000007e234:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e236:
	mov -984(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007e239
uuid_000000000007e237:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e239:
	mov -232(%RBP),%RSP
	add $-976, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_is_SB_suffixed_CL_ArrowU64String:
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007e24d:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e24e
	jmp uuid_000000000007e24f
uuid_000000000007e24e:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e243
	jmp uuid_000000000007e245
uuid_000000000007e243:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007e240
	jmp uuid_000000000007e242
uuid_000000000007e240:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e23d
	jmp uuid_000000000007e23f
uuid_000000000007e23d:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e23a
	jmp uuid_000000000007e23c
uuid_000000000007e23a:
	movb $1, -184(%rbp)
uuid_000000000007e23c:
	mov -248(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007e23f:
	mov -232(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007e242:
	mov -200(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007e245:
	mov -192(%RBP),%RSP
	add $-296, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e24a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e249
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e24c
uuid_000000000007e24a:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e246
	jmp uuid_000000000007e248
uuid_000000000007e246:
	movq $1, -24(%rbp)
uuid_000000000007e248:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	movq -296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007e24c:
	mov -128(%RBP),%RSP
	add $-304, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e24d
uuid_000000000007e24f:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
preprocess_CL_ArrowNilNil:
#call function index-typedefs : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_SB_uuids_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e268
	jmp uuid_000000000007e26a
uuid_000000000007e268:
	push %RBP
	mov -392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e256
	jmp uuid_000000000007e258
uuid_000000000007e256:
	push %RBP
	jmp uuid_000000000007e253
	jmp uuid_000000000007e255
uuid_000000000007e253:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e250
	jmp uuid_000000000007e252
uuid_000000000007e250:
	movb $1, -504(%rbp)
uuid_000000000007e252:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007e255:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007e258:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e265
	jmp uuid_000000000007e267
uuid_000000000007e265:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e25f
	jmp uuid_000000000007e261
uuid_000000000007e25f:
	push %RBP
	jmp uuid_000000000007e25c
	jmp uuid_000000000007e25e
uuid_000000000007e25c:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $uuid_000000000007db07
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e259
	jmp uuid_000000000007e25b
uuid_000000000007e259:
	movb $1, -624(%rbp)
uuid_000000000007e25b:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007e25e:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007e261:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e262
	jmp uuid_000000000007e264
uuid_000000000007e262:
	movb $1, -408(%rbp)
uuid_000000000007e264:
	mov -544(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007e267:
	mov -424(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007e26a:
	mov -416(%RBP),%RSP
	add $-656, %RSP
	mov -408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2eb
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e28a
	jmp uuid_000000000007e28c
uuid_000000000007e28a:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e287
	jmp uuid_000000000007e289
uuid_000000000007e287:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e284
	jmp uuid_000000000007e286
uuid_000000000007e284:
	movb $1, -744(%rbp)
uuid_000000000007e286:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e289:
	mov -760(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e28c:
	mov -752(%RBP),%RSP
	add $-912, %RSP
	mov -744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2e8
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e296
	jmp uuid_000000000007e298
uuid_000000000007e296:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007e293
	jmp uuid_000000000007e295
uuid_000000000007e293:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e290
	jmp uuid_000000000007e292
uuid_000000000007e290:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e28d
	jmp uuid_000000000007e28f
uuid_000000000007e28d:
	movb $1, -1000(%rbp)
uuid_000000000007e28f:
	mov -1128(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007e292:
	mov -1048(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007e295:
	mov -1016(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007e298:
	mov -1008(%RBP),%RSP
	add $-1200, %RSP
	mov -1000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2e5
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2e2
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2df
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e29c
	jmp uuid_000000000007e29e
uuid_000000000007e29c:
	push %RBP
	jmp uuid_000000000007e299
	jmp uuid_000000000007e29b
uuid_000000000007e299:
	movb $1, -1448(%rbp)
uuid_000000000007e29b:
	mov -1464(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007e29e:
	mov -1456(%RBP),%RSP
	add $-1464, %RSP
	mov -1448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2dc
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2a5
	jmp uuid_000000000007e2a7
uuid_000000000007e2a5:
	push %RBP
	jmp uuid_000000000007e2a2
	jmp uuid_000000000007e2a4
uuid_000000000007e2a2:
	push %RBP
	mov -1480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e29f
	jmp uuid_000000000007e2a1
uuid_000000000007e29f:
	movb $1, -1552(%rbp)
uuid_000000000007e2a1:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e2a4:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e2a7:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
	mov -1552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2d9
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2ae
	jmp uuid_000000000007e2b0
uuid_000000000007e2ae:
	push %RBP
	jmp uuid_000000000007e2ab
	jmp uuid_000000000007e2ad
uuid_000000000007e2ab:
	push %RBP
	mov -1600(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e2a8
	jmp uuid_000000000007e2aa
uuid_000000000007e2a8:
	movb $1, -1672(%rbp)
uuid_000000000007e2aa:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007e2ad:
	mov -1688(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007e2b0:
	mov -1680(%RBP),%RSP
	add $-1704, %RSP
	mov -1672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2d6
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2b7
	jmp uuid_000000000007e2b9
uuid_000000000007e2b7:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e2b4
	jmp uuid_000000000007e2b6
uuid_000000000007e2b4:
	push %RBP
	mov -1768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e2b1
	jmp uuid_000000000007e2b3
uuid_000000000007e2b1:
	movb $1, -1792(%rbp)
uuid_000000000007e2b3:
	mov -1888(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007e2b6:
	mov -1808(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007e2b9:
	mov -1800(%RBP),%RSP
	add $-1960, %RSP
	mov -1792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2d3
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2c0
	jmp uuid_000000000007e2c2
uuid_000000000007e2c0:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e2bd
	jmp uuid_000000000007e2bf
uuid_000000000007e2bd:
	push %RBP
	mov -2024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e2ba
	jmp uuid_000000000007e2bc
uuid_000000000007e2ba:
	movb $1, -2048(%rbp)
uuid_000000000007e2bc:
	mov -2144(%RBP),%RSP
	add $-2216, %RSP
uuid_000000000007e2bf:
	mov -2064(%RBP),%RSP
	add $-2216, %RSP
uuid_000000000007e2c2:
	mov -2056(%RBP),%RSP
	add $-2216, %RSP
	mov -2048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2d0
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2c9
	jmp uuid_000000000007e2cb
uuid_000000000007e2c9:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e2c6
	jmp uuid_000000000007e2c8
uuid_000000000007e2c6:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	jmp uuid_000000000007e2c3
	jmp uuid_000000000007e2c5
uuid_000000000007e2c3:
	movb $1, -2304(%rbp)
uuid_000000000007e2c5:
	mov -2400(%RBP),%RSP
	add $-2456, %RSP
uuid_000000000007e2c8:
	mov -2320(%RBP),%RSP
	add $-2456, %RSP
uuid_000000000007e2cb:
	mov -2312(%RBP),%RSP
	add $-2456, %RSP
	mov -2304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2cd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e2cc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e2cf
uuid_000000000007e2cd:
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007e2cf:
	mov -2224(%RBP),%RSP
	add $-2456, %RSP
	jmp uuid_000000000007e2d2
uuid_000000000007e2d0:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007e2d2:
	mov -1968(%RBP),%RSP
	add $-2216, %RSP
	jmp uuid_000000000007e2d5
uuid_000000000007e2d3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007e2d5:
	mov -1712(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_000000000007e2d8
uuid_000000000007e2d6:
uuid_000000000007e2d8:
	mov -1592(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_000000000007e2db
uuid_000000000007e2d9:
uuid_000000000007e2db:
	mov -1472(%RBP),%RSP
	add $-1584, %RSP
	jmp uuid_000000000007e2de
uuid_000000000007e2dc:
uuid_000000000007e2de:
	mov -1368(%RBP),%RSP
	add $-1464, %RSP
	jmp uuid_000000000007e2e1
uuid_000000000007e2df:
uuid_000000000007e2e1:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007e2e4
uuid_000000000007e2e2:
uuid_000000000007e2e4:
	mov -1208(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007e2e7
uuid_000000000007e2e5:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007e2e7:
	mov -920(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_000000000007e2ea
uuid_000000000007e2e8:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007e2ea:
	mov -664(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007e2ed
uuid_000000000007e2eb:
uuid_000000000007e281:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e282
	jmp uuid_000000000007e283
uuid_000000000007e282:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e274
	jmp uuid_000000000007e276
uuid_000000000007e274:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_000000000007e271
	jmp uuid_000000000007e273
uuid_000000000007e271:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e26e
	jmp uuid_000000000007e270
uuid_000000000007e26e:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e26b
	jmp uuid_000000000007e26d
uuid_000000000007e26b:
	movb $1, -864(%rbp)
uuid_000000000007e26d:
	mov -976(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e270:
	mov -960(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e273:
	mov -880(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e276:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
	mov -864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e27e
	push %RBP
	jmp uuid_000000000007e27b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e27a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e27d
uuid_000000000007e27b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e27d:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007e280
uuid_000000000007e27e:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e277
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007e279
uuid_000000000007e277:
	movq -952(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e279:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007e280:
	mov -760(%RBP),%RSP
	add $-1080, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e281
uuid_000000000007e283:
uuid_000000000007e2ed:
	mov -328(%RBP),%RSP
	add $-656, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2f4
	jmp uuid_000000000007e2f6
uuid_000000000007e2f4:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2f1
	jmp uuid_000000000007e2f3
uuid_000000000007e2f1:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2ee
	jmp uuid_000000000007e2f0
uuid_000000000007e2ee:
	movb $1, -600(%rbp)
uuid_000000000007e2f0:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007e2f3:
	mov -616(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007e2f6:
	mov -608(%RBP),%RSP
	add $-768, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5a2
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e345
	jmp uuid_000000000007e347
uuid_000000000007e345:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq $0
	push %RBP
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e30f
	jmp uuid_000000000007e311
uuid_000000000007e30f:
	push %RBP
	jmp uuid_000000000007e30c
	jmp uuid_000000000007e30e
uuid_000000000007e30c:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e306
	jmp uuid_000000000007e308
uuid_000000000007e306:
	push %RBP
	jmp uuid_000000000007e303
	jmp uuid_000000000007e305
uuid_000000000007e303:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2fd
	jmp uuid_000000000007e2ff
uuid_000000000007e2fd:
	push %RBP
	jmp uuid_000000000007e2fa
	jmp uuid_000000000007e2fc
uuid_000000000007e2fa:
	push %RBP
	mov -1168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e2f7
	jmp uuid_000000000007e2f9
uuid_000000000007e2f7:
	movb $1, -1240(%rbp)
uuid_000000000007e2f9:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007e2fc:
	mov -1256(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007e2ff:
	mov -1248(%RBP),%RSP
	add $-1272, %RSP
	mov -1240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e300
	jmp uuid_000000000007e302
uuid_000000000007e300:
	movb $1, -1136(%rbp)
uuid_000000000007e302:
	mov -1160(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007e305:
	mov -1152(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007e308:
	mov -1144(%RBP),%RSP
	add $-1272, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e309
	jmp uuid_000000000007e30b
uuid_000000000007e309:
	movb $1, -1032(%rbp)
uuid_000000000007e30b:
	mov -1056(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007e30e:
	mov -1048(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007e311:
	mov -1040(%RBP),%RSP
	add $-1272, %RSP
	mov -1032(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e342
	jmp uuid_000000000007e344
uuid_000000000007e342:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e33c
	jmp uuid_000000000007e33e
uuid_000000000007e33c:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e318
	jmp uuid_000000000007e31a
uuid_000000000007e318:
	push %RBP
	jmp uuid_000000000007e315
	jmp uuid_000000000007e317
uuid_000000000007e315:
	push %RBP
	jmp uuid_000000000007e312
	jmp uuid_000000000007e314
uuid_000000000007e312:
	movb $1, -1456(%rbp)
uuid_000000000007e314:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007e317:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007e31a:
	mov -1464(%RBP),%RSP
	add $-1480, %RSP
	mov -1456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e339
	jmp uuid_000000000007e33b
uuid_000000000007e339:
	push %RBP
	mov -1336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e333
	jmp uuid_000000000007e335
uuid_000000000007e333:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e321
	jmp uuid_000000000007e323
uuid_000000000007e321:
	push %RBP
	jmp uuid_000000000007e31e
	jmp uuid_000000000007e320
uuid_000000000007e31e:
	push %RBP
	jmp uuid_000000000007e31b
	jmp uuid_000000000007e31d
uuid_000000000007e31b:
	movb $1, -1664(%rbp)
uuid_000000000007e31d:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e320:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e323:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e330
	jmp uuid_000000000007e332
uuid_000000000007e330:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e32a
	jmp uuid_000000000007e32c
uuid_000000000007e32a:
	push %RBP
	jmp uuid_000000000007e327
	jmp uuid_000000000007e329
uuid_000000000007e327:
	push %RBP
	jmp uuid_000000000007e324
	jmp uuid_000000000007e326
uuid_000000000007e324:
	movb $1, -1776(%rbp)
uuid_000000000007e326:
	mov -1800(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e329:
	mov -1792(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e32c:
	mov -1784(%RBP),%RSP
	add $-1800, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e32d
	jmp uuid_000000000007e32f
uuid_000000000007e32d:
	movb $1, -1568(%rbp)
uuid_000000000007e32f:
	mov -1696(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e332:
	mov -1584(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e335:
	mov -1576(%RBP),%RSP
	add $-1800, %RSP
	mov -1568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e336
	jmp uuid_000000000007e338
uuid_000000000007e336:
	movb $1, -1360(%rbp)
uuid_000000000007e338:
	mov -1488(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e33b:
	mov -1376(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e33e:
	mov -1368(%RBP),%RSP
	add $-1800, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e33f
	jmp uuid_000000000007e341
uuid_000000000007e33f:
	movb $1, -936(%rbp)
uuid_000000000007e341:
	mov -1280(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e344:
	mov -952(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007e347:
	mov -944(%RBP),%RSP
	add $-1800, %RSP
	mov -936(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e59f
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e394
	jmp uuid_000000000007e396
uuid_000000000007e394:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq $0
	push %RBP
	mov -2056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e36f
	jmp uuid_000000000007e371
uuid_000000000007e36f:
	push %RBP
	mov -2048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e35d
	jmp uuid_000000000007e35f
uuid_000000000007e35d:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2248(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e34b
	jmp uuid_000000000007e34d
uuid_000000000007e34b:
	push %RBP
	jmp uuid_000000000007e348
	jmp uuid_000000000007e34a
uuid_000000000007e348:
	movb $1, -2256(%rbp)
uuid_000000000007e34a:
	mov -2272(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007e34d:
	mov -2264(%RBP),%RSP
	add $-2272, %RSP
	mov -2256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e35a
	jmp uuid_000000000007e35c
uuid_000000000007e35a:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2352(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e354
	jmp uuid_000000000007e356
uuid_000000000007e354:
	push %RBP
	jmp uuid_000000000007e351
	jmp uuid_000000000007e353
uuid_000000000007e351:
	push %RBP
	jmp uuid_000000000007e34e
	jmp uuid_000000000007e350
uuid_000000000007e34e:
	movb $1, -2360(%rbp)
uuid_000000000007e350:
	mov -2384(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007e353:
	mov -2376(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007e356:
	mov -2368(%RBP),%RSP
	add $-2384, %RSP
	mov -2360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e357
	jmp uuid_000000000007e359
uuid_000000000007e357:
	movb $1, -2160(%rbp)
uuid_000000000007e359:
	mov -2280(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007e35c:
	mov -2176(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007e35f:
	mov -2168(%RBP),%RSP
	add $-2384, %RSP
	mov -2160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e36c
	jmp uuid_000000000007e36e
uuid_000000000007e36c:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e366
	jmp uuid_000000000007e368
uuid_000000000007e366:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	jmp uuid_000000000007e363
	jmp uuid_000000000007e365
uuid_000000000007e363:
	push %RBP
	mov -2400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e360
	jmp uuid_000000000007e362
uuid_000000000007e360:
	movb $1, -2472(%rbp)
uuid_000000000007e362:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e365:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e368:
	mov -2480(%RBP),%RSP
	add $-2560, %RSP
	mov -2472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e369
	jmp uuid_000000000007e36b
uuid_000000000007e369:
	movb $1, -2064(%rbp)
uuid_000000000007e36b:
	mov -2392(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e36e:
	mov -2080(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e371:
	mov -2072(%RBP),%RSP
	add $-2560, %RSP
	mov -2064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e391
	jmp uuid_000000000007e393
uuid_000000000007e391:
	push %RBP
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq $0
	push %RBP
	mov -2640(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e38b
	jmp uuid_000000000007e38d
uuid_000000000007e38b:
	push %RBP
	mov -2632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e378
	jmp uuid_000000000007e37a
uuid_000000000007e378:
	push %RBP
	jmp uuid_000000000007e375
	jmp uuid_000000000007e377
uuid_000000000007e375:
	push %RBP
	mov -2672(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e372
	jmp uuid_000000000007e374
uuid_000000000007e372:
	movb $1, -2744(%rbp)
uuid_000000000007e374:
	mov -2768(%RBP),%RSP
	add $-2776, %RSP
uuid_000000000007e377:
	mov -2760(%RBP),%RSP
	add $-2776, %RSP
uuid_000000000007e37a:
	mov -2752(%RBP),%RSP
	add $-2776, %RSP
	mov -2744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e388
	jmp uuid_000000000007e38a
uuid_000000000007e388:
	push %RBP
	mov -2624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e382
	jmp uuid_000000000007e384
uuid_000000000007e382:
	push %RBP
	jmp uuid_000000000007e37f
	jmp uuid_000000000007e381
uuid_000000000007e37f:
	push %RBP
	mov -2792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2896(%rbp)
	pushq $uuid_000000000007e37b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e37c
	jmp uuid_000000000007e37e
uuid_000000000007e37c:
	movb $1, -2864(%rbp)
uuid_000000000007e37e:
	mov -2888(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007e381:
	mov -2880(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007e384:
	mov -2872(%RBP),%RSP
	add $-2896, %RSP
	mov -2864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e385
	jmp uuid_000000000007e387
uuid_000000000007e385:
	movb $1, -2648(%rbp)
uuid_000000000007e387:
	mov -2784(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007e38a:
	mov -2664(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007e38d:
	mov -2656(%RBP),%RSP
	add $-2896, %RSP
	mov -2648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e38e
	jmp uuid_000000000007e390
uuid_000000000007e38e:
	movb $1, -1968(%rbp)
uuid_000000000007e390:
	mov -2568(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007e393:
	mov -1984(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007e396:
	mov -1976(%RBP),%RSP
	add $-2896, %RSP
	mov -1968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e59c
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3ca
	jmp uuid_000000000007e3cc
uuid_000000000007e3ca:
	push %RBP
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq $0
	push %RBP
	mov -3152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3a6
	jmp uuid_000000000007e3a8
uuid_000000000007e3a6:
	push %RBP
	jmp uuid_000000000007e3a3
	jmp uuid_000000000007e3a5
uuid_000000000007e3a3:
	push %RBP
	mov -3136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e39d
	jmp uuid_000000000007e39f
uuid_000000000007e39d:
	push %RBP
	jmp uuid_000000000007e39a
	jmp uuid_000000000007e39c
uuid_000000000007e39a:
	push %RBP
	mov -3192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e397
	jmp uuid_000000000007e399
uuid_000000000007e397:
	movb $1, -3264(%rbp)
uuid_000000000007e399:
	mov -3288(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007e39c:
	mov -3280(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007e39f:
	mov -3272(%RBP),%RSP
	add $-3296, %RSP
	mov -3264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3a0
	jmp uuid_000000000007e3a2
uuid_000000000007e3a0:
	movb $1, -3160(%rbp)
uuid_000000000007e3a2:
	mov -3184(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007e3a5:
	mov -3176(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007e3a8:
	mov -3168(%RBP),%RSP
	add $-3296, %RSP
	mov -3160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3c7
	jmp uuid_000000000007e3c9
uuid_000000000007e3c7:
	push %RBP
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3c1
	jmp uuid_000000000007e3c3
uuid_000000000007e3c1:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3472(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3af
	jmp uuid_000000000007e3b1
uuid_000000000007e3af:
	push %RBP
	jmp uuid_000000000007e3ac
	jmp uuid_000000000007e3ae
uuid_000000000007e3ac:
	push %RBP
	jmp uuid_000000000007e3a9
	jmp uuid_000000000007e3ab
uuid_000000000007e3a9:
	movb $1, -3480(%rbp)
uuid_000000000007e3ab:
	mov -3504(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007e3ae:
	mov -3496(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007e3b1:
	mov -3488(%RBP),%RSP
	add $-3504, %RSP
	mov -3480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3be
	jmp uuid_000000000007e3c0
uuid_000000000007e3be:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3584(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3b8
	jmp uuid_000000000007e3ba
uuid_000000000007e3b8:
	push %RBP
	jmp uuid_000000000007e3b5
	jmp uuid_000000000007e3b7
uuid_000000000007e3b5:
	push %RBP
	jmp uuid_000000000007e3b2
	jmp uuid_000000000007e3b4
uuid_000000000007e3b2:
	movb $1, -3592(%rbp)
uuid_000000000007e3b4:
	mov -3616(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007e3b7:
	mov -3608(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007e3ba:
	mov -3600(%RBP),%RSP
	add $-3616, %RSP
	mov -3592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3bb
	jmp uuid_000000000007e3bd
uuid_000000000007e3bb:
	movb $1, -3384(%rbp)
uuid_000000000007e3bd:
	mov -3512(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007e3c0:
	mov -3400(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007e3c3:
	mov -3392(%RBP),%RSP
	add $-3616, %RSP
	mov -3384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3c4
	jmp uuid_000000000007e3c6
uuid_000000000007e3c4:
	movb $1, -3064(%rbp)
uuid_000000000007e3c6:
	mov -3304(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007e3c9:
	mov -3080(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007e3cc:
	mov -3072(%RBP),%RSP
	add $-3616, %RSP
	mov -3064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e599
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e40d
	jmp uuid_000000000007e40f
uuid_000000000007e40d:
	push %RBP
	pushq -3704(%RBP)
	pushq -3712(%RBP)
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	pushq -3744(%RBP)
	pushq -3752(%RBP)
	pushq -3760(%RBP)
	pushq -3768(%RBP)
	pushq $0
	push %RBP
	mov -3872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3fb
	jmp uuid_000000000007e3fd
uuid_000000000007e3fb:
	push %RBP
	mov -3864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3f8
	jmp uuid_000000000007e3fa
uuid_000000000007e3f8:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3f5
	jmp uuid_000000000007e3f7
uuid_000000000007e3f5:
	movb $1, -3880(%rbp)
uuid_000000000007e3f7:
	mov -3976(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007e3fa:
	mov -3896(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007e3fd:
	mov -3888(%RBP),%RSP
	add $-4048, %RSP
	mov -3880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e40a
	jmp uuid_000000000007e40c
uuid_000000000007e40a:
	push %RBP
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq -3656(%RBP)
	pushq -3664(%RBP)
	pushq -3672(%RBP)
	pushq -3680(%RBP)
	pushq -3688(%RBP)
	pushq -3696(%RBP)
	pushq $0
	push %RBP
	mov -4128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e404
	jmp uuid_000000000007e406
uuid_000000000007e404:
	push %RBP
	mov -4120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e401
	jmp uuid_000000000007e403
uuid_000000000007e401:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3fe
	jmp uuid_000000000007e400
uuid_000000000007e3fe:
	movb $1, -4136(%rbp)
uuid_000000000007e400:
	mov -4232(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007e403:
	mov -4152(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007e406:
	mov -4144(%RBP),%RSP
	add $-4304, %RSP
	mov -4136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e407
	jmp uuid_000000000007e409
uuid_000000000007e407:
	movb $1, -3784(%rbp)
uuid_000000000007e409:
	mov -4056(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007e40c:
	mov -3800(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007e40f:
	mov -3792(%RBP),%RSP
	add $-4304, %RSP
	mov -3784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e596
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -4464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e434
	jmp uuid_000000000007e436
uuid_000000000007e434:
	push %RBP
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq -4408(%RBP)
	pushq -4416(%RBP)
	pushq -4424(%RBP)
	pushq -4432(%RBP)
	pushq -4440(%RBP)
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq $0
	push %RBP
	mov -4560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e41f
	jmp uuid_000000000007e421
uuid_000000000007e41f:
	push %RBP
	pushq -4536(%RBP)
	pushq -4544(%RBP)
	pushq -4552(%RBP)
	jmp uuid_000000000007e41c
	jmp uuid_000000000007e41e
uuid_000000000007e41c:
	push %RBP
	mov -4528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e419
	jmp uuid_000000000007e41b
uuid_000000000007e419:
	push %RBP
	mov -4520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e416
	jmp uuid_000000000007e418
uuid_000000000007e416:
	movb $1, -4568(%rbp)
uuid_000000000007e418:
	mov -4696(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007e41b:
	mov -4616(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007e41e:
	mov -4584(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007e421:
	mov -4576(%RBP),%RSP
	add $-4768, %RSP
	mov -4568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e431
	jmp uuid_000000000007e433
uuid_000000000007e431:
	push %RBP
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq -4384(%RBP)
	pushq $0
	push %RBP
	mov -4848(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e42b
	jmp uuid_000000000007e42d
uuid_000000000007e42b:
	push %RBP
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	jmp uuid_000000000007e428
	jmp uuid_000000000007e42a
uuid_000000000007e428:
	push %RBP
	mov -4816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e425
	jmp uuid_000000000007e427
uuid_000000000007e425:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e422
	jmp uuid_000000000007e424
uuid_000000000007e422:
	movb $1, -4856(%rbp)
uuid_000000000007e424:
	mov -4984(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007e427:
	mov -4904(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007e42a:
	mov -4872(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007e42d:
	mov -4864(%RBP),%RSP
	add $-5056, %RSP
	mov -4856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e42e
	jmp uuid_000000000007e430
uuid_000000000007e42e:
	movb $1, -4472(%rbp)
uuid_000000000007e430:
	mov -4776(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007e433:
	mov -4488(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007e436:
	mov -4480(%RBP),%RSP
	add $-5056, %RSP
	mov -4472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e593
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e456
	jmp uuid_000000000007e458
uuid_000000000007e456:
	push %RBP
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	pushq -5160(%RBP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
	pushq -5192(%RBP)
	pushq -5200(%RBP)
	pushq -5208(%RBP)
	pushq $0
	push %RBP
	mov -5312(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e443
	jmp uuid_000000000007e445
uuid_000000000007e443:
	push %RBP
	jmp uuid_000000000007e440
	jmp uuid_000000000007e442
uuid_000000000007e440:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5352(%rbp)
	pushq $uuid_000000000007df66
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e43d
	jmp uuid_000000000007e43f
uuid_000000000007e43d:
	movb $1, -5320(%rbp)
uuid_000000000007e43f:
	mov -5344(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007e442:
	mov -5336(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007e445:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
	mov -5320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e453
	jmp uuid_000000000007e455
uuid_000000000007e453:
	push %RBP
	pushq -5072(%RBP)
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	pushq -5112(%RBP)
	pushq -5120(%RBP)
	pushq -5128(%RBP)
	pushq -5136(%RBP)
	pushq $0
	push %RBP
	mov -5432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e44d
	jmp uuid_000000000007e44f
uuid_000000000007e44d:
	push %RBP
	jmp uuid_000000000007e44a
	jmp uuid_000000000007e44c
uuid_000000000007e44a:
	push %RBP
	mov -5368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq $uuid_000000000007e446
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e447
	jmp uuid_000000000007e449
uuid_000000000007e447:
	movb $1, -5440(%rbp)
uuid_000000000007e449:
	mov -5464(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007e44c:
	mov -5456(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007e44f:
	mov -5448(%RBP),%RSP
	add $-5472, %RSP
	mov -5440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e450
	jmp uuid_000000000007e452
uuid_000000000007e450:
	movb $1, -5224(%rbp)
uuid_000000000007e452:
	mov -5360(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007e455:
	mov -5240(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007e458:
	mov -5232(%RBP),%RSP
	add $-5472, %RSP
	mov -5224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e590
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e471
	jmp uuid_000000000007e473
uuid_000000000007e471:
	push %RBP
	pushq -5560(%RBP)
	pushq -5568(%RBP)
	pushq -5576(%RBP)
	pushq -5584(%RBP)
	pushq -5592(%RBP)
	pushq -5600(%RBP)
	pushq -5608(%RBP)
	pushq -5616(%RBP)
	pushq -5624(%RBP)
	pushq $0
	push %RBP
	mov -5728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e45f
	jmp uuid_000000000007e461
uuid_000000000007e45f:
	push %RBP
	jmp uuid_000000000007e45c
	jmp uuid_000000000007e45e
uuid_000000000007e45c:
	push %RBP
	mov -5664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e459
	jmp uuid_000000000007e45b
uuid_000000000007e459:
	movb $1, -5736(%rbp)
uuid_000000000007e45b:
	mov -5760(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007e45e:
	mov -5752(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007e461:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
	mov -5736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e46e
	jmp uuid_000000000007e470
uuid_000000000007e46e:
	push %RBP
	pushq -5488(%RBP)
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	pushq -5520(%RBP)
	pushq -5528(%RBP)
	pushq -5536(%RBP)
	pushq -5544(%RBP)
	pushq -5552(%RBP)
	pushq $0
	push %RBP
	mov -5848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e468
	jmp uuid_000000000007e46a
uuid_000000000007e468:
	push %RBP
	jmp uuid_000000000007e465
	jmp uuid_000000000007e467
uuid_000000000007e465:
	push %RBP
	mov -5784(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e462
	jmp uuid_000000000007e464
uuid_000000000007e462:
	movb $1, -5856(%rbp)
uuid_000000000007e464:
	mov -5880(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007e467:
	mov -5872(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007e46a:
	mov -5864(%RBP),%RSP
	add $-5888, %RSP
	mov -5856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e46b
	jmp uuid_000000000007e46d
uuid_000000000007e46b:
	movb $1, -5640(%rbp)
uuid_000000000007e46d:
	mov -5776(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007e470:
	mov -5656(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007e473:
	mov -5648(%RBP),%RSP
	add $-5888, %RSP
	mov -5640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e58d
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e48f
	jmp uuid_000000000007e491
uuid_000000000007e48f:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	pushq -6032(%RBP)
	pushq -6040(%RBP)
	pushq $0
	push %RBP
	mov -6144(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e47d
	jmp uuid_000000000007e47f
uuid_000000000007e47d:
	push %RBP
	jmp uuid_000000000007e47a
	jmp uuid_000000000007e47c
uuid_000000000007e47a:
	push %RBP
	mov -6080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e477
	jmp uuid_000000000007e479
uuid_000000000007e477:
	movb $1, -6152(%rbp)
uuid_000000000007e479:
	mov -6176(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007e47c:
	mov -6168(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007e47f:
	mov -6160(%RBP),%RSP
	add $-6184, %RSP
	mov -6152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e48c
	jmp uuid_000000000007e48e
uuid_000000000007e48c:
	push %RBP
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
	pushq -5936(%RBP)
	pushq -5944(%RBP)
	pushq -5952(%RBP)
	pushq -5960(%RBP)
	pushq -5968(%RBP)
	pushq $0
	push %RBP
	mov -6264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e486
	jmp uuid_000000000007e488
uuid_000000000007e486:
	push %RBP
	jmp uuid_000000000007e483
	jmp uuid_000000000007e485
uuid_000000000007e483:
	push %RBP
	mov -6200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e480
	jmp uuid_000000000007e482
uuid_000000000007e480:
	movb $1, -6272(%rbp)
uuid_000000000007e482:
	mov -6296(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007e485:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007e488:
	mov -6280(%RBP),%RSP
	add $-6304, %RSP
	mov -6272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e489
	jmp uuid_000000000007e48b
uuid_000000000007e489:
	movb $1, -6056(%rbp)
uuid_000000000007e48b:
	mov -6192(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007e48e:
	mov -6072(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007e491:
	mov -6064(%RBP),%RSP
	add $-6304, %RSP
	mov -6056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e58a
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4bf
	jmp uuid_000000000007e4c1
uuid_000000000007e4bf:
	push %RBP
	pushq -6392(%RBP)
	pushq -6400(%RBP)
	pushq -6408(%RBP)
	pushq -6416(%RBP)
	pushq -6424(%RBP)
	pushq -6432(%RBP)
	pushq -6440(%RBP)
	pushq -6448(%RBP)
	pushq -6456(%RBP)
	pushq $0
	push %RBP
	mov -6560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e49b
	jmp uuid_000000000007e49d
uuid_000000000007e49b:
	push %RBP
	pushq -6504(%RBP)
	pushq -6512(%RBP)
	pushq -6520(%RBP)
	pushq -6528(%RBP)
	pushq -6536(%RBP)
	pushq -6544(%RBP)
	pushq -6552(%RBP)
	jmp uuid_000000000007e498
	jmp uuid_000000000007e49a
uuid_000000000007e498:
	push %RBP
	mov -6496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e495
	jmp uuid_000000000007e497
uuid_000000000007e495:
	movb $1, -6568(%rbp)
uuid_000000000007e497:
	mov -6648(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007e49a:
	mov -6584(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007e49d:
	mov -6576(%RBP),%RSP
	add $-6656, %RSP
	mov -6568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4bc
	jmp uuid_000000000007e4be
uuid_000000000007e4bc:
	push %RBP
	pushq -6320(%RBP)
	pushq -6328(%RBP)
	pushq -6336(%RBP)
	pushq -6344(%RBP)
	pushq -6352(%RBP)
	pushq -6360(%RBP)
	pushq -6368(%RBP)
	pushq -6376(%RBP)
	pushq -6384(%RBP)
	pushq $0
	push %RBP
	mov -6736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4b6
	jmp uuid_000000000007e4b8
uuid_000000000007e4b6:
	push %RBP
	mov -6728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4a4
	jmp uuid_000000000007e4a6
uuid_000000000007e4a4:
	push %RBP
	jmp uuid_000000000007e4a1
	jmp uuid_000000000007e4a3
uuid_000000000007e4a1:
	push %RBP
	mov -6768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e49e
	jmp uuid_000000000007e4a0
uuid_000000000007e49e:
	movb $1, -6840(%rbp)
uuid_000000000007e4a0:
	mov -6864(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007e4a3:
	mov -6856(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007e4a6:
	mov -6848(%RBP),%RSP
	add $-6872, %RSP
	mov -6840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4b3
	jmp uuid_000000000007e4b5
uuid_000000000007e4b3:
	push %RBP
	mov -6720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4ad
	jmp uuid_000000000007e4af
uuid_000000000007e4ad:
	push %RBP
	jmp uuid_000000000007e4aa
	jmp uuid_000000000007e4ac
uuid_000000000007e4aa:
	push %RBP
	mov -6888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6992(%rbp)
	pushq $uuid_000000000007e37b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e4a7
	jmp uuid_000000000007e4a9
uuid_000000000007e4a7:
	movb $1, -6960(%rbp)
uuid_000000000007e4a9:
	mov -6984(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007e4ac:
	mov -6976(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007e4af:
	mov -6968(%RBP),%RSP
	add $-6992, %RSP
	mov -6960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4b0
	jmp uuid_000000000007e4b2
uuid_000000000007e4b0:
	movb $1, -6744(%rbp)
uuid_000000000007e4b2:
	mov -6880(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007e4b5:
	mov -6760(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007e4b8:
	mov -6752(%RBP),%RSP
	add $-6992, %RSP
	mov -6744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4b9
	jmp uuid_000000000007e4bb
uuid_000000000007e4b9:
	movb $1, -6472(%rbp)
uuid_000000000007e4bb:
	mov -6664(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007e4be:
	mov -6488(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007e4c1:
	mov -6480(%RBP),%RSP
	add $-6992, %RSP
	mov -6472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e587
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4f0
	jmp uuid_000000000007e4f2
uuid_000000000007e4f0:
	push %RBP
	pushq -7080(%RBP)
	pushq -7088(%RBP)
	pushq -7096(%RBP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
	pushq -7128(%RBP)
	pushq -7136(%RBP)
	pushq -7144(%RBP)
	pushq $0
	push %RBP
	mov -7248(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4cb
	jmp uuid_000000000007e4cd
uuid_000000000007e4cb:
	push %RBP
	jmp uuid_000000000007e4c8
	jmp uuid_000000000007e4ca
uuid_000000000007e4c8:
	push %RBP
	mov -7184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7288(%rbp)
	pushq $uuid_000000000007df66
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e4c5
	jmp uuid_000000000007e4c7
uuid_000000000007e4c5:
	movb $1, -7256(%rbp)
uuid_000000000007e4c7:
	mov -7280(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007e4ca:
	mov -7272(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007e4cd:
	mov -7264(%RBP),%RSP
	add $-7288, %RSP
	mov -7256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4ed
	jmp uuid_000000000007e4ef
uuid_000000000007e4ed:
	push %RBP
	pushq -7008(%RBP)
	pushq -7016(%RBP)
	pushq -7024(%RBP)
	pushq -7032(%RBP)
	pushq -7040(%RBP)
	pushq -7048(%RBP)
	pushq -7056(%RBP)
	pushq -7064(%RBP)
	pushq -7072(%RBP)
	pushq $0
	push %RBP
	mov -7368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4e7
	jmp uuid_000000000007e4e9
uuid_000000000007e4e7:
	push %RBP
	mov -7360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4d4
	jmp uuid_000000000007e4d6
uuid_000000000007e4d4:
	push %RBP
	jmp uuid_000000000007e4d1
	jmp uuid_000000000007e4d3
uuid_000000000007e4d1:
	push %RBP
	jmp uuid_000000000007e4ce
	jmp uuid_000000000007e4d0
uuid_000000000007e4ce:
	movb $1, -7472(%rbp)
uuid_000000000007e4d0:
	mov -7496(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007e4d3:
	mov -7488(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007e4d6:
	mov -7480(%RBP),%RSP
	add $-7496, %RSP
	mov -7472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4e4
	jmp uuid_000000000007e4e6
uuid_000000000007e4e4:
	push %RBP
	mov -7352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7576(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4de
	jmp uuid_000000000007e4e0
uuid_000000000007e4de:
	push %RBP
	jmp uuid_000000000007e4db
	jmp uuid_000000000007e4dd
uuid_000000000007e4db:
	push %RBP
	mov -7512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7616(%rbp)
	pushq $uuid_000000000007e4d7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e4d8
	jmp uuid_000000000007e4da
uuid_000000000007e4d8:
	movb $1, -7584(%rbp)
uuid_000000000007e4da:
	mov -7608(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007e4dd:
	mov -7600(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007e4e0:
	mov -7592(%RBP),%RSP
	add $-7616, %RSP
	mov -7584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4e1
	jmp uuid_000000000007e4e3
uuid_000000000007e4e1:
	movb $1, -7376(%rbp)
uuid_000000000007e4e3:
	mov -7504(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007e4e6:
	mov -7392(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007e4e9:
	mov -7384(%RBP),%RSP
	add $-7616, %RSP
	mov -7376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4ea
	jmp uuid_000000000007e4ec
uuid_000000000007e4ea:
	movb $1, -7160(%rbp)
uuid_000000000007e4ec:
	mov -7296(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007e4ef:
	mov -7176(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007e4f2:
	mov -7168(%RBP),%RSP
	add $-7616, %RSP
	mov -7160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e584
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e51d
	jmp uuid_000000000007e51f
uuid_000000000007e51d:
	push %RBP
	pushq -7704(%RBP)
	pushq -7712(%RBP)
	pushq -7720(%RBP)
	pushq -7728(%RBP)
	pushq -7736(%RBP)
	pushq -7744(%RBP)
	pushq -7752(%RBP)
	pushq -7760(%RBP)
	pushq -7768(%RBP)
	pushq $0
	push %RBP
	mov -7872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4f9
	jmp uuid_000000000007e4fb
uuid_000000000007e4f9:
	push %RBP
	pushq -7816(%RBP)
	pushq -7824(%RBP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
	pushq -7856(%RBP)
	pushq -7864(%RBP)
	jmp uuid_000000000007e4f6
	jmp uuid_000000000007e4f8
uuid_000000000007e4f6:
	push %RBP
	mov -7808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e4f3
	jmp uuid_000000000007e4f5
uuid_000000000007e4f3:
	movb $1, -7880(%rbp)
uuid_000000000007e4f5:
	mov -7960(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007e4f8:
	mov -7896(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007e4fb:
	mov -7888(%RBP),%RSP
	add $-7968, %RSP
	mov -7880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e51a
	jmp uuid_000000000007e51c
uuid_000000000007e51a:
	push %RBP
	pushq -7632(%RBP)
	pushq -7640(%RBP)
	pushq -7648(%RBP)
	pushq -7656(%RBP)
	pushq -7664(%RBP)
	pushq -7672(%RBP)
	pushq -7680(%RBP)
	pushq -7688(%RBP)
	pushq -7696(%RBP)
	pushq $0
	push %RBP
	mov -8048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e514
	jmp uuid_000000000007e516
uuid_000000000007e514:
	push %RBP
	mov -8040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8144(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e502
	jmp uuid_000000000007e504
uuid_000000000007e502:
	push %RBP
	jmp uuid_000000000007e4ff
	jmp uuid_000000000007e501
uuid_000000000007e4ff:
	push %RBP
	mov -8080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e4fc
	jmp uuid_000000000007e4fe
uuid_000000000007e4fc:
	movb $1, -8152(%rbp)
uuid_000000000007e4fe:
	mov -8176(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007e501:
	mov -8168(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007e504:
	mov -8160(%RBP),%RSP
	add $-8184, %RSP
	mov -8152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e511
	jmp uuid_000000000007e513
uuid_000000000007e511:
	push %RBP
	mov -8032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e50b
	jmp uuid_000000000007e50d
uuid_000000000007e50b:
	push %RBP
	jmp uuid_000000000007e508
	jmp uuid_000000000007e50a
uuid_000000000007e508:
	push %RBP
	mov -8200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8304(%rbp)
	pushq $uuid_000000000007e4d7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e505
	jmp uuid_000000000007e507
uuid_000000000007e505:
	movb $1, -8272(%rbp)
uuid_000000000007e507:
	mov -8296(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007e50a:
	mov -8288(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007e50d:
	mov -8280(%RBP),%RSP
	add $-8304, %RSP
	mov -8272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e50e
	jmp uuid_000000000007e510
uuid_000000000007e50e:
	movb $1, -8056(%rbp)
uuid_000000000007e510:
	mov -8192(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007e513:
	mov -8072(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007e516:
	mov -8064(%RBP),%RSP
	add $-8304, %RSP
	mov -8056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e517
	jmp uuid_000000000007e519
uuid_000000000007e517:
	movb $1, -7784(%rbp)
uuid_000000000007e519:
	mov -7976(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007e51c:
	mov -7800(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007e51f:
	mov -7792(%RBP),%RSP
	add $-8304, %RSP
	mov -7784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e581
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -8464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e55d
	jmp uuid_000000000007e55f
uuid_000000000007e55d:
	push %RBP
	pushq -8392(%RBP)
	pushq -8400(%RBP)
	pushq -8408(%RBP)
	pushq -8416(%RBP)
	pushq -8424(%RBP)
	pushq -8432(%RBP)
	pushq -8440(%RBP)
	pushq -8448(%RBP)
	pushq -8456(%RBP)
	pushq $0
	push %RBP
	mov -8560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e526
	jmp uuid_000000000007e528
uuid_000000000007e526:
	push %RBP
	pushq -8504(%RBP)
	pushq -8512(%RBP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
	pushq -8544(%RBP)
	pushq -8552(%RBP)
	jmp uuid_000000000007e523
	jmp uuid_000000000007e525
uuid_000000000007e523:
	push %RBP
	mov -8496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e520
	jmp uuid_000000000007e522
uuid_000000000007e520:
	movb $1, -8568(%rbp)
uuid_000000000007e522:
	mov -8648(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007e525:
	mov -8584(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007e528:
	mov -8576(%RBP),%RSP
	add $-8656, %RSP
	mov -8568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e55a
	jmp uuid_000000000007e55c
uuid_000000000007e55a:
	push %RBP
	pushq -8320(%RBP)
	pushq -8328(%RBP)
	pushq -8336(%RBP)
	pushq -8344(%RBP)
	pushq -8352(%RBP)
	pushq -8360(%RBP)
	pushq -8368(%RBP)
	pushq -8376(%RBP)
	pushq -8384(%RBP)
	pushq $0
	push %RBP
	mov -8736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e554
	jmp uuid_000000000007e556
uuid_000000000007e554:
	push %RBP
	mov -8728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e52f
	jmp uuid_000000000007e531
uuid_000000000007e52f:
	push %RBP
	jmp uuid_000000000007e52c
	jmp uuid_000000000007e52e
uuid_000000000007e52c:
	push %RBP
	mov -8768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e529
	jmp uuid_000000000007e52b
uuid_000000000007e529:
	movb $1, -8840(%rbp)
uuid_000000000007e52b:
	mov -8864(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007e52e:
	mov -8856(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007e531:
	mov -8848(%RBP),%RSP
	add $-8872, %RSP
	mov -8840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e551
	jmp uuid_000000000007e553
uuid_000000000007e551:
	push %RBP
	mov -8720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e54b
	jmp uuid_000000000007e54d
uuid_000000000007e54b:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9048(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e538
	jmp uuid_000000000007e53a
uuid_000000000007e538:
	push %RBP
	jmp uuid_000000000007e535
	jmp uuid_000000000007e537
uuid_000000000007e535:
	push %RBP
	mov -8984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e532
	jmp uuid_000000000007e534
uuid_000000000007e532:
	movb $1, -9056(%rbp)
uuid_000000000007e534:
	mov -9080(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007e537:
	mov -9072(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007e53a:
	mov -9064(%RBP),%RSP
	add $-9088, %RSP
	mov -9056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e548
	jmp uuid_000000000007e54a
uuid_000000000007e548:
	push %RBP
	mov -8936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e542
	jmp uuid_000000000007e544
uuid_000000000007e542:
	push %RBP
	jmp uuid_000000000007e53f
	jmp uuid_000000000007e541
uuid_000000000007e53f:
	push %RBP
	mov -9104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9208(%rbp)
	pushq $uuid_000000000007e53b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e53c
	jmp uuid_000000000007e53e
uuid_000000000007e53c:
	movb $1, -9176(%rbp)
uuid_000000000007e53e:
	mov -9200(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e541:
	mov -9192(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e544:
	mov -9184(%RBP),%RSP
	add $-9208, %RSP
	mov -9176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e545
	jmp uuid_000000000007e547
uuid_000000000007e545:
	movb $1, -8960(%rbp)
uuid_000000000007e547:
	mov -9096(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e54a:
	mov -8976(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e54d:
	mov -8968(%RBP),%RSP
	add $-9208, %RSP
	mov -8960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e54e
	jmp uuid_000000000007e550
uuid_000000000007e54e:
	movb $1, -8744(%rbp)
uuid_000000000007e550:
	mov -8880(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e553:
	mov -8760(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e556:
	mov -8752(%RBP),%RSP
	add $-9208, %RSP
	mov -8744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e557
	jmp uuid_000000000007e559
uuid_000000000007e557:
	movb $1, -8472(%rbp)
uuid_000000000007e559:
	mov -8664(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e55c:
	mov -8488(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007e55f:
	mov -8480(%RBP),%RSP
	add $-9208, %RSP
	mov -8472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e57e
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -9368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e574
	jmp uuid_000000000007e576
uuid_000000000007e574:
	push %RBP
	pushq -9296(%RBP)
	pushq -9304(%RBP)
	pushq -9312(%RBP)
	pushq -9320(%RBP)
	pushq -9328(%RBP)
	pushq -9336(%RBP)
	pushq -9344(%RBP)
	pushq -9352(%RBP)
	pushq -9360(%RBP)
	jmp uuid_000000000007e571
	jmp uuid_000000000007e573
uuid_000000000007e571:
	push %RBP
	pushq -9224(%RBP)
	pushq -9232(%RBP)
	pushq -9240(%RBP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
	pushq -9272(%RBP)
	pushq -9280(%RBP)
	pushq -9288(%RBP)
	pushq $0
	push %RBP
	mov -9544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e56b
	jmp uuid_000000000007e56d
uuid_000000000007e56b:
	push %RBP
	jmp uuid_000000000007e568
	jmp uuid_000000000007e56a
uuid_000000000007e568:
	push %RBP
	mov -9480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e565
	jmp uuid_000000000007e567
uuid_000000000007e565:
	movb $1, -9552(%rbp)
uuid_000000000007e567:
	mov -9576(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007e56a:
	mov -9568(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007e56d:
	mov -9560(%RBP),%RSP
	add $-9584, %RSP
	mov -9552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e56e
	jmp uuid_000000000007e570
uuid_000000000007e56e:
	movb $1, -9376(%rbp)
uuid_000000000007e570:
	mov -9472(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007e573:
	mov -9392(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007e576:
	mov -9384(%RBP),%RSP
	add $-9584, %RSP
	mov -9376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e57b
	push %RBP
	jmp uuid_000000000007e578
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e577
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e57a
uuid_000000000007e578:
uuid_000000000007e57a:
	mov -9592(%RBP),%RSP
	add $-9592, %RSP
	jmp uuid_000000000007e57d
uuid_000000000007e57b:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9584(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -9440(%rbp)
	pushq -9448(%rbp)
	pushq -9456(%rbp)
	pushq -9464(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e57d:
	mov -9216(%RBP),%RSP
	add $-9584, %RSP
	jmp uuid_000000000007e580
uuid_000000000007e57e:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e562
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9088(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a70c
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9224(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9224(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e560
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e561
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8656(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007a63f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8872(%rbp)
	pushq -9232(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9232(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	jmp uuid_000000000007e564
uuid_000000000007e562:
uuid_000000000007e564:
	mov -9216(%RBP),%RSP
	add $-9216, %RSP
uuid_000000000007e580:
	mov -8312(%RBP),%RSP
	add $-9216, %RSP
	jmp uuid_000000000007e583
uuid_000000000007e581:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8184(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -7920(%RBP)
	pushq -7928(%RBP)
	pushq -7936(%RBP)
	pushq -7944(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e583:
	mov -7624(%RBP),%RSP
	add $-8304, %RSP
	jmp uuid_000000000007e586
uuid_000000000007e584:
uuid_000000000007e586:
	mov -7000(%RBP),%RSP
	add $-7616, %RSP
	jmp uuid_000000000007e589
uuid_000000000007e587:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4c2
	jmp uuid_000000000007e4c4
uuid_000000000007e4c2:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6872(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -6608(%RBP)
	pushq -6616(%RBP)
	pushq -6624(%RBP)
	pushq -6632(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e4c4:
	mov -7000(%RBP),%RSP
	add $-7000, %RSP
uuid_000000000007e589:
	mov -6312(%RBP),%RSP
	add $-7000, %RSP
	jmp uuid_000000000007e58c
uuid_000000000007e58a:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6304(%rbp)
	pushq -6184(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e492
	jmp uuid_000000000007e494
uuid_000000000007e492:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e494:
	mov -6312(%RBP),%RSP
	add $-6312, %RSP
uuid_000000000007e58c:
	mov -5896(%RBP),%RSP
	add $-6312, %RSP
	jmp uuid_000000000007e58f
uuid_000000000007e58d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5768(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e474
	jmp uuid_000000000007e476
uuid_000000000007e474:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e476:
	mov -5896(%RBP),%RSP
	add $-5896, %RSP
uuid_000000000007e58f:
	mov -5480(%RBP),%RSP
	add $-5896, %RSP
	jmp uuid_000000000007e592
uuid_000000000007e590:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e592:
	mov -5064(%RBP),%RSP
	add $-5472, %RSP
	jmp uuid_000000000007e595
uuid_000000000007e593:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e43a
	jmp uuid_000000000007e43c
uuid_000000000007e43a:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e437
	jmp uuid_000000000007e439
uuid_000000000007e437:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e439:
	mov -5264(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007e43c:
	mov -5160(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007e595:
	mov -4312(%RBP),%RSP
	add $-5264, %RSP
	jmp uuid_000000000007e598
uuid_000000000007e596:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e413
	jmp uuid_000000000007e415
uuid_000000000007e413:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e410
	jmp uuid_000000000007e412
uuid_000000000007e410:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e412:
	mov -4512(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007e415:
	mov -4408(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007e598:
	mov -3624(%RBP),%RSP
	add $-4512, %RSP
	jmp uuid_000000000007e59b
uuid_000000000007e599:
	push %RBP
#call function preprocess-is-suffixed : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_is_SB_suffixed_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-lone-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call is_SB_lone_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3f2
	jmp uuid_000000000007e3f4
uuid_000000000007e3f2:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -3632(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3e5
	jmp uuid_000000000007e3e7
uuid_000000000007e3e5:
	push %RBP
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq -3928(%RBP)
	pushq $0
	push %RBP
	mov -4032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3d3
	jmp uuid_000000000007e3d5
uuid_000000000007e3d3:
	push %RBP
	mov -4024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3d0
	jmp uuid_000000000007e3d2
uuid_000000000007e3d0:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3cd
	jmp uuid_000000000007e3cf
uuid_000000000007e3cd:
	movb $1, -4040(%rbp)
uuid_000000000007e3cf:
	mov -4136(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007e3d2:
	mov -4056(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007e3d5:
	mov -4048(%RBP),%RSP
	add $-4208, %RSP
	mov -4040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3e2
	jmp uuid_000000000007e3e4
uuid_000000000007e3e2:
	push %RBP
	pushq -3792(%RBP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
	pushq -3824(%RBP)
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq $0
	push %RBP
	mov -4288(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3dc
	jmp uuid_000000000007e3de
uuid_000000000007e3dc:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3d9
	jmp uuid_000000000007e3db
uuid_000000000007e3d9:
	push %RBP
	mov -4272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3d6
	jmp uuid_000000000007e3d8
uuid_000000000007e3d6:
	movb $1, -4296(%rbp)
uuid_000000000007e3d8:
	mov -4392(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e3db:
	mov -4312(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e3de:
	mov -4304(%RBP),%RSP
	add $-4464, %RSP
	mov -4296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3df
	jmp uuid_000000000007e3e1
uuid_000000000007e3df:
	movb $1, -3944(%rbp)
uuid_000000000007e3e1:
	mov -4216(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e3e4:
	mov -3960(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e3e7:
	mov -3952(%RBP),%RSP
	add $-4464, %RSP
	mov -3944(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3ef
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e3ee
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e3f1
uuid_000000000007e3ef:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e3eb
	jmp uuid_000000000007e3ed
uuid_000000000007e3eb:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e3e8
	jmp uuid_000000000007e3ea
uuid_000000000007e3e8:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e3ea:
	mov -4672(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007e3ed:
	mov -4568(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007e3f1:
	mov -3784(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007e3f4:
	mov -3624(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007e59b:
	mov -2904(%RBP),%RSP
	add $-4672, %RSP
	jmp uuid_000000000007e59e
uuid_000000000007e59c:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2776(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e59e:
	mov -1808(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007e5a1
uuid_000000000007e59f:
uuid_000000000007e5a1:
	mov -776(%RBP),%RSP
	add $-1800, %RSP
	jmp uuid_000000000007e5a4
uuid_000000000007e5a2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007e5a4:
	mov -440(%RBP),%RSP
	add $-768, %RSP
	subq $96, %rsp
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5b7
	jmp uuid_000000000007e5b9
uuid_000000000007e5b7:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5a8
	jmp uuid_000000000007e5aa
uuid_000000000007e5a8:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e5a5
	jmp uuid_000000000007e5a7
uuid_000000000007e5a5:
	movb $1, -536(%rbp)
uuid_000000000007e5a7:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007e5aa:
	mov -544(%RBP),%RSP
	add $-560, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5b4
	jmp uuid_000000000007e5b6
uuid_000000000007e5b4:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5ae
	jmp uuid_000000000007e5b0
uuid_000000000007e5ae:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_000000000007ade2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5ab
	jmp uuid_000000000007e5ad
uuid_000000000007e5ab:
	movb $1, -600(%rbp)
uuid_000000000007e5ad:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007e5b0:
	mov -608(%RBP),%RSP
	add $-624, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5b1
	jmp uuid_000000000007e5b3
uuid_000000000007e5b1:
	movb $1, -488(%rbp)
uuid_000000000007e5b3:
	mov -568(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007e5b6:
	mov -504(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007e5b9:
	mov -496(%RBP),%RSP
	add $-624, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e613
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5f5
	jmp uuid_000000000007e5f7
uuid_000000000007e5f5:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5e6
	jmp uuid_000000000007e5e8
uuid_000000000007e5e6:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5dd
	jmp uuid_000000000007e5df
uuid_000000000007e5dd:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5ce
	jmp uuid_000000000007e5d0
uuid_000000000007e5ce:
	push %RBP
	mov -792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e5cb
	jmp uuid_000000000007e5cd
uuid_000000000007e5cb:
	movb $1, -808(%rbp)
uuid_000000000007e5cd:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007e5d0:
	mov -816(%RBP),%RSP
	add $-832, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5da
	jmp uuid_000000000007e5dc
uuid_000000000007e5da:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5d4
	jmp uuid_000000000007e5d6
uuid_000000000007e5d4:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $uuid_000000000007ade2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5d1
	jmp uuid_000000000007e5d3
uuid_000000000007e5d1:
	movb $1, -872(%rbp)
uuid_000000000007e5d3:
	mov -888(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007e5d6:
	mov -880(%RBP),%RSP
	add $-896, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5d7
	jmp uuid_000000000007e5d9
uuid_000000000007e5d7:
	movb $1, -760(%rbp)
uuid_000000000007e5d9:
	mov -840(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007e5dc:
	mov -776(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007e5df:
	mov -768(%RBP),%RSP
	add $-896, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5e3
	jmp uuid_000000000007e5e5
uuid_000000000007e5e3:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e5e0
	jmp uuid_000000000007e5e2
uuid_000000000007e5e0:
	movb $1, -712(%rbp)
uuid_000000000007e5e2:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007e5e5:
	mov -728(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007e5e8:
	mov -720(%RBP),%RSP
	add $-928, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5f2
	jmp uuid_000000000007e5f4
uuid_000000000007e5f2:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5ec
	jmp uuid_000000000007e5ee
uuid_000000000007e5ec:
	push %RBP
	mov -952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $uuid_000000000007ae38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5e9
	jmp uuid_000000000007e5eb
uuid_000000000007e5e9:
	movb $1, -968(%rbp)
uuid_000000000007e5eb:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007e5ee:
	mov -976(%RBP),%RSP
	add $-992, %RSP
	mov -968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5ef
	jmp uuid_000000000007e5f1
uuid_000000000007e5ef:
	movb $1, -664(%rbp)
uuid_000000000007e5f1:
	mov -936(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007e5f4:
	mov -680(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007e5f7:
	mov -672(%RBP),%RSP
	add $-992, %RSP
	mov -664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e610
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e60d
	push %RBP
	jmp uuid_000000000007e60a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e609
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e60c
uuid_000000000007e60a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e608
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e60c:
	mov -1032(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007e60f
uuid_000000000007e60d:
uuid_000000000007e60f:
	mov -1000(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_000000000007e612
uuid_000000000007e610:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5fe
	jmp uuid_000000000007e600
uuid_000000000007e5fe:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	jmp uuid_000000000007e5fb
	jmp uuid_000000000007e5fd
uuid_000000000007e5fb:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e5f8
	jmp uuid_000000000007e5fa
uuid_000000000007e5f8:
	movb $1, -1368(%rbp)
uuid_000000000007e5fa:
	mov -1544(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007e5fd:
	mov -1384(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007e600:
	mov -1376(%RBP),%RSP
	add $-1712, %RSP
	mov -1368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e605
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e604
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e607
uuid_000000000007e605:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e601
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5c3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e603
uuid_000000000007e601:
uuid_000000000007e603:
	mov -1744(%RBP),%RSP
	add $-1744, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -832(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1712(%rbp), %r15
	movq %r15, -416(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -408(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -400(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -392(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -256(%rbp)
uuid_000000000007e607:
	mov -1192(%RBP),%RSP
	add $-1864, %RSP
#call function destructure-lhs : Arrow<Cons<Cons<Cons<FContext,Type>,S>,FragmentList>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e612:
	mov -632(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007e615
uuid_000000000007e613:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5c0
	jmp uuid_000000000007e5c2
uuid_000000000007e5c0:
	push %RBP
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007e5bd
	jmp uuid_000000000007e5bf
uuid_000000000007e5bd:
	push %RBP
	jmp uuid_000000000007e5ba
	jmp uuid_000000000007e5bc
uuid_000000000007e5ba:
	movb $1, -1000(%rbp)
uuid_000000000007e5bc:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007e5bf:
	mov -1016(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007e5c2:
	mov -1008(%RBP),%RSP
	add $-1176, %RSP
	mov -1000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5c8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e5c7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e5ca
uuid_000000000007e5c8:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5c4
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5c3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e5c6
uuid_000000000007e5c4:
uuid_000000000007e5c6:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -560(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e5ca:
	mov -824(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007e615:
	mov -456(%RBP),%RSP
	add $-1328, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $424, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -272(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -240(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c715
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007c715
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007d7d1
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007d7d1
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007d7d1
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007a8f0
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007a8f0
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007a8f0
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007d6ba
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007d6ba
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007d6ba
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007aed5
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007aed5
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007aed5
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragmentList:
uuid_000000000007e623:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e624
	jmp uuid_000000000007e625
uuid_000000000007e624:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e61c
	jmp uuid_000000000007e61e
uuid_000000000007e61c:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007e619
	jmp uuid_000000000007e61b
uuid_000000000007e619:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e616
	jmp uuid_000000000007e618
uuid_000000000007e616:
	movb $1, -680(%rbp)
uuid_000000000007e618:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007e61b:
	mov -696(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007e61e:
	mov -688(%RBP),%RSP
	add $-1024, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e620
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e61f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e622
uuid_000000000007e620:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movq -1024(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e622:
	mov -504(%RBP),%RSP
	add $-1024, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e623
uuid_000000000007e625:
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentS:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $uuid_000000000007c715
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $152, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fragment_CL__CL_get_CL_ArrowSConsStringFragment:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e638
	jmp uuid_000000000007e63a
uuid_000000000007e638:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007e635
	jmp uuid_000000000007e637
uuid_000000000007e635:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e632
	jmp uuid_000000000007e634
uuid_000000000007e632:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007e62f
	jmp uuid_000000000007e631
uuid_000000000007e62f:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e62c
	jmp uuid_000000000007e62e
uuid_000000000007e62c:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e629
	jmp uuid_000000000007e62b
uuid_000000000007e629:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007e626
	jmp uuid_000000000007e628
uuid_000000000007e626:
	movb $1, -512(%rbp)
uuid_000000000007e628:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e62b:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e62e:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e631:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e634:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e637:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e63a:
	mov -520(%RBP),%RSP
	add $-944, %RSP
	mov -512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e652
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e651
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e654
uuid_000000000007e652:
uuid_000000000007e64e:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e64f
	jmp uuid_000000000007e650
uuid_000000000007e64f:
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	push %RBP
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e644
	jmp uuid_000000000007e646
uuid_000000000007e644:
	push %RBP
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	jmp uuid_000000000007e641
	jmp uuid_000000000007e643
uuid_000000000007e641:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e63e
	jmp uuid_000000000007e640
uuid_000000000007e63e:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e63b
	jmp uuid_000000000007e63d
uuid_000000000007e63b:
	movb $1, -1056(%rbp)
uuid_000000000007e63d:
	mov -1120(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007e640:
	mov -1104(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007e643:
	mov -1072(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007e646:
	mov -1064(%RBP),%RSP
	add $-1168, %RSP
	mov -1056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e64b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e64a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e64d
uuid_000000000007e64b:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e647
	movq -1168(%rbp), %r15
	movq %r15, -864(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -856(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -848(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -840(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	jmp uuid_000000000007e649
uuid_000000000007e647:
	movq -1096(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
uuid_000000000007e649:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007e64d:
	mov -1000(%RBP),%RSP
	add $-1176, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e64e
uuid_000000000007e650:
uuid_000000000007e654:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $24, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_label_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007c6ae
	pushq $0
	pushq $uuid_000000000007a78b
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a78b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007c715
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007c6ae
	pushq $0
	pushq $uuid_000000000007ad7a
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	subq $152, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
fragment_CL__CL_new_CL_ArrowFragmentNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
#call function close : Arrow<FragmentKV+CaseNumber<1>,Array<FragmentKV+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment-context::new : Arrow<Nil,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_new_CL_ArrowFContextNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	subq $152, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e667
	jmp uuid_000000000007e669
uuid_000000000007e667:
	push %RBP
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	jmp uuid_000000000007e664
	jmp uuid_000000000007e666
uuid_000000000007e664:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e661
	jmp uuid_000000000007e663
uuid_000000000007e661:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007e65e
	jmp uuid_000000000007e660
uuid_000000000007e65e:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e65b
	jmp uuid_000000000007e65d
uuid_000000000007e65b:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e658
	jmp uuid_000000000007e65a
uuid_000000000007e658:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007e655
	jmp uuid_000000000007e657
uuid_000000000007e655:
	movb $1, -832(%rbp)
uuid_000000000007e657:
	mov -1192(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007e65a:
	mov -1136(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007e65d:
	mov -1120(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007e660:
	mov -1088(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007e663:
	mov -880(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007e666:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007e669:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e66b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e66a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e66d
uuid_000000000007e66b:
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1128(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $0
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
uuid_000000000007e66d:
	mov -672(%RBP),%RSP
	add $-1264, %RSP
	subq $152, %rsp
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $360, %rsp
	ret
fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e680
	jmp uuid_000000000007e682
uuid_000000000007e680:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007e67d
	jmp uuid_000000000007e67f
uuid_000000000007e67d:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e67a
	jmp uuid_000000000007e67c
uuid_000000000007e67a:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007e677
	jmp uuid_000000000007e679
uuid_000000000007e677:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e674
	jmp uuid_000000000007e676
uuid_000000000007e674:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e671
	jmp uuid_000000000007e673
uuid_000000000007e671:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007e66e
	jmp uuid_000000000007e670
uuid_000000000007e66e:
	movb $1, -640(%rbp)
uuid_000000000007e670:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e673:
	mov -944(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e676:
	mov -928(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e679:
	mov -896(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e67c:
	mov -688(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e67f:
	mov -656(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007e682:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e684
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e683
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e686
uuid_000000000007e684:
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007e686:
	mov -480(%RBP),%RSP
	add $-1072, %RSP
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e699
	jmp uuid_000000000007e69b
uuid_000000000007e699:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007e696
	jmp uuid_000000000007e698
uuid_000000000007e696:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e693
	jmp uuid_000000000007e695
uuid_000000000007e693:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007e690
	jmp uuid_000000000007e692
uuid_000000000007e690:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e68d
	jmp uuid_000000000007e68f
uuid_000000000007e68d:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e68a
	jmp uuid_000000000007e68c
uuid_000000000007e68a:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007e687
	jmp uuid_000000000007e689
uuid_000000000007e687:
	movb $1, -552(%rbp)
uuid_000000000007e689:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007e68c:
	mov -856(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007e68f:
	mov -840(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007e692:
	mov -808(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007e695:
	mov -600(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007e698:
	mov -568(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007e69b:
	mov -560(%RBP),%RSP
	add $-984, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e69d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e69c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e69f
uuid_000000000007e69d:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -848(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e69f:
	mov -392(%RBP),%RSP
	add $-984, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6b2
	jmp uuid_000000000007e6b4
uuid_000000000007e6b2:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007e6af
	jmp uuid_000000000007e6b1
uuid_000000000007e6af:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e6ac
	jmp uuid_000000000007e6ae
uuid_000000000007e6ac:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007e6a9
	jmp uuid_000000000007e6ab
uuid_000000000007e6a9:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e6a6
	jmp uuid_000000000007e6a8
uuid_000000000007e6a6:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e6a3
	jmp uuid_000000000007e6a5
uuid_000000000007e6a3:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007e6a0
	jmp uuid_000000000007e6a2
uuid_000000000007e6a0:
	movb $1, -504(%rbp)
uuid_000000000007e6a2:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6a5:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6a8:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6ab:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6ae:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6b1:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6b4:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6b6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e6b5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6b8
uuid_000000000007e6b6:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e6b8:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6cb
	jmp uuid_000000000007e6cd
uuid_000000000007e6cb:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007e6c8
	jmp uuid_000000000007e6ca
uuid_000000000007e6c8:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e6c5
	jmp uuid_000000000007e6c7
uuid_000000000007e6c5:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007e6c2
	jmp uuid_000000000007e6c4
uuid_000000000007e6c2:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e6bf
	jmp uuid_000000000007e6c1
uuid_000000000007e6bf:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e6bc
	jmp uuid_000000000007e6be
uuid_000000000007e6bc:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007e6b9
	jmp uuid_000000000007e6bb
uuid_000000000007e6b9:
	movb $1, -504(%rbp)
uuid_000000000007e6bb:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6be:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6c1:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6c4:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6c7:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6ca:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007e6cd:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6cf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e6ce
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6d1
uuid_000000000007e6cf:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e6d1:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6e4
	jmp uuid_000000000007e6e6
uuid_000000000007e6e4:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007e6e1
	jmp uuid_000000000007e6e3
uuid_000000000007e6e1:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e6de
	jmp uuid_000000000007e6e0
uuid_000000000007e6de:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007e6db
	jmp uuid_000000000007e6dd
uuid_000000000007e6db:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e6d8
	jmp uuid_000000000007e6da
uuid_000000000007e6d8:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e6d5
	jmp uuid_000000000007e6d7
uuid_000000000007e6d5:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007e6d2
	jmp uuid_000000000007e6d4
uuid_000000000007e6d2:
	movb $1, -512(%rbp)
uuid_000000000007e6d4:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e6d7:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e6da:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e6dd:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e6e0:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e6e3:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007e6e6:
	mov -520(%RBP),%RSP
	add $-944, %RSP
	mov -512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6e8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e6e7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6ea
uuid_000000000007e6e8:
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e6ea:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $192, %rsp
	ret
main:
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007e723:
	movq -32(%RBP), %RAX
	movq -8(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e724
	jmp uuid_000000000007e725
uuid_000000000007e724:
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007e6eb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e720
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007e6ec
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e71d
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007e6ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e71a
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007e6ee
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e717
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007e6ef
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e714
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007e6f0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e711
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007e6f1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e70e
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007e6f2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e70b
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007e6f3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e708
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007e6f4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e705
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007e6f5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e702
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007e6f6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6ff
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007e6f7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6fc
	push %RBP
	pushq -64(%rbp)
	jmp uuid_000000000007e6f9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e6f8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6fb
uuid_000000000007e6f9:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -288(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e6fb:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007e6fe
uuid_000000000007e6fc:
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %r15
	movq $config_SB_target_CL_String, %r14
	movq %r15, 0(%r14)
uuid_000000000007e6fe:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007e701
uuid_000000000007e6ff:
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007e701:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007e704
uuid_000000000007e702:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007e704:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007e707
uuid_000000000007e705:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007e707:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007e70a
uuid_000000000007e708:
	mov $config_SB_strict_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007e70a:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007e70d
uuid_000000000007e70b:
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007e70d:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007e710
uuid_000000000007e70e:
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007e710:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007e713
uuid_000000000007e711:
	pushq $1
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007e713:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007e716
uuid_000000000007e714:
	pushq $2
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007e716:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007e719
uuid_000000000007e717:
	pushq $3
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007e719:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007e71c
uuid_000000000007e71a:
	pushq $4
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007e71c:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007e71f
uuid_000000000007e71d:
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007e71f:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007e722
uuid_000000000007e720:
	pushq $0
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007e722:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007e723
uuid_000000000007e725:
	pushq $1
uuid_000000000007e751:
	mov -64(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e752
	jmp uuid_000000000007e753
uuid_000000000007e752:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e74e
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e72c
	jmp uuid_000000000007e72e
uuid_000000000007e72c:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e729
	jmp uuid_000000000007e72b
uuid_000000000007e729:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e726
	jmp uuid_000000000007e728
uuid_000000000007e726:
	movb $1, -160(%rbp)
uuid_000000000007e728:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007e72b:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007e72e:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e74b
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e73b
	jmp uuid_000000000007e73d
uuid_000000000007e73b:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e732
	jmp uuid_000000000007e734
uuid_000000000007e732:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e72f
	jmp uuid_000000000007e731
uuid_000000000007e72f:
	movb $1, -320(%rbp)
uuid_000000000007e731:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007e734:
	mov -328(%RBP),%RSP
	add $-344, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e738
	jmp uuid_000000000007e73a
uuid_000000000007e738:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e735
	jmp uuid_000000000007e737
uuid_000000000007e735:
	movb $1, -272(%rbp)
uuid_000000000007e737:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e73a:
	mov -288(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e73d:
	mov -280(%RBP),%RSP
	add $-376, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e748
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e741
	jmp uuid_000000000007e743
uuid_000000000007e741:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e73e
	jmp uuid_000000000007e740
uuid_000000000007e73e:
	movb $1, -416(%rbp)
uuid_000000000007e740:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007e743:
	mov -424(%RBP),%RSP
	add $-440, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e745
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e744
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e747
uuid_000000000007e745:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $0, -64(%rbp)
uuid_000000000007e747:
	mov -384(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007e74a
uuid_000000000007e748:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007e74a:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007e74d
uuid_000000000007e74b:
	movq -232(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007e74d:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007e750
uuid_000000000007e74e:
	movb $0, -64(%rbp)
uuid_000000000007e750:
	mov -96(%RBP),%RSP
	add $-120, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007e751
uuid_000000000007e753:
	mov $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %r15
	pushq 0(%r15)
	push %RBP
	pushq -72(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e765
	push %RBP
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e762
	push %RBP
	pushq -72(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e75f
	push %RBP
	pushq -72(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e75c
	push %RBP
	pushq -72(%rbp)
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e759
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e758
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e75b
uuid_000000000007e759:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e75b:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007e75e
uuid_000000000007e75c:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e75e:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007e761
uuid_000000000007e75f:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e761:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007e764
uuid_000000000007e762:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e764:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007e767
uuid_000000000007e765:
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e767:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $24, %rsp
	ret
print_CL_ArrowNilListToken:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a29f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
uuid_000000000007e77a:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e77b
	jmp uuid_000000000007e77c
uuid_000000000007e77b:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e770
	jmp uuid_000000000007e772
uuid_000000000007e770:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e76d
	jmp uuid_000000000007e76f
uuid_000000000007e76d:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007e76a
	jmp uuid_000000000007e76c
uuid_000000000007e76a:
	movb $1, -248(%rbp)
uuid_000000000007e76c:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007e76f:
	mov -264(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007e772:
	mov -256(%RBP),%RSP
	add $-400, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e777
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e776
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e779
uuid_000000000007e777:
	push %RBP
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e773
	jmp uuid_000000000007e775
uuid_000000000007e773:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a5fe
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e775:
	mov -408(%RBP),%RSP
	add $-408, %RSP
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $1, -88(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e779:
	mov -168(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e77a
uuid_000000000007e77c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a2a0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListToken:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_SS:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FContextFContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVFragmentKV:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ContextContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ASTAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListArray_QM_Fragment:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListFragment:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
is_CL_ArrowU64ConsSized8Sized8:
	pushq $0
	pushq $1
uuid_000000000007e784:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e785
	jmp uuid_000000000007e786
uuid_000000000007e785:
	mov %RBP, %R15
	add $-8, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-16, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e781
	movq $0, -40(%rbp)
	jmp uuid_000000000007e783
uuid_000000000007e781:
uuid_000000000007e783:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007e784
uuid_000000000007e786:
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListFragmentList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TypeType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_StringStringListStringStringList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -32(%rbp), %r15
	movq %r15, 0(%r14)
	movq -24(%rbp), %r15
	movq %r15, 8(%r14)
	movq -16(%rbp), %r15
	movq %r15, 16(%r14)
	movq -8(%rbp), %r15
	movq %r15, 24(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
reverse_CL_ArrowListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007e798:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e799
	jmp uuid_000000000007e79a
uuid_000000000007e799:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e791
	jmp uuid_000000000007e793
uuid_000000000007e791:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e78e
	jmp uuid_000000000007e790
uuid_000000000007e78e:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007e78b
	jmp uuid_000000000007e78d
uuid_000000000007e78b:
	movb $1, -312(%rbp)
uuid_000000000007e78d:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007e790:
	mov -328(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007e793:
	mov -320(%RBP),%RSP
	add $-464, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e795
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e794
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e797
uuid_000000000007e795:
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e797:
	mov -232(%RBP),%RSP
	add $-464, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e798
uuid_000000000007e79a:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListTokenListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTokenConsListTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
head_CL_ArrowTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7aa
	push %RBP
	jmp uuid_000000000007e7a7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e7a6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e7a9
uuid_000000000007e7a7:
uuid_000000000007e7a9:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007e7ac
uuid_000000000007e7aa:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e7a5
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e7ac:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	pushq -8(%RBP)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	subq $56, %rsp
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	pushq 120(%rsp)
	pushq 136(%rsp)
	pushq 152(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
cons_CL_ArrowListTypeConsListTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_SfxListSfxList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_MacroListMacroList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
max_CL_ArrowI64ConsI64I64:
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7b8
	jmp uuid_000000000007e7ba
uuid_000000000007e7b8:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007e7ba:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListStringConsListStringString:
	pushq -8(%rbp)
#call function close : Arrow<List<String>,Array<List<String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStringListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListStringListString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListString:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment:
	pushq -8(%rbp)
#call function close : Arrow<List<Array<Fragment,?>>,Array<List<Array<Fragment,?>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $152
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -152(%rbp), %r15
	movq %r15, 0(%r14)
	movq -144(%rbp), %r15
	movq %r15, 8(%r14)
	movq -136(%rbp), %r15
	movq %r15, 16(%r14)
	movq -128(%rbp), %r15
	movq %r15, 24(%r14)
	movq -120(%rbp), %r15
	movq %r15, 32(%r14)
	movq -112(%rbp), %r15
	movq %r15, 40(%r14)
	movq -104(%rbp), %r15
	movq %r15, 48(%r14)
	movq -96(%rbp), %r15
	movq %r15, 56(%r14)
	movq -88(%rbp), %r15
	movq %r15, 64(%r14)
	movq -80(%rbp), %r15
	movq %r15, 72(%r14)
	movq -72(%rbp), %r15
	movq %r15, 80(%r14)
	movq -64(%rbp), %r15
	movq %r15, 88(%r14)
	movq -56(%rbp), %r15
	movq %r15, 96(%r14)
	movq -48(%rbp), %r15
	movq %r15, 104(%r14)
	movq -40(%rbp), %r15
	movq %r15, 112(%r14)
	movq -32(%rbp), %r15
	movq %r15, 120(%r14)
	movq -24(%rbp), %r15
	movq %r15, 128(%r14)
	movq -16(%rbp), %r15
	movq %r15, 136(%r14)
	movq -8(%rbp), %r15
	movq %r15, 144(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $160, %rsp
	ret
_DT_length_CL_ArrowU64ListFragment:
	pushq $0
uuid_000000000007e7d4:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7d5
	jmp uuid_000000000007e7d6
uuid_000000000007e7d5:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7cd
	jmp uuid_000000000007e7cf
uuid_000000000007e7cd:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e7ca
	jmp uuid_000000000007e7cc
uuid_000000000007e7ca:
	push %RBP
	jmp uuid_000000000007e7c7
	jmp uuid_000000000007e7c9
uuid_000000000007e7c7:
	movb $1, -536(%rbp)
uuid_000000000007e7c9:
	mov -728(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007e7cc:
	mov -552(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007e7cf:
	mov -544(%RBP),%RSP
	add $-728, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7d1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e7d0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e7d3
uuid_000000000007e7d1:
	movq -720(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -680(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -672(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e7d3:
	mov -360(%RBP),%RSP
	add $-728, %RSP
	movq -184(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -184(%rbp)
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e7d4
uuid_000000000007e7d6:
	mov -184(%rbp), %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
cons_CL_ArrowListFragmentConsListFragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
#call function close : Arrow<List<Fragment>,Array<List<Fragment>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListFragmentListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	subq $168, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
close_CL_ArrowArray_QM_ListFragmentListFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TContextTContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Type>,Array<BTreeEq<String,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007e7e7:
	mov -64(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7e8
	jmp uuid_000000000007e7e9
uuid_000000000007e7e8:
	mov -8(%rbp), %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7e4
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7e1
	mov -120(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e7e3
uuid_000000000007e7e1:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -64(%rbp)
uuid_000000000007e7e3:
	mov -152(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007e7e6
uuid_000000000007e7e4:
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7de
	mov -128(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e7e0
uuid_000000000007e7de:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -64(%rbp)
uuid_000000000007e7e0:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007e7e6:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	add $64, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e7e7
uuid_000000000007e7e9:
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $64
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -64(%rbp), %r15
	movq %r15, 0(%r14)
	movq -56(%rbp), %r15
	movq %r15, 8(%r14)
	movq -48(%rbp), %r15
	movq %r15, 16(%r14)
	movq -40(%rbp), %r15
	movq %r15, 24(%r14)
	movq -32(%rbp), %r15
	movq %r15, 32(%r14)
	movq -24(%rbp), %r15
	movq %r15, 40(%r14)
	movq -16(%rbp), %r15
	movq %r15, 48(%r14)
	movq -8(%rbp), %r15
	movq %r15, 56(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64ListStackToSpecialize:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
max_CL_ArrowU64ConsU64U64:
	push %RBP
	movq -8(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7f2
	jmp uuid_000000000007e7f4
uuid_000000000007e7f2:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007e7f4:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
#call function close : Arrow<List<StackToSpecialize>,Array<List<StackToSpecialize>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	subq $200, %rsp
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64ListType:
	mov $1, %RAX
	pushq %RAX
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_AD__CL_ArrowListTypeConsListTypeListType:
#call function reverse : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e80e:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e80f
	jmp uuid_000000000007e810
uuid_000000000007e80f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e807
	jmp uuid_000000000007e809
uuid_000000000007e807:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e804
	jmp uuid_000000000007e806
uuid_000000000007e804:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007e801
	jmp uuid_000000000007e803
uuid_000000000007e801:
	movb $1, -184(%rbp)
uuid_000000000007e803:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007e806:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007e809:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e80b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e80a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e80d
uuid_000000000007e80b:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e80d:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e80e
uuid_000000000007e810:
	subq $40, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
reverse_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007e821:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e822
	jmp uuid_000000000007e823
uuid_000000000007e822:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e81b
	jmp uuid_000000000007e81d
uuid_000000000007e81b:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e818
	jmp uuid_000000000007e81a
uuid_000000000007e818:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007e815
	jmp uuid_000000000007e817
uuid_000000000007e815:
	movb $1, -184(%rbp)
uuid_000000000007e817:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007e81a:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007e81d:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e81e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e794
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e820
uuid_000000000007e81e:
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e820:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e821
uuid_000000000007e823:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_length_CL_ArrowU64ListType:
	pushq $0
uuid_000000000007e832:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e833
	jmp uuid_000000000007e834
uuid_000000000007e833:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e82c
	jmp uuid_000000000007e82e
uuid_000000000007e82c:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e829
	jmp uuid_000000000007e82b
uuid_000000000007e829:
	push %RBP
	jmp uuid_000000000007e826
	jmp uuid_000000000007e828
uuid_000000000007e826:
	movb $1, -152(%rbp)
uuid_000000000007e828:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007e82b:
	mov -168(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007e82e:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e82f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e7d0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e831
uuid_000000000007e82f:
	movq -208(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e831:
	mov -104(%RBP),%RSP
	add $-216, %RSP
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e832
uuid_000000000007e834:
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007e84f:
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e850
	jmp uuid_000000000007e851
uuid_000000000007e850:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -112(%RBP), %RAX
	movq -128(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e840
	jmp uuid_000000000007e842
uuid_000000000007e840:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e83d
	jmp uuid_000000000007e83f
uuid_000000000007e83d:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	movb $0, -120(%rbp)
uuid_000000000007e83f:
	mov -144(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007e842:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	push %RBP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e84c
	jmp uuid_000000000007e84e
uuid_000000000007e84c:
	push %RBP
	movq -128(%RBP), %RAX
	movq -112(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e849
	push %RBP
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e846
	mov -48(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e848
uuid_000000000007e846:
	movb $0, -120(%rbp)
uuid_000000000007e848:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007e84b
uuid_000000000007e849:
	push %RBP
	mov -56(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e843
	mov -56(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e845
uuid_000000000007e843:
	movb $0, -120(%rbp)
uuid_000000000007e845:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007e84b:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007e84e:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e84f
uuid_000000000007e851:
	subq $24, %rsp
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007e86c:
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e86d
	jmp uuid_000000000007e86e
uuid_000000000007e86d:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e85d
	jmp uuid_000000000007e85f
uuid_000000000007e85d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e85a
	jmp uuid_000000000007e85c
uuid_000000000007e85a:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007e85c:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007e85f:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e869
	jmp uuid_000000000007e86b
uuid_000000000007e869:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e866
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e863
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e865
uuid_000000000007e863:
	movb $0, -88(%rbp)
uuid_000000000007e865:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007e868
uuid_000000000007e866:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e860
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e862
uuid_000000000007e860:
	movb $0, -88(%rbp)
uuid_000000000007e862:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007e868:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007e86b:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e86c
uuid_000000000007e86e:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007e893:
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e894
	jmp uuid_000000000007e895
uuid_000000000007e894:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -176(%RBP), %RAX
	movq -192(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e884
	jmp uuid_000000000007e886
uuid_000000000007e884:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e881
	jmp uuid_000000000007e883
uuid_000000000007e881:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	movb $0, -184(%rbp)
uuid_000000000007e883:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007e886:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	push %RBP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e890
	jmp uuid_000000000007e892
uuid_000000000007e890:
	push %RBP
	movq -192(%RBP), %RAX
	movq -176(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e88d
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e88a
	mov -80(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e88c
uuid_000000000007e88a:
	movb $0, -184(%rbp)
uuid_000000000007e88c:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007e88f
uuid_000000000007e88d:
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e887
	mov -88(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e889
uuid_000000000007e887:
	movb $0, -184(%rbp)
uuid_000000000007e889:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007e88f:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007e892:
	mov -216(%RBP),%RSP
	add $-232, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e893
uuid_000000000007e895:
	subq $56, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_nth_CL_ArrowTypeConsTypeConsU64ListType:
uuid_000000000007e8aa:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8ab
	jmp uuid_000000000007e8ac
uuid_000000000007e8ab:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8a0
	jmp uuid_000000000007e8a2
uuid_000000000007e8a0:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e89d
	jmp uuid_000000000007e89f
uuid_000000000007e89d:
	push %RBP
	jmp uuid_000000000007e89a
	jmp uuid_000000000007e89c
uuid_000000000007e89a:
	movb $1, -176(%rbp)
uuid_000000000007e89c:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007e89f:
	mov -192(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007e8a2:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8a7
	push %RBP
	jmp uuid_000000000007e8a4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e8a3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e8a6
uuid_000000000007e8a4:
uuid_000000000007e8a6:
	mov -248(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007e8a9
uuid_000000000007e8a7:
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e8a9:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e8aa
uuid_000000000007e8ac:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8b3
	jmp uuid_000000000007e8b5
uuid_000000000007e8b3:
	push %RBP
	jmp uuid_000000000007e8b0
	jmp uuid_000000000007e8b2
uuid_000000000007e8b0:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007e8ad
	jmp uuid_000000000007e8af
uuid_000000000007e8ad:
	movb $1, -176(%rbp)
uuid_000000000007e8af:
	mov -200(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007e8b2:
	mov -192(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007e8b5:
	mov -184(%RBP),%RSP
	add $-224, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8ba
	push %RBP
	jmp uuid_000000000007e8b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e8b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e8b9
uuid_000000000007e8b7:
uuid_000000000007e8b9:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007e8bc
uuid_000000000007e8ba:
	movq -224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007e8bc:
	mov -128(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Tuple<Type,Type>>,Array<BTreeEq<String,Tuple<Type,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007e8cf:
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8d0
	jmp uuid_000000000007e8d1
uuid_000000000007e8d0:
	mov -8(%rbp), %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq -88(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8cc
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8c9
	mov -184(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e8cb
uuid_000000000007e8c9:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -96(%rbp)
uuid_000000000007e8cb:
	mov -216(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007e8ce
uuid_000000000007e8cc:
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8c6
	mov -192(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e8c8
uuid_000000000007e8c6:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -96(%rbp)
uuid_000000000007e8c8:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007e8ce:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e8cf
uuid_000000000007e8d1:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,U64>,Array<BTreeEq<String,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007e8e8:
	mov -48(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8e9
	jmp uuid_000000000007e8ea
uuid_000000000007e8e9:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8e5
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8e2
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e8e4
uuid_000000000007e8e2:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007e8e4:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007e8e7
uuid_000000000007e8e5:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8df
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e8e1
uuid_000000000007e8df:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007e8e1:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007e8e7:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e8e8
uuid_000000000007e8ea:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007e90b:
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e90c
	jmp uuid_000000000007e90d
uuid_000000000007e90c:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8fc
	jmp uuid_000000000007e8fe
uuid_000000000007e8fc:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e8f9
	jmp uuid_000000000007e8fb
uuid_000000000007e8f9:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007e8fb:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007e8fe:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e908
	jmp uuid_000000000007e90a
uuid_000000000007e908:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e905
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e902
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e904
uuid_000000000007e902:
	movb $0, -88(%rbp)
uuid_000000000007e904:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007e907
uuid_000000000007e905:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8ff
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e901
uuid_000000000007e8ff:
	movb $0, -88(%rbp)
uuid_000000000007e901:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007e907:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007e90a:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e90b
uuid_000000000007e90d:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,String>,Array<BTreeEq<String,String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007e919:
	mov -48(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e91a
	jmp uuid_000000000007e91b
uuid_000000000007e91a:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e916
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e913
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e915
uuid_000000000007e913:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007e915:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007e918
uuid_000000000007e916:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e910
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e912
uuid_000000000007e910:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007e912:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007e918:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e919
uuid_000000000007e91b:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007e948:
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e949
	jmp uuid_000000000007e94a
uuid_000000000007e949:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e939
	jmp uuid_000000000007e93b
uuid_000000000007e939:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,Type>,Tuple<String,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e936
	jmp uuid_000000000007e938
uuid_000000000007e936:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007e938:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007e93b:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e945
	jmp uuid_000000000007e947
uuid_000000000007e945:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e942
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e93f
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e941
uuid_000000000007e93f:
	movb $0, -152(%rbp)
uuid_000000000007e941:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007e944
uuid_000000000007e942:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e93c
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e93e
uuid_000000000007e93c:
	movb $0, -152(%rbp)
uuid_000000000007e93e:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007e944:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007e947:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e948
uuid_000000000007e94a:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e96d
	jmp uuid_000000000007e96f
uuid_000000000007e96d:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e95b
	jmp uuid_000000000007e95d
uuid_000000000007e95b:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_000000000007e958
	jmp uuid_000000000007e95a
uuid_000000000007e958:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e955
	jmp uuid_000000000007e957
uuid_000000000007e955:
	movb $1, -352(%rbp)
uuid_000000000007e957:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007e95a:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007e95d:
	mov -360(%RBP),%RSP
	add $-408, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e96a
	jmp uuid_000000000007e96c
uuid_000000000007e96a:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e964
	jmp uuid_000000000007e966
uuid_000000000007e964:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007e961
	jmp uuid_000000000007e963
uuid_000000000007e961:
	push %RBP
	mov -424(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e95e
	jmp uuid_000000000007e960
uuid_000000000007e95e:
	movb $1, -464(%rbp)
uuid_000000000007e960:
	mov -512(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007e963:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007e966:
	mov -472(%RBP),%RSP
	add $-520, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e967
	jmp uuid_000000000007e969
uuid_000000000007e967:
	movb $1, -288(%rbp)
uuid_000000000007e969:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007e96c:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007e96f:
	mov -296(%RBP),%RSP
	add $-520, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e977
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e976
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e979
uuid_000000000007e977:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e973
	jmp uuid_000000000007e975
uuid_000000000007e973:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e970
	jmp uuid_000000000007e972
uuid_000000000007e970:
	movq $1, -96(%rbp)
uuid_000000000007e972:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007e975:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007e979:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e984
	jmp uuid_000000000007e986
uuid_000000000007e984:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007e981
	jmp uuid_000000000007e983
uuid_000000000007e981:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e97e
	jmp uuid_000000000007e980
uuid_000000000007e97e:
	movb $1, -152(%rbp)
uuid_000000000007e980:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007e983:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007e986:
	mov -160(%RBP),%RSP
	add $-208, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e988
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e987
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e98a
uuid_000000000007e988:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007e98a:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<String,Type>,U64>,Array<BTreeEq<Tuple<String,Type>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007e99f:
	mov -80(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9a0
	jmp uuid_000000000007e9a1
uuid_000000000007e9a0:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e99c
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e999
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e99b
uuid_000000000007e999:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007e99b:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007e99e
uuid_000000000007e99c:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e996
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007e998
uuid_000000000007e996:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007e998:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007e99e:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e99f
uuid_000000000007e9a1:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007e9df:
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9e0
	jmp uuid_000000000007e9e1
uuid_000000000007e9e0:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9d0
	jmp uuid_000000000007e9d2
uuid_000000000007e9d0:
	push %RBP
#call function == : Arrow<Cons<Tuple<Tuple<String,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e9cd
	jmp uuid_000000000007e9cf
uuid_000000000007e9cd:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007e9cf:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007e9d2:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9dc
	jmp uuid_000000000007e9de
uuid_000000000007e9dc:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9d9
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9d6
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e9d8
uuid_000000000007e9d6:
	movb $0, -152(%rbp)
uuid_000000000007e9d8:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007e9db
uuid_000000000007e9d9:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9d3
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007e9d5
uuid_000000000007e9d3:
	movb $0, -152(%rbp)
uuid_000000000007e9d5:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007e9db:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007e9de:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e9df
uuid_000000000007e9e1:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea0d
	jmp uuid_000000000007ea0f
uuid_000000000007ea0d:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9fb
	jmp uuid_000000000007e9fd
uuid_000000000007e9fb:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e9f8
	jmp uuid_000000000007e9fa
uuid_000000000007e9f8:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007e9f5
	jmp uuid_000000000007e9f7
uuid_000000000007e9f5:
	movb $1, -352(%rbp)
uuid_000000000007e9f7:
	mov -384(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007e9fa:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007e9fd:
	mov -360(%RBP),%RSP
	add $-408, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea0a
	jmp uuid_000000000007ea0c
uuid_000000000007ea0a:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea04
	jmp uuid_000000000007ea06
uuid_000000000007ea04:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea01
	jmp uuid_000000000007ea03
uuid_000000000007ea01:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007e9fe
	jmp uuid_000000000007ea00
uuid_000000000007e9fe:
	movb $1, -464(%rbp)
uuid_000000000007ea00:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007ea03:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007ea06:
	mov -472(%RBP),%RSP
	add $-520, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea07
	jmp uuid_000000000007ea09
uuid_000000000007ea07:
	movb $1, -288(%rbp)
uuid_000000000007ea09:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007ea0c:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007ea0f:
	mov -296(%RBP),%RSP
	add $-520, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea16
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e976
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ea18
uuid_000000000007ea16:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,U64>,Tuple<String,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ea13
	jmp uuid_000000000007ea15
uuid_000000000007ea13:
	push %RBP
	movq -488(%RBP), %RAX
	movq -376(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea10
	jmp uuid_000000000007ea12
uuid_000000000007ea10:
	movq $1, -96(%rbp)
uuid_000000000007ea12:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007ea15:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007ea18:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea3b
	jmp uuid_000000000007ea3d
uuid_000000000007ea3b:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea29
	jmp uuid_000000000007ea2b
uuid_000000000007ea29:
	push %RBP
	mov -224(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea26
	jmp uuid_000000000007ea28
uuid_000000000007ea26:
	push %RBP
	mov -216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea23
	jmp uuid_000000000007ea25
uuid_000000000007ea23:
	movb $1, -240(%rbp)
uuid_000000000007ea25:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ea28:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ea2b:
	mov -248(%RBP),%RSP
	add $-280, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea38
	jmp uuid_000000000007ea3a
uuid_000000000007ea38:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea32
	jmp uuid_000000000007ea34
uuid_000000000007ea32:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea2f
	jmp uuid_000000000007ea31
uuid_000000000007ea2f:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea2c
	jmp uuid_000000000007ea2e
uuid_000000000007ea2c:
	movb $1, -320(%rbp)
uuid_000000000007ea2e:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ea31:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ea34:
	mov -328(%RBP),%RSP
	add $-360, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea35
	jmp uuid_000000000007ea37
uuid_000000000007ea35:
	movb $1, -192(%rbp)
uuid_000000000007ea37:
	mov -288(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ea3a:
	mov -208(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ea3d:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea44
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e976
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ea46
uuid_000000000007ea44:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ea41
	jmp uuid_000000000007ea43
uuid_000000000007ea41:
	push %RBP
	movq -344(%RBP), %RAX
	movq -264(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea3e
	jmp uuid_000000000007ea40
uuid_000000000007ea3e:
	movq $1, -64(%rbp)
uuid_000000000007ea40:
	mov -376(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ea43:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ea46:
	mov -128(%RBP),%RSP
	add $-376, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea55
	jmp uuid_000000000007ea57
uuid_000000000007ea55:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea52
	jmp uuid_000000000007ea54
uuid_000000000007ea52:
	push %RBP
	pushq -112(%RBP)
	pushq -120(%RBP)
	pushq -128(%RBP)
	jmp uuid_000000000007ea4f
	jmp uuid_000000000007ea51
uuid_000000000007ea4f:
	movb $1, -152(%rbp)
uuid_000000000007ea51:
	mov -184(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007ea54:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007ea57:
	mov -160(%RBP),%RSP
	add $-208, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea58
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e987
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ea5a
uuid_000000000007ea58:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Tuple<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007ea5a:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea65
	jmp uuid_000000000007ea67
uuid_000000000007ea65:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea62
	jmp uuid_000000000007ea64
uuid_000000000007ea62:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea5f
	jmp uuid_000000000007ea61
uuid_000000000007ea5f:
	movb $1, -104(%rbp)
uuid_000000000007ea61:
	mov -136(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007ea64:
	mov -120(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007ea67:
	mov -112(%RBP),%RSP
	add $-144, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea68
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007e987
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ea6a
uuid_000000000007ea68:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007ea6a:
	mov -72(%RBP),%RSP
	add $-144, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007ea88:
	mov -80(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea89
	jmp uuid_000000000007ea8a
uuid_000000000007ea89:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea85
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea82
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007ea84
uuid_000000000007ea82:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007ea84:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007ea87
uuid_000000000007ea85:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea7f
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007ea81
uuid_000000000007ea7f:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007ea81:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007ea87:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ea88
uuid_000000000007ea8a:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Tuple<Tuple<String,String>,Type>>,Array<List<Tuple<Tuple<String,String>,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeIs<AST,Type>,Array<BTreeIs<AST,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007ead6:
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ead7
	jmp uuid_000000000007ead8
uuid_000000000007ead7:
	mov -8(%rbp), %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq -120(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ead3
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ead0
	mov -248(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007ead2
uuid_000000000007ead0:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -128(%rbp)
uuid_000000000007ead2:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007ead5
uuid_000000000007ead3:
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eacd
	mov -256(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007eacf
uuid_000000000007eacd:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -128(%rbp)
uuid_000000000007eacf:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ead5:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	add $128, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ead6
uuid_000000000007ead8:
	mov %rbp, %rsp
	sub $112, %rsp
	ret
close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $128
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -128(%rbp), %r15
	movq %r15, 0(%r14)
	movq -120(%rbp), %r15
	movq %r15, 8(%r14)
	movq -112(%rbp), %r15
	movq %r15, 16(%r14)
	movq -104(%rbp), %r15
	movq %r15, 24(%r14)
	movq -96(%rbp), %r15
	movq %r15, 32(%r14)
	movq -88(%rbp), %r15
	movq %r15, 40(%r14)
	movq -80(%rbp), %r15
	movq %r15, 48(%r14)
	movq -72(%rbp), %r15
	movq %r15, 56(%r14)
	movq -64(%rbp), %r15
	movq %r15, 64(%r14)
	movq -56(%rbp), %r15
	movq %r15, 72(%r14)
	movq -48(%rbp), %r15
	movq %r15, 80(%r14)
	movq -40(%rbp), %r15
	movq %r15, 88(%r14)
	movq -32(%rbp), %r15
	movq %r15, 96(%r14)
	movq -24(%rbp), %r15
	movq %r15, 104(%r14)
	movq -16(%rbp), %r15
	movq %r15, 112(%r14)
	movq -8(%rbp), %r15
	movq %r15, 120(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
hash_CL_ArrowU64Sized72:
	pushq $0
	pushq $0
uuid_000000000007eadf:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -88(%RBP), %RAX
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eae0
	jmp uuid_000000000007eae1
uuid_000000000007eae0:
	mov %RBP, %R15
	add $-72, %R15
	mov -88(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -88(%rbp)
	mov -96(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	jmp uuid_000000000007eadf
uuid_000000000007eae1:
	mov -96(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007eafc:
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eafd
	jmp uuid_000000000007eafe
uuid_000000000007eafd:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -240(%RBP), %RAX
	movq -256(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaed
	jmp uuid_000000000007eaef
uuid_000000000007eaed:
	push %RBP
#call function is : Arrow<Cons<Sized<72>,Sized<72>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	pushq -80(%RBP)
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized72Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eaea
	jmp uuid_000000000007eaec
uuid_000000000007eaea:
	pushq -88(%RBP)
	pushq -96(%RBP)
	pushq -104(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	movb $0, -248(%rbp)
uuid_000000000007eaec:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007eaef:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	push %RBP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eaf9
	jmp uuid_000000000007eafb
uuid_000000000007eaf9:
	push %RBP
	movq -256(%RBP), %RAX
	movq -240(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaf6
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaf3
	mov -112(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007eaf5
uuid_000000000007eaf3:
	movb $0, -248(%rbp)
uuid_000000000007eaf5:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007eaf8
uuid_000000000007eaf6:
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaf0
	mov -120(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007eaf2
uuid_000000000007eaf0:
	movb $0, -248(%rbp)
uuid_000000000007eaf2:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007eaf8:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007eafb:
	mov -280(%RBP),%RSP
	add $-296, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007eafc
uuid_000000000007eafe:
	subq $24, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
is_CL_ArrowU64ConsSized72Sized72:
	pushq $0
	pushq $1
uuid_000000000007eb02:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -160(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb03
	jmp uuid_000000000007eb04
uuid_000000000007eb03:
	mov %RBP, %R15
	add $-72, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-144, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -176(%RBP), %RAX
	movq -184(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaff
	movq $0, -168(%rbp)
	jmp uuid_000000000007eb01
uuid_000000000007eaff:
uuid_000000000007eb01:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	movq -160(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -160(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007eb02
uuid_000000000007eb04:
	mov -168(%rbp), %RAX
	mov %rbp, %rsp
	sub $152, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb10
	jmp uuid_000000000007eb12
uuid_000000000007eb10:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb0d
	jmp uuid_000000000007eb0f
uuid_000000000007eb0d:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb0a
	jmp uuid_000000000007eb0c
uuid_000000000007eb0a:
	movb $1, -288(%rbp)
uuid_000000000007eb0c:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007eb0f:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007eb12:
	mov -296(%RBP),%RSP
	add $-392, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb3b
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb2b
	jmp uuid_000000000007eb2d
uuid_000000000007eb2b:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb19
	jmp uuid_000000000007eb1b
uuid_000000000007eb19:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eb16
	jmp uuid_000000000007eb18
uuid_000000000007eb16:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007eb13
	jmp uuid_000000000007eb15
uuid_000000000007eb13:
	movb $1, -560(%rbp)
uuid_000000000007eb15:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007eb18:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007eb1b:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb28
	jmp uuid_000000000007eb2a
uuid_000000000007eb28:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb22
	jmp uuid_000000000007eb24
uuid_000000000007eb22:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eb1f
	jmp uuid_000000000007eb21
uuid_000000000007eb1f:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007eb1c
	jmp uuid_000000000007eb1e
uuid_000000000007eb1c:
	movb $1, -704(%rbp)
uuid_000000000007eb1e:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007eb21:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007eb24:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb25
	jmp uuid_000000000007eb27
uuid_000000000007eb25:
	movb $1, -496(%rbp)
uuid_000000000007eb27:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007eb2a:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007eb2d:
	mov -504(%RBP),%RSP
	add $-792, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B,%R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb38
	push %RBP
	jmp uuid_000000000007eb35
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a214
	pushq $uuid_000000000007eb34
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eb37
uuid_000000000007eb35:
uuid_000000000007eb37:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007eb3a
uuid_000000000007eb38:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb31
	jmp uuid_000000000007eb33
uuid_000000000007eb31:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb2e
	jmp uuid_000000000007eb30
uuid_000000000007eb2e:
	movq $1, -96(%rbp)
uuid_000000000007eb30:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007eb33:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007eb3a:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007eb3d
uuid_000000000007eb3b:
	movq $1, -96(%rbp)
uuid_000000000007eb3d:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
.data
uuid_000000000007a214:
	.ascii "Pattern Match Failure"
	.zero 1
uuid_000000000007a215:
	.ascii "File: LIB/default-stdlib.lm Line: 74 Column: 5"
	.zero 1
uuid_000000000007a276:
	.ascii "File: LIB/default-stdlib.lm Line: 90 Column: 5"
	.zero 1
uuid_000000000007a286:
	.ascii "()"
	.zero 1
uuid_000000000007a296:
	.ascii "("
	.zero 1
uuid_000000000007a297:
	.ascii " "
	.zero 1
uuid_000000000007a298:
	.ascii ")"
	.zero 1
uuid_000000000007a29f:
	.ascii "["
	.zero 1
uuid_000000000007a2a0:
	.ascii "]"
	.zero 1
uuid_000000000007a2a1:
	.ascii "File: LIB/default-stdlib.lm Line: 112 Column: 5"
	.zero 1
uuid_000000000007a2ae:
	.ascii " at "
	.zero 1
uuid_000000000007a2ba:
	.ascii "Unable to open file: "
	.zero 1
uuid_000000000007a2bb:
	.ascii "\n"
	.zero 1
uuid_000000000007a2bf:
	.ascii "File Read Error ["
	.zero 1
uuid_000000000007a2c0:
	.ascii "]: "
	.zero 1
uuid_000000000007a2d9:
	.ascii "File: LIB/default-stdlib.lm Line: 347 Column: 5"
	.zero 1
uuid_000000000007a2e9:
	.ascii "0"
	.zero 1
uuid_000000000007a2ed:
	.ascii "-"
	.zero 1
uuid_000000000007a2fd:
	.ascii "File: LIB/default-stdlib.lm Line: 456 Column: 8"
	.zero 1
uuid_000000000007a322:
	.ascii "1"
	.zero 1
uuid_000000000007a323:
	.ascii "2"
	.zero 1
uuid_000000000007a324:
	.ascii "3"
	.zero 1
uuid_000000000007a325:
	.ascii "4"
	.zero 1
uuid_000000000007a326:
	.ascii "5"
	.zero 1
uuid_000000000007a327:
	.ascii "6"
	.zero 1
uuid_000000000007a328:
	.ascii "7"
	.zero 1
uuid_000000000007a329:
	.ascii "8"
	.zero 1
uuid_000000000007a32a:
	.ascii "9"
	.zero 1
uuid_000000000007a32b:
	.ascii "a"
	.zero 1
uuid_000000000007a32c:
	.ascii "b"
	.zero 1
uuid_000000000007a32d:
	.ascii "c"
	.zero 1
uuid_000000000007a32e:
	.ascii "d"
	.zero 1
uuid_000000000007a32f:
	.ascii "e"
	.zero 1
uuid_000000000007a330:
	.ascii "f"
	.zero 1
uuid_000000000007a331:
	.ascii "File: LIB/default-stdlib.lm Line: 489 Column: 8"
	.zero 1
uuid_000000000007a365:
	.ascii ""
	.zero 1
malloc_SB_block_SB_head_CL_U64:
.zero 8
malloc_SB_block_SB_tail_CL_U64:
.zero 8
malloc_SB_first_SB_free_CL_U64:
.zero 8
malloc_SB_page_SB_tail_CL_U64:
.zero 8
malloc_SB_large_SB_size_CL_U64:
.zero 8
point_SB_of_SB_interest_CL_U64:
.zero 8
rc_SB_magic_SB_number_CL_U64:
.zero 8
assemble_SB_text_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_init_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_data_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_profile_SB_onexit_CL_SSCaseNumber3:
.zero 24
assemble_SB_final_CL_String:
.zero 8
assemble_SB_argv_SB_referenced_CL_U8:
.zero 8
main_SB_with_SB_argv_CL_U8:
.zero 8
main_SB_with_CL_U8:
.zero 8
config_SB_profile_SB_invocations_CL_U8:
.zero 8
config_SB_strict_CL_U8:
.zero 8
config_SB_preprocess_CL_U8:
.zero 8
config_SB_target_CL_String:
.zero 8
uuid_000000000007a3db:
	.ascii "tmp.s"
	.zero 1
config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1:
.zero 8
config_SB_mode_CL_CompileModeCompileModeCaseNumber0:
.zero 8
preprocess_SB_macros_CL_MacroListMacroListCaseNumber1:
.zero 168
ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1:
.zero 72
ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10:
.zero 72
global_SB_type_SB_context_CL_TContextTContextCaseNumber2:
.zero 120
global_SB_ctx_CL_FContextFContextCaseNumber1:
.zero 200
parse_SB_suffixes_CL_SfxListSfxListCaseNumber1:
.zero 48
stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1:
.zero 200
uuid_000000000007a3e0:
	.ascii "_EX_"
	.zero 1
uuid_000000000007a3e1:
	.ascii "_DL_"
	.zero 1
uuid_000000000007a3e2:
	.ascii "_MD_"
	.zero 1
uuid_000000000007a3e3:
	.ascii "_AM_"
	.zero 1
uuid_000000000007a3e4:
	.ascii "_ML_"
	.zero 1
uuid_000000000007a3e5:
	.ascii "_AD_"
	.zero 1
uuid_000000000007a3e6:
	.ascii "_SB_"
	.zero 1
uuid_000000000007a3e7:
	.ascii "_DT_"
	.zero 1
uuid_000000000007a3e8:
	.ascii "_DV_"
	.zero 1
uuid_000000000007a3e9:
	.ascii "_CL_"
	.zero 1
uuid_000000000007a3ea:
	.ascii "_SC_"
	.zero 1
uuid_000000000007a3eb:
	.ascii "_LT_"
	.zero 1
uuid_000000000007a3ec:
	.ascii "_EQ_"
	.zero 1
uuid_000000000007a3ed:
	.ascii "_GT_"
	.zero 1
uuid_000000000007a3ee:
	.ascii "_QM_"
	.zero 1
uuid_000000000007a3ef:
	.ascii "_AT_"
	.zero 1
uuid_000000000007a3f0:
	.ascii "_LB_"
	.zero 1
uuid_000000000007a3f1:
	.ascii "_RB_"
	.zero 1
uuid_000000000007a3f2:
	.ascii "_HT_"
	.zero 1
uuid_000000000007a3f3:
	.ascii "_US_"
	.zero 1
uuid_000000000007a3f4:
	.ascii "_TK_"
	.zero 1
uuid_000000000007a3f5:
	.ascii "_BR_"
	.zero 1
uuid_000000000007a3f6:
	.ascii "_TL_"
	.zero 1
uuid_000000000007a3f7:
	.ascii "File: SRC/mangle-identifier.lm Line: 10 Column: 8"
	.zero 1
uuid_000000000007a443:
	.ascii "?"
	.zero 1
uuid_000000000007a45c:
	.ascii "File: SRC/mangle-identifier.lm Line: 55 Column: 32"
	.zero 1
uuid_000000000007a46c:
	.ascii "File: SRC/mangle-identifier.lm Line: 49 Column: 5"
	.zero 1
uuid_000000000007a479:
	.ascii "\\"
	.zero 1
uuid_000000000007a47a:
	.ascii "Illegal Character: "
	.zero 1
uuid_000000000007a47b:
	.ascii "Illegal Escape Sequence In String "
	.zero 1
uuid_000000000007a47c:
	.ascii "File: SRC/escape-string.lm Line: 12 Column: 11"
	.zero 1
uuid_000000000007a4a1:
	.ascii "\\\\\""
	.zero 1
uuid_000000000007a4a2:
	.ascii ";"
	.zero 1
uuid_000000000007a4a3:
	.ascii "\\\\\\\\"
	.zero 1
uuid_000000000007a4a4:
	.ascii "'"
	.zero 1
uuid_000000000007a4a5:
	.ascii "λ"
	.zero 1
uuid_000000000007a4a6:
	.ascii "\\\\n"
	.zero 1
uuid_000000000007a4a7:
	.ascii "#"
	.zero 1
uuid_000000000007a4a8:
	.ascii "	"
	.zero 1
uuid_000000000007a4a9:
	.ascii "File: SRC/escape-string.lm Line: 50 Column: 14"
	.zero 1
uuid_000000000007a4cb:
	.ascii "\\\\"
	.zero 1
uuid_000000000007a4cf:
	.ascii "\\n"
	.zero 1
uuid_000000000007a4d0:
	.ascii "File: SRC/escape-string.lm Line: 45 Column: 8"
	.zero 1
uuid_000000000007a4ef:
	.ascii "File: SRC/escape-string.lm Line: 85 Column: 5"
	.zero 1
uuid_000000000007a508:
	.ascii "as"
	.zero 1
uuid_000000000007a51b:
	.ascii "In Coercion\n"
	.zero 1
uuid_000000000007a51c:
	.ascii ":\n"
	.zero 1
uuid_000000000007a51d:
	.ascii "As: "
	.zero 1
uuid_000000000007a527:
	.ascii "In Function Application\n"
	.zero 1
uuid_000000000007a528:
	.ascii "Return:\n"
	.zero 1
uuid_000000000007a529:
	.ascii "File: SRC/error-formatting.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007a533:
	.ascii "."
	.zero 1
uuid_000000000007a53d:
	.ascii "File: SRC/is-variable.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007a5d1:
	.ascii "@"
	.zero 1
uuid_000000000007a5d5:
	.ascii "Used"
	.zero 1
uuid_000000000007a5d6:
	.ascii "Unused"
	.zero 1
uuid_000000000007a5d7:
	.ascii "Return"
	.zero 1
uuid_000000000007a5d8:
	.ascii "Tail"
	.zero 1
uuid_000000000007a5d9:
	.ascii "Call"
	.zero 1
uuid_000000000007a5da:
	.ascii "File: SRC/to-string.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007a5fe:
	.ascii ","
	.zero 1
uuid_000000000007a5ff:
	.ascii "File: SRC/to-string.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007a618:
	.ascii "+"
	.zero 1
uuid_000000000007a62b:
	.ascii "..."
	.zero 1
uuid_000000000007a63e:
	.ascii "<"
	.zero 1
uuid_000000000007a63f:
	.ascii ">"
	.zero 1
uuid_000000000007a640:
	.ascii "File: SRC/to-string.lm Line: 46 Column: 5"
	.zero 1
uuid_000000000007a6b3:
	.ascii "File: SRC/is-equal.lm Line: 4 Column: 5"
	.zero 1
type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0:
.zero 128
uuid_000000000007a6cf:
	.ascii "Nil"
	.zero 1
uuid_000000000007a6eb:
	.ascii "GlobalVariable"
	.zero 1
uuid_000000000007a6ec:
	.ascii "mov"
	.zero 1
uuid_000000000007a6ed:
	.ascii "Cons"
	.zero 1
uuid_000000000007a70c:
	.ascii ":"
	.zero 1
uuid_000000000007a737:
	.ascii "File: SRC/infer-expr.lm Line: 28 Column: 11"
	.zero 1
uuid_000000000007a768:
	.ascii "File: SRC/infer-expr.lm Line: 57 Column: 14"
	.zero 1
uuid_000000000007a778:
	.ascii "gensym-label"
	.zero 1
uuid_000000000007a78b:
	.ascii "Label"
	.zero 1
uuid_000000000007a795:
	.ascii "label"
	.zero 1
uuid_000000000007a7a8:
	.ascii "if"
	.zero 1
uuid_000000000007a7fa:
	.ascii "Reg8"
	.zero 1
uuid_000000000007a7fe:
	.ascii "Reg16"
	.zero 1
uuid_000000000007a802:
	.ascii "Reg32"
	.zero 1
uuid_000000000007a806:
	.ascii "Reg64"
	.zero 1
uuid_000000000007a80a:
	.ascii "File: SRC/infer-expr.lm Line: 89 Column: 11"
	.zero 1
uuid_000000000007a814:
	.ascii "AsOnly"
	.zero 1
uuid_000000000007a824:
	.ascii "sizeof"
	.zero 1
uuid_000000000007a837:
	.ascii "U64"
	.zero 1
uuid_000000000007a841:
	.ascii "File: SRC/infer-expr.lm Line: 117 Column: 11"
	.zero 1
uuid_000000000007a845:
	.ascii "scope"
	.zero 1
uuid_000000000007a858:
	.ascii "open"
	.zero 1
uuid_000000000007a86b:
	.ascii "Array"
	.zero 1
uuid_000000000007a8a2:
	.ascii "push-deref"
	.zero 1
uuid_000000000007a8a3:
	.ascii "StackVariable"
	.zero 1
uuid_000000000007a8a4:
	.ascii "File: SRC/infer-expr.lm Line: 129 Column: 11"
	.zero 1
uuid_000000000007a8cc:
	.ascii "Variable Name Is Already Bound In Outer Scope"
	.zero 1
uuid_000000000007a8d3:
	.ascii "Unable to infer type of expression"
	.zero 1
uuid_000000000007a8ec:
	.ascii "File: SRC/infer-expr.lm Line: 153 Column: 11"
	.zero 1
uuid_000000000007a8f0:
	.ascii "del"
	.zero 1
uuid_000000000007a906:
	.ascii "Rc"
	.zero 1
uuid_000000000007a907:
	.ascii "inc"
	.zero 1
uuid_000000000007a908:
	.ascii "Tuple"
	.zero 1
uuid_000000000007a915:
	.ascii "Constructor"
	.zero 1
uuid_000000000007a916:
	.ascii "CaseNumber"
	.zero 1
uuid_000000000007a917:
	.ascii "Sized"
	.zero 1
uuid_000000000007a918:
	.ascii "FieldsSized"
	.zero 1
uuid_000000000007a919:
	.ascii "push"
	.zero 1
uuid_000000000007a91a:
	.ascii "File: SRC/infer-expr.lm Line: 193 Column: 14"
	.zero 1
uuid_000000000007a951:
	.ascii "File: SRC/infer-expr.lm Line: 211 Column: 14"
	.zero 1
uuid_000000000007a958:
	.ascii "Arrow"
	.zero 1
uuid_000000000007a959:
	.ascii "cdecl::return"
	.zero 1
uuid_000000000007a981:
	.ascii "Unknown Term In Type Inference\n"
	.zero 1
uuid_000000000007a982:
	.ascii "File: SRC/infer-expr.lm Line: 8 Column: 5"
	.zero 1
alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1:
.zero 72
uuid_000000000007aa1c:
	.ascii "File: SRC/alias.lm Line: 11 Column: 8"
	.zero 1
uuid_000000000007aa20:
	.ascii "File: SRC/alias.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007aa54:
	.ascii "File: SRC/alias.lm Line: 29 Column: 8"
	.zero 1
uuid_000000000007aa58:
	.ascii "File: SRC/alias.lm Line: 28 Column: 5"
	.zero 1
class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0:
.zero 80
is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
uuid_000000000007aaab:
	.ascii "Hook"
	.zero 1
uuid_000000000007aaac:
	.ascii "Duplicate Global Symbol "
	.zero 1
uuid_000000000007aaad:
	.ascii " : "
	.zero 1
class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0:
.zero 48
tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
unknown_SB_index_SB_of_SB_tag_CL_U64:
.zero 8
class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
uuid_000000000007aaee:
	.ascii "Unexpected Class In index-class-of-tag: "
	.zero 1
uuid_000000000007aaef:
	.ascii "File: SRC/class-of-tag.lm Line: 6 Column: 5"
	.zero 1
class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_000000000007ab2e:
	.ascii "Tag"
	.zero 1
uuid_000000000007ab4a:
	.ascii "File: SRC/fields-of-tag.lm Line: 17 Column: 64"
	.zero 1
uuid_000000000007ab51:
	.ascii "Invalid Tag In fields-of-tag "
	.zero 1
uuid_000000000007ab52:
	.ascii "File: SRC/fields-of-tag.lm Line: 15 Column: 5"
	.zero 1
uuid_000000000007ab59:
	.ascii "Fields"
	.zero 1
type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_000000000007ab71:
	.ascii "ERROR: set-type-fields\n"
	.zero 1
uuid_000000000007ab72:
	.ascii "File: SRC/type-complex-fields.lm Line: 6 Column: 5"
	.zero 1
uuid_000000000007ab9a:
	.ascii "File: SRC/get-vararg-inner.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007abc8:
	.ascii "File: SRC/is-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007abea:
	.ascii "File: SRC/is-constructor.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007ac06:
	.ascii "File: SRC/is-constructor.lm Line: 28 Column: 5"
	.zero 1
uuid_000000000007ac6d:
	.ascii "Field"
	.zero 1
uuid_000000000007ac8c:
	.ascii "File: SRC/is-open.lm Line: 16 Column: 11"
	.zero 1
uuid_000000000007ac93:
	.ascii "File: SRC/is-open.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007acca:
	.ascii "File: SRC/is-parameterized.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007acf8:
	.ascii "File: SRC/is-sized.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ad14:
	.ascii "Constant"
	.zero 1
uuid_000000000007ad4b:
	.ascii "File: SRC/has-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ad64:
	.ascii "File: SRC/guess-representation.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007ad7a:
	.ascii "LocalVariable"
	.zero 1
uuid_000000000007ad99:
	.ascii "File: SRC/deep-hash.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007adb1:
	.ascii "File: SRC/deep-hash.lm Line: 26 Column: 5"
	.zero 1
uuid_000000000007adb8:
	.ascii " != "
	.zero 1
uuid_000000000007adb9:
	.ascii "Type Ascription Inequality"
	.zero 1
uuid_000000000007add2:
	.ascii "File: SRC/typeof.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ade2:
	.ascii "Var"
	.zero 1
uuid_000000000007adec:
	.ascii "Lit"
	.zero 1
uuid_000000000007ae38:
	.ascii "App"
	.zero 1
uuid_000000000007ae45:
	.ascii "Abs"
	.zero 1
uuid_000000000007ae46:
	.ascii "File: SRC/to-s.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ae71:
	.ascii "File: SRC/p.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007ae8a:
	.ascii "File: SRC/and.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007aea3:
	.ascii "File: SRC/union.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007aebc:
	.ascii "File: SRC/union.lm Line: 21 Column: 8"
	.zero 1
uuid_000000000007aed5:
	.ascii "program"
	.zero 1
uuid_000000000007aed6:
	.ascii "File: SRC/union.lm Line: 36 Column: 28"
	.zero 1
uuid_000000000007aee9:
	.ascii "File: SRC/tag-of.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007af1f:
	.ascii "File: SRC/can-unify.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007af3b:
	.ascii "Meta"
	.zero 1
uuid_000000000007b0ad:
	.ascii "GT"
	.zero 1
uuid_000000000007b0e4:
	.ascii "File: SRC/can-unify.lm Line: 21 Column: 5"
	.zero 1
uuid_000000000007b187:
	.ascii "File: SRC/unify.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007b1c7:
	.ascii "File: SRC/unify.lm Line: 47 Column: 11"
	.zero 1
uuid_000000000007b327:
	.ascii "File: SRC/unify.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007b37e:
	.ascii "File: SRC/unify.lm Line: 130 Column: 5"
	.zero 1
uuid_000000000007b3ab:
	.ascii "File: SRC/fields-of-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b460:
	.ascii "File: SRC/sizeof-type.lm Line: 25 Column: 11"
	.zero 1
uuid_000000000007b473:
	.ascii "Unexpected Type sizeof-type "
	.zero 1
uuid_000000000007b474:
	.ascii "File: SRC/sizeof-type.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b4a8:
	.ascii "File: SRC/has-infinite.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007b500:
	.ascii "File: SRC/has-infinite.lm Line: 26 Column: 5"
	.zero 1
uuid_000000000007b521:
	.ascii "File: SRC/has-forward.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b572:
	.ascii "File: SRC/has-forward.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007b585:
	.ascii "AL"
	.zero 1
uuid_000000000007b586:
	.ascii "BL"
	.zero 1
uuid_000000000007b587:
	.ascii "CL"
	.zero 1
uuid_000000000007b588:
	.ascii "DL"
	.zero 1
uuid_000000000007b589:
	.ascii "SIL"
	.zero 1
uuid_000000000007b58a:
	.ascii "DIL"
	.zero 1
uuid_000000000007b58b:
	.ascii "BPL"
	.zero 1
uuid_000000000007b58c:
	.ascii "SPL"
	.zero 1
uuid_000000000007b58d:
	.ascii "R8B"
	.zero 1
uuid_000000000007b58e:
	.ascii "R9B"
	.zero 1
uuid_000000000007b58f:
	.ascii "R10B"
	.zero 1
uuid_000000000007b590:
	.ascii "R11B"
	.zero 1
uuid_000000000007b591:
	.ascii "R12B"
	.zero 1
uuid_000000000007b592:
	.ascii "R13B"
	.zero 1
uuid_000000000007b593:
	.ascii "R14B"
	.zero 1
uuid_000000000007b594:
	.ascii "R15B"
	.zero 1
uuid_000000000007b595:
	.ascii "File: SRC/is-reg8.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b5db:
	.ascii "File: SRC/is-reg8.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007b5e5:
	.ascii "AX"
	.zero 1
uuid_000000000007b5e6:
	.ascii "BX"
	.zero 1
uuid_000000000007b5e7:
	.ascii "CX"
	.zero 1
uuid_000000000007b5e8:
	.ascii "DX"
	.zero 1
uuid_000000000007b5e9:
	.ascii "SI"
	.zero 1
uuid_000000000007b5ea:
	.ascii "DI"
	.zero 1
uuid_000000000007b5eb:
	.ascii "BP"
	.zero 1
uuid_000000000007b5ec:
	.ascii "SP"
	.zero 1
uuid_000000000007b5ed:
	.ascii "R8W"
	.zero 1
uuid_000000000007b5ee:
	.ascii "R9W"
	.zero 1
uuid_000000000007b5ef:
	.ascii "R10W"
	.zero 1
uuid_000000000007b5f0:
	.ascii "R11W"
	.zero 1
uuid_000000000007b5f1:
	.ascii "R12W"
	.zero 1
uuid_000000000007b5f2:
	.ascii "R13W"
	.zero 1
uuid_000000000007b5f3:
	.ascii "R14W"
	.zero 1
uuid_000000000007b5f4:
	.ascii "R15W"
	.zero 1
uuid_000000000007b5f5:
	.ascii "File: SRC/is-reg16.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b63b:
	.ascii "File: SRC/is-reg16.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007b645:
	.ascii "EAX"
	.zero 1
uuid_000000000007b646:
	.ascii "EBX"
	.zero 1
uuid_000000000007b647:
	.ascii "ECX"
	.zero 1
uuid_000000000007b648:
	.ascii "EDX"
	.zero 1
uuid_000000000007b649:
	.ascii "ESI"
	.zero 1
uuid_000000000007b64a:
	.ascii "EDI"
	.zero 1
uuid_000000000007b64b:
	.ascii "EBP"
	.zero 1
uuid_000000000007b64c:
	.ascii "ESP"
	.zero 1
uuid_000000000007b64d:
	.ascii "R8D"
	.zero 1
uuid_000000000007b64e:
	.ascii "R9D"
	.zero 1
uuid_000000000007b64f:
	.ascii "R10D"
	.zero 1
uuid_000000000007b650:
	.ascii "R11D"
	.zero 1
uuid_000000000007b651:
	.ascii "R12D"
	.zero 1
uuid_000000000007b652:
	.ascii "R13D"
	.zero 1
uuid_000000000007b653:
	.ascii "R14D"
	.zero 1
uuid_000000000007b654:
	.ascii "R15D"
	.zero 1
uuid_000000000007b655:
	.ascii "File: SRC/is-reg32.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b69b:
	.ascii "File: SRC/is-reg32.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007b6a5:
	.ascii "RAX"
	.zero 1
uuid_000000000007b6a6:
	.ascii "RBX"
	.zero 1
uuid_000000000007b6a7:
	.ascii "RCX"
	.zero 1
uuid_000000000007b6a8:
	.ascii "RDX"
	.zero 1
uuid_000000000007b6a9:
	.ascii "RSI"
	.zero 1
uuid_000000000007b6aa:
	.ascii "RDI"
	.zero 1
uuid_000000000007b6ab:
	.ascii "RBP"
	.zero 1
uuid_000000000007b6ac:
	.ascii "RSP"
	.zero 1
uuid_000000000007b6ad:
	.ascii "R8"
	.zero 1
uuid_000000000007b6ae:
	.ascii "R9"
	.zero 1
uuid_000000000007b6af:
	.ascii "R10"
	.zero 1
uuid_000000000007b6b0:
	.ascii "R11"
	.zero 1
uuid_000000000007b6b1:
	.ascii "R12"
	.zero 1
uuid_000000000007b6b2:
	.ascii "R13"
	.zero 1
uuid_000000000007b6b3:
	.ascii "R14"
	.zero 1
uuid_000000000007b6b4:
	.ascii "R15"
	.zero 1
uuid_000000000007b6b5:
	.ascii "File: SRC/is-reg64.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b6fb:
	.ascii "File: SRC/is-reg64.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007b711:
	.ascii "File: SRC/with-tag.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007b739:
	.ascii "File: SRC/with-size.lm Line: 8 Column: 5"
	.zero 1
uuid_000000000007b74b:
	.ascii "File: SRC/with-size.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007b791:
	.ascii "File: SRC/with-size.lm Line: 30 Column: 5"
	.zero 1
uuid_000000000007b7b6:
	.ascii "File: SRC/with-fields.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b7e1:
	.ascii "File: SRC/without-tag.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007b80f:
	.ascii "File: SRC/without-tag.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b82d:
	.ascii "File: SRC/without-tag.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007b855:
	.ascii "File: SRC/without-constructor.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b86d:
	.ascii "File: SRC/without-representation.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b88f:
	.ascii "Literal"
	.zero 1
uuid_000000000007b8e7:
	.ascii "File: SRC/without-representation.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007b91a:
	.ascii "File: SRC/without-size-unless-class.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b942:
	.ascii "File: SRC/without-size-unless-class.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007b982:
	.ascii "File: SRC/without-size-unless-class.lm Line: 46 Column: 5"
	.zero 1
uuid_000000000007b9a0:
	.ascii "File: SRC/without-size.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b9da:
	.ascii "File: SRC/without-size.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007ba05:
	.ascii "File: SRC/with-only-tag.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ba2d:
	.ascii "File: SRC/with-only-class.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ba42:
	.ascii "File: SRC/with-only-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007babb:
	.ascii "File: SRC/with-only-representation.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007baf2:
	.ascii "File: SRC/normalize.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007bb2c:
	.ascii "Malformed Type Definition"
	.zero 1
uuid_000000000007bb2d:
	.ascii "File: SRC/type-of-s.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bb55:
	.ascii "Mark Field "
	.zero 1
uuid_000000000007bb56:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007bb78:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 25 Column: 11"
	.zero 1
uuid_000000000007bb9a:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bbf2:
	.ascii "Unknown LHS"
	.zero 1
uuid_000000000007bbf3:
	.ascii "File: SRC/typeof-lhs.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc23:
	.ascii "File: SRC/cons-head.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc45:
	.ascii "File: SRC/cons-tail.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc55:
	.ascii "File: SRC/parameter-number.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc72:
	.ascii "File: SRC/parameter-number.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007bc7c:
	.ascii "Function Application Yielded No Matches\n"
	.zero 1
uuid_000000000007bc7d:
	.ascii "\nWith Argument : "
	.zero 1
uuid_000000000007bc7e:
	.ascii "Options: "
	.zero 1
uuid_000000000007bc82:
	.ascii "Function Application Yielded An Irreducible Plurality Of Matches\n"
	.zero 1
uuid_000000000007bc83:
	.ascii "With Argument "
	.zero 1
uuid_000000000007bc84:
	.ascii "Matched "
	.zero 1
uuid_000000000007bc8e:
	.ascii "File: SRC/apply.lm Line: 31 Column: 11"
	.zero 1
uuid_000000000007bcbc:
	.ascii "Application Did Not Close Before Specialization:\n"
	.zero 1
uuid_000000000007bcbd:
	.ascii "Function "
	.zero 1
uuid_000000000007bcbe:
	.ascii "Argument "
	.zero 1
uuid_000000000007bcc5:
	.ascii "Function Not Simple Arrow: "
	.zero 1
uuid_000000000007bcc6:
	.ascii "File: SRC/apply.lm Line: 43 Column: 8"
	.zero 1
uuid_000000000007bccd:
	.ascii "File: SRC/apply.lm Line: 42 Column: 5"
	.zero 1
uuid_000000000007bcfb:
	.ascii "File: SRC/apply.lm Line: 81 Column: 33"
	.zero 1
uuid_000000000007bd35:
	.ascii "File: SRC/apply.lm Line: 72 Column: 5"
	.zero 1
uuid_000000000007bd7d:
	.ascii "File: SRC/apply-plural.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bd97:
	.ascii "File: SRC/reduce-plural.lm Line: 5 Column: 41"
	.zero 1
uuid_000000000007bdb9:
	.ascii "File: SRC/reduce-plural.lm Line: 19 Column: 11"
	.zero 1
uuid_000000000007bdc3:
	.ascii "File: SRC/reduce-plural.lm Line: 15 Column: 27"
	.zero 1
uuid_000000000007bde2:
	.ascii "File: SRC/reduce-plural.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007bdec:
	.ascii "File: SRC/reduce-plural.lm Line: 33 Column: 27"
	.zero 1
uuid_000000000007be08:
	.ascii "Blob"
	.zero 1
uuid_000000000007be25:
	.ascii "File: SRC/try-specialize.lm Line: 17 Column: 20"
	.zero 1
uuid_000000000007be35:
	.ascii "File: SRC/try-specialize.lm Line: 5 Column: 35"
	.zero 1
uuid_000000000007be6f:
	.ascii "File: SRC/unify-hint.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007be84:
	.ascii "File: SRC/unify-hint.lm Line: 24 Column: 5"
	.zero 1
uuid_000000000007be8e:
	.ascii "|"
	.zero 1
uuid_000000000007bec5:
	.ascii "File: SRC/infer-type-definition.lm Line: 18 Column: 14"
	.zero 1
uuid_000000000007bed8:
	.ascii "File: SRC/infer-type-definition.lm Line: 25 Column: 17"
	.zero 1
uuid_000000000007bee2:
	.ascii "File: SRC/infer-type-definition.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007bef4:
	.ascii "File: SRC/arity.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bf04:
	.ascii "File: SRC/arity.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007bf26:
	.ascii "File: SRC/cons-arity.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bf4e:
	.ascii "File: SRC/implicit-tail.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bf55:
	.ascii "Unknown Referenced Variable"
	.zero 1
uuid_000000000007bf74:
	.ascii "File: SRC/typeof-var-raw.lm Line: 4 Column: 28"
	.zero 1
types_SB_have_SB_changed_CL_U8:
.zero 8
uuid_000000000007bf87:
	.ascii "File: SRC/typecheck.lm Line: 7 Column: 25"
	.zero 1
uuid_000000000007bf97:
	.ascii "File: SRC/typecheck.lm Line: 14 Column: 42"
	.zero 1
uuid_000000000007bfbe:
	.ascii "File: SRC/typecheck.lm Line: 22 Column: 43"
	.zero 1
uuid_000000000007c001:
	.ascii "File: SRC/substitute.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007c01c:
	.ascii "File: SRC/substitute.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007c03b:
	.ascii "File: SRC/substitute.lm Line: 44 Column: 34"
	.zero 1
uuid_000000000007c057:
	.ascii "File: SRC/substitute.lm Line: 41 Column: 5"
	.zero 1
uuid_000000000007c06f:
	.ascii "File: SRC/substitute.lm Line: 73 Column: 5"
	.zero 1
uuid_000000000007c0b8:
	.ascii "File: SRC/substitute.lm Line: 90 Column: 34"
	.zero 1
uuid_000000000007c0da:
	.ascii "File: SRC/substitute.lm Line: 87 Column: 5"
	.zero 1
uuid_000000000007c15f:
	.ascii "Unexpected Substitute LHS"
	.zero 1
uuid_000000000007c160:
	.ascii "File: SRC/substitute.lm Line: 128 Column: 5"
	.zero 1
uuid_000000000007c1af:
	.ascii "File: SRC/substitute.lm Line: 168 Column: 34"
	.zero 1
uuid_000000000007c1f5:
	.ascii "File: SRC/substitute.lm Line: 187 Column: 34"
	.zero 1
uuid_000000000007c247:
	.ascii "Unexpected Substitution Term:"
	.zero 1
uuid_000000000007c248:
	.ascii "File: SRC/substitute.lm Line: 159 Column: 5"
	.zero 1
uuid_000000000007c285:
	.ascii "File: SRC/substitute.lm Line: 247 Column: 34"
	.zero 1
uuid_000000000007c295:
	.ascii "File: SRC/substitute.lm Line: 243 Column: 5"
	.zero 1
uuid_000000000007c2c3:
	.ascii "File: SRC/specialize.lm Line: 14 Column: 20"
	.zero 1
uuid_000000000007c2d0:
	.ascii "File: SRC/specialize.lm Line: 7 Column: 38"
	.zero 1
uuid_000000000007c2ef:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c320:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007c348:
	.ascii "Size Of Type Cannot Be Determined Due To Forward Reference: "
	.zero 1
uuid_000000000007c34c:
	.ascii "Size Of Type Is Infinite: "
	.zero 1
uuid_000000000007c350:
	.ascii "File: SRC/infer-type-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c375:
	.ascii "File: SRC/infer-global-context.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007c3c1:
	.ascii "Hooks Must Not Return Values."
	.zero 1
uuid_000000000007c404:
	.ascii "Global Bindings Must Be Ascripted"
	.zero 1
uuid_000000000007c405:
	.ascii "File: SRC/infer-global-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c41e:
	.ascii "File: SRC/assert-well-typed.lm Line: 3 Column: 26"
	.zero 1
uuid_000000000007c4eb:
	.ascii "set"
	.zero 1
uuid_000000000007c567:
	.ascii "Unknown Term In Assert Well Typed "
	.zero 1
uuid_000000000007c568:
	.ascii "File: SRC/assert-well-typed.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007c608:
	.ascii "Invalid LHS"
	.zero 1
uuid_000000000007c609:
	.ascii "File: SRC/infer-ctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c621:
	.ascii "File: SRC/infer-tctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c640:
	.ascii "File: SRC/infer-tctx.lm Line: 15 Column: 5"
	.zero 1
uuid_000000000007c64d:
	.ascii "	mov $60, %rax\n"
	.zero 1
uuid_000000000007c64e:
	.ascii "	mov $0, %rdi\n"
	.zero 1
uuid_000000000007c64f:
	.ascii "	syscall\n"
	.zero 1
uuid_000000000007c650:
	.ascii ".data\n"
	.zero 1
uuid_000000000007c651:
	.ascii ".global _start\n"
	.zero 1
uuid_000000000007c652:
	.ascii ".text\n"
	.zero 1
uuid_000000000007c653:
	.ascii "_start:\n"
	.zero 1
uuid_000000000007c654:
	.ascii "	mov %rsp,%rbp\n"
	.zero 1
uuid_000000000007c655:
	.ascii "	mov %rbp,%rsp\n"
	.zero 1
uuid_000000000007c659:
	.ascii "	popq %r8\n"
	.zero 1
uuid_000000000007c65a:
	.ascii "	movq %rsp, %r9\n"
	.zero 1
uuid_000000000007c65e:
	.ascii "	push %rbp\n"
	.zero 1
uuid_000000000007c65f:
	.ascii "	mov %rsp, %rbp\n"
	.zero 1
uuid_000000000007c660:
	.ascii "	pushq %r8\n"
	.zero 1
uuid_000000000007c661:
	.ascii "	pushq %r9\n"
	.zero 1
uuid_000000000007c665:
	.ascii "	call main\n"
	.zero 1
uuid_000000000007c666:
	.ascii "	mov %rbp, %rsp\n"
	.zero 1
uuid_000000000007c667:
	.ascii "	pop %rbp\n"
	.zero 1
uuid_000000000007c66b:
	.ascii "File: SRC/compile.lm Line: 2 Column: 20"
	.zero 1
uuid_000000000007c6ae:
	.ascii "fragment-type"
	.zero 1
uuid_000000000007c6af:
	.ascii "Function"
	.zero 1
uuid_000000000007c6b0:
	.ascii "File: SRC/compile-blob.lm Line: 10 Column: 11"
	.zero 1
uuid_000000000007c6c0:
	.ascii "File: SRC/compile-blob.lm Line: 4 Column: 39"
	.zero 1
uuid_000000000007c715:
	.ascii "expression"
	.zero 1
uuid_000000000007c716:
	.ascii "File: SRC/compile-blob.lm Line: 31 Column: 39"
	.zero 1
uuid_000000000007c744:
	.ascii "main"
	.zero 1
uuid_000000000007c748:
	.ascii "Global"
	.zero 1
uuid_000000000007c749:
	.ascii "->"
	.zero 1
uuid_000000000007c753:
	.ascii "File: SRC/compile-gnu.lm Line: 19 Column: 17"
	.zero 1
uuid_000000000007c77b:
	.ascii "File: SRC/compile-gnu.lm Line: 4 Column: 39"
	.zero 1
uuid_000000000007c797:
	.ascii "File: SRC/compile-program-ordered.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c7c8:
	.ascii "File: SRC/compile-program-ordered.lm Line: 11 Column: 5"
	.zero 1
uuid_000000000007c805:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 15 Column: 14"
	.zero 1
uuid_000000000007c80f:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 11 Column: 27"
	.zero 1
uuid_000000000007c816:
	.ascii "Context::lookup "
	.zero 1
uuid_000000000007c817:
	.ascii "\nCandidates:\n"
	.zero 1
uuid_000000000007c82a:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 45 Column: 30"
	.zero 1
uuid_000000000007c831:
	.ascii "Context::lookup Could Not Find Symbol"
	.zero 1
uuid_000000000007c87f:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 14 Column: 14"
	.zero 1
uuid_000000000007c889:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 10 Column: 27"
	.zero 1
uuid_000000000007c890:
	.ascii "Context::lookups "
	.zero 1
uuid_000000000007c8a6:
	.ascii "File: SRC/fragment-context::lookup-vararg.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007c8fe:
	.ascii "File: SRC/with-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c929:
	.ascii "File: SRC/with-location.lm Line: 57 Column: 5"
	.zero 1
uuid_000000000007c975:
	.ascii "File: SRC/without-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c9a0:
	.ascii "File: SRC/without-location.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007c9b0:
	.ascii "File: SRC/with-key.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c9b4:
	.ascii "Unknown"
	.zero 1
uuid_000000000007ca06:
	.ascii "File: SRC/location-of.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ca2b:
	.ascii "File: SRC/unique.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007ca3b:
	.ascii "File: SRC/print-verbose.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007ca4e:
	.ascii "File: SRC/non-zero.lm Line: 4 Column: 5"
	.zero 1
already_SB_tokenized_CL_ListStringListStringCaseNumber1:
.zero 24
uuid_000000000007ca64:
	.ascii "File: SRC/tokenize.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007ca72:
	.ascii "File: SRC/tokenize.lm Line: 25 Column: 8"
	.zero 1
uuid_000000000007cad7:
	.ascii "File: SRC/tokenize.lm Line: 35 Column: 8"
	.zero 1
uuid_000000000007cb01:
	.ascii "Hanging Parentheses In File: "
	.zero 1
uuid_000000000007cb02:
	.ascii " Count: "
	.zero 1
uuid_000000000007cb18:
	.ascii "File: SRC/is-nil.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cb2b:
	.ascii "File: SRC/is-seq.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cb44:
	.ascii "File: SRC/is-arrow.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cb60:
	.ascii "File: SRC/is-hook.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cb7c:
	.ascii "File: SRC/is-blob.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cb98:
	.ascii "File: SRC/is-cons.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cbab:
	.ascii "ImpureCtx"
	.zero 1
uuid_000000000007cbb5:
	.ascii "File: SRC/is-impure-ctx.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cbc8:
	.ascii "String"
	.zero 1
uuid_000000000007cbd2:
	.ascii "File: SRC/is-string.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cbe5:
	.ascii "OntoStack"
	.zero 1
uuid_000000000007cc01:
	.ascii "File: SRC/is-onto-stack.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cc14:
	.ascii "ImpureOffset"
	.zero 1
uuid_000000000007cc30:
	.ascii "File: SRC/is-impure-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cc43:
	.ascii "BranchConditional"
	.zero 1
uuid_000000000007cc4d:
	.ascii "File: SRC/is-branchconditional.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cc60:
	.ascii "File: SRC/plus.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cc76:
	.ascii "File: SRC/print.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cc86:
	.ascii " = "
	.zero 1
uuid_000000000007cc87:
	.ascii ";\n"
	.zero 1
uuid_000000000007cc88:
	.ascii "File: SRC/print.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007cca1:
	.ascii "File: SRC/print.lm Line: 25 Column: 5"
	.zero 1
uuid_000000000007ccab:
	.ascii "EOF"
	.zero 1
uuid_000000000007ccd3:
	.ascii "type "
	.zero 1
uuid_000000000007ccdd:
	.ascii " := "
	.zero 1
uuid_000000000007ccfc:
	.ascii "File: SRC/print.lm Line: 40 Column: 5"
	.zero 1
uuid_000000000007cd1e:
	.ascii "Fragment Context:\n"
	.zero 1
uuid_000000000007cd2e:
	.ascii "File: SRC/print.lm Line: 84 Column: 27"
	.zero 1
uuid_000000000007cd4a:
	.ascii "Fragment\n"
	.zero 1
uuid_000000000007cd4b:
	.ascii "	Offset = "
	.zero 1
uuid_000000000007cd58:
	.ascii "File: SRC/print.lm Line: 99 Column: 33"
	.zero 1
uuid_000000000007cd5f:
	.ascii "File: SRC/print.lm Line: 94 Column: 5"
	.zero 1
uuid_000000000007cd6c:
	.ascii "File: SRC/print.lm Line: 111 Column: 5"
	.zero 1
uuid_000000000007cd7f:
	.ascii "In File "
	.zero 1
uuid_000000000007cd80:
	.ascii " Line "
	.zero 1
uuid_000000000007cd81:
	.ascii " Column "
	.zero 1
uuid_000000000007cd82:
	.ascii "File: SRC/print.lm Line: 122 Column: 5"
	.zero 1
uuid_000000000007cd9e:
	.ascii " +\n"
	.zero 1
uuid_000000000007cd9f:
	.ascii " + "
	.zero 1
uuid_000000000007cdac:
	.ascii "File: SRC/print.lm Line: 135 Column: 29"
	.zero 1
uuid_000000000007cdd0:
	.ascii "File: SRC/print.lm Line: 159 Column: 35"
	.zero 1
uuid_000000000007cde3:
	.ascii "File: SRC/reverse.lm Line: 4 Column: 26"
	.zero 1
uuid_000000000007cdf9:
	.ascii "(Variable "
	.zero 1
uuid_000000000007ce03:
	.ascii "(Literal "
	.zero 1
uuid_000000000007ce13:
	.ascii "(Type ("
	.zero 1
uuid_000000000007ce14:
	.ascii "))"
	.zero 1
uuid_000000000007ce1e:
	.ascii "(Global ("
	.zero 1
uuid_000000000007ce28:
	.ascii "(App ("
	.zero 1
uuid_000000000007ce35:
	.ascii "(Lambda ("
	.zero 1
uuid_000000000007ce48:
	.ascii "File: SRC/serialize-ast.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007ce81:
	.ascii "File: SRC/serialize-ast.lm Line: 59 Column: 43"
	.zero 1
uuid_000000000007ce8b:
	.ascii "(Variable ?)"
	.zero 1
uuid_000000000007ce9b:
	.ascii "(Literal And) "
	.zero 1
uuid_000000000007ceae:
	.ascii ") "
	.zero 1
uuid_000000000007ceaf:
	.ascii "File: SRC/serialize-ast.lm Line: 72 Column: 37"
	.zero 1
uuid_000000000007ced7:
	.ascii "File: SRC/slot.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007cef6:
	.ascii "File: SRC/slot.lm Line: 30 Column: 14"
	.zero 1
uuid_000000000007cf0c:
	.ascii "File: SRC/slot.lm Line: 26 Column: 5"
	.zero 1
uuid_SB_counter_CL_U64:
.zero 8
uuid_000000000007cf16:
	.ascii "uuid_"
	.zero 1
uuid_000000000007cf29:
	.ascii "File: SRC/var-name-if-var.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cf61:
	.ascii "File: SRC/parse-lambda.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cf85:
	.ascii "File: SRC/parse-lambda.lm Line: 16 Column: 38"
	.zero 1
uuid_000000000007cf92:
	.ascii "File: SRC/parse-lambda.lm Line: 14 Column: 5"
	.zero 1
uuid_000000000007cfb4:
	.ascii "File: SRC/parse-lambda.lm Line: 33 Column: 14"
	.zero 1
uuid_000000000007cfc1:
	.ascii "Expected Dot For Lambda Body\n"
	.zero 1
uuid_000000000007cfcb:
	.ascii "File: SRC/parse-lambda.lm Line: 30 Column: 8"
	.zero 1
uuid_000000000007d015:
	.ascii "File: SRC/parse-many-expressions.lm Line: 18 Column: 14"
	.zero 1
uuid_000000000007d019:
	.ascii "File: SRC/parse-many-expressions.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007d048:
	.ascii "File: SRC/parse-one-expression.lm Line: 12 Column: 11"
	.zero 1
uuid_000000000007d061:
	.ascii "Unexpected Closing Parentheses"
	.zero 1
uuid_000000000007d080:
	.ascii "File: SRC/parse-one-expression.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007d0ae:
	.ascii "File: SRC/parse-one-expression.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007d0d8:
	.ascii "macro"
	.zero 1
uuid_000000000007d109:
	.ascii "File: SRC/parse-toplevel.lm Line: 18 Column: 26"
	.zero 1
uuid_000000000007d110:
	.ascii "File: SRC/parse-toplevel.lm Line: 14 Column: 20"
	.zero 1
uuid_000000000007d114:
	.ascii "File: SRC/parse-toplevel.lm Line: 11 Column: 14"
	.zero 1
uuid_000000000007d118:
	.ascii "meta"
	.zero 1
uuid_000000000007d137:
	.ascii "File: SRC/parse-toplevel.lm Line: 36 Column: 14"
	.zero 1
uuid_000000000007d13b:
	.ascii "type"
	.zero 1
uuid_000000000007d151:
	.ascii "fragment"
	.zero 1
uuid_000000000007d179:
	.ascii "File: SRC/parse-toplevel.lm Line: 50 Column: 34"
	.zero 1
uuid_000000000007d17d:
	.ascii "File: SRC/parse-toplevel.lm Line: 48 Column: 14"
	.zero 1
uuid_000000000007d1a8:
	.ascii "File: SRC/parse-toplevel.lm Line: 70 Column: 34"
	.zero 1
uuid_000000000007d1ac:
	.ascii "File: SRC/parse-toplevel.lm Line: 68 Column: 14"
	.zero 1
uuid_000000000007d1da:
	.ascii "suffix"
	.zero 1
uuid_000000000007d1f0:
	.ascii "atom"
	.zero 1
uuid_000000000007d238:
	.ascii "size"
	.zero 1
uuid_000000000007d263:
	.ascii "import"
	.zero 1
uuid_000000000007d297:
	.ascii "zero"
	.zero 1
uuid_000000000007d2ad:
	.ascii "non-zero"
	.zero 1
uuid_000000000007d2ae:
	.ascii "t"
	.zero 1
uuid_000000000007d2af:
	.ascii "!="
	.zero 1
uuid_000000000007d2b0:
	.ascii ".0"
	.zero 1
uuid_000000000007d2b1:
	.ascii ":="
	.zero 1
uuid_000000000007d2d9:
	.ascii "File: SRC/parse-toplevel.lm Line: 150 Column: 14"
	.zero 1
uuid_000000000007d2e6:
	.ascii "File: SRC/parse-toplevel.lm Line: 162 Column: 14"
	.zero 1
uuid_000000000007d2ea:
	.ascii "File: SRC/parse-toplevel.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007d311:
	.ascii "File: SRC/parse-type-comma-sep.lm Line: 7 Column: 8"
	.zero 1
uuid_000000000007d344:
	.ascii "File: SRC/parse-type-single.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007d34e:
	.ascii "File: SRC/parse-type-single.lm Line: 59 Column: 11"
	.zero 1
uuid_000000000007d370:
	.ascii "Unexpected Parameterized Type: "
	.zero 1
uuid_000000000007d371:
	.ascii "File: SRC/parse-type-single.lm Line: 86 Column: 25"
	.zero 1
uuid_000000000007d37b:
	.ascii "File: SRC/parse-type-single.lm Line: 68 Column: 14"
	.zero 1
uuid_000000000007d39b:
	.ascii "File: SRC/parse-type.lm Line: 12 Column: 8"
	.zero 1
uuid_000000000007d3b4:
	.ascii "File: SRC/parse-type.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007d3cd:
	.ascii "File: SRC/parse-type.lm Line: 51 Column: 8"
	.zero 1
uuid_000000000007d41b:
	.ascii "File: SRC/remove-parens.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007d425:
	.ascii "File: SRC/remove-parens.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d468:
	.ascii "File: SRC/take-one-expr.lm Line: 19 Column: 11"
	.zero 1
uuid_000000000007d472:
	.ascii "File: SRC/take-one-expr.lm Line: 6 Column: 30"
	.zero 1
uuid_000000000007d47c:
	.ascii "src"
	.zero 1
cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1:
.zero 32
uuid_000000000007d48c:
	.ascii "File: SRC/compile-declare-cstring.lm Line: 10 Column: 32"
	.zero 1
uuid_000000000007d493:
	.ascii ":\n	.ascii \""
	.zero 1
uuid_000000000007d494:
	.ascii "\"\n	.zero 1\n"
	.zero 1
uuid_000000000007d4fb:
	.ascii "File: SRC/compile-destructure-args.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d523:
	.ascii "True"
	.zero 1
uuid_000000000007d524:
	.ascii "False"
	.zero 1
uuid_000000000007d525:
	.ascii "\\t"
	.zero 1
uuid_000000000007d526:
	.ascii "10"
	.zero 1
uuid_000000000007d527:
	.ascii "\\s"
	.zero 1
uuid_000000000007d528:
	.ascii "32"
	.zero 1
uuid_000000000007d529:
	.ascii "\\o"
	.zero 1
uuid_000000000007d52a:
	.ascii "35"
	.zero 1
uuid_000000000007d52b:
	.ascii "\\`"
	.zero 1
uuid_000000000007d52c:
	.ascii "39"
	.zero 1
uuid_000000000007d52d:
	.ascii "\\["
	.zero 1
uuid_000000000007d52e:
	.ascii "40"
	.zero 1
uuid_000000000007d52f:
	.ascii "\\]"
	.zero 1
uuid_000000000007d530:
	.ascii "41"
	.zero 1
uuid_000000000007d531:
	.ascii "\\:"
	.zero 1
uuid_000000000007d532:
	.ascii "59"
	.zero 1
uuid_000000000007d533:
	.ascii "File: SRC/compile-expr-direct.lm Line: 36 Column: 20"
	.zero 1
uuid_000000000007d60f:
	.ascii "File: SRC/compile-expr-direct.lm Line: 81 Column: 11"
	.zero 1
uuid_000000000007d676:
	.ascii "into-branch-conditional"
	.zero 1
uuid_000000000007d677:
	.ascii "rsp-offset"
	.zero 1
uuid_000000000007d678:
	.ascii "end-offset"
	.zero 1
uuid_000000000007d679:
	.ascii "return-size"
	.zero 1
uuid_000000000007d67a:
	.ascii "ImplicitContext"
	.zero 1
uuid_000000000007d67b:
	.ascii "ictx"
	.zero 1
uuid_000000000007d67c:
	.ascii "primitive::if"
	.zero 1
uuid_000000000007d6b6:
	.ascii "File: SRC/compile-expr-direct.lm Line: 166 Column: 11"
	.zero 1
uuid_000000000007d6ba:
	.ascii "unframe"
	.zero 1
uuid_000000000007d6bb:
	.ascii "	add $"
	.zero 1
uuid_000000000007d6bc:
	.ascii ", %rsp\n"
	.zero 1
uuid_000000000007d72c:
	.ascii "File: SRC/compile-expr-direct.lm Line: 196 Column: 14"
	.zero 1
uuid_000000000007d73f:
	.ascii "File: SRC/compile-expr-direct.lm Line: 6 Column: 5"
	.zero 1
uuid_000000000007d76a:
	.ascii "File: SRC/compile-expr.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d79e:
	.ascii "File: SRC/compile-fragment-args.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007d7a5:
	.ascii "File: SRC/compile-fragment-args.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d7b8:
	.ascii "cdecl::args-size"
	.zero 1
uuid_000000000007d7b9:
	.ascii "File: SRC/compile-global.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007d7c3:
	.ascii "_COUNTER"
	.zero 1
uuid_000000000007d7c4:
	.ascii ":\n.zero 8\n"
	.zero 1
uuid_000000000007d7c5:
	.ascii "_LABEL:\n	.ascii	\"\\\\t"
	.zero 1
uuid_000000000007d7c6:
	.ascii "\\\\n\"\n	.zero 1\n"
	.zero 1
uuid_000000000007d7c7:
	.ascii "	mov $"
	.zero 1
uuid_000000000007d7c8:
	.ascii ", %RBX\n	mov 0(%RBX), %RAX\n"
	.zero 1
uuid_000000000007d7c9:
	.ascii "	inc %RAX\n	mov %RAX, 0(%RBX)\n"
	.zero 1
uuid_000000000007d7ca:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push %RAX\n	call print_CL_ArrowNilU64\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007d7cb:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push $"
	.zero 1
uuid_000000000007d7cc:
	.ascii "_LABEL\n"
	.zero 1
uuid_000000000007d7cd:
	.ascii "	call print_CL_ArrowNilString\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007d7d1:
	.ascii "frame"
	.zero 1
uuid_000000000007d7d2:
	.ascii "	sub $"
	.zero 1
uuid_000000000007d7d3:
	.ascii "	ret\n"
	.zero 1
uuid_000000000007d7f8:
	.ascii ":\n.zero "
	.zero 1
uuid_000000000007d7f9:
	.ascii "File: SRC/compile-global.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007d80c:
	.ascii "File: SRC/compile-maybe-push-stack.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007d83d:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 11 Column: 11"
	.zero 1
uuid_000000000007d84a:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 8 Column: 5"
	.zero 1
uuid_000000000007d857:
	.ascii "FunctionArguments"
	.zero 1
uuid_000000000007d858:
	.ascii "function-id"
	.zero 1
uuid_000000000007d859:
	.ascii "function-name"
	.zero 1
uuid_000000000007d85a:
	.ascii "function-type"
	.zero 1
uuid_000000000007d85b:
	.ascii "args-size"
	.zero 1
uuid_000000000007d85c:
	.ascii "used"
	.zero 1
uuid_000000000007d85d:
	.ascii "args"
	.zero 1
uuid_000000000007d85e:
	.ascii "primitive::call"
	.zero 1
uuid_000000000007d871:
	.ascii "File: SRC/compile-stack-calls.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007d893:
	.ascii "File: SRC/translate-local-variables.lm Line: 11 Column: 17"
	.zero 1
uuid_000000000007d897:
	.ascii "File: SRC/translate-local-variables.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007d89e:
	.ascii "File: SRC/translate-local-variables.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d8b1:
	.ascii "L"
	.zero 1
uuid_000000000007d8b5:
	.ascii "File: SRC/cc-blob.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007d8c5:
	.ascii "File: SRC/cc-blob.lm Line: 30 Column: 5"
	.zero 1
uuid_000000000007d91a:
	.ascii "File: SRC/cc-args.lm Line: 9 Column: 14"
	.zero 1
uuid_000000000007d96c:
	.ascii "Codegen Unexpected RHS"
	.zero 1
uuid_000000000007d970:
	.ascii "File: SRC/cc-args.lm Line: 75 Column: 14"
	.zero 1
uuid_000000000007d983:
	.ascii "File: SRC/cc-args.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007d9fc:
	.ascii "for-arg-i"
	.zero 1
uuid_000000000007da3c:
	.ascii "for-arg"
	.zero 1
uuid_000000000007da73:
	.ascii "File: SRC/blob-render.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007daa7:
	.ascii "for-atom"
	.zero 1
uuid_000000000007dade:
	.ascii "File: SRC/blob-render.lm Line: 53 Column: 34"
	.zero 1
uuid_000000000007daf1:
	.ascii "range"
	.zero 1
uuid_000000000007db07:
	.ascii "uuid"
	.zero 1
uuid_000000000007db1a:
	.ascii "align"
	.zero 1
uuid_000000000007db36:
	.ascii "=="
	.zero 1
uuid_000000000007db73:
	.ascii "/"
	.zero 1
uuid_000000000007db8f:
	.ascii "*"
	.zero 1
uuid_000000000007dbab:
	.ascii "%"
	.zero 1
uuid_000000000007dc1e:
	.ascii "File: SRC/blob-render.lm Line: 151 Column: 11"
	.zero 1
uuid_000000000007dc58:
	.ascii "File: SRC/blob-render.lm Line: 175 Column: 14"
	.zero 1
uuid_000000000007dc5f:
	.ascii "Unknown Render Term "
	.zero 1
uuid_000000000007dc60:
	.ascii "File: SRC/blob-render.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007dcfa:
	.ascii "File: SRC/blob-render.lm Line: 205 Column: 5"
	.zero 1
uuid_000000000007dd6a:
	.ascii "File: SRC/extract-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007dda7:
	.ascii "File: SRC/index-typedefs.lm Line: 3 Column: 31"
	.zero 1
uuid_000000000007de20:
	.ascii "Invalid Typedef"
	.zero 1
uuid_000000000007de21:
	.ascii "File: SRC/index-typedefs.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007de9d:
	.ascii "Unrecognized Macro Pattern\n"
	.zero 1
uuid_000000000007de9e:
	.ascii "File: SRC/is-macro-head.lm Line: 5 Column: 30"
	.zero 1
uuid_000000000007def0:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 11 Column: 11"
	.zero 1
uuid_000000000007defa:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 25 Column: 14"
	.zero 1
uuid_000000000007df04:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 6 Column: 30"
	.zero 1
uuid_000000000007df0e:
	.ascii "Invalid Macro Application\n"
	.zero 1
uuid_000000000007df63:
	.ascii "_t"
	.zero 1
uuid_000000000007df64:
	.ascii "Token"
	.zero 1
uuid_000000000007df65:
	.ascii "Literal+Constant+String"
	.zero 1
uuid_000000000007df66:
	.ascii "_"
	.zero 1
uuid_000000000007dfa6:
	.ascii "File: SRC/preprocess-apply-literals.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007dfc5:
	.ascii ":Location:"
	.zero 1
uuid_000000000007dfcf:
	.ascii "p"
	.zero 1
uuid_000000000007dfe2:
	.ascii "Location Unknown"
	.zero 1
uuid_000000000007dfef:
	.ascii "File: "
	.zero 1
uuid_000000000007dff0:
	.ascii " Line: "
	.zero 1
uuid_000000000007dff1:
	.ascii " Column: "
	.zero 1
uuid_000000000007dff2:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007e038:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e186:
	.ascii "File: SRC/preprocess-apply.lm Line: 38 Column: 38"
	.zero 1
uuid_000000000007e1a5:
	.ascii "File: SRC/preprocess-apply.lm Line: 56 Column: 38"
	.zero 1
uuid_000000000007e206:
	.ascii "File: SRC/preprocess-apply.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e249:
	.ascii "File: SRC/preprocess-is-suffixed.lm Line: 5 Column: 32"
	.zero 1
uuid_000000000007e27a:
	.ascii "File: SRC/substitute-uuids.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007e2cc:
	.ascii "File: SRC/substitute-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e37b:
	.ascii ":Literal:"
	.zero 1
uuid_000000000007e3ee:
	.ascii "File: SRC/try-destructure-macro.lm Line: 13 Column: 14"
	.zero 1
uuid_000000000007e446:
	.ascii ":Any:"
	.zero 1
uuid_000000000007e4d7:
	.ascii ":Variable:"
	.zero 1
uuid_000000000007e53b:
	.ascii ":Tag:"
	.zero 1
uuid_000000000007e560:
	.ascii "Constant+Literal+U64"
	.zero 1
uuid_000000000007e561:
	.ascii "Tag<"
	.zero 1
uuid_000000000007e577:
	.ascii "File: SRC/try-destructure-macro.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e5c3:
	.ascii "Fragment Has No Type:\n"
	.zero 1
uuid_000000000007e5c7:
	.ascii "File: SRC/destructure-lhs.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007e604:
	.ascii "File: SRC/destructure-lhs.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007e608:
	.ascii "Unexpected Destructure LHS: "
	.zero 1
uuid_000000000007e609:
	.ascii "File: SRC/destructure-lhs.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e61f:
	.ascii "File: SRC/fragment::chain.lm Line: 27 Column: 36"
	.zero 1
uuid_000000000007e64a:
	.ascii "File: SRC/fragment::get.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007e651:
	.ascii "File: SRC/fragment::get.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e66a:
	.ascii "File: SRC/fragment::set-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e683:
	.ascii "File: SRC/fragment::set-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e69c:
	.ascii "File: SRC/fragment::set-term.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e6b5:
	.ascii "File: SRC/fragment::set-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e6ce:
	.ascii "File: SRC/fragment::set-vararg.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e6e7:
	.ascii "File: SRC/fragment::set.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e6eb:
	.ascii "--blob"
	.zero 1
uuid_000000000007e6ec:
	.ascii "--gnu"
	.zero 1
uuid_000000000007e6ed:
	.ascii "--tokenize"
	.zero 1
uuid_000000000007e6ee:
	.ascii "--parse"
	.zero 1
uuid_000000000007e6ef:
	.ascii "--preprocess"
	.zero 1
uuid_000000000007e6f0:
	.ascii "--typecheck"
	.zero 1
uuid_000000000007e6f1:
	.ascii "--compile"
	.zero 1
uuid_000000000007e6f2:
	.ascii "--strict"
	.zero 1
uuid_000000000007e6f3:
	.ascii "--gradual"
	.zero 1
uuid_000000000007e6f4:
	.ascii "--macro"
	.zero 1
uuid_000000000007e6f5:
	.ascii "--nomacro"
	.zero 1
uuid_000000000007e6f6:
	.ascii "--profile-invocations"
	.zero 1
uuid_000000000007e6f7:
	.ascii "-o"
	.zero 1
uuid_000000000007e6f8:
	.ascii "File: SRC/main.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007e744:
	.ascii "File: SRC/main.lm Line: 35 Column: 37"
	.zero 1
uuid_000000000007e758:
	.ascii "File: SRC/main.lm Line: 43 Column: 5"
	.zero 1
uuid_000000000007e776:
	.ascii "File: LIB/default-list.lm Line: 57 Column: 25"
	.zero 1
uuid_000000000007e794:
	.ascii "File: LIB/default-list.lm Line: 44 Column: 25"
	.zero 1
uuid_000000000007e7a5:
	.ascii "List::head is fallible\n"
	.zero 1
uuid_000000000007e7a6:
	.ascii "File: LIB/default-list.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007e7d0:
	.ascii "File: LIB/default-list.lm Line: 33 Column: 8"
	.zero 1
uuid_000000000007e80a:
	.ascii "File: LIB/default-list.lm Line: 20 Column: 26"
	.zero 1
uuid_000000000007e8a3:
	.ascii "File: LIB/default-list.lm Line: 71 Column: 8"
	.zero 1
uuid_000000000007e8b6:
	.ascii "File: LIB/default-list.lm Line: 78 Column: 5"
	.zero 1
uuid_000000000007e976:
	.ascii "File: LIB/default-stdlib.lm Line: 20 Column: 5"
	.zero 1
uuid_000000000007e987:
	.ascii "File: LIB/default-stdlib.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007eb34:
	.ascii "File: LIB/default-stdlib.lm Line: 35 Column: 5"
	.zero 1
