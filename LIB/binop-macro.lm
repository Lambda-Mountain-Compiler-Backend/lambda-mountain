
macro ('declare-binop (op-alias op-code op-type op-rtype reg-suffix rreg-suffix reg-type)) (
   op-alias := λ: Blob(: l op-type+Constant)(: r op-type+Constant). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+Constant)(: r op-type+LocalVariable). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tmov\s_s (:expression r) '\[%RBP\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+Constant)(: r op-type+GlobalVariable). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14\n_s
         '\tmov\s0\[%R14\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+Constant)(: r op-type+reg-type). (: (
      (:program(
         (:program r)
         '\tmov\s%_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         '\tmov\s$_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);

   op-alias := λ: Blob(: l op-type+LocalVariable)(: r op-type+Constant). (: (
      (:program(
         '\tmov\s_s (:expression l) '\[%RBP\],\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+LocalVariable)(: r op-type+LocalVariable). (: (
      (:program(
         '\tmov\s_s (:expression l) '\[%RBP\],\s%R13_l reg-suffix '\n_s
         '\tmov\s_s (:expression r) '\[%RBP\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+LocalVariable)(: r op-type+GlobalVariable). (: (
      (:program(
         '\tmov\s_s (:expression l) '\[%RBP\],\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14\n_s
         '\tmov\s0\[%R14\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+LocalVariable)(: r op-type+reg-type). (: (
      (:program(
         (:program r)
         '\tmov\s%_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         '\tmov\s_s (:expression l) '\[%RBP\],\s%R13_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);

   op-alias := λ: Blob(: l op-type+GlobalVariable)(: r op-type+Constant). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%R13\n_s
         '\tmov\s0\[%R13\],\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+GlobalVariable)(: r op-type+LocalVariable). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%R13\n_s
         '\tmov\s0\[%R13\],\s%R13_l reg-suffix '\n_s
         '\tmov\s_s (:expression r) '\[%RBP\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+GlobalVariable)(: r op-type+GlobalVariable). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%R13\n_s
         '\tmov\s0\[%R13\],\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14\n_s
         '\tmov\s0\[%R14\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+GlobalVariable)(: r op-type+reg-type). (: (
      (:program(
         (:program r)
         '\tmov\s%_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         '\tmov\s$_s (:expression l) ',\s%R13\n_s
         '\tmov\s0\[%R13\],\s%R13_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);

   op-alias := λ: Blob(: l op-type+reg-type)(: r op-type+Constant). (: (
      (:program(
         (:program l)
         '\tmov\s%_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+reg-type)(: r op-type+LocalVariable). (: (
      (:program(
         (:program l)
         '\tmov\s%_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tmov\s_s (:expression r) '\[%RBP\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+reg-type)(: r op-type+GlobalVariable). (: (
      (:program(
         (:program l)
         '\tmov\s%_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tmov\s$_s (:expression r) ',\s%R14\n_s
         '\tmov\s0\[%R14\],\s%R14_l reg-suffix '\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
   op-alias := λ: Blob(: l op-type+reg-type)(: r op-type+reg-type+Meta<OntoStack>). (: (
      (:program(
         (:program r)
         '\tpush\s%_s (:expression r) '\n_s
         (:program l)
         '\tmov\s%_s (:expression l) ',\s%R13_l reg-suffix '\n_s
         '\tpopq\s%R14\n_s
         op-code
      ))
      (:frame( (:frame l) (:frame r) ))
      (:unframe( (:unframe l) (:unframe r) ))
      (:expression( 'R13_l rreg-suffix ))
   ) op-rtype);
);

