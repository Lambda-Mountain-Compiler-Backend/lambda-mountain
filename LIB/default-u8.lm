
import LIB/binop-macro.lm;

meta
   (description (
      'U8\sis\san\sinteger\sof\sthe\srange\s0\sto\s255.
   ))
   (example (print '123_u8))
;
fragment type U8;     size U8 1;     atom suffix U8     _u8;

(declare-binop( && '\tandb\s%R14B,%R13B\n_l U8 U8+Reg8 'B_l 'B_l ));
(declare-binop( || '\torb\s%R14B,%R13B\n_l U8 U8+Reg8 'B_l 'B_l ));
(declare-binop( + '\taddb\s%R14B,%R13B\n_l U8 U8+Reg8 'B_l 'B_l ));
(declare-binop( - '\tsubb\s%R14B,%R13B\n_l U8 U8+Reg8 'B_l 'B_l ));
(declare-binop( ^ '\txorb\s%R14B,%R13B\n_l U8 U8+Reg8 'B_l 'B_l ));

(declare-binop( == '\tcmpb\s%R14B,%R13B\n\tsete\s%R13B\n\tandq\s$1,\s%R13\n_l U8 U64+Reg64 'B_l '_l ));
(declare-binop( != '\tcmpb\s%R14B,%R13B\n\tsetne\s%R13B\n\tandq\s$1,\s%R13\n_l U8 U64+Reg64 'B_l '_l ));
(declare-binop( < '\tcmpb\s%R14B,%R13B\n\tsetl\s%R13B\n\tandq\s$1,\s%R13\n_l U8 U64+Reg64 'B_l '_l ));
(declare-binop( <= '\tcmpb\s%R14B,%R13B\n\tsetle\s%R13B\n\tandq\s$1,\s%R13\n_l U8 U64+Reg64 'B_l '_l ));
(declare-binop( > '\tcmpb\s%R14B,%R13B\n\tsetg\s%R13B\n\tandq\s$1,\s%R13\n_l U8 U64+Reg64 'B_l '_l ));
(declare-binop( >= '\tcmpb\s%R14B,%R13B\n\tsetge\s%R13B\n\tandq\s$1,\s%R13\n_l U8 U64+Reg64 'B_l '_l ));
