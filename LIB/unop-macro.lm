
macro ('declare-unop (op-alias op-code op-type op-rtype op-size return-size reg-type)) (
   op-alias := 位: Blob(: l op-type+Constant). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%_l (rax-of-size op-size) '\n_s
         op-code
      ))
      (:frame( (:frame l) ))
      (:unframe( (:unframe l) ))
      (:expression(rax-of-size return-size))
   ) op-rtype);
   op-alias := 位: Blob(: l op-type+LocalVariable). (: (
      (:program(
         '\tmov\s_s (:expression l) '\[%RBP\],\s%_l (rax-of-size op-size) '\n_s
         op-code
      ))
      (:frame( (:frame l) ))
      (:unframe( (:unframe l) ))
      (:expression(rax-of-size return-size))
   ) op-rtype);
   op-alias := 位: Blob(: l op-type+GlobalVariable). (: (
      (:program(
         '\tmov\s$_s (:expression l) ',\s%RAX\n_s
         '\tmov\s0\[%RAX\],\s%_l (rax-of-size op-size) '\n_s
         op-code
      ))
      (:frame( (:frame l) ))
      (:unframe( (:unframe l) ))
      (:expression(rax-of-size return-size))
   ) op-rtype);
   op-alias := 位: Blob(: l op-type+reg-type). (: (
      (:program(
         (:program l)
         '\tmov\s%_s (:expression l) ',\s%_l (rax-of-size op-size) '\n_s
         op-code
      ))
      (:frame( (:frame l) ))
      (:unframe( (:unframe l) ))
      (:expression(rax-of-size return-size))
   ) op-rtype);
);

