
fragment template::push := λ(: src Sized<size>). (: (
   (.program(
      (for wsz in (range( '0 (/( (-( (-( (.expression return-size) (.expression size) )) '8 )) '8 )) )) (
         \t 'pushq \s '$0 \n
      ))
      (.program src)
      \t 'pushq \s '$ 'case-number \n
   ))
) Sized<return-size>);

fragment template::mov := λ(: src Sized<size>)(: dst LocalVariable). (: (
   (.program(
      (.program src)
      (for index in (range( 0 (/( (.expression size) '8 )) )) (
         \t 'popq \s (+( (.expression dst) (*( '8 (.expression index) )) )) \[ '%rbp \] \n
      ))
   ))
) Nil);

fragment template::mov := λ(: src Sized<size>)(: dst GlobalVariable). (: (
   (.program(
      (.program src)
      \t 'movq \s '$ (.expression dst) , \s '%r15 \n
      (for index in (range( 0 (/( (.expression size) '8 )) )) (
         \t 'popq \s (*( '8 (.expression index) )) \[ '%r15 \] \n
      ))
   ))
) Nil);
