
macro ( ('let x y) )
      ( (Î» x . ()) y );

macro ('match t ps) (tail(
   (let (uuid term) t)
   (match-pats( (uuid term) ps (fail PatternMatchFailure_s) ))
));

macro ('match-pats( term () remainder )) (
   remainder
);

macro ('match-pats( term (ps (lhs rhs)) remainder )) (
   (match-pats(
      term
      ps
      (if (match-pats-condition term lhs) rhs remainder)
   ))
);

macro ('match-pats-condition term (:Variable: v)) (
   (tail( (let v term) (branchtrue()) ))
);

macro ('match-pats-condition term (:Literal: l)) (
   (==( term l ))
);

#macro ('match-pats-condition term (:Tag: l)) (
#   (==( (.0( term )) l ))
#);

