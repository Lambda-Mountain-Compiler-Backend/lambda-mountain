
into-branch-conditional := λ: Blob(: l BranchConditional+Meta<ImpureOffset>). (: (
   (:program (:program l))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( (:expression l) ))
) BranchConditional);

into-branch-conditional := λ: Blob(: l Reg64+Meta<ImpureOffset>). (: (
   (:program (
      (:program l)
      '\tcmp\s$0,\s%_l (:expression l) '\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l Reg32+Meta<ImpureOffset>). (: (
   (:program (
      (:program l)
      '\tcmp\s$0,\s%_l (:expression l) '\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l Reg16+Meta<ImpureOffset>). (: (
   (:program (
      (:program l)
      '\tcmp\s$0,\s%_l (:expression l) '\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l Reg8+Meta<ImpureOffset>). (: (
   (:program (
      (:program l)
      '\tcmp\s$0,\s%_l (:expression l) '\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);

into-branch-conditional := λ: Blob(: l LocalVariable+Sized<1>). (: (
   (:program (
      '\tmov\s_l (:expression l) '\[%RBP\],\s%AL\n_l
      '\tcmp\s$0,\s%AL\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l LocalVariable+Sized<2>). (: (
   (:program (
      '\tmov\s_l (:expression l) '\[%RBP\],\s%AX\n_l
      '\tcmp\s$0,\s%AX\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l LocalVariable+Sized<4>). (: (
   (:program (
      '\tmov\s_l (:expression l) '\[%RBP\],\s%EAX\n_l
      '\tcmp\s$0,\s%EAX\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l LocalVariable+Sized<8>). (: (
   (:program (
      '\tmov\s_l (:expression l) '\[%RBP\],\s%RAX\n_l
      '\tcmp\s$0,\s%RAX\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);

into-branch-conditional := λ: Blob(: l GlobalVariable+Sized<1>). (: (
   (:program (
      '\tmov\s$_l (:expression l) ',\s%RAX\n\tmov\s0\[%RAX\],\s%AL\n_l
      '\tcmp\s$0,\s%AL\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l GlobalVariable+Sized<2>). (: (
   (:program (
      '\tmov\s$_l (:expression l) ',\s%RAX\n\tmov\s0\[%RAX\],\s%AX\n_l
      '\tcmp\s$0,\s%AX\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l GlobalVariable+Sized<4>). (: (
   (:program (
      '\tmov\s$_l (:expression l) ',\s%RAX\n\tmov\s0\[%RAX\],\s%EAX\n_l
      '\tcmp\s$0,\s%EAX\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);
into-branch-conditional := λ: Blob(: l GlobalVariable+Sized<8>). (: (
   (:program (
      '\tmov\s$_l (:expression l) ',\s%RAX\n\tmov\s0\[%RAX\],\s%RAX\n_l
      '\tcmp\s$0,\s%RAX\n_l
   ))
   (:frame (:frame l))
   (:unframe (:unframe l))
   (:expression( 'jne_l ))
) BranchConditional);

