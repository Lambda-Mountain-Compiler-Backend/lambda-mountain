
(declare-unop( .0 LMStruct U64 ( '\[_l x '.field_0\]_l ) ));
(declare-unop( .1 CaseNumber<cn>+Field::1<a> a ( '\[_l x '.field__l (+( (*( (: cn L) 1000_l )) 1_l )) '\]_l ) ));
(declare-unop( .2 CaseNumber<cn>+Field::2<a> a ( '\[_l x '.field__l (+( (*( (: cn L) 1000_l )) 2_l )) '\]_l ) ));
(declare-unop( .3 CaseNumber<cn>+Field::3<a> a ( '\[_l x '.field__l (+( (*( (: cn L) 1000_l )) 3_l )) '\]_l ) ));
(declare-unop( .4 CaseNumber<cn>+Field::4<a> a ( '\[_l x '.field__l (+( (*( (: cn L) 1000_l )) 4_l )) '\]_l ) ));
(declare-unop( .5 CaseNumber<cn>+Field::5<a> a ( '\[_l x '.field__l (+( (*( (: cn L) 1000_l )) 5_l )) '\]_l ) ));
(declare-unop( .6 CaseNumber<cn>+Field::6<a> a ( '\[_l x '.field__l (+( (*( (: cn L) 1000_l )) 6_l )) '\]_l ) ));

(declare-binop( set.1 CaseNumber<cn>+Field::1<a> a Nil ( '\[{_l x '.field__l (+( (*( (: cn L) 1000_l )) 1_l )) '=_l y '\:\[{}\]\:}\]_l ) ));
(declare-binop( set.2 CaseNumber<cn>+Field::2<a> a Nil ( '\[{_l x '.field__l (+( (*( (: cn L) 1000_l )) 2_l )) '=_l y '\:\[{}\]\:}\]_l ) ));
(declare-binop( set.3 CaseNumber<cn>+Field::3<a> a Nil ( '\[{_l x '.field__l (+( (*( (: cn L) 1000_l )) 3_l )) '=_l y '\:\[{}\]\:}\]_l ) ));
(declare-binop( set.4 CaseNumber<cn>+Field::4<a> a Nil ( '\[{_l x '.field__l (+( (*( (: cn L) 1000_l )) 4_l )) '=_l y '\:\[{}\]\:}\]_l ) ));
(declare-binop( set.5 CaseNumber<cn>+Field::5<a> a Nil ( '\[{_l x '.field__l (+( (*( (: cn L) 1000_l )) 5_l )) '=_l y '\:\[{}\]\:}\]_l ) ));
(declare-binop( set.6 CaseNumber<cn>+Field::6<a> a Nil ( '\[{_l x '.field__l (+( (*( (: cn L) 1000_l )) 6_l )) '=_l y '\:\[{}\]\:}\]_l ) ));
