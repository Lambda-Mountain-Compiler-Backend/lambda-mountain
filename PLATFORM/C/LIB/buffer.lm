
type Buffer (Buffer( ptr:?[] , allocated:U64 , capacity:U64 ));

new-buffer := 位(: capacity U64). (: (
   (let ptr (malloc capacity))
   (Buffer( ptr 0_u64 capacity ))
) Buffer);

.calculate-extension-size := 位(: min-size U64). (: (
   (let try-size 1024_u64)
   (while (<( try-size min-size )) (
      (set try-size (*( try-size 4_u64 )))
   ))
   try-size
) U64);

.extend := 位(: buff Buffer)(: sz U64). (: (
   (if (<( (+( (.allocated buff) sz )) (.capacity buff) )) (
      (set buff (Buffer( (.ptr buff) (+( (.allocated buff) sz )) (.capacity ) )))
   ) (
      (let new-sz (.calculate-extension-size( (+( (.allocated buff) sz )) )))
      (let new-ptr (realloc( (.ptr buff) new-sz )))
      (set buff (Buffer( new-ptr (.allocated buff) new-sz )))
   ))
   buff
) Buffer);

.write := 位(: buff Buffer)(: data U8). (: (
   (let out-buff (.extend( buff 1_u64 )))
   (set[]( (as (.ptr out-buff) U8[]) (.allocated buff) data ))
   out-buff
) Buffer);
