
fib := Î»(: x U64). (: (
   x # put result into %r12
   (gensym-label low)
   (cmp( 1u64 (: R12 Reg64) )) ))
   (jle( low ))
   (sub( 1u64 (: R12 Reg64) ))
   (push( (: R12 Reg64) ))
   (fib (as (: R12 Reg64) U64) )
   (pop( (: R12 Reg64) ))
   (sub( 1u64 (: R12 Reg64) ))
   (fib (as (: R12 Reg64) U64) )
   (label low)
) U64);

main := (
   (pop( (: R8 Reg64) ))
   (pop( (: R8 Reg64) ))
   (pop( (: R8 Reg64) ))
   (pop( (: R8 Reg64) ))
   (mov( 0u64 (: RAX Reg64) ))
   (mov( 10u64 (: R9 Reg64) ))
   (gensym-label argv)
   (gensym-label begin)
   (label argv)
   (mov( 0u64 (: R10 Reg64) ))
   (deref( (: R8 Reg64) (: R10B Reg8) ))
   (cmp( 0u8 (: R10B Reg8) ))
   (je( begin ))
   (mul( (: R9 Reg64) ))
   (sub( 48u64 (: R10 Reg64) ))
   (add( (: R10 Reg64) (: RAX Reg64) ))
   (inc( (: R8 Reg64) ))
   (jmp( argv ))
   (label begin)
   (fib( (as (: RAX Reg64) U64) ))
);
