
compile-maybe-push-stack := Î»(: ctx FContext)(: offset I64)(: fragment Fragment)(: expression-type Type)(: sloc AST). (: (
   (let ft (fragment::get-type( fragment )))
   (if (non-zero ft) () (set ft expression-type))
   (match (slot( ft 'StackVariable_s )) (
      ()
      ( (TGround( 'StackVariable_s _ )) () )
      ( _ (
         (set fragment (fragment::set-type( fragment (denormalize ft) )))
         (set fragment (fragment-apply(
            ctx offset 'push_s
            (FLSeq( (close FLEOF) fragment ))
            (t3( 'Arrow_s ft
               (and( (t1 'StackVariable_s) (t2( 'Sized_s (t1(to-string(sizeof-aligned ft))) )) ))
            ))
            sloc
         )))
         (let f-sz (as (sizeof-aligned ft) I64))
         (set fragment (fragment::set-offset( fragment (-( offset f-sz )) )))
      ))
   ))
   fragment
) Fragment);
