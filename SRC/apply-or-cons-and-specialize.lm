
apply-or-cons-and-specialize := λ(: function-name String)(: ft Type)(: pt Type)(: blame AST). (: (
   (let r (ApplyResult( TAny TAny (: LEOF List<Tuple<String,Type>>) )))
   (if (.is-arrow ft) (
      (set r (apply-blame( function-name ft pt 1_u64 blame )))
   ) (
      (if (&&( (non-zero ft) (non-zero pt) )) (
         (set r (ApplyResult(
            ft
            (t3( 'Cons_s ft pt ))
            (: LEOF List<Tuple<String,Type>>)
         )))
      ) ())
   ))
   r
) ApplyResult);

apply-cons :=  λ(: function-name String)(: ft Type)(: pt Type)(: blame AST). (: (
   (let r (ApplyResult( TAny TAny (: LEOF List<Tuple<String,Type>>) )))
   (if (&&( (non-zero ft) (non-zero pt) )) (
      (set r (ApplyResult(
         ft
         (t3( 'Cons_s ft pt ))
         (: LEOF List<Tuple<String,Type>>)
      )))
   ) ())
   r
) ApplyResult);
