
typeof-var-raw := Î»(: sloc AST)(: tctx TContext)(: vname String). (: (
   (let found (find-alias-type vname))
   (while (non-zero tctx) (match tctx (
      ()
      ( TCtxNil (set tctx TCtxEOF) )
      ( (TCtxBind( rst k vt _ )) (
         (if (==( k vname )) (
            (if (non-zero found) (
               (if (.is-arrow vt) (
                  (set found (&&( found vt )))
               ) (
                  (set found vt)
               ))
            ) (
               (set found vt)
            ))
            (if (.is-arrow vt) (
               (set tctx rst)
            ) (
               (set tctx TCtxEOF)
            ))
         ) (
            (set tctx rst)
         ))
      ))
   )))
   (for-each ((Tuple( kt t )) in (.lookup( global-type-context vname (: LEOF List<Tuple<Type,AST>>) ))) (
      (if (non-zero found) (
         (if (.is-arrow found) (
            (set found (&&( found kt )))
         ) ())
      ) (
         (set found kt)
      ))
   ))
   (denormalize found)
) Type);
