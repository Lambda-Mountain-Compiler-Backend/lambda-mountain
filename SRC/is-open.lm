
is-open := Î»(: tt Type). (: (
   (let r 0_u64)
   (match tt (
      ()
      ( TAny (set r 1_u64) )
      ( (TVar _) (set r 1_u64) )
      ( (TAnd( lt rt )) (
         (if (is-open lt) (set r 1_u64) ())
         (if (is-open rt) (set r 1_u64) ())
      ))
      ( (TGround( 'Array_ss (LCons( _ (LCons( TAny LEOF )) )) )) () )
      ( (TGround( 'Array_ss (LCons( _ (LCons( base-type LEOF )) )) )) (set r (is-open base-type)) )
      ( (TGround( 'Field_ss (LCons( _ (LCons( base-type LEOF )) )) )) (set r (is-open base-type)) )
      ( (TGround( _ pars )) (
         (for-each (p1 in pars) (
            (if (is-open p1) (set r 1_u64) ())
         ))
      ))
   ))
   r
) U64);
