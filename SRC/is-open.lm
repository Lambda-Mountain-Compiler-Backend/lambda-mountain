
is-open := Î»(: tt Type). (: (
   (let r 0_u64)
   (match tt (
      ()
      ( TAny (set r 1_u64) )
      ( (TVar _) (set r 1_u64) )
      ( (TAnd( lt rt )) (
         (if (is-open lt) (set r 1_u64) ())
         (if (is-open rt) (set r 1_u64) ())
      ))
      ( (TGround( 'Array_s (TypeSeq( (TypeSeq( TypeEOF _ )) _ )) )) () )
      ( (TGround( 'Field_s (TypeSeq( (TypeSeq( TypeEOF base-type )) _ )) )) (
         (set r (is-open base-type))
      ))
      ( (TGround( _ pars )) (
         (while (non-zero pars) (match pars (
            ()
            ( (TypeSeq( rst p1 )) (
               (if (is-open p1) (set r 1_u64) ())
               (set pars rst)
            ))
         )))
      ))
   ))
   r
) U64);
