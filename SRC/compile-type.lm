
compile-type := Î»(: ctx FContext)(: lhs AST)(: rhs AST). (: (
   (let def rhs)
   (let base-type (type-of-s( lhs )))
   (let case-number 0_u64)
   (if (is-fragment base-type) () (
      (while (non-zero def) (match def (
         ()
         ( (App( (App( tds (Var( '|_s _ )) )) body )) (
            (set ctx (compile-type-case( ctx base-type body case-number )))
            (set case-number (+( case-number 1_u64 )))
            (set def tds)
         ))
         ( body (
            (set ctx (compile-type-case( ctx base-type body case-number )))
            (set case-number (+( case-number 1_u64 )))
            (set def ASTEOF)
         ))
      )))
   ))
   ctx
) FContext);
