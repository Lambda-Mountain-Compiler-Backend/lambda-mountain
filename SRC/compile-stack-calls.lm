
compile-stack-calls := Î»(: ctx FContext)(: function-name String)(: function-type Type)(: return-type Type)(: args AST)(: offset I64)(: used IsUsed). (: (
   (let r (fragment::new()))
   (let fs (fragment-context::lookups( ctx function-name function-type (typeof args) args )))
   (for-each (f in fs) (
      (let r-tt (.type r))
      (if (non-zero r-tt) (
         (set r (fragment::chain(
            r
            (compile-stack-call( ctx f function-name return-type args offset used ))
         )))
      ) (
         (set r (compile-stack-call( ctx f function-name return-type args offset used )))
      ))
   ))
   (set r (fragment::set-context( r ctx )))
   (set r (fragment::set-offset( r offset )))
   r
) Fragment);
