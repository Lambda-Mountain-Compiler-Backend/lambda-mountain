
translate-local-variables := 位(: ctx FContext)(: delta I64). (: (tail(
   (match ctx (
      ()
      ( FCtxEOF () )
      ( (FCtxBind( rst k kt f )) (tail(
         (set rst (translate-local-variables( rst delta )))
         (match (fragment::get( f 'fragment-type_s )) (
            ()
            ( (SAtom 'LocalVariable_s) (
               (match (fragment::get( f 'expression_s )) (
                  ()
                  ( (SAtom previous-offset) (tail(
                     (let p-offset (to-i64 previous-offset))
                     (let new-offset (+( p-offset delta )))
                     (set f (fragment::set( f 'expression_s (SAtom(to-string new-offset)) )))
                     (set ctx (FCtxBind( (close rst) k kt f )))
                  )))
               ))
            ))
            ( _ (set ctx (FCtxBind( (close rst) k kt f ))) )
         ))
      )))
   ))
   ctx
)) FContext);

compile-expr := 位(: ctx FContext)(: term AST)(: stack-offset I64)(: used IsUsed). (: (tail(
   (let e (fragment::new()))
   (match used (
      ()
      ( Return (tail(
         (set e (compile-expr-direct( ctx term stack-offset Used )))
         (let term-tt (typeof term))
         (if (==( (sizeof-type term-tt) 0_u64 )) () (
            (set e (fragment-apply( ctx stack-offset 'cdecl::return_s
               (FLSeq( (close FLEOF) e ))
               (typeof term)
               term
            )))
         ))
      )))
      ( _ (
         (set e (compile-expr-direct( ctx term stack-offset used )))
      ))
   ))
   e
)) Fragment);

compile-stack-call-push-args := 位(: ctx FContext)(: args AST)(: inner-offset I64). (: (tail(
   (let stack-offset 0_i64)
   (let translate-delta (-( 8_i64 inner-offset )))
   (set ctx (translate-local-variables( ctx translate-delta )))
   (let r (compile-push-rvalue( ctx args stack-offset )))
   r
)) Fragment);

compile-destructure-args := 位(: tt Type)(: ctx FContext)(: lhs AST)(: offset I64). (: (tail(
   (match lhs (
      ()
      ( (App( rst (App( (Lit( ':_s _ )) (App( (Var( k _ )) (AType kt) )) )) )) (
         (match (slot( tt 'Cons_s )) (
            ()
            ( (TGround( 'Cons_s (TypeSeq( (TypeSeq( TypeEOF rst-tt )) p2 )) )) (tail(
               (set ctx (compile-destructure-args( rst-tt ctx rst offset )))
               (let rst-sz (sizeof-aligned rst-tt))
               (let rst-offset (-( offset (as rst-sz I64) )))
               (set kt (and( kt (t1 'LocalVariable_s) )))
               (let sz (sizeof-aligned kt))
               (let new-offset (-( rst-offset (as sz I64) )))
               (set ctx (fragment-context::bind(
                  ctx k kt (fragment::local-variable( new-offset kt ))
               )))
            )))
         ))
      ))
      ( (App( (Lit( ':_s _ )) (App( (Var( k _ )) (AType kt) )) )) (tail(
         (set kt (and( kt (t1 'LocalVariable_s) )))
         (let sz (sizeof-aligned kt))
         (let new-offset (-( offset (as sz I64) )))
         (set ctx (fragment-context::bind(
            ctx k kt (fragment::local-variable( new-offset kt ))
         )))
      )))
      ( _ () )
   ))
   ctx
)) FContext);
