
blob-call := Î»(: ctx FContext)(: function-name String)(: args AST). (: (
   (let f (fragment-context::lookup( ctx function-name (typeof args) args )))
   (let f-args (blob-args( ctx args )))
   (let r (fragment::new()))
   (print 'Blob\sCall\s_s)(print function-name)(print '\n_s)
   (print 'Fragment\sType:\s_s)(print (fragment::get( f 'fragment-type_s )))(print '\n_s)
   (match (fragment::get( f 'fragment-type_s )) (
      ()
      ( (SAtom 'Fragment_s) (
         (match (.term f) (
            ()
            ( (Abs( lhs rhs _ )) (
               (let inner-ctx (blob-destructure( ctx lhs f-args )))
               (set r (fragment-apply( inner-ctx 0_i64 function-name f-args (range(.type f)) args True_u8 )))
            ))
         ))
      ))
      ( (SAtom 'Function_s) (
         (match (.term f) (
            ()
            ( (Abs( lhs rhs _ )) (
               (let inner-ctx (blob-destructure( ctx lhs f-args )))
               (set r (blob-expr( inner-ctx rhs )))
            ))
         ))
      ))
   ))
   (set r (fragment::set-context( r ctx )))
   r
) Fragment);

