
let validate-interfaces(): Nil = (
   for Tuple{ base-type=first, reified-interface-type=second } in interface-implementors {
      print("Validate \{base-type} implements \{reified-interface-type}\n");
      (let self-type, let interface-type) = interface-self-index.lookup(reified-interface-type.ground-tag-and-arity, (TAny, TAny));
      print("Defined \{self-type} implements \{interface-type}\n");
      for Tuple{ symbol-name=first, args-type=second, return-type=third } in
          interface-shape-index.lookup(interface-type.ground-tag-and-arity, [] :: List<(CString,Type,Type)>) {
         print("Expect defined: \{symbol-name} : \{args-type} -> \{return-type}\n");
      };
      print("\n");
   };
);
