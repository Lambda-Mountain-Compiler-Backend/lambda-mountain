
let print(io: IO::File, tt: Type): Nil = (
   match tt {
      TAny{} => print(io, "?");
      TVar{name=name} => print(io, name);
      TAnd{lt=left,rt=right} => (
         if lt.is-arrow then (
            print(io, lt); print(io, " +\n"); print(io, rt);
         ) else (
            print(io, lt); print(io, " + "); print(io, rt);
         )
      );
      TGround{tag=tag, parameters:[]} => print(io, tag);
      TGround{tag=tag, ps=parameters} => (
         print(io, tag); print(io, "<"); print(io, ps); print(io, ">");
      );
   }
);

let print(io: IO::File, ps: List<Type>): Nil = (
   let count = 0_u64;
   for p1 in ps {
      if count > 0 then print(io, ",");
      print(io, p1);
      count = count + 1;
   };
);
