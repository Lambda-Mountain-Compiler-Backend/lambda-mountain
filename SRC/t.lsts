
let t1(tag: CString): Type = TGround{ tag, close([] :: List<Type>) };
let t2(tag: CString, p1: Type): Type = TGround{ tag, close([p1]) };
let t3(tag: CString, p1: Type, p2: Type): Type = TGround{ tag, close([p2, p1]) };
let tv(v: CString): Type = TVar{ v };
let $"&&"(lt: Type, rt: Type): Type = if not(non-zero(lt)) then rt else if not(non-zero(rt)) then lt else TAnd{ close(lt), close(rt) };
let $"||"(lt: Type, rt: Type): Type = if non-zero(lt) then lt else rt;

