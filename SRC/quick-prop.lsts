
import LIB/default.lm;
import SRC/index-definitions.lm;

let quick-prop = {} :: HashtableEq<(String,U64),List<(Type,Type)>>;

let .ground-tag-and-arity(tt: Type): (String,U64) = (
   match tt {
      TGround {} => ("", 1);
      TGround { tag=tag } => (intern(tag), 1);
      TGround { tag=tag, parameters=parameters } => (intern(tag), parameters.length);
      _ => fail("Called .ground-tag-and-arity on non-ground type: \{tt}");
   }
);

let add-quick-prop(pre: Type, post: Type): Nil = (
   (1, 2); ()
#   let key = pre.ground-tag-and-arity;
#   let val = if quick-prop.has(key) then ([] :: List<(Type,Type)>) else quick-prop.lookup(key);
#   val = cons( (pre,post), val );
#   quick-prop = quick-prop.bind( key, val );
);
