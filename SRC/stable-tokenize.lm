
type SourceLocation (SourceLocation( String , U64 , U64 ));
type SourceMap SourceMapEOF | (SourceMapSeq( SourceMap[] , String , SourceLocation )); zero SourceMap SourceMapEOF;

source-map := (: SourceMapEOF SourceMap);

map-location := λ(: tok String)(: loc SourceLocation). (: (
   (set source-map (SourceMapSeq(
      (close source-map)
      tok
      loc
   )))
) Nil);

map-location := λ(: tok String)(: file String)(: line U64)(: column U64). (: (
   (set source-map (SourceMapSeq(
      (close source-map)
      tok
      (SourceLocation( file line column ))
   )))
) Nil);

non-zero := λ(: loc SourceLocation). (: (tail(
   (let r 0_u64)
   (match loc (
      ()
      ( (SourceLocation( fp line col )) (
         (if (!=( line 0_u64 )) (set r 1_u64) ())
      ))
   ))
   r
)) U64);

print := λ(: loc SourceLocation). (: (
   (match loc (
      ()
      ( (SourceLocation( fp ln cl )) (tail(
         (print 'In\sFile\s_s)
         (print fp)
         (print '\sLine\s_s)
         (print ln)
         (print '\sColumn\s_s)
         (print cl)
      )))
   ))
) Nil);

location-of := λ(: tok String). (: (tail(
   (let r (SourceLocation( 'Unknown_s 0_u64 0_u64 )))
   (let index source-map)
   (while (non-zero index) (match index (
      ()
      ( (SourceMapSeq( rst k vl )) (
         (if (==( (as k U64) (as tok U64) )) (tail(
            (set r vl)
            (set index SourceMapEOF)
         )) (set index rst))
      ))
   )))
   r
)) SourceLocation);

location-of := λ(: term AST). (: (tail(
   (let r (SourceLocation( 'Unknown_s 0_u64 0_u64 )))
   (match term (
      ()
      ( (Var v) (set r (location-of v)) )
      ( (Lit v) (set r (location-of v)) )
      ( (App( tl tr )) (tail(
         (set r (location-of tl))
         (if (not(non-zero r)) (set r (location-of tr)) ())
      )))
      ( (Abs( tl tr )) (tail(
         (set r (location-of tl))
         (if (not(non-zero r)) (set r (location-of tr)) ())
      )))
      ( (Seq( tl tr )) (tail(
         (set r (location-of tl))
         (if (not(non-zero r)) (set r (location-of tr)) ())
      )))
      ( (Glb( tl tr )) (tail(
         (set r (location-of tl))
         (if (not(non-zero r)) (set r (location-of tr)) ())
      )))
      ( (ASTType( tl tr )) (tail(
         (set r (location-of tl))
         (if (not(non-zero r)) (set r (location-of tr)) ())
      )))
      ( (Fragment( tl tr )) (tail(
         (set r (location-of tl))
         (if (not(non-zero r)) (set r (location-of tr)) ())
      )))
      ( (Asc( t tt )) (
         (set r (location-of t))
      ))
      ( (As( t tt )) (
         (set r (location-of t))
      ))
      ( _ () )
   ))
   r
)) SourceLocation);

