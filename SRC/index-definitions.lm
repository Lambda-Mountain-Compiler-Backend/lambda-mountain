
type CompileMode ModeParse | ModePreprocess | ModeTypecheck | ModeCompile;

type IsUsed Used | Unused | Tail | Return | Call;
type IsScoped Scoped | Unscoped;

type FContext FCtxEOF | (FCtxBind( remainder:FContext[] , k:String , kt:Type , kv:Fragment )); zero FContext FCtxEOF;

type StringTypeList StrTEOF | (StrTSeq( StringTypeList[] , String , Type )); zero StringTypeList StrTEOF;

type StringList SLEOF | (SLSeq( StringList[] , String )); zero StringList SLEOF;
type StringU64List SUEOF | (SUSeq( StringU64List[] , String , U64 )); zero StringU64List SUEOF;
type StringStringList SSEOF | (SSSeq( StringStringList[] , String , String )); zero StringStringList SSEOF;

type Macro (Macro( AST , AST ));
type MacroList MEOF | (MSeq( MacroList[] , Macro )); zero MacroList MEOF;

type ParsePartial (PME( AST , List<Token> )); # term, remainder

type StackToSpecialize (StackToSpecialize( String , Type , Maybe<List<Tuple<String,Type,AST>>> , Type ));

type ApplyResult (ApplyResult( function-type:Type , return-type:Type , phi-types:List<Tuple<String,Type>> ));

