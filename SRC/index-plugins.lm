
plugin-null-backend := λ. (: (
   (fail 'Cannot\sCompile:\sNo\sBackend\sWas\sSpecified_s)
) Nil);

plugin-current-backend := (: (& plugin-null-backend) Arrow<Nil,Nil>[]);

import PLUGINS/BACKEND/C/index-index.lm;
import PLUGINS/BACKEND/BLOB/index-index.lm;

import PLUGINS/FRONTEND/LM/index-index.lm;
import PLUGINS/FRONTEND/LSTS/index-index.lm;
import PLUGINS/FRONTEND/C/index-index.lm;
c-input-files := (: LEOF List<String>);

frontend := λ(: fp String). (: (
   (print 'PATH:\s_s)(print config-path)(print '\n_s)
   (if (has-prefix( fp 'LIB/_s )) (
      (set fp (clone-rope(+( (SAtom config-platform-prefix) (SAtom fp) ))))
   ) ())
   (let found-file 0_u64)
   (if (has-prefix( fp 'LIB/_s )) (
      (if (file-exists fp) (
         (set found-file 1_u64)
      ) (
         (for-each (base-path in config-path) (
            (if (not found-file) (
               (if (file-exists(+( base-path fp ))) (
                  (set found-file 1_u64)
                  (set fp (+( base-path fp )))
               ) ())
            ) ())
         ))
      ))
   ) (
      (set found-file (file-exists fp))
   ))
   (if (not found-file) (
      (print 'Unable\sTo\sFind\sPath\sTo\sFile:\s_s)(print fp)(print '\n_s)(exit 1_u64)
   ) ())
   (print 'READ:\s_s)(print fp)(print '\n_s)

   (let todo 1_u64)
   (if (&&( todo (has-suffix( fp '.lm_s )) )) (
      (let text '_s)
      (if (is-already-tokenized fp) () (
         (set text (read-file fp))
         (set already-tokenized (cons( fp already-tokenized )))
      ))
      (lm-frontend( fp text ))
      (set todo 0_u64)
   ) ())
   (if (&&( todo (||( (has-suffix( fp '.h_s )) (has-suffix( fp '.c_s )) )) )) (
      (set c-input-files (cons( fp c-input-files )))
      (set todo 0_u64)
   ) ())
   (if (&&( todo (has-suffix( fp '.lsts_s )) )) (
      (lsts-frontend fp)
      (set todo 0_u64)
   ) ())
   (if todo (
      (print 'Unable\sto\sfind\sa\ssuitable\sfrontend:\s_s)(print fp)(print '\n_s)(exit 1_u64)
   ) ())
) Nil);

frontend-flush := λ. (: (
   (if (non-zero c-input-files) (c-parse-all c-input-files) ())
) Nil);
