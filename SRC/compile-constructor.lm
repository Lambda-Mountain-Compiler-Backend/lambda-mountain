
compile-constructor := Î»(: ctx FContext)(: tag-name String)(: return-type Type)(: args-type Type)(: args AST)(: offset I64). (: (
   (let whitespace-sz (-( (-( (sizeof-aligned return-type) (sizeof-aligned args-type) )) 8_u64 )))
   (let e (compile-push-rvalue( ctx args (-( offset (as whitespace-sz I64) )) 1_u64 )))
   (let constructor-parms (and(
      (t2( 'Constructor_s (t1 tag-name) ))
      (and(
         (t2( 'Sized_s (t1(to-string(sizeof-aligned return-type))) ))
         (and(
            (t2( 'FieldsSized_s (t1(to-string(sizeof-aligned args-type))) ))
            (t2( 'CaseNumber_s (t1(to-string(index-of-tag tag-name))) ))
         ))
      ))
   )))

   (let callee-ctx ctx)
   (set callee-ctx (fragment-context::bind( callee-ctx 'src_s constructor-parms e )))
   (let r (cc-blob( callee-ctx 'push_s constructor-parms offset args )))

   (set r (fragment::set-context( r ctx )))
   (set r (fragment::set-type( r (denormalize return-type) )))
   (let new-offset (-( offset (as (sizeof-type return-type) I64) )))
   (set r (fragment::set-offset( r new-offset )))
   r
) Fragment);
