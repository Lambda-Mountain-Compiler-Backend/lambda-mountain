
meta
   (description (
      'Mangle\sa\sstring\sso\sthat\sit\scan\sbecome\sa\ssymbol\sin\san\sobject\sfile.
   ))
;
mangle-identifier := λ(: k String). (: (
   (let cs SNil)
   (while (head-string k) (
      (match (head-string k) (
         ()
         ( 33_u8 (set cs (SCons( (close cs) (close(SAtom( '_EX__s ))) ))))   # !
         ( 36_u8 (set cs (SCons( (close cs) (close(SAtom( '_DL__s ))) ))))   # $
         ( 37_u8 (set cs (SCons( (close cs) (close(SAtom( '_MD__s ))) ))))   # %
         ( 38_u8 (set cs (SCons( (close cs) (close(SAtom( '_AM__s ))) ))))   # &
         ( 42_u8 (set cs (SCons( (close cs) (close(SAtom( '_ML__s ))) ))))   # *
         ( 43_u8 (set cs (SCons( (close cs) (close(SAtom( '_AD__s ))) ))))   # +
         ( 45_u8 (set cs (SCons( (close cs) (close(SAtom( '_SB__s ))) ))))   # -
         ( 46_u8 (set cs (SCons( (close cs) (close(SAtom( '_DT__s ))) ))))   # .
         ( 47_u8 (set cs (SCons( (close cs) (close(SAtom( '_DV__s ))) ))))   # /
         ( 58_u8 (set cs (SCons( (close cs) (close(SAtom( '_CL__s ))) ))))   # :
         ( 59_u8 (set cs (SCons( (close cs) (close(SAtom( '_SC__s ))) ))))   # ;
         ( 60_u8 (set cs (SCons( (close cs) (close(SAtom( '_LT__s ))) ))))   # <
         ( 61_u8 (set cs (SCons( (close cs) (close(SAtom( '_EQ__s ))) ))))   # =
         ( 62_u8 (set cs (SCons( (close cs) (close(SAtom( '_GT__s ))) ))))   # >
         ( 63_u8 (set cs (SCons( (close cs) (close(SAtom( '_QM__s ))) ))))   # ?
         ( 64_u8 (set cs (SCons( (close cs) (close(SAtom( '_AT__s ))) ))))   # @
         ( 91_u8 (set cs (SCons( (close cs) (close(SAtom( '_LB__s ))) ))))   # [
         ( 93_u8 (set cs (SCons( (close cs) (close(SAtom( '_RB__s ))) ))))   # ]
         ( 94_u8 (set cs (SCons( (close cs) (close(SAtom( '_HT__s ))) ))))   # ^
         ( 95_u8 (set cs (SCons( (close cs) (close(SAtom( '_US__s ))) ))))   # _
         ( 96_u8 (set cs (SCons( (close cs) (close(SAtom( '_TK__s ))) ))))   # `
         ( 124_u8 (set cs (SCons( (close cs) (close(SAtom( '_BR__s ))) ))))  # |
         ( 126_u8 (set cs (SCons( (close cs) (close(SAtom( '_TL__s ))) ))))  # ~
         ( c (set cs (SCons( (close cs) (close(SAtom(clone-rope c))) ))))
      ))
      (set k (tail-string k))
   ))
   cs
) S);

meta
   (description (
      'Mangle\sa\sstring\sso\sthat\sit\scan\sbecome\sa\ssymbol\sin\san\sobject\sfile.
   ))
;
mangle-identifier := λ(: kt Type). (: (
   (let r SNil)
   (match kt (
      ()
      ( TAny (set r (mangle-identifier '?_s)) )
      ( (TVar v) (set r (mangle-identifier v)) )
      ( (TGround( tv ps )) (
         (set r (mangle-identifier tv))
         (while (non-zero ps) (match ps (
            ()
            ( (TypeSeq( rst p1 )) (
               (set r (SCons( (close r) (close(mangle-identifier p1)) )))
               (set ps rst)
            )))
         ))
      ))
      ( (TAnd( tl tr )) (
         (set r (SCons(
            (close(mangle-identifier tl))
            (close(mangle-identifier tr))
         )))
      ))
   ))
   r
) S);

meta
   (description (
      'Mangle\sa\sstring\sso\sthat\sit\scan\sbecome\sa\ssymbol\sin\san\sobject\sfile.
   ))
;
mangle-identifier := λ(: k String)(: kt Type). (: (
   (let cs (SCons(
      (close(mangle-identifier k))
      (close(SCons(
         (close(SAtom( '_CL__s )))
         (close(mangle-identifier(normalize kt)))
      )))
   )))
   (clone-rope cs)
) String);
