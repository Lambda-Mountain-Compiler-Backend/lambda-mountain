
print := λ(: tt Type). (: (match tt (
   ()
   ( (TGround( tag ASTLEOF )) (print tag) )
   ( (TAnd( lt rt )) (tail(
      (print lt)
      (print '+_s)
      (print rt)
   )))
)) Nil);

serialize-ast := λ(: tt Type). (: (match tt (
   ()
   ( (TGround( tag ASTLEOF )) (tail(
      (print '\[Literal\s_s)
      (print tag)
      (print '\]_s)
   )))
   ( (TGround( tag _ )) (tail(
      (print '\[Literal\s_s)
      (print tag)
      (print '\]_s)
   )))
   ( (TAnd( lt rt )) (tail(
      (print '\[App\s\[_s)
      (print '\[Literal\sAnd\]\s_s)
      (print '\[App\s\[_s)
      (serialize-ast lt)
      (print '\s_s)
      (serialize-ast rt)
      (print '\]\]_s)
      (print '\]\]_s)
   )))
)) Nil);

close := λ(: x Type). (: (tail(
   (mov( (malloc(sizeof Type)) R8 ))
   (mov( x 0_u64 (as R8 Type[]) ))
   (as R8 Type[])
)) Type[]);

typecheck := λ. (: (tail(
   ()
   ()
)) Nil);

tnil := λ. (: (tail(
   ()
   (close (TGround(
      'Nil_s
      (close ASTLEOF)
   )))
)) Type[]);
