
c-parse-all := Î»(: fps List<String>). (: (
   (index-c-type( '__attribute___s ))
   (index-c-type( '__extension___s ))
   (index-c-type( '__restrict_s ))
   (index-c-type( 'static_s ))
   (index-c-type( 'extern_s ))
   (index-c-type( 'struct_s ))
   (index-c-type( 'enum_s ))
   (index-c-type( 'const_s ))
   (index-c-type( 'signed_s ))
   (index-c-type( 'unsigned_s ))
   (index-c-type( 'void_s ))
   (index-c-type( 'char_s ))
   (index-c-type( 'short_s ))
   (index-c-type( 'int_s ))
   (index-c-type( 'long_s ))
   (index-c-type( 'float_s ))
   (index-c-type( 'double_s ))
   (index-c-type( '_Float128_s ))
   (index-c-type( '*_s ))
   (index-c-type( '[_s ))
   (index-c-type( ']_s ))

   (let tmp (as (mktemp(as (clone-rope(SAtom '/tmp/lm.tmp.XXXXXX_s)) U8[])) U8[]))
   (let p (fork()))
   (if (==( (as p U64) 0_u64 )) (
      (let argv (const-cons( (as (null()) U8[]) 1024_l )))
      (set[]( argv 0_u64 (as 'cpp_s U8[])))
      (set[]( argv 1_u64 (as '/dev/null_s U8[])))
      (set[]( argv 2_u64 (as '-o_s U8[])))
      (set[]( argv 3_u64 (as tmp U8[])))
      (let argvi 4_u64)
      (for-each (fp in fps) (
         (set[]( argv argvi (as '-include_s U8[])))
         (set[]( argv (+( argvi 1_u64 )) (as fp U8[])))
         (set argvi (+( argvi 2_u64 )))
      ))
      (execvp( (as 'cpp_s U8[]) argv )) ()
      # execvp should takeover the process
      (print 'execvp\sfailed\n_s)(exit 1_u64)
   ) (
      (wait(as (null()) U32[]))
   ))
   (c-parse(c-tokenize(read-file(as tmp String))))
) Nil);


