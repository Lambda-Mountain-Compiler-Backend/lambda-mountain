
let std-c-declare(t: CTerm): Nil = (
   match t {
      CFunctionDefinition{spec=specifiers,decl=declarator,dl=declaration-list,stmt=statement} => std-c-declare-function(spec, decl, dl, stmt);
      _ => fail("Unsupported C Declaration:\n\{t}\n");
   };
);

let std-c-declare-function(specifiers: CTerm, declarator: CTerm, declaration-list: CTerm, statement: CTerm): Nil = (
   (let return-type, let misc-types) = std-c-type-of-specifiers(specifiers);
   print("Return Type: \{return-type}\n");
   print("Misc Type: \{misc-types}\n");
   exit(1);
);

let std-c-type-of-specifiers(specifiers: CTerm): Tuple<Type,Type> = (
   let misc = TAny;
   let rtype = match specifiers {
      CList{value:[CType1{rv=value}..]} => t1(untern(rv));
      _ => fail("Unsupported C Specifiers:\n\{specifiers}\n");
   };
   (rtype, misc);
);
