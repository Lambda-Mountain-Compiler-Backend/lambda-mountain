
lsts-tokenize := λ(: fp String). (: (
   (let text (read-file fp))
   (lsts-tokenize-string(fp text))
) List<Token>);

lsts-is-reserved-word := λ(: text String). (: (
   (let r 0_u64)
   (if (==( text 'if_s )) (set r 1_u64) ()) # $
   (if (==( text 'then_s )) (set r 1_u64) ()) # $
   (if (==( text 'else_s )) (set r 1_u64) ()) # $
   (if (==( text 'let_s )) (set r 1_u64) ()) # $
   (if (==( text 'while_s )) (set r 1_u64) ()) # $
   (if (==( text 'for_s )) (set r 1_u64) ()) # $
   (if (==( text 'type_s )) (set r 1_u64) ()) # $
   r
) U64);

lsts-is-ident-head := λ(: text String). (: (
   (let r 0_u64)
   (if (&&( (>=( (head-string text) 48_u8 )) (<=( (head-string text) 57_u8 )) )) (set r 1_u64) ())  # 0-9
   (if (&&( (>=( (head-string text) 97_u8 )) (<=( (head-string text) 122_u8 )) )) (set r 1_u64) ()) # a-z
   (if (==( (head-string text) 95_u8 )) (set r 1_u64) ()) # _
   (if (==( (head-string text) 36_u8 )) (set r 1_u64) ()) # $
   r
) U64);

lsts-is-ident-body := λ(: text String). (: (
   (let r 0_u64)
   (if (&&( (>=( (head-string text) 48_u8 )) (<=( (head-string text) 57_u8 )) )) (set r 1_u64) ())  # 0-9
   (if (&&( (>=( (head-string text) 97_u8 )) (<=( (head-string text) 122_u8 )) )) (set r 1_u64) ()) # a-z
   (if (&&( (>=( (head-string text) 65_u8 )) (<=( (head-string text) 90_u8 )) )) (set r 1_u64) ())  # A-Z
   (if (==( (head-string text) 95_u8 )) (set r 1_u64) ()) # _
   (if (==( (head-string text) 45_u8 )) (set r 1_u64) ()) # -
   (if (==( (head-string text) 36_u8 )) (set r 1_u64) ()) # $
   r
) U64);

lsts-is-lit-head := λ(: text String). (: (
   (let r 0_u64)
   (if (&&( (>=( (head-string text) 48_u8 )) (<=( (head-string text) 57_u8 )) )) (set r 1_u64) ())  # 0-9
   (if (&&( (>=( (head-string text) 65_u8 )) (<=( (head-string text) 90_u8 )) )) (set r 1_u64) ())  # A-Z
   r
) U64);

lsts-is-enum-head := λ(: text String). (: (
   (let r 0_u64)
   (if (&&( (>=( (head-string text) 65_u8 )) (<=( (head-string text) 90_u8 )) )) (set r 1_u64) ())  # A-Z
   r
) U64);
