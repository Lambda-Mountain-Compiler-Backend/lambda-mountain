
let std-c-mangle-declaration(tt: Type): Tuple<S,S> = (
   std-c-mangle-declaration-internal(normalize(tt))
);

let std-c-mangle-declaration-internal(tt: Type): Tuple<S,S> = (
   match tt {
      TGround{tag:c"Array", parameters:[ TGround{tag:c"CONST"}.. array-base.. ]} => (
         let rest = std-c-mangle-declaration-internal(array-base);
         ( rest.first, rest.second + SAtom{c"[]"} )
      );
      TGround{tag:c"Array", parameters:[ TGround{width=tag}.. array-base.. ]} => (
         let rest = std-c-mangle-declaration-internal(array-base);
         ( rest.first, rest.second + SAtom{c"["} + SAtom{width} + SAtom{c"]"} )
      );
      TGround{tag:c"Arrow", parameters:[ rng.. dom.. ]} => (
         let returns = std-c-mangle-type-internal(rng);
         let accepts = std-c-mangle-type-internal(dom);
         ( returns + SAtom{c"(*"},
           SAtom{c")("} + accepts + SAtom{c")"} )
      );
      _ => (std-c-mangle-type-internal(tt), SNil);
   }
);
