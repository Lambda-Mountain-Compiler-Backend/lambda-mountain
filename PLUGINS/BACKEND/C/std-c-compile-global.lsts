
let std-c-compile-global(ctx: FContext, k: CString, term: AST): Nil = (
   if k == c"main" {
      compile-global-c-has-main = true;
   };
   match term {
      Abs{lhs=lhs,rhs=rhs,tt=tt} => (
         let loc = term.location;
         if not(config-strip-debug) {
            let text = SNil;
            text = text + SAtom{c"#line "};
            text = text + SAtom{to-string(loc.line)};
            text = text + SAtom{c" "};
            text = text + SAtom{loc.filename};
            text = text + SAtom{c"\n"};
            text = text + std-c-mangle-type(typeof(rhs));
            text = text + SAtom{c" "};
            text = text + SAtom{k};
            text = text + SAtom{c"("};
            text = text + std-c-compile-function-args(ctx, lhs);
            text = text + SAtom{c");"};
            assemble-header-section = assemble-header-section + text;
         };

         let text = SNil;
         if not(config-strip-debug) {
            text = text + SAtom{c"#line "};
            text = text + SAtom{to-string(loc.line)};
            text = text + SAtom{c" "};
            text = text + SAtom{loc.filename};
            text = text + SAtom{c"\n"};
         };
         text = text + std-c-mangle-type(typeof(rhs));
         text = text + SAtom{c" "};
         text = text + SAtom{k};
         text = text + SAtom{c"("};
         text = text + std-c-compile-function-args(ctx, lhs);
         text = text + SAtom{c")"};
         #let inner-ctx = std-c-compile-destructure-args( ctx, lhs );
         #let inner-expr = std-c-compile-expr( ctx, term );
         text = text + SAtom{c";"};
         assemble-text-section = assemble-text-section + text;
      );
   }
);
