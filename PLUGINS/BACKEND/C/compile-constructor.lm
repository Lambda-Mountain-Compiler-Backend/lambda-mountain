
compile-constructor := Î»(: ctx FContext)(: tag-name String)(: return-type Type)(: args-type Type)(: args AST)(: offset I64). (: (
   (let r (mk-fragment()))
   (let gta (.ground-tag-and-arity return-type))
   (if (.has( type-constructor-tag-ordinal-index (Tuple( (.first gta) (.second gta) tag-name )) )) (
      (print 'Compile\sType2\sConstructor\s_s)(print tag-name)(print '\n_s)
   ) (
      (let bare-ordinal (.with-only-class return-type))
      (let case-number (index-of-tag tag-name))
      (set r (initialize-c-struct( ctx args case-number 1_u64 )))
      (set r (.set( r 'expression_s (
         (+(
            (+( (+( (SAtom '\[{_s) (mangle-c-type( (normalize bare-ordinal) args )) )) (SAtom '\srvalue={.field_0=_s) ))
            (+(
               (+( (SAtom(to-string case-number)) (SAtom '}\:_s) ))
               (+( (.get( r 'expression_s )) (SAtom 'rvalue\:}\]_s) ))
            ))
         ))
      ))))
      (set.context( r (close ctx) ))
      (set.type( r (denormalize return-type) ))
   ))
   r
) Fragment);
