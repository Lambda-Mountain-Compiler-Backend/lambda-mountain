
initialize-c-struct := Î»(: ctx FContext)(: rval AST)(: case-number U64)(: field-index U64). (: (
   (let r (fragment::new()))
   (match (slot( (typeof rval) 'Cons_s )) (
      ()
      ( (TGround( 'Cons_s (LCons( p2 (LCons( p1 LEOF )) )) )) (
         (match rval (
            ()
            ( (App( le re )) (
               (let e1 (compile-expr( ctx re 0_i64 Used )))
               (set e1 (.set( e1 'expression_s (
                  (+( (+( (SAtom ',.field__s)
                          (SAtom(to-string( (+( (*( case-number 1000_u64 )) field-index )) ))) ))
                      (+( (SAtom '=_s) (.get( e1 'expression_s )) ))
                  ))
               ))))
               (let e2 (initialize-c-struct( ctx le case-number (+( field-index 1_u64 )) )))
               (set r (fragment::chain( e1 e2 )))
               (set r (.set( r 'expression_s (
                  (+( (.get( e1 'expression_s )) (.get( e2 'expression_s )) ))
               ))))
            ))
         ))
      ))
      ( _ (
         (set r (compile-expr( ctx rval 0_i64 Used )))
         (set r (.set( r 'expression_s (
            (+( (+( (SAtom ',.field__s)
                    (SAtom(to-string( (+( (*( case-number 1000_u64 )) field-index )) ))) ))
                (+( (SAtom '=_s) (.get( r 'expression_s )) ))
            ))
         ))))
      ))
   ))
   r
) Fragment);
