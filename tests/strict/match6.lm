

import STDLIB/default-instruction-set.lm;
import STDLIB/default-primitives.lm;
import STDLIB/default-rules.lm;
import STDLIB/default-stdlib.lm;

type Cases CaseOne | (CaseTwo( U64 )) | (CaseThree( U64 , U64 ));

main := (
   (match (CaseOne)  (
      ()
      ((CaseOne) (print 'CaseOne_s))
      ( (CaseTwo( x )) (print 'CaseTwo_s) )
#      ((CaseThree( x y )) (tail( (print 'CaseThree_s) () )))
   ))
#   (match (CaseTwo( 1u64 ))  (
#      ()
#      ((CaseOne) (print 'CaseOne_s))
#      ((CaseTwo( x )) (tail( (print 'CaseTwo_s) () )))
#      ((CaseThree( x y )) (tail( (print 'CaseThree_s) () )))
#   ))
#   (match (CaseThree( 2u64 3u64 ))  (
#      ()
#      ((CaseOne) (print 'CaseOne_s))
#      ((CaseTwo( x )) (tail( (print 'CaseTwo_s) () )))
#      ((CaseThree( x y )) (tail( (print 'CaseThree_s) () )))
#   ))
);
