
import LIB/default.lm;

type A (ACons( Rc<A> , Rc<A> )) | (AAtom( String ));

del := λ: Hook(: a Rc<A>). (: (
   (if (!=( (.2 a) rc-magic-number )) (
      (print 'Del\sRc\sNot\sMagic\s_s)(print (.2 a))(print '\n_s)
   ) ())
) Nil);

print := λ(: a Rc<A>). (: (
   (match a (
      ()
      ( (Rc( m (Tuple( (ACons( l r )) c )) )) (
         (print 'ACons\scount=_s)(print c)(print '\n_s)
         (print l)
         (print r)
      ))
      ( (Rc( m (Tuple( (AAtom( v )) c )) )) (
         (print 'AAtom\scount=_s)(print c)(print '\s_s)(print v)(print '\n_s)
      ))
   ))
) Nil);

main := λ. (: (
   (let i 0_u64)
   (while (<( i 1_u64 )) (
      (let a (rc::new(AAtom 'A_s)))
      (let b (rc::new(AAtom 'B_s)))
      #(if (branchfalse()) (
      #   (let c (rc::new(AAtom 'C_s)))
      #) ())
      #(let c (rc::new(ACons( a b ))))
      #(let d (rc::new(ACons( a a ))))
      (set i (+( i 1_u64 )))
   ))
) Nil);

