
import LIB/default.lm;

type A (ACons( Rc<A> , Rc<A> )) | (AAtom( String ));

#del := 位: Hook(: a Rc<A>). (: (
#   (print 'Del\sA\o1\n_s)
#) Nil);
#del := 位: Hook(: a Rc<A>). (: (
#   (print 'Del\sA\o2\n_s)
#) Nil);

print := 位(: a Rc<A>). (: (
   (match a (
      ()
      ( (Rc(Tuple( (ACons( l r )) c ))) (
         (print 'ACons\scount=_s)(print c)(print '\n_s)
         (print l)
         (print r)
      ))
      ( (Rc(Tuple( (AAtom( v )) c ))) (
         (print 'AAtom\scount=_s)(print c)(print '\s_s)(print v)(print '\n_s)
      ))
   ))
) Nil);

main := 位. (: (
   (let a (rc::new(AAtom 'A_s)))
   (inc a)
   (let b (rc::new(AAtom 'B_s)))
   (inc b)
   (let c (rc::new(ACons( a b ))))
   (inc c)
   (let d (rc::new(ACons( a a ))))
   (inc d)
   (print 'A\n_s)
   (print a)
   (print 'B\n_s)
   (print b)
   (print 'C\n_s)
   (print c)
   (print 'D\n_s)
   (print d)
   (print 'Del\sA\n_s)
   (del a)
   (print 'Del\sB\n_s)
   (del b)
   (print 'Del\sC\n_s)
   (del c)
   (print 'Del\sD\n_s)
   (del d)
) Nil);

