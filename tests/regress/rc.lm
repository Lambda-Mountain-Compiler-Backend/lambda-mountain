
import LIB/default.lm;

type A (ACons( Rc<A> , Rc<A> )) | (AAtom( String ));

#del := 位: Hook(: a Rc<A>). (: (
#   (print 'Del\sA\o1\n_s)
#) Nil);
#del := 位: Hook(: a Rc<A>). (: (
#   (print 'Del\sA\o2\n_s)
#) Nil);

print := 位(: a Rc<A>). (: (
   (match a (
      ()
      ( (Rc(Tuple( (ACons( l r )) c ))) (
         (print 'ACons\scount=_s)(print c)(print '\n_s)
         (print l)
         (print r)
      ))
      ( (Rc(Tuple( (AAtom( v )) c ))) (
         (print 'AAtom\scount=_s)(print c)(print '\s_s)(print v)(print '\n_s)
      ))
   ))
) Nil);

main := 位. (: (
   (let i 0_u64)
   (while (<( i 1_u64 )) (
      (let a (rc::new(AAtom 'A_s)))
      (let b (rc::new(AAtom 'B_s)))
      #(let c (rc::new(ACons( a b ))))
      #(let d (rc::new(ACons( a a ))))
      (set i (+( i 1_u64 )))
   ))
) Nil);

