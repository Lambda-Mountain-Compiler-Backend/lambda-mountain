
import LIB/default.lm;

type XY X | (Y( U64 ));
type XYZ (Z( XY , U64 ));

x1 := (: (Z( X 1_u64 )) XYZ);

f1 := 位(: abc XYZ). (: (
   abc
) XYZ);

f2 := 位. (: (
   x1
) XYZ);

print := 位(: abc XYZ). (: (
   (match abc (
      ()
      ( (Z( X x )) (
         (print x)
      ))
      ( (Z( (Y( x )) y )) (tail(
         (print x)
         (print y)
      )))
   ))
) Nil);

main := 位. (: (tail(
   (print 'F1\s_s)
   (print(f1 x1))
   (print '\nF2\s_s)
   (print(f2()))
)) Nil);

