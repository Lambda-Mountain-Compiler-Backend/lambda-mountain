import LIB/default-instruction-set.lm;
import LIB/default-primitives.lm;
import LIB/default-rules.lm;
import LIB/default-stdlib.lm;
import LIB/default-templates.lm;

type XY<x,y> (XY( x , y )) | X | (Y( x ));

main := Î». (: (tail(
   (let xy1 (XY( 1_u64 2_i8 )))
   (let xy2 (: X 'X+XY<U8,I8>))
   (let xy3 (: Y 'Arrow<Y,Y+XY<I32,U64>>) ( 3_i32 ))
   ()
)) Nil);
