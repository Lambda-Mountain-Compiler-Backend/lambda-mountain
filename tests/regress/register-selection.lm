
import LIB/default.lm;

f := λ. 1_u64;

fragment : DontChain ff := λ(: l U64+Reg64)(: r U64+Reg64). (: (
   (.program(
      (let tmp-r (select-register( (.expression r) )))
      (.program l)
      \t 'pushq \s '% (.expression l) \n
      (.program r)
      \t 'popq \s '% (.expression tmp-r) \n
      \t 'addq \s '% (.expression tmp-r) , \s '% (.expression r) \n
   ))
   (.data( (.data l) (.data r) ))
   (.frame( (.text l) (.text r) ))
   (.frame( (.frame l) (.frame r) ))
   (.unframe( (.unframe l) (.frame r) ))
   (.expression(
      (.expression r)
   ))
) U64+Reg64);


main := λ. (: (
   (print (ff( (f()) (f()) )))
) Nil);
