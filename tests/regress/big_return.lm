
import LIB/default-instruction-set.lm;
import LIB/default-primitives.lm;
import LIB/default-rules.lm;
import LIB/default-stdlib.lm;

type XY X | (Y( U64 ));
type XYZ (Z( XY , U64 ));

f := λ(: x U64)(: y U64). (: (tail(
   (let xyz (Z( (Y( x )) y )))
   xyz
)) XYZ);

main := λ. (: (tail(
  ()
  (match (f( 123_u64 456_u64 )) (
     ()
     ( (Z( (Y( x )) y )) (tail(
        (print x)
        (print y)
     )))
  ))
)) Nil);

