
import STDLIB/default-instruction-set.lm;
import STDLIB/default-rules.lm;

fragment type U8;     size U8 1;     atom suffix U8     _u8;
fragment type U16;    size U16 2;    atom suffix U16    _u16;
fragment type U32;    size U32 4;    atom suffix U32    _u32;
fragment type U64;    size U64 8;    atom suffix U64    _u64;
fragment type I8;     size I8 1;     atom suffix I8     _i8;
fragment type I16;    size I16 2;    atom suffix I16    _i16;
fragment type I32;    size I32 4;    atom suffix I32    _i32;
fragment type I64;    size I64 8;    atom suffix I64    _i64;
fragment type ASCII;  size ASCII 1;  atom suffix ASCII  _c;
fragment type String; size String 8; atom suffix String _s;

f := λ(: l U64)(: r U64). (: l U64);

main := λ(: argc U64)(: argv String[]). (: (tail(
   (let code1 6_u64)
   (let code2 7_u64)
   (let code3 8_u64)
   (let code4 (f( 1_u64 2_u64 )))
   (mov( 60_u64 RAX ))
   (mov( code4 RDI ))
   (syscall())
)) Nil);
