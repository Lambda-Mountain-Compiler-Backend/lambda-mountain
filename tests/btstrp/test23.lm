
import STDLIB/default-instruction-set.lm;
import STDLIB/default-primitives.lm;
import STDLIB/default-stdlib.lm;
import STDLIB/default-rules.lm;

type Used IsUsed | Unused | Tail | Return;

type UPair (UPair( Used , Used ));

== := λ(: lu Used)(: ru Used). (: (tail(
   (print (.0 lu))
   (print (.0 ru))
   (let r 0_u64)
   (match (UPair( lu ru )) (
      ()
      ( (UPair( IsUsed IsUsed )) (set r 1_u64) )
      ( (UPair( Unused Unused )) (set r 1_u64) )
      ( (UPair( Tail Tail )) (set r 1_u64) )
      ( (UPair( Return Return )) (set r 1_u64) )
      ( _ () )
   ))
   r
)) U64);

main := λ. (: (tail(
   (let used IsUsed)
   (if (==( used IsUsed )) (
      (print 'Used\n_s)
   ) (
      (print 'Unused\n_s)
   ))
   (let unused Unused)
   (if (==( unused IsUsed )) (
      (print 'Used\n_s)
   ) (
      (print 'Unused\n_s)
   ))
   (if (==( unused Unused )) (
      (print 'Unused\n_s)
   ) (
      (print 'Other\n_s)
   ))
   (let tl Tail)
   (if (==( tl IsUsed )) (
      (print 'Used\n_s)
   ) (
      (print 'Unused\n_s)
   ))
   (let rt Return)
   (if (==( rt IsUsed )) (
      (print 'Used\n_s)
   ) (
      (print 'Unused\n_s)
   ))
)) Nil);
