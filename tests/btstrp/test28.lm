
import LIB/default-instruction-set.lm;
import LIB/default-primitives.lm;
import LIB/default-stdlib.lm;
import LIB/default-rules.lm;
import SRC/ast.lm;
import SRC/type-index.lm;

main := Î». (: (tail(
   (let x ASTEOF)
   (let y ASTNil)
   (print(hash x))(print '\n_s)
   (print(hash x))(print '\n_s)
   (print(==( x x )))(print '\n_s)
   (print(==( y y )))(print '\n_s)
   (print(==( x y )))(print '\n_s)
   (let xt (TGround( 'X_s (close TypeEOF) )))
   (let yt (TGround( 'Y_s (close TypeEOF) )))

   (set type-index (TTBTree(
      (hash x) x xt
      (as 0_u64 TTBTree[])
      (as 0_u64 TTBTree[])
   )))
   (set type-index (TTBTree(
      (hash y) y yt
      (close type-index)
      (close type-index)
   )))

   (print (maybe-deref(typeof x)))(print '\n_s)
   (print (maybe-deref(typeof y)))(print '\n_s)
)) Nil);
